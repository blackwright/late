{"version":3,"sources":["serviceWorker.js","store/types.ts","store/reducer.ts","store/index.ts","components/Visualizer/Visualizations/VisualizationHOC.tsx","utils/colors.ts","components/Visualizer/Visualizations/Waveform/index.tsx","components/Visualizer/Visualizations/Waveform/utils.ts","components/Visualizer/Visualizations/Drummer/index.tsx","components/Visualizer/Visualizations/Halpern/three/sceneManager.ts","components/Visualizer/Visualizations/Halpern/three/entities/polys.ts","components/Visualizer/Visualizations/Halpern/three/entities/camera.ts","components/Visualizer/Visualizations/Halpern/three/entities/renderer.ts","components/Visualizer/Visualizations/Halpern/index.tsx","components/Visualizer/Visualizations/Stars/three/entities/shaders.ts","components/Visualizer/Visualizations/Stars/three/entities/polys.ts","components/Visualizer/Visualizations/Stars/three/entities/light.ts","components/Visualizer/Visualizations/Stars/three/sceneManager.ts","components/Visualizer/Visualizations/Stars/three/entities/renderer.ts","components/Visualizer/Visualizations/Stars/three/entities/camera.ts","components/Visualizer/Visualizations/Stars/index.tsx","components/Visualizer/Visualizations/MobileDisabled/index.tsx","components/Visualizer/Visualizations/index.tsx","utils/index.ts","components/Visualizer/VisualizationSelector.tsx","store/actions.ts","components/Analyser/index.tsx","config/index.ts","components/Loading/index.tsx","components/Controls/QualitySelect/index.tsx","components/Controls/index.tsx","components/NoWebAudioApi/index.tsx","App.tsx","utils/hooks.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","ActionConstants","initialState","currentVisualizationIndex","prevVisualizationIndex","isTransitioning","quality","store","createStore","state","arguments","length","undefined","action","type","GO_TO_NEXT_VISUALIZATION","Object","objectSpread","GO_TO_PREV_VISUALIZATION","BEGIN_VISUALIZATION_TRANSITION","END_VISUALIZATION_TRANSITION","SET_QUALITY","__REDUX_DEVTOOLS_EXTENSION__","defaultProps","data","Uint8Array","lowPassData","timeout","TRANSITION_ANIMATION_LENGTH","options","wrap","WrappedComponent","_ref","_useState","useState","_useState2","slicedToArray","isDelayedAfterReflow","setIsDelayedAfterReflow","useEffect","setTimeout","rawIntensitiesRef","useRef","lowPassIntensitiesRef","startingTimestampRef","Date","now","totalDifferenceFromRawBaseline","totalDifferenceFromLowBaseline","renderedData","map","rawDataElement","i","Math","abs","lowPassDataElement","smoothing","sum","count","rangeIndex","rawIntensityMax","lowPassIntensitySum","lowPassIntensityCount","lowPassIntensityMax","current","forEach","rawIntensity","lowPassIntensity","currentRawIntensity","recentLowPassAvgIntensity","currentLowPassIntensity","concat","shift","isBeat","transitionStyle","transition","react_default","a","createElement","intensity","style","colorTriples","colorTriple","id","randomColorTriple","floor","random","getRandomColors","numColors","areUnique","colors","randomTriple","randomColor","includes","push","getRandomColor","getRandomColorTriple","colorCopy","toConsumableArray","reverse","VisualizationHOC","canvasEl","useLayoutEffect","canvas","resizeCanvas","_window","innerWidth","innerHeight","width","height","addEventListener","removeEventListener","ctx","getContext","fillStyle","fillRect","intervalId","setInterval","clearInterval","getColors","lineWidth","lineCap","sliceWidth","color","strokeStyle","beginPath","x","moveTo","dataElement","y","lineTo","stroke","className","ref","QUALITY","0","NUM_DRUMMERS","1","2","size","setSize","colorRef","value","lastChangedTimestamp","onResize","maxSideLength","max","numDrummers","freqMap","numPerSlice","freqKey","freqData","ceiling","newColor","drummers","entries","_ref2","_ref3","hitCount","drummerContainerSize","key","opacity","classNames","hit","MIN_HIT_COUNT","backgroundColor","DELAY_BEFORE_ROTATING_X","CAMERA_MAX_DISTANCE","CAMERA_DRIFT","ROTATE_Y","ROTATE_X","sphereSegments","sceneManager","rendererContainer","animationFrameId","segments","sceneInitializedTimestamp","t","sphereGeometry","SphereGeometry","halpern","vertices","parameters","radius","widthSegments","heightSegments","positions","Float32Array","vertex","toArray","geometry","BufferGeometry","addAttribute","BufferAttribute","attributes","position","dynamic","material","PointsMaterial","TextureLoader","load","alphaTest","transparent","Points","createPoints","camera","startingY","PerspectiveCamera","set","lookAt","Vector3","createCamera","renderer","WebGLRenderer","alpha","setPixelRatio","devicePixelRatio","setClearColor","createRenderer","appendChild","domElement","scene","Scene","add","clock","Clock","aspect","updateProjectionMatrix","render","onVisibilityChange","document","visibilityState","stop","start","animate","delta","getDelta","rotateY","rotateX","PI","translateY","cos","translateX","translateZ","requestAnimationFrame","cleanup","cancelAnimationFrame","removeChild","remove","dispose","RIPPLE_SPEED","rendererRef","sphereDataSegmentsRef","originalVerticesRef","focusedDataIndexRef","vertexSegmentLengthRef","halpernGeometryRef","focusedDataRef","Array","fill","_sceneManager","halpernGeometry","array","slice","rippleSpeed","splice","halpernBufferPositions","getAttribute","vertexSegmentIndex","ceil","dataIndex","vertexSegmentWeight","min","scalar","needsUpdate","starVertexShader","starFragmentShader","createCloud","texture","PlaneGeometry","cloudMaterial","MeshLambertMaterial","depthTest","rotateZ","cloud","Mesh","zPosition","createDirectionalLight","DirectionalLight","MAX_STAR_ALPHA","MIN_STAR_ALPHA","STAR_ALPHA_DELTA","STAR_COUNT","CLOUD_COUNT","lightIntensity","antialias","stars","starCount","alphas","j","shaderMaterial","ShaderMaterial","uniforms","Color","vertexShader","fragmentShader","createStars","cloudCover","Group","cloudCount","aLight","AmbientLight","fixedDLight","dLight","starAlphas","alphaDirection","children","dLightRef","lightTimestampRef","currentLightIntensity","newLightIntensity","src","process","isMobileDevice","test","navigator","userAgent","visualizations","component","Stars","Waveform","Halpern","Drummer","MobileDisabled","MobileDisabledComponent","connect","currentIndex","prevIndex","dispatch","startTransition","endTransition","number2","transitionClassName","classNameRoot","index","intendedVisualization","selectedVisualization","mobileDisabled","react_transition_group","childFactory","child","React","cloneElement","onExit","onExited","mountOnEnter","unmountOnExit","Analyser","context","source","rawData","setRawData","_useState3","_useState4","setLowPassData","animationFrameIdRef","rawAnalyser","createAnalyser","fftSize","smoothingTimeConstant","destination","filter","createBiquadFilter","lowPassAnalyser","tick","rawDataContainer","getByteTimeDomainData","lowPassDataContainer","disconnect","Visualizer_VisualizationSelector","Loading","show","qualities","label","setQuality","Actions","setIsQualityHovered","onMouseEnter","onMouseLeave","onChange","e","target","goToNextVisualization","goToPrevVisualization","props","isOverlayShown","setIsOverlayShown","isArrowHovered","setIsArrowHovered","_useState5","_useState6","isQualityHovered","onKeyDown","event","which","timeoutRef","touchTimestampRef","showOverlay","useCallback","clearTimeout","togglePlay","resume","recordTouchTimestamp","preventDefault","onMouseDown","nativeEvent","onMouseUp","onTouchEnd","onPrev","stopPropagation","onNext","doNothing","onToggleArrowHover","isHovered","wantsToPlay","isPlaying","Fragment","components_Loading","onTouchStart","onMouseMove","Controls_QualitySelect","versionInfo","play","pause","onClick","viewBox","strokeWidth","strokeLinecap","strokeLinejoin","points","NoWebAudioApi","App","setWantsToPlay","setIsPlaying","_useStateRef","setState","stateRef","useStateRef","_useStateRef2","setContext","contextRef","setSource","_useState7","_useState8","isContextUnavailable","setIsContextUnavailable","audioRef","AudioContext","err","audioElement","onAudioPlay","onAudioPause","onAudioError","console","error","initializeAudioContext","createMediaElementSource","paused","components_NoWebAudioApi","preload","crossOrigin","components_Analyser","components_Controls","ReactDOM","es","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df969582.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export type Quality = 0 | 1 | 2;\r\n\r\nexport type StoreState = {\r\n  currentVisualizationIndex: number;\r\n  prevVisualizationIndex: number;\r\n  isTransitioning: boolean;\r\n  quality: Quality;\r\n};\r\n\r\nexport enum ActionConstants {\r\n  BEGIN_VISUALIZATION_TRANSITION = 'BEGIN_VISUALIZATION_TRANSITION',\r\n  END_VISUALIZATION_TRANSITION = 'END_VISUALIZATION_TRANSITION',\r\n  GO_TO_PREV_VISUALIZATION = 'GO_TO_PREV_VISUALIZATION',\r\n  GO_TO_NEXT_VISUALIZATION = 'GO_TO_NEXT_VISUALIZATION',\r\n  SET_QUALITY = 'SET_QUALITY'\r\n}\r\n\r\ninterface BeginVisualizationTransitionAction {\r\n  type: typeof ActionConstants.BEGIN_VISUALIZATION_TRANSITION;\r\n}\r\n\r\ninterface EndVisualizationTransitionAction {\r\n  type: typeof ActionConstants.END_VISUALIZATION_TRANSITION;\r\n}\r\n\r\ninterface GoToNextVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_NEXT_VISUALIZATION;\r\n}\r\n\r\ninterface GoToPrevVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_PREV_VISUALIZATION;\r\n}\r\n\r\ninterface SetQualityAction {\r\n  type: typeof ActionConstants.SET_QUALITY;\r\n  quality: Quality;\r\n}\r\n\r\nexport type ActionUnionType =\r\n  | BeginVisualizationTransitionAction\r\n  | EndVisualizationTransitionAction\r\n  | GoToNextVisualizationAction\r\n  | GoToPrevVisualizationAction\r\n  | SetQualityAction;\r\n","import { StoreState, ActionConstants, ActionUnionType } from './types';\r\n\r\nconst initialState: StoreState = {\r\n  currentVisualizationIndex: 0,\r\n  prevVisualizationIndex: 0,\r\n  isTransitioning: false,\r\n  quality: 2\r\n};\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: ActionUnionType\r\n): StoreState {\r\n  switch (action.type) {\r\n    case ActionConstants.GO_TO_NEXT_VISUALIZATION:\r\n      if (state.isTransitioning) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex + 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.GO_TO_PREV_VISUALIZATION:\r\n      if (state.isTransitioning) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex - 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.BEGIN_VISUALIZATION_TRANSITION:\r\n      return {\r\n        ...state,\r\n        isTransitioning: true\r\n      };\r\n\r\n    case ActionConstants.END_VISUALIZATION_TRANSITION:\r\n      return {\r\n        ...state,\r\n        isTransitioning: false\r\n      };\r\n\r\n    case ActionConstants.SET_QUALITY:\r\n      return {\r\n        ...state,\r\n        quality: action.quality\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { TRANSITION_ANIMATION_LENGTH } from '../VisualizationSelector';\r\nimport { Options } from './index';\r\nimport { Quality } from '../../../store/types';\r\nimport './Visualization.scss';\r\n\r\nexport type Props = {\r\n  // array of frequency data with values 0-255\r\n  data: Uint8Array;\r\n  lowPassData: Uint8Array;\r\n  // length of CSS transitions\r\n  timeout: number;\r\n  isTransitioning: boolean;\r\n  options?: Options;\r\n  quality: Quality;\r\n};\r\n\r\nexport type WrappedProps = {\r\n  data: Uint8Array;\r\n  isBeat: boolean;\r\n  intensity: number;\r\n  lowPassIntensity: number;\r\n  style: { transition: string };\r\n  isTransitioning: boolean;\r\n  quality: Quality;\r\n};\r\n\r\nconst defaultProps: Props = {\r\n  data: new Uint8Array(),\r\n  lowPassData: new Uint8Array(),\r\n  timeout: TRANSITION_ANIMATION_LENGTH,\r\n  isTransitioning: false,\r\n  options: {},\r\n  quality: 2\r\n};\r\n\r\n// all visualization components should be wrapped with this HOC\r\nexport function wrap(\r\n  WrappedComponent: React.ComponentType<WrappedProps>\r\n): React.ComponentType<Props> {\r\n  return function({\r\n    data,\r\n    lowPassData,\r\n    timeout,\r\n    isTransitioning,\r\n    options,\r\n    quality\r\n  }: Props = defaultProps) {\r\n    const [isDelayedAfterReflow, setIsDelayedAfterReflow] = useState(false);\r\n\r\n    useEffect(() => {\r\n      window.setTimeout(() => setIsDelayedAfterReflow(true), 0);\r\n    }, [isDelayedAfterReflow]);\r\n\r\n    const rawIntensitiesRef = useRef<number[]>([]);\r\n    const lowPassIntensitiesRef = useRef<number[]>([]);\r\n    const startingTimestampRef = useRef<number>(Date.now());\r\n\r\n    if (!isDelayedAfterReflow) {\r\n      return null;\r\n    }\r\n\r\n    let totalDifferenceFromRawBaseline = 0;\r\n    let totalDifferenceFromLowBaseline = 0;\r\n\r\n    const renderedData = data.map((rawDataElement, i) => {\r\n      totalDifferenceFromRawBaseline += Math.abs(rawDataElement - 128);\r\n\r\n      const lowPassDataElement = lowPassData[i];\r\n      totalDifferenceFromLowBaseline += Math.abs(lowPassDataElement - 128);\r\n\r\n      if (options == null || !options.smoothing) {\r\n        return rawDataElement;\r\n      } else {\r\n        // smooth out each data value using a range of values around it,\r\n        // the range of this window is the value of options.smoothing\r\n        let sum = 0;\r\n        let count = 0;\r\n\r\n        let rangeIndex = i - options.smoothing;\r\n\r\n        while (rangeIndex < i + options.smoothing) {\r\n          const rawDataAtRangeIndex = data[rangeIndex] || 128;\r\n          sum += rawDataAtRangeIndex;\r\n          count += 1;\r\n          rangeIndex += 1;\r\n        }\r\n\r\n        return sum / count;\r\n      }\r\n    });\r\n\r\n    let rawIntensityMax = 0;\r\n\r\n    let lowPassIntensitySum = 0;\r\n    let lowPassIntensityCount = 0;\r\n    let lowPassIntensityMax = 0;\r\n\r\n    rawIntensitiesRef.current.forEach((rawIntensity, i) => {\r\n      if (rawIntensity > rawIntensityMax) {\r\n        rawIntensityMax = rawIntensity;\r\n      }\r\n\r\n      const lowPassIntensity = lowPassIntensitiesRef.current[i];\r\n      lowPassIntensitySum += lowPassIntensity;\r\n      lowPassIntensityCount += 1;\r\n\r\n      if (lowPassIntensity > lowPassIntensityMax) {\r\n        lowPassIntensityMax = lowPassIntensity;\r\n      }\r\n    });\r\n\r\n    const currentRawIntensity = totalDifferenceFromRawBaseline / data.length;\r\n    const recentLowPassAvgIntensity =\r\n      lowPassIntensitySum / lowPassIntensityCount || 0;\r\n\r\n    const currentLowPassIntensity =\r\n      totalDifferenceFromLowBaseline / lowPassData.length;\r\n\r\n    rawIntensitiesRef.current = rawIntensitiesRef.current.concat(\r\n      currentRawIntensity\r\n    );\r\n    lowPassIntensitiesRef.current = lowPassIntensitiesRef.current.concat(\r\n      currentLowPassIntensity\r\n    );\r\n\r\n    // remove intensities older than 1 second\r\n    if (Date.now() - startingTimestampRef.current > 2000) {\r\n      rawIntensitiesRef.current.shift();\r\n      lowPassIntensitiesRef.current.shift();\r\n    }\r\n\r\n    const isBeat = currentLowPassIntensity > recentLowPassAvgIntensity * 1.75;\r\n\r\n    const transitionStyle = { transition: `transform ${timeout}ms linear` };\r\n\r\n    return (\r\n      <WrappedComponent\r\n        data={renderedData}\r\n        isBeat={isBeat}\r\n        intensity={currentRawIntensity}\r\n        lowPassIntensity={currentLowPassIntensity}\r\n        style={transitionStyle}\r\n        isTransitioning={isTransitioning}\r\n        quality={quality}\r\n      />\r\n    );\r\n  };\r\n}\r\n","const colorTriples = [\r\n  ['#0E9AA7', '#F6CD61', '#FE8A71'],\r\n  ['#EE4540', '#801336', '#2D142C'],\r\n  ['#8FB9A8', '#FDFBD4', '#FCD0BA'],\r\n  ['#AC6D83', '#685D79', '#465C7A'],\r\n  ['#F36E38', '#EF4648', '#582841'],\r\n  ['#F1F1F1', '#9BD7D1', '#305D7A'],\r\n  ['#DEA5B6', '#F3CD8C', '#F2E9C2'],\r\n  ['#E27B47', '#EFCA58', '#46B29E'],\r\n  ['#2E7345', '#2E9975', '#2DB3B3'],\r\n  ['#52A3CC', '#7EA1E5', '#AAAAF2'],\r\n  ['#CC5285', '#CC5285', '#F2BCAA'],\r\n  ['#D8E0BB', '#B6CEC7', '#86A3C3']\r\n];\r\n\r\nconst colorTriplesWithIds = colorTriples.map((colorTriple, i) => ({\r\n  id: i,\r\n  colorTriple\r\n}));\r\n\r\nfunction randomColorTriple() {\r\n  return colorTriples[Math.floor(Math.random() * colorTriples.length)];\r\n}\r\n\r\nexport function getRandomColors(numColors: number, areUnique?: boolean): string[] {\r\n  const colors: string[] = [];\r\n\r\n  while (colors.length < numColors) {\r\n    const randomTriple = randomColorTriple();\r\n    const randomColor = randomTriple[Math.floor(Math.random() * randomTriple.length)];\r\n\r\n    if (areUnique && colors.includes(randomColor)) {\r\n      break;\r\n    }\r\n\r\n    colors.push(randomColor);\r\n  }\r\n  return colors;\r\n}\r\n\r\nexport function getRandomColor() {\r\n  return getRandomColors(1)[0];\r\n}\r\n\r\nexport function getRandomColorTriple() {\r\n  const colorCopy = [...randomColorTriple()];\r\n  if (Math.random() <= 0.5) {\r\n    return colorCopy.reverse();\r\n  } else {\r\n    return colorCopy;\r\n  }\r\n}\r\n","import React, { useLayoutEffect, useRef } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { getColors } from './utils';\r\nimport './Waveform.scss';\r\n\r\nconst LINE_WIDTH = 10;\r\nconst LINE_X_OFFSET = 0;\r\nconst LINE_Y_OFFSET = 5;\r\n\r\nconst Waveform: React.FunctionComponent<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  quality,\r\n  style\r\n}) => {\r\n  const canvasEl = useRef<HTMLCanvasElement>(null);\r\n\r\n  useLayoutEffect(() => {\r\n    const canvas = canvasEl.current!;\r\n\r\n    const resizeCanvas = () => {\r\n      const { innerWidth, innerHeight } = window;\r\n      canvas.width = innerWidth;\r\n      canvas.height = innerHeight;\r\n    };\r\n\r\n    resizeCanvas();\r\n\r\n    window.addEventListener('resize', resizeCanvas);\r\n    return () => window.removeEventListener('resize', resizeCanvas);\r\n  }, []);\r\n\r\n  // initial paint to match fade out color from rounding error\r\n  useLayoutEffect(() => {\r\n    const canvas = canvasEl.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n\r\n    ctx.fillStyle = '#101010';\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const canvas = canvasEl.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n\r\n    const fadeOut = () => {\r\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    };\r\n\r\n    const intervalId = window.setInterval(fadeOut, 7);\r\n    return () => window.clearInterval(intervalId);\r\n  }, []);\r\n\r\n  // paint on every data update\r\n  useLayoutEffect(() => {\r\n    const canvas = canvasEl.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n\r\n    const colors = getColors(quality + 1);\r\n\r\n    ctx.lineWidth = LINE_WIDTH;\r\n    ctx.lineCap = 'round';\r\n\r\n    const sliceWidth = canvas.width / data.length;\r\n\r\n    colors.forEach((color, i) => {\r\n      ctx.strokeStyle = color;\r\n      ctx.beginPath();\r\n\r\n      let x = i * LINE_X_OFFSET;\r\n      ctx.moveTo(x, canvas.height / 2);\r\n\r\n      data.forEach(dataElement => {\r\n        const y =\r\n          (dataElement / 255.0) * canvas.height -\r\n          (LINE_Y_OFFSET * colors.length) / 2;\r\n        ctx.lineTo(x, y + i * ((LINE_Y_OFFSET * colors.length) / 2));\r\n        x += sliceWidth;\r\n      });\r\n\r\n      ctx.lineTo(x, canvas.height / 2);\r\n      ctx.stroke();\r\n    });\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"visualization waveform\" style={style}>\r\n      <div className=\"backdrop\" />\r\n      <canvas ref={canvasEl} />;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Waveform);\r\n","import {\r\n  getRandomColorTriple,\r\n  getRandomColors,\r\n  getRandomColor\r\n} from '../../../../utils/colors';\r\n\r\nexport function getColors(numColors: number) {\r\n  switch (numColors) {\r\n    case 3:\r\n      return getRandomColorTriple();\r\n    case 2:\r\n      return getRandomColors(2, true);\r\n    case 1:\r\n      return [getRandomColor()];\r\n    default:\r\n      return getRandomColorTriple();\r\n  }\r\n}\r\n","import React, { useState, useRef, useLayoutEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport './Drummer.scss';\r\nimport { getRandomColor } from '../../../../utils/colors';\r\nimport { DATA_SIZE } from '../../../../config';\r\nimport { QualitySettings } from '../index';\r\n\r\nconst MIN_HIT_COUNT = 0.04;\r\nconst MIN_FREQUENCY_VARIATION = 10;\r\nconst MIN_DELAY_BETWEEN_COLOR_CHANGE = 200;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: { NUM_DRUMMERS: 6 },\r\n  1: { NUM_DRUMMERS: 10 },\r\n  2: { NUM_DRUMMERS: 16 }\r\n};\r\n\r\nconst minHitCount = MIN_HIT_COUNT * DATA_SIZE;\r\n\r\nconst Drummer: React.FunctionComponent<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  isBeat,\r\n  isTransitioning,\r\n  quality,\r\n  style\r\n}) => {\r\n  const [size, setSize] = useState(0);\r\n\r\n  const colorRef = useRef({\r\n    value: getRandomColor(),\r\n    lastChangedTimestamp: Date.now()\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    const onResize = () => {\r\n      const { innerWidth, innerHeight } = window;\r\n      const maxSideLength = Math.max(innerWidth, innerHeight);\r\n      setSize(maxSideLength * 2);\r\n    };\r\n\r\n    onResize();\r\n\r\n    window.addEventListener('resize', onResize);\r\n    return () => window.removeEventListener('resize', onResize);\r\n  }, []);\r\n\r\n  const color = colorRef.current;\r\n  const numDrummers = QUALITY[quality].NUM_DRUMMERS;\r\n\r\n  const freqMap: { [key: string]: number } = {};\r\n  const numPerSlice = 256 / numDrummers;\r\n\r\n  let freqKey = 0;\r\n  while (freqKey < numDrummers) {\r\n    freqMap[freqKey] = 0;\r\n    freqKey += 1;\r\n  }\r\n\r\n  data.forEach(freqData => {\r\n    let freqKey = 0;\r\n    while (freqKey < numDrummers) {\r\n      const ceiling = numPerSlice * (freqKey + 1);\r\n      if (\r\n        Math.abs(freqData - 128) > MIN_FREQUENCY_VARIATION &&\r\n        freqData <= ceiling\r\n      ) {\r\n        freqMap[freqKey] += 1;\r\n        break;\r\n      }\r\n      freqKey += 1;\r\n    }\r\n  });\r\n\r\n  // space out background color changes so they're not jarring\r\n  const now = Date.now();\r\n  if (\r\n    isBeat &&\r\n    !isTransitioning &&\r\n    now - color.lastChangedTimestamp > MIN_DELAY_BETWEEN_COLOR_CHANGE\r\n  ) {\r\n    let newColor;\r\n    do {\r\n      newColor = getRandomColor();\r\n    } while (color.value === newColor);\r\n\r\n    color.value = newColor;\r\n    color.lastChangedTimestamp = now;\r\n  }\r\n\r\n  const drummers = Object.entries(freqMap).map(([freqKey, hitCount], i) => {\r\n    const drummerContainerSize = ((1 + +freqKey) * size) / numDrummers;\r\n\r\n    return (\r\n      <div\r\n        key={freqKey}\r\n        className=\"drummer-container\"\r\n        style={{\r\n          width: `${drummerContainerSize}px`,\r\n          height: `${drummerContainerSize}px`,\r\n          opacity: ((numDrummers - i) / numDrummers) * 0.5 * 0.25\r\n        }}\r\n      >\r\n        <div className={classNames('beat', { hit: hitCount > minHitCount })} />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"visualization drummer\" style={style}>\r\n      {drummers}\r\n      <div className=\"overlay\" style={{ backgroundColor: color.value }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Drummer);\r\n","import { Scene, PointsMaterial, Clock } from 'three';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\nimport { createSphereGeometry, createPoints } from './entities/polys';\r\nimport { Quality } from '../../../../../store/types';\r\nimport { QualitySettings } from '../../index';\r\n\r\nconst DELAY_BEFORE_ROTATING_X = 1500;\r\nconst CAMERA_MAX_DISTANCE = 200;\r\nconst CAMERA_DRIFT = 0.025;\r\nconst ROTATE_Y = -0.3;\r\nconst ROTATE_X = 0.3;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: { sphereSegments: 30 },\r\n  1: { sphereSegments: 48 },\r\n  2: { sphereSegments: 72 }\r\n};\r\n\r\nexport default function sceneManager(\r\n  rendererContainer: HTMLDivElement,\r\n  quality: Quality\r\n) {\r\n  let animationFrameId: number;\r\n  let sceneInitializedTimestamp = Date.now();\r\n  let t = 0;\r\n\r\n  const sphereGeometry = createSphereGeometry(QUALITY[quality].sphereSegments);\r\n  const halpern = createPoints(sphereGeometry);\r\n  const camera = createCamera(CAMERA_MAX_DISTANCE);\r\n  const renderer = createRenderer();\r\n  rendererContainer.appendChild(renderer.domElement);\r\n\r\n  const scene = new Scene();\r\n  scene.add(halpern);\r\n\r\n  // clock is started in Halpern component when the\r\n  // animation loop is started\r\n  const clock = new Clock();\r\n\r\n  window.addEventListener('resize', onResize);\r\n  document.addEventListener('visibilitychange', onVisibilityChange);\r\n\r\n  function animate() {\r\n    const delta = clock.getDelta();\r\n\r\n    halpern.rotateY(ROTATE_Y * delta);\r\n\r\n    if (Date.now() - sceneInitializedTimestamp > DELAY_BEFORE_ROTATING_X) {\r\n      halpern.rotateX(ROTATE_X * delta);\r\n    }\r\n\r\n    t += delta;\r\n\r\n    if (t >= Math.PI * 2) {\r\n      t = 0;\r\n    }\r\n\r\n    camera.translateY(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateX(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateZ(Math.cos(t) * CAMERA_DRIFT * 5);\r\n\r\n    renderer.render(scene, camera);\r\n    animationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function cleanup() {\r\n    window.cancelAnimationFrame(animationFrameId);\r\n    window.removeEventListener('resize', onResize);\r\n    document.removeEventListener('visibilitychange', onVisibilityChange);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    scene.remove(halpern);\r\n\r\n    halpern.geometry.dispose();\r\n    (halpern.material as PointsMaterial).dispose();\r\n    sphereGeometry.dispose();\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function onVisibilityChange() {\r\n    if (document.visibilityState === 'hidden') {\r\n      clock.stop();\r\n    } else {\r\n      clock.start();\r\n    }\r\n  }\r\n\r\n  return {\r\n    clock,\r\n    sphereGeometry,\r\n    halpern,\r\n    animate,\r\n    cleanup\r\n  };\r\n}\r\n","import {\r\n  Points,\r\n  PointsMaterial,\r\n  SphereGeometry,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  TextureLoader\r\n} from 'three';\r\n\r\nexport function createSphereGeometry(segments: number): SphereGeometry {\r\n  return new SphereGeometry(48, segments, segments);\r\n}\r\n\r\nexport function createPoints(sphereGeometry: SphereGeometry): Points {\r\n  const pointGeometry = new SphereGeometry(\r\n    sphereGeometry.parameters.radius,\r\n    sphereGeometry.parameters.widthSegments,\r\n    sphereGeometry.parameters.heightSegments\r\n  );\r\n\r\n  const { vertices } = pointGeometry;\r\n  const positions = new Float32Array(vertices.length * 3);\r\n\r\n  vertices.forEach((vertex, i) => {\r\n    vertex.toArray(positions, i * 3);\r\n  });\r\n\r\n  const geometry = new BufferGeometry();\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n  (geometry.attributes.position as BufferAttribute).dynamic = true;\r\n\r\n  const material = new PointsMaterial({\r\n    size: 0.5,\r\n    map: new TextureLoader().load('assets/images/point.png'),\r\n    alphaTest: 0.5,\r\n    color: 0x666666,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, material);\r\n}\r\n","import { PerspectiveCamera, Vector3 } from 'three';\r\n\r\nexport function createCamera(startingY: number) {\r\n  const camera = new PerspectiveCamera(\r\n    75,\r\n    window.innerWidth / window.innerHeight,\r\n    0.1,\r\n    1000\r\n  );\r\n\r\n  camera.position.set(0, startingY, 0);\r\n  camera.lookAt(new Vector3(0, 0, 0));\r\n\r\n  return camera;\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ alpha: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x000000, 0);\r\n\r\n  return renderer;\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { BufferGeometry, BufferAttribute } from 'three';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport sceneManager from './three/sceneManager';\r\nimport { QualitySettings } from '../index';\r\nimport './Halpern.scss';\r\n\r\nconst VERTEX_SEGMENT_WEIGHT_COEFFICIENT = 0.1;\r\nconst BASELINE_VERTEX_SCALAR_FACTOR = 1;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: { RIPPLE_SPEED: 2 },\r\n  1: { RIPPLE_SPEED: 3 },\r\n  2: { RIPPLE_SPEED: 4 }\r\n};\r\n\r\nconst Halpern: React.FunctionComponent<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  quality,\r\n  style\r\n}) => {\r\n  const rendererRef = useRef<HTMLDivElement>(null);\r\n  const sphereDataSegmentsRef = useRef<number>();\r\n  const originalVerticesRef = useRef<ArrayLike<number>>();\r\n  const focusedDataIndexRef = useRef<number>(Math.floor(data.length / 2));\r\n  const vertexSegmentLengthRef = useRef<number>();\r\n  const halpernGeometryRef = useRef<BufferGeometry>();\r\n  const focusedDataRef = useRef<number[]>(new Array(data.length).fill(128));\r\n\r\n  useEffect(() => {\r\n    const rendererContainer = rendererRef.current!;\r\n    const { clock, animate, cleanup, sphereGeometry, halpern } = sceneManager(\r\n      rendererContainer,\r\n      quality\r\n    );\r\n\r\n    const halpernGeometry = halpern.geometry as BufferGeometry;\r\n\r\n    sphereDataSegmentsRef.current = Math.floor(\r\n      data.length / sphereGeometry.parameters.widthSegments\r\n    );\r\n\r\n    // split vertices up into segments belonging to slices of x cross sections,\r\n    // first and last vertices are at top and bottom of sphere\r\n    vertexSegmentLengthRef.current =\r\n      (sphereGeometry.vertices.length - 2) /\r\n      (sphereGeometry.parameters.widthSegments - 1);\r\n\r\n    halpernGeometryRef.current = halpernGeometry;\r\n\r\n    originalVerticesRef.current = (halpernGeometry.attributes.position\r\n      .array as Float32Array).slice(0);\r\n\r\n    clock.start();\r\n\r\n    animate();\r\n\r\n    return cleanup;\r\n  }, [quality]);\r\n\r\n  useEffect(() => {\r\n    const rippleSpeed = QUALITY[quality].RIPPLE_SPEED;\r\n\r\n    focusedDataRef.current.splice(0, rippleSpeed);\r\n    focusedDataRef.current = focusedDataRef.current.concat(\r\n      new Array(rippleSpeed).fill(data[focusedDataIndexRef.current!])\r\n    );\r\n\r\n    const halpernBufferPositions = halpernGeometryRef.current!.getAttribute(\r\n      'position'\r\n    ).array as Float32Array;\r\n\r\n    let i = 0;\r\n    while (i < originalVerticesRef.current!.length) {\r\n      // find which segment the current index belongs to\r\n      const vertexSegmentIndex = Math.ceil(\r\n        Math.floor(i / 3) / vertexSegmentLengthRef.current!\r\n      );\r\n\r\n      const dataIndex = vertexSegmentIndex * sphereDataSegmentsRef.current!;\r\n      const vertexSegmentWeight = Math.min(\r\n        vertexSegmentIndex,\r\n        vertexSegmentLengthRef.current! - vertexSegmentIndex\r\n      );\r\n\r\n      const dataVariation =\r\n        Math.abs(focusedDataRef.current[dataIndex] - 128) / 255;\r\n\r\n      const scalar =\r\n        dataVariation *\r\n          vertexSegmentWeight *\r\n          VERTEX_SEGMENT_WEIGHT_COEFFICIENT +\r\n        BASELINE_VERTEX_SCALAR_FACTOR;\r\n\r\n      // update X, Y, and Z vector positions in BufferGeometry\r\n      halpernBufferPositions[i] = originalVerticesRef.current![i] * scalar;\r\n      halpernBufferPositions[i + 1] =\r\n        originalVerticesRef.current![i + 1] * scalar;\r\n      halpernBufferPositions[i + 2] =\r\n        originalVerticesRef.current![i + 2] * scalar;\r\n\r\n      i += 3;\r\n    }\r\n\r\n    // inform three.js that vertices should be repositioned,\r\n    // final render is handled in sceneManager animate loop\r\n    (halpernGeometryRef.current!.getAttribute(\r\n      'position'\r\n    ) as BufferAttribute).needsUpdate = true;\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"visualization halpern\" ref={rendererRef} style={style} />\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Halpern);\r\n","export const starVertexShader = `\r\nattribute float alpha;\r\nvarying float vAlpha;\r\n\r\nvoid main() {\r\n  vAlpha = alpha;\r\n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n  gl_PointSize = 4.0 * alpha;\r\n  gl_Position = projectionMatrix * mvPosition;\r\n}\r\n`;\r\n\r\nexport const starFragmentShader = `\r\nuniform vec3 color;\r\nvarying float vAlpha;\r\n\r\nvoid main() {\r\n  float r = 0.0;\r\n  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\r\n  r = dot(cxy, cxy);\r\n  if (r > 1.0) {\r\n    discard;\r\n  }\r\n\r\n  gl_FragColor = vec4(color, vAlpha);\r\n}\r\n`;\r\n","import {\r\n  Points,\r\n  BufferAttribute,\r\n  ShaderMaterial,\r\n  Color,\r\n  BufferGeometry,\r\n  TextureLoader,\r\n  MeshLambertMaterial,\r\n  Mesh,\r\n  PlaneGeometry\r\n} from 'three';\r\nimport { starVertexShader, starFragmentShader } from './shaders';\r\n\r\nexport function createStars(starCount: number): Points {\r\n  const geometry = new BufferGeometry();\r\n\r\n  const positions = new Float32Array(starCount * 3);\r\n\r\n  let i = 0;\r\n  while (i < starCount) {\r\n    // add random x, y, and z vector positions\r\n    positions[i++] = Math.random() * 100 - 50;\r\n    positions[i++] = Math.random() * 100 - 50;\r\n    positions[i++] = Math.random() * 100 - 50;\r\n  }\r\n\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n\r\n  const alphas = new Float32Array(geometry.attributes.position.count * 1);\r\n\r\n  let j = 0;\r\n  while (j < alphas.length) {\r\n    alphas[j] = Math.random();\r\n    j += 1;\r\n  }\r\n\r\n  geometry.addAttribute('alpha', new BufferAttribute(alphas, 1));\r\n\r\n  const shaderMaterial = new ShaderMaterial({\r\n    uniforms: {\r\n      color: { type: 'c', value: new Color(0xffffff) }\r\n    },\r\n    vertexShader: starVertexShader,\r\n    fragmentShader: starFragmentShader,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, shaderMaterial);\r\n}\r\n\r\nexport function createCloud(): Mesh {\r\n  const texture = Math.random() < 0.5 ? 'cloud.png' : 'smoke.png';\r\n\r\n  const geometry = new PlaneGeometry(50, 50);\r\n\r\n  const cloudMaterial = new MeshLambertMaterial({\r\n    map: new TextureLoader().load(`assets/images/${texture}`),\r\n    transparent: true,\r\n    opacity: 0.15,\r\n    depthTest: false\r\n  });\r\n\r\n  geometry.rotateZ(Math.random() * 360);\r\n\r\n  const cloud = new Mesh(geometry, cloudMaterial);\r\n\r\n  const zPosition = Math.random() * 15 + 10;\r\n\r\n  cloud.position.set(\r\n    Math.random() * 100 - 50,\r\n    Math.random() * 100 - 50,\r\n    Math.random() < 0.5 ? zPosition : -zPosition\r\n  );\r\n\r\n  return cloud;\r\n}\r\n","import { DirectionalLight, AmbientLight } from 'three';\r\n\r\nexport function createAmbientLight(color: number, intensity: number) {\r\n  return new AmbientLight(color, intensity);\r\n}\r\n\r\nexport function createDirectionalLight(color: number, intensity: number) {\r\n  return new DirectionalLight(color, intensity);\r\n}\r\n","import {\r\n  Scene,\r\n  PointsMaterial,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  Group,\r\n  Mesh,\r\n  ShaderMaterial,\r\n  Clock\r\n} from 'three';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\nimport { createStars, createCloud } from './entities/polys';\r\nimport { createAmbientLight, createDirectionalLight } from './entities/light';\r\nimport { QualitySettings } from '../../index';\r\n\r\nconst MAX_STAR_ALPHA = 1.0;\r\nconst MIN_STAR_ALPHA = 0.2;\r\nconst STAR_ALPHA_DELTA = 0.75;\r\nconst ROTATE_Y = 0.025;\r\nconst ROTATE_X = 0.001;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: {\r\n    STAR_COUNT: 5 * 1000,\r\n    CLOUD_COUNT: 20\r\n  },\r\n  1: {\r\n    STAR_COUNT: 10 * 1000,\r\n    CLOUD_COUNT: 40\r\n  },\r\n  2: {\r\n    STAR_COUNT: 20 * 1000,\r\n    CLOUD_COUNT: 65\r\n  }\r\n};\r\n\r\nexport default function sceneManager(\r\n  rendererContainer: HTMLDivElement,\r\n  quality: number,\r\n  lightIntensity: number\r\n) {\r\n  let animationFrameId: number;\r\n\r\n  const renderer = createRenderer();\r\n  rendererContainer.appendChild(renderer.domElement);\r\n  const camera = createCamera();\r\n  const scene = new Scene();\r\n\r\n  const stars = createStars(QUALITY[quality].STAR_COUNT);\r\n  scene.add(stars);\r\n\r\n  const cloudCover = new Group();\r\n\r\n  let cloudCount = 0;\r\n  while (cloudCount <= QUALITY[quality].CLOUD_COUNT) {\r\n    const cloud = createCloud();\r\n    cloudCover.add(cloud);\r\n    cloudCount += 1;\r\n  }\r\n\r\n  scene.add(cloudCover);\r\n\r\n  const aLight = createAmbientLight(0xffffff, lightIntensity);\r\n  scene.add(aLight);\r\n\r\n  const fixedDLight = createDirectionalLight(0xc70039, 2);\r\n  fixedDLight.position.set(0, 0, 1);\r\n  scene.add(fixedDLight);\r\n\r\n  const dLight = createDirectionalLight(0xc70039, lightIntensity);\r\n  dLight.position.set(0, 0, 1);\r\n  scene.add(dLight);\r\n\r\n  // create a fixed array to track which direction to adjust each star alpha\r\n  const starAlphas = (stars.geometry as BufferGeometry).attributes.alpha;\r\n  const alphaDirection = new Float32Array(starAlphas.count);\r\n\r\n  for (let i = 0; i < alphaDirection.length; i++) {\r\n    // direction of 1 means alpha should increase\r\n    // -1 means alpha should decrease\r\n    alphaDirection[i] = Math.random() < 0.5 ? 1 : -1;\r\n  }\r\n\r\n  // clock is started in Stars component when\r\n  // the animation loop is first triggered\r\n  const clock = new Clock();\r\n\r\n  window.addEventListener('resize', onResize);\r\n  document.addEventListener('visibilitychange', onVisibilityChange);\r\n\r\n  function animate() {\r\n    const delta = clock.getDelta();\r\n\r\n    stars.rotateX(ROTATE_X * delta);\r\n    stars.rotateY(ROTATE_Y * delta);\r\n\r\n    cloudCover.rotateX(ROTATE_X * 8 * delta);\r\n    cloudCover.rotateY(ROTATE_Y * 2 * delta);\r\n    cloudCover.rotateZ(ROTATE_X * 3 * delta);\r\n\r\n    cloudCover.children.forEach(cloud => {\r\n      (cloud as Mesh).lookAt(camera.position);\r\n    });\r\n\r\n    // use alphaDirection to maintain alpha adjustment direction until we\r\n    // reach a limit, then switch the direction\r\n    for (let i = 0; i < starAlphas.count; i++) {\r\n      if (alphaDirection[i] > 0) {\r\n        (starAlphas.array as Float32Array)[i] *= 1 + STAR_ALPHA_DELTA * delta;\r\n        if ((starAlphas.array as Float32Array)[i] > MAX_STAR_ALPHA) {\r\n          alphaDirection[i] = -1;\r\n        }\r\n      } else {\r\n        (starAlphas.array as Float32Array)[i] *= 1 - STAR_ALPHA_DELTA * delta;\r\n        if ((starAlphas.array as Float32Array)[i] < MIN_STAR_ALPHA) {\r\n          alphaDirection[i] = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    (starAlphas as BufferAttribute).needsUpdate = true;\r\n\r\n    renderer.render(scene, camera);\r\n    animationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function cleanup() {\r\n    window.cancelAnimationFrame(animationFrameId);\r\n    window.removeEventListener('resize', onResize);\r\n    document.removeEventListener('visibilitychange', onVisibilityChange);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    scene.remove(stars);\r\n    stars.geometry.dispose();\r\n    (stars.material as PointsMaterial).dispose();\r\n\r\n    scene.remove(cloudCover);\r\n    cloudCover.children.forEach(cloud => {\r\n      (cloud as Mesh).geometry.dispose();\r\n      ((cloud as Mesh).material as ShaderMaterial).dispose();\r\n    });\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function onVisibilityChange() {\r\n    if (document.visibilityState === 'hidden') {\r\n      clock.stop();\r\n    } else {\r\n      clock.start();\r\n    }\r\n  }\r\n\r\n  return {\r\n    clock,\r\n    animate,\r\n    cleanup,\r\n    dLight\r\n  };\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ antialias: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x0000f, 1);\r\n\r\n  return renderer;\r\n}\r\n","import { PerspectiveCamera } from 'three';\r\n\r\nexport function createCamera() {\r\n  const camera = new PerspectiveCamera(\r\n    50,\r\n    window.innerWidth / window.innerHeight,\r\n    1,\r\n    1000\r\n  );\r\n\r\n  return camera;\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { DirectionalLight } from 'three';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport sceneManager from './three/sceneManager';\r\nimport './Stars.scss';\r\n\r\nconst MIN_DELAY_BETWEEN_INTENSITY_CHANGE = 75;\r\nconst MAX_LIGHT_INTENSITY_DELTA = 2;\r\nconst MIN_LIGHT_INTENSITY = 1;\r\n\r\nconst Stars: React.FunctionComponent<VisualizationHOC.WrappedProps> = ({\r\n  lowPassIntensity,\r\n  style,\r\n  quality\r\n}) => {\r\n  const rendererRef = useRef<HTMLDivElement>(null);\r\n  const dLightRef = useRef<DirectionalLight>();\r\n  const lightTimestampRef = useRef<number>(Date.now());\r\n\r\n  useEffect(() => {\r\n    const rendererContainer = rendererRef.current!;\r\n    const { clock, animate, cleanup, dLight } = sceneManager(\r\n      rendererContainer,\r\n      quality,\r\n      MIN_LIGHT_INTENSITY\r\n    );\r\n\r\n    dLightRef.current = dLight;\r\n\r\n    clock.start();\r\n    animate();\r\n\r\n    return cleanup;\r\n  }, [quality]);\r\n\r\n  useEffect(() => {\r\n    const now = Date.now();\r\n    const currentLightIntensity = dLightRef.current!.intensity;\r\n\r\n    let newLightIntensity = lowPassIntensity / 4;\r\n\r\n    if (now - lightTimestampRef.current > MIN_DELAY_BETWEEN_INTENSITY_CHANGE) {\r\n      if (\r\n        newLightIntensity - currentLightIntensity >\r\n        MAX_LIGHT_INTENSITY_DELTA\r\n      ) {\r\n        newLightIntensity = currentLightIntensity + MAX_LIGHT_INTENSITY_DELTA;\r\n      } else if (\r\n        currentLightIntensity - newLightIntensity >\r\n        MAX_LIGHT_INTENSITY_DELTA\r\n      ) {\r\n        newLightIntensity = currentLightIntensity - MAX_LIGHT_INTENSITY_DELTA;\r\n      }\r\n\r\n      dLightRef.current!.intensity = newLightIntensity;\r\n\r\n      lightTimestampRef.current = now;\r\n    }\r\n  }, [lowPassIntensity]);\r\n\r\n  return (\r\n    <div className=\"visualization stars\" ref={rendererRef} style={style} />\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Stars);\r\n","import React from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport './MobileDisabled.scss';\r\n\r\nconst MobileDisabled: React.FunctionComponent<\r\n  VisualizationHOC.WrappedProps\r\n> = ({ style }) => {\r\n  return (\r\n    <div className=\"visualization mobile-disabled\" style={style}>\r\n      <div className=\"content\">\r\n        <img\r\n          id=\"desktop-icon\"\r\n          src={process.env.PUBLIC_URL + '/assets/images/desktop.png'}\r\n        />\r\n        <div id=\"message\">\r\n          Sorry, this visualization cannot be viewed on a mobile device.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(MobileDisabled);\r\n","import Waveform from './Waveform';\r\nimport Drummer from './Drummer';\r\nimport Halpern from './Halpern';\r\nimport Stars from './Stars';\r\nimport MobileDisabledComponent from './MobileDisabled';\r\nimport { Props } from './VisualizationHOC';\r\nimport { isMobileDevice as isMobileDeviceCheck } from '../../../utils';\r\n\r\nexport const isMobileDevice = isMobileDeviceCheck();\r\n\r\nexport type QualitySettings = {\r\n  [quality: number]: { [setting: string]: any };\r\n};\r\n\r\nexport type Options = {\r\n  smoothing?: number;\r\n  mobileDisabled?: boolean;\r\n};\r\n\r\ntype SelectableVisualization = {\r\n  component: React.ComponentType<Props>;\r\n  options?: Options;\r\n};\r\n\r\nconst visualizations: SelectableVisualization[] = [\r\n  {\r\n    component: Stars,\r\n    options: { smoothing: 128 }\r\n  },\r\n  { component: Waveform },\r\n  { component: Halpern },\r\n  {\r\n    component: Drummer,\r\n    options: { smoothing: 64 }\r\n  }\r\n];\r\n\r\nexport default visualizations;\r\n\r\nexport const MobileDisabled: SelectableVisualization = {\r\n  component: MobileDisabledComponent\r\n};\r\n","export function modulo(number1: number, number2: number): number {\r\n  return ((number1 % number2) + number2) % number2;\r\n}\r\n\r\nexport function isMobileDevice(): boolean {\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n    navigator.userAgent\r\n  );\r\n}\r\n\r\nexport function toRadians(angle: number) {\r\n  return (angle * Math.PI) / 180;\r\n}\r\n","import React from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport * as VisualizationHOC from './Visualizations/VisualizationHOC';\r\nimport visualizations, {\r\n  isMobileDevice,\r\n  MobileDisabled\r\n} from './Visualizations';\r\nimport { modulo } from '../../utils';\r\nimport * as Actions from '../../../src/store/actions';\r\nimport { StoreState } from '../../../src/store/types';\r\n\r\nexport const TRANSITION_ANIMATION_LENGTH = 500;\r\n\r\ntype Props = {\r\n  data: Uint8Array;\r\n  lowPassData: Uint8Array;\r\n};\r\n\r\ntype DynamicChildProps = VisualizationHOC.Props & { classNames: string };\r\n\r\nconst dynamicChildFactory = (classNames?: string) => (\r\n  child: React.ReactElement<DynamicChildProps>\r\n) => React.cloneElement(child, { classNames });\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  currentIndex: state.currentVisualizationIndex,\r\n  prevIndex: state.prevVisualizationIndex,\r\n  isTransitioning: state.isTransitioning,\r\n  quality: state.quality\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  startTransition: () => dispatch(Actions.beginVisualizationTransition()),\r\n  endTransition: () => dispatch(Actions.endVisualizationTransition())\r\n});\r\n\r\nconst VisualizationSelector: React.FunctionComponent<\r\n  Props &\r\n    ReturnType<typeof mapStateToProps> &\r\n    ReturnType<typeof mapDispatchToProps>\r\n> = ({\r\n  data,\r\n  lowPassData,\r\n  startTransition,\r\n  endTransition,\r\n  isTransitioning,\r\n  prevIndex,\r\n  currentIndex,\r\n  quality\r\n}) => {\r\n  const transitionClassName =\r\n    prevIndex != null && prevIndex < currentIndex ? 'next' : 'prev';\r\n\r\n  const classNameRoot = transitionClassName\r\n    ? `visualization-${transitionClassName}`\r\n    : undefined;\r\n\r\n  const index = modulo(currentIndex, visualizations.length);\r\n  const intendedVisualization = visualizations[index];\r\n\r\n  const selectedVisualization =\r\n    intendedVisualization.options &&\r\n    intendedVisualization.options.mobileDisabled &&\r\n    isMobileDevice\r\n      ? MobileDisabled\r\n      : intendedVisualization;\r\n\r\n  return (\r\n    <TransitionGroup\r\n      component={null}\r\n      childFactory={dynamicChildFactory(classNameRoot)}\r\n    >\r\n      <CSSTransition\r\n        key={index}\r\n        timeout={TRANSITION_ANIMATION_LENGTH}\r\n        classNames={classNameRoot || ''}\r\n        onExit={startTransition}\r\n        onExited={endTransition}\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        <selectedVisualization.component\r\n          data={data}\r\n          lowPassData={lowPassData}\r\n          isTransitioning={isTransitioning}\r\n          timeout={TRANSITION_ANIMATION_LENGTH}\r\n          options={selectedVisualization.options}\r\n          quality={quality}\r\n        />\r\n      </CSSTransition>\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VisualizationSelector);\r\n","import { ActionConstants, ActionUnionType, Quality } from './types';\r\n\r\nexport const beginVisualizationTransition = (): ActionUnionType => ({\r\n  type: ActionConstants.BEGIN_VISUALIZATION_TRANSITION\r\n});\r\n\r\nexport const endVisualizationTransition = (): ActionUnionType => ({\r\n  type: ActionConstants.END_VISUALIZATION_TRANSITION\r\n});\r\n\r\nexport const goToNextVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_NEXT_VISUALIZATION\r\n});\r\n\r\nexport const goToPrevVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_PREV_VISUALIZATION\r\n});\r\n\r\nexport const setQuality = (quality: Quality): ActionUnionType => ({\r\n  type: ActionConstants.SET_QUALITY,\r\n  quality\r\n});\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport VisualizationSelector from '../Visualizer/VisualizationSelector';\r\nimport { FFT_SIZE } from '../../config';\r\n\r\ntype Props = {\r\n  context: AudioContext;\r\n  source: MediaElementAudioSourceNode;\r\n};\r\n\r\nconst Analyser: React.FunctionComponent<Props> = ({ context, source }) => {\r\n  const [rawData, setRawData] = useState(new Uint8Array());\r\n  const [lowPassData, setLowPassData] = useState(new Uint8Array());\r\n\r\n  const animationFrameIdRef = useRef<number>();\r\n\r\n  useEffect(() => {\r\n    const rawAnalyser = context.createAnalyser();\r\n    rawAnalyser.fftSize = FFT_SIZE;\r\n    rawAnalyser.smoothingTimeConstant = 0;\r\n    source.connect(rawAnalyser);\r\n    rawAnalyser.connect(context.destination);\r\n\r\n    const filter = context.createBiquadFilter();\r\n    filter.type = 'lowpass';\r\n    const lowPassAnalyser = context.createAnalyser();\r\n    lowPassAnalyser.fftSize = FFT_SIZE;\r\n    lowPassAnalyser.smoothingTimeConstant = 0;\r\n    source.connect(filter);\r\n    filter.connect(lowPassAnalyser);\r\n\r\n    const tick = () => {\r\n      const rawDataContainer = new Uint8Array(FFT_SIZE);\r\n      rawAnalyser.getByteTimeDomainData(rawDataContainer);\r\n      setRawData(rawDataContainer);\r\n\r\n      const lowPassDataContainer = new Uint8Array(FFT_SIZE);\r\n      lowPassAnalyser.getByteTimeDomainData(lowPassDataContainer);\r\n      setLowPassData(lowPassDataContainer);\r\n\r\n      animationFrameIdRef.current = window.requestAnimationFrame(tick);\r\n    };\r\n\r\n    animationFrameIdRef.current = window.requestAnimationFrame(tick);\r\n\r\n    return () => {\r\n      animationFrameIdRef.current != null &&\r\n        window.cancelAnimationFrame(animationFrameIdRef.current);\r\n      rawAnalyser && rawAnalyser.disconnect();\r\n      lowPassAnalyser && lowPassAnalyser.disconnect();\r\n      source && source.disconnect();\r\n    };\r\n  }, [context, source]);\r\n\r\n  return <VisualizationSelector data={rawData} lowPassData={lowPassData} />;\r\n};\r\n\r\nexport default Analyser;\r\n","export const FFT_SIZE = 512;\r\nexport const DATA_SIZE = FFT_SIZE / 2;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './Loading.scss';\r\n\r\ntype Props = {\r\n  show?: boolean;\r\n};\r\n\r\nconst Loading: React.FunctionComponent<Props> = ({ show }) => (\r\n  <div\r\n    className={classNames('loading', { show: show === false ? false : true })}\r\n  >\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport * as Actions from '../../../store/actions';\r\nimport { StoreState, Quality } from '../../../store/types';\r\nimport './Quality.scss';\r\n\r\ntype Props = {\r\n  setIsQualityHovered: (isQualityHovered: boolean) => void;\r\n} & ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps>;\r\n\r\nconst qualities = [\r\n  { label: 'low', value: 0 },\r\n  { label: 'medium', value: 1 },\r\n  { label: 'high', value: 2 }\r\n];\r\n\r\nconst QualitySelect: React.FunctionComponent<Props> = ({\r\n  quality,\r\n  setQuality,\r\n  setIsQualityHovered\r\n}) => {\r\n  return (\r\n    <div\r\n      id=\"quality\"\r\n      onMouseEnter={() => setIsQualityHovered(true)}\r\n      onMouseLeave={() => setIsQualityHovered(false)}\r\n    >\r\n      <select\r\n        value={quality}\r\n        onChange={e => setQuality(+e.target.value as Quality)}\r\n      >\r\n        {qualities.map(quality => (\r\n          <option key={quality.label} value={quality.value}>\r\n            {quality.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  quality: state.quality\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  setQuality: (quality: Quality) => dispatch(Actions.setQuality(quality))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(QualitySelect);\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport Loading from '../Loading';\r\nimport * as Actions from '../../store/actions';\r\nimport * as versionInfo from '../../metadata/build-version.json';\r\nimport QualitySelect from './QualitySelect';\r\nimport './Controls.scss';\r\n\r\nconst CONTROLS_FADE_OUT_DELAY = 1500;\r\nconst TOUCH_WAS_CLICK_THRESHOLD = 250;\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & {\r\n  context?: AudioContext;\r\n  wantsToPlay: boolean;\r\n  isPlaying: boolean;\r\n  togglePlay: () => void;\r\n};\r\n\r\nconst Controls: React.FunctionComponent<Props> = props => {\r\n  const [isOverlayShown, setIsOverlayShown] = useState(false);\r\n  const [isArrowHovered, setIsArrowHovered] = useState(false);\r\n  const [isQualityHovered, setIsQualityHovered] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const onKeyDown = (event: KeyboardEvent) => {\r\n      switch (event.which) {\r\n        case 37:\r\n        case 38: {\r\n          props.goToPrevVisualization();\r\n          break;\r\n        }\r\n        case 39:\r\n        case 40: {\r\n          props.goToNextVisualization();\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', onKeyDown);\r\n    return () => document.removeEventListener('keydown', onKeyDown);\r\n  }, []);\r\n\r\n  const timeoutRef = useRef<number>();\r\n\r\n  const touchTimestampRef = useRef<number>();\r\n\r\n  const showOverlay = useCallback(() => {\r\n    timeoutRef.current != null && window.clearTimeout(timeoutRef.current);\r\n\r\n    setIsOverlayShown(true);\r\n    timeoutRef.current = window.setTimeout(() => {\r\n      if (!isArrowHovered && !isQualityHovered) {\r\n        setIsOverlayShown(false);\r\n      }\r\n    }, CONTROLS_FADE_OUT_DELAY);\r\n  }, [isArrowHovered, isQualityHovered]);\r\n\r\n  const togglePlay = useCallback(() => {\r\n    props.context && props.context.resume();\r\n    props.togglePlay();\r\n    showOverlay();\r\n  }, [props.context, props.togglePlay]);\r\n\r\n  const recordTouchTimestamp = useCallback((event: React.TouchEvent) => {\r\n    event.preventDefault();\r\n    touchTimestampRef.current = Date.now();\r\n  }, []);\r\n\r\n  const onMouseDown = useCallback((event: React.MouseEvent) => {\r\n    if (event.nativeEvent.which === 1) {\r\n      touchTimestampRef.current = Date.now();\r\n    }\r\n  }, []);\r\n\r\n  const onMouseUp = useCallback((event: React.MouseEvent) => {\r\n    if (\r\n      event.nativeEvent.which === 1 &&\r\n      touchTimestampRef.current &&\r\n      Date.now() - touchTimestampRef.current < TOUCH_WAS_CLICK_THRESHOLD\r\n    ) {\r\n      togglePlay();\r\n    }\r\n  }, []);\r\n\r\n  const onTouchEnd = useCallback((event: React.TouchEvent) => {\r\n    event.preventDefault();\r\n    if (\r\n      touchTimestampRef.current &&\r\n      Date.now() - touchTimestampRef.current < TOUCH_WAS_CLICK_THRESHOLD\r\n    ) {\r\n      showOverlay();\r\n    }\r\n  }, []);\r\n\r\n  const onPrev = useCallback(\r\n    (event: React.MouseEvent | React.TouchEvent) => {\r\n      event.stopPropagation();\r\n      props.goToPrevVisualization();\r\n      showOverlay();\r\n    },\r\n    [props.goToPrevVisualization]\r\n  );\r\n\r\n  const onNext = useCallback(\r\n    (event: React.MouseEvent | React.TouchEvent) => {\r\n      event.stopPropagation();\r\n      props.goToNextVisualization();\r\n      showOverlay();\r\n    },\r\n    [props.goToNextVisualization]\r\n  );\r\n\r\n  const doNothing = useCallback((event: React.MouseEvent) => {\r\n    event.stopPropagation();\r\n  }, []);\r\n\r\n  const onToggleArrowHover = useCallback((isHovered: boolean) => {\r\n    setIsArrowHovered(isHovered);\r\n  }, []);\r\n\r\n  const { wantsToPlay, isPlaying } = props;\r\n\r\n  return (\r\n    <>\r\n      {wantsToPlay && !isPlaying && <Loading />}\r\n      <div\r\n        id=\"overlay\"\r\n        onTouchStart={recordTouchTimestamp}\r\n        onTouchEnd={onTouchEnd}\r\n        onMouseMove={showOverlay}\r\n        className={classNames({ show: isOverlayShown })}\r\n      >\r\n        <h1 id=\"title\">LATE</h1>\r\n        <QualitySelect setIsQualityHovered={setIsQualityHovered} />\r\n        <div id=\"version\">build {versionInfo.version}</div>\r\n        {\r\n          <div\r\n            onMouseDown={onMouseDown}\r\n            onMouseUp={onMouseUp}\r\n            onTouchEnd={togglePlay}\r\n            className={classNames({\r\n              play: !wantsToPlay && !isPlaying,\r\n              pause: wantsToPlay && isPlaying\r\n            })}\r\n          />\r\n        }\r\n        <div className=\"navigation\">\r\n          <div\r\n            className=\"arrow-container\"\r\n            onClick={onPrev}\r\n            onTouchStart={onPrev}\r\n            onMouseUp={doNothing}\r\n            onMouseEnter={() => onToggleArrowHover(true)}\r\n            onMouseLeave={() => onToggleArrowHover(false)}\r\n          >\r\n            <svg\r\n              className=\"arrow\"\r\n              width=\"60px\"\r\n              height=\"80px\"\r\n              viewBox=\"0 0 50 80\"\r\n            >\r\n              <polyline\r\n                fill=\"none\"\r\n                stroke=\"#FFF\"\r\n                strokeWidth=\"3\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                points=\"\r\n            45.63,75.8 0.375,38.087 45.63,0.375 \"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div\r\n            className=\"arrow-container\"\r\n            onClick={onNext}\r\n            onTouchStart={onNext}\r\n            onMouseUp={doNothing}\r\n            onMouseEnter={() => onToggleArrowHover(true)}\r\n            onMouseLeave={() => onToggleArrowHover(false)}\r\n          >\r\n            <svg\r\n              className=\"arrow\"\r\n              width=\"60px\"\r\n              height=\"80px\"\r\n              viewBox=\"0 0 50 80\"\r\n            >\r\n              <polyline\r\n                fill=\"none\"\r\n                stroke=\"#FFF\"\r\n                strokeWidth=\"3\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                points=\"\r\n              0.375,0.375 45.63,38.087 0.375,75.8 \"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  goToNextVisualization: () => dispatch(Actions.goToNextVisualization()),\r\n  goToPrevVisualization: () => dispatch(Actions.goToPrevVisualization())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Controls);\r\n","import React from 'react';\r\nimport './NoWebAudioApi.scss';\r\n\r\nconst NoWebAudioApi = () => (\r\n  <div id=\"no-web-audio\">Your device doesn't support the Web Audio API.</div>\r\n);\r\n\r\nexport default NoWebAudioApi;\r\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport Analyser from './components/Analyser';\nimport Controls from './components/Controls';\nimport NoWebAudioApi from './components/NoWebAudioApi';\nimport { useStateRef } from './utils/hooks';\n\nconst AUDIO_SERVER_URL =\n  process.env.NODE_ENV === 'production'\n    ? process.env.REACT_APP_AUDIO_SERVER_URL\n    : 'http://localhost:3002';\n\ntype Props = {};\n\nconst App: React.FunctionComponent<Props> = props => {\n  const [wantsToPlay, setWantsToPlay] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [context, setContext, contextRef] = useStateRef<\n    AudioContext | undefined\n  >(undefined);\n  const [source, setSource] = useState<MediaElementAudioSourceNode>();\n  const [isContextUnavailable, setIsContextUnavailable] = useState(false);\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n\n  // disable if AudioContext is unavailable\n  useEffect(() => {\n    try {\n      new window.AudioContext();\n    } catch (err) {\n      setIsContextUnavailable(true);\n    }\n  }, []);\n\n  // attach audio event listeners\n  useEffect(() => {\n    const audioElement = audioRef.current!;\n\n    const onAudioPlay = () => setIsPlaying(true);\n    const onAudioPause = () => setIsPlaying(false);\n    const onAudioError = console.error;\n\n    audioElement.addEventListener('playing', onAudioPlay);\n    audioElement.addEventListener('pause', onAudioPause);\n    audioElement.addEventListener('error', onAudioError);\n\n    return () => {\n      audioElement.removeEventListener('playing', onAudioPlay);\n      audioElement.removeEventListener('pause', onAudioPause);\n      audioElement.removeEventListener('error', onAudioError);\n    };\n  }, []);\n\n  const initializeAudioContext = useCallback(() => {\n    const audioElement = audioRef.current!;\n    const context = new window.AudioContext();\n    const source = context.createMediaElementSource(audioElement);\n\n    setContext(context);\n    setSource(source);\n  }, [audioRef.current]);\n\n  const togglePlay = useCallback(() => {\n    const audioElement = audioRef.current!;\n\n    if (audioElement.paused) {\n      setWantsToPlay(true);\n      audioElement.play();\n\n      if (!contextRef.current) {\n        initializeAudioContext();\n      }\n    } else {\n      setWantsToPlay(false);\n      audioElement.pause();\n    }\n  }, [audioRef.current]);\n\n  if (isContextUnavailable) {\n    return <NoWebAudioApi />;\n  }\n\n  return (\n    <>\n      <audio\n        ref={audioRef}\n        id=\"audioElement\"\n        src={AUDIO_SERVER_URL}\n        preload={'auto'}\n        crossOrigin=\"anonymous\"\n      />\n\n      {context && source && <Analyser context={context} source={source} />}\n\n      <Controls\n        context={context}\n        wantsToPlay={wantsToPlay}\n        isPlaying={isPlaying}\n        togglePlay={togglePlay}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nexport function useStateRef<S>(\r\n  initialState: S | (() => S)\r\n): [S, React.Dispatch<React.SetStateAction<S>>, React.MutableRefObject<S>] {\r\n  const [state, setState] = useState(initialState);\r\n  const stateRef = useRef(state);\r\n\r\n  useEffect(() => {\r\n    stateRef.current = state;\r\n  }, [state]);\r\n\r\n  return [state, setState, stateRef];\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\nimport App from './App';\r\nimport './reset.scss';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}