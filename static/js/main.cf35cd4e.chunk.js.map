{"version":3,"sources":["serviceWorker.js","store/types.ts","store/reducer.ts","store/index.ts","components/Visualizer/Visualizations/VisualizationHOC.tsx","utils/colors.ts","utils/index.ts","utils/hooks.ts","components/Visualizer/Visualizations/Waveform/index.tsx","components/Visualizer/Visualizations/Waveform/utils.ts","components/Visualizer/Visualizations/Drummer/index.tsx","components/Visualizer/Visualizations/Halpern/three/sceneManager.ts","components/Visualizer/Visualizations/Halpern/three/entities/polys.ts","components/Visualizer/Visualizations/Halpern/three/entities/camera.ts","components/Visualizer/Visualizations/Halpern/three/entities/renderer.ts","components/Visualizer/Visualizations/Halpern/index.tsx","components/Visualizer/Visualizations/Stars/three/entities/shaders.ts","components/Visualizer/Visualizations/Stars/three/entities/polys.ts","components/Visualizer/Visualizations/Stars/three/entities/light.ts","components/Visualizer/Visualizations/Stars/three/sceneManager.ts","components/Visualizer/Visualizations/Stars/three/entities/renderer.ts","components/Visualizer/Visualizations/Stars/three/entities/camera.ts","components/Visualizer/Visualizations/Stars/index.tsx","components/Visualizer/Visualizations/Rain/renderer.ts","components/Visualizer/Visualizations/Rain/city/building.ts","components/Visualizer/Visualizations/Rain/city/index.ts","components/Visualizer/Visualizations/Rain/rain/index.ts","components/Visualizer/Visualizations/Rain/home/wall.ts","components/Visualizer/Visualizations/Rain/utils.ts","components/Visualizer/Visualizations/Rain/home/window.ts","components/Visualizer/Visualizations/Rain/home/dresser.ts","components/Visualizer/Visualizations/Rain/home/pictures.ts","components/Visualizer/Visualizations/Rain/home/table.ts","components/Visualizer/Visualizations/Rain/home/clock.ts","components/Visualizer/Visualizations/Rain/home/cat.ts","components/Visualizer/Visualizations/Rain/home/lamp.ts","components/Visualizer/Visualizations/Rain/home/index.ts","components/Visualizer/Visualizations/index.tsx","components/Visualizer/Visualizations/Rain/index.tsx","components/Visualizer/VisualizationSelector.tsx","components/Analyser/index.tsx","config/index.ts","components/Loading/index.tsx","songs.ts","components/Controls/AudioControls/index.tsx","components/Controls/index.tsx","store/actions.ts","components/App/index.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","ActionConstants","initialState","currentVisualizationIndex","prevVisualizationIndex","store","createStore","state","arguments","length","undefined","type","GO_TO_NEXT_VISUALIZATION","Object","objectSpread","GO_TO_PREV_VISUALIZATION","__REDUX_DEVTOOLS_EXTENSION__","defaultProps","data","Uint8Array","lowPassData","options","wrap","WrappedComponent","_ref","rawIntensitiesRef","useRef","lowPassIntensitiesRef","startingTimestampRef","Date","now","totalDifferenceFromRawBaseline","totalDifferenceFromLowBaseline","renderedData","map","rawDataElement","i","Math","abs","lowPassDataElement","smoothing","sum","count","rangeIndex","rawIntensityMax","lowPassIntensitySum","lowPassIntensityCount","lowPassIntensityMax","current","forEach","rawIntensity","lowPassIntensity","currentRawIntensity","recentLowPassAvgIntensity","currentLowPassIntensity","concat","shift","isBeat","react_default","a","createElement","intensity","colorTriples","colorTriple","id","randomColorTriple","floor","random","getRandomColors","numColors","areUnique","colors","randomTriple","randomColor","includes","push","getRandomColor","getRandomColorTriple","colorCopy","toConsumableArray","reverse","modulo","number1","number2","isInteger","number","randomNumberBetween","min","max","decimalPrecision","randomFloat","Number","toPrecision","debounced","fn","msToWait","isImmediate","timeoutId","_len","args","Array","_key","context","this","shouldCallNow","clearTimeout","setTimeout","apply","useStateRef","_useState","useState","_useState2","slicedToArray","setState","stateRef","useEffect","useDebouncedResize","deps","debouncedFn","addEventListener","removeEventListener","VisualizationHOC","canvasRef","_window","innerWidth","innerHeight","_window$devicePixelRa","devicePixelRatio","canvas","width","height","ctx","getContext","fillStyle","fillRect","intervalId","setInterval","clearInterval","lineWidth","lineCap","getColors","sliceWidth","color","strokeStyle","beginPath","x","moveTo","dataElement","y","lineTo","stroke","className","ref","size","setSize","_useState3","_useState4","colorSize","setColorSize","colorsRef","values","lastChangedTimestamp","maxSideLength","colorDiameter","sqrt","pow","freqMap","freqKey","freqData","ceiling","newColor","drummers","entries","_ref2","_ref3","hitCount","drummerContainerSize","key","style","opacity","classNames","hit","MIN_HIT_COUNT","smallestDrummerSize","transitions","useTransition","from","item","backgroundColor","scale","enter","leave","config","slow","_ref4","props","_ref5","objectWithoutProperties","web","div","transform","interpolate","s","DELAY_BEFORE_ROTATING_X","CAMERA_MAX_DISTANCE","CAMERA_DRIFT","ROTATE_Y","ROTATE_X","SPHERE_SEGMENTS","sceneManager","rendererContainer","animationFrameId","segments","sceneInitializedTimestamp","t","sphereGeometry","SphereGeometry","halpern","vertices","parameters","radius","widthSegments","heightSegments","positions","Float32Array","vertex","toArray","geometry","BufferGeometry","addAttribute","BufferAttribute","attributes","position","dynamic","material","PointsMaterial","TextureLoader","load","alphaTest","transparent","Points","createPoints","camera","startingY","PerspectiveCamera","set","lookAt","Vector3","createCamera","renderer","WebGLRenderer","alpha","setPixelRatio","setClearColor","createRenderer","appendChild","domElement","scene","Scene","add","clock","Clock","debouncedResize","aspect","updateProjectionMatrix","render","onVisibilityChange","document","visibilityState","stop","start","animate","delta","getDelta","rotateY","rotateX","PI","translateY","cos","translateX","translateZ","requestAnimationFrame","cleanup","cancelAnimationFrame","removeChild","remove","dispose","rendererRef","managedSceneRef","originalVerticesRef","sphereDataSegmentsRef","vertexSegmentLengthRef","focusedDataRef","fill","managedScene","halpernGeometry","array","slice","focusedDataIndex","splice","halpernBufferPositions","getAttribute","vertexSegmentIndex","ceil","dataIndex","vertexSegmentWeight","scalar","needsUpdate","starVertexShader","starFragmentShader","createCloud","texture","PlaneGeometry","cloudMaterial","MeshLambertMaterial","depthTest","rotateZ","cloud","Mesh","zPosition","createDirectionalLight","DirectionalLight","STAR_COUNT","CLOUD_COUNT","MAX_STAR_ALPHA","MIN_STAR_ALPHA","STAR_ALPHA_DELTA","STATIC_LIGHT_COLOR","VARIABLE_LIGHT_COLOR","lightIntensity","antialias","stars","starCount","alphas","j","shaderMaterial","ShaderMaterial","uniforms","value","Color","vertexShader","fragmentShader","createStars","cloudCover","Group","cloudCount","aLight","AmbientLight","fixedDLight","dLight","starAlphas","alphaDirection","children","lightTimestampRef","currentLightIntensity","newLightIntensity","WINDOW_FRAME_THICKNESS_DIVISOR","Renderer","classCallCheck","canvasWidth","canvasHeight","oneThirdCanvasWidth","oneHalfCanvasHeight","windowFrameThickness","roundedRadius","save","createClass","restore","Building","blueprint","lights","lightHeight","lightPadding","lightsPerFloor","buildingXPadding","buildingTopPadding","gapWidth","lightWidth","isOn","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","light","err","return","City","_Renderer","_this","possibleConstructorReturn","getPrototypeOf","call","layers","generateBuildings","inherits","_this2","_loop","layer","gap","building","leftMostBuilding","xOffset","get","prototype","currentLayer","generateLights","RAINDROPS_HEIGHTWISE","Raindrop","createdDate","timeDelta","Rainfall","raindrops","raindropHeight","raindrop","tick","startingX","Wall","linearGradient","createLinearGradient","addColorStop","defaultCornerRadii","tl","tr","br","bl","roundedRect","quadraticCurveTo","closePath","Window","clearRect","muntinWidth","topLeftX","topRightX","topY","leftX","leftTopY","leftBottomY","rect","Dresser","dresserHandleMidpoint","speakerWidth","speakerHeight","speakerX","speakerY","driverRadius","driverCenterX","driverCenterY","arc","dividerWidth","deckX","deckHeight","deckY","deckDetailX","bottomDetailY","knobRadius","knobX","knobY","clip","translate","knobMarkerAngle","knobMarkerStart","sin","knobMarkerEnd","dresser","stereo","wooferRadius","wooferCenterY","Pictures","pictures","_assertThisInitialize","assertThisInitialized","_this$pictures$","gradient1","nodes","nodeSize","point1","point2","currentNode","pop","_i","otherNode","_this$pictures$2","gradient2","randomAngle","planetX","planetY","randomRadius","_this$pictures$3","gradient3","starX","starY","graph","orbits","FRUIT_COLORS","Table","thickness","tableCornerRadii","bowlCenterX","bowlWidth","bowlHeight","fruits","stemAngle","fruit","_i2","stemStart","stemEnd","bowlCornerRadii","bowlBaseHeight","bowlBaseWidth","bowlDecorationY","leg","top","centerpiece","clockSize","clockCoords","angle","end","hours","getHours","minutes","getMinutes","seconds","getSeconds","rotate","face","hands","Cat","isWagging","prevTailAngle","headRadius","bodyHeight","bodyWidth","createdTimestamp","tailWidth","tailY","lineJoin","rightEar","point","leftEar","head","body","tail","nextTailAngle","tailEnd","Lamp","stemX","stemHeight","lampWidth","shadeTopLeft","shadeTopRight","shadeBottomRight","shadeBottomLeft","lightAngle","deltaX","deltaY","atan2","radiansBetween","lightTriangleAdjacentWidth","tan","lightBottomLeftX","lightBottomRightX","stem","lampshade","Home","wall","table","visualizations","component","cityCanvasRef","cityRef","cityCanvas","dpi","city","createCity","rainCanvasRef","rainfallRef","rainCanvas","_window2","rainfall","createRain","homeCanvasRef","homeRef","clockIntervalRef","homeCanvas","_window3","home","createHome","catCanvasRef","catRef","catCanvas","_window4","cat","adoptCat","lampCanvasRef","lampRef","lampCanvas","_window5","lamp","createLamp","raindropsToAdd","newRaindropsAdded","Stars","Waveform","Drummer","Halpern","styledVisualizations","vis","rest","assign","connect","currentIndex","prevIndex","visIndex","direction","useCallback","prev","translateXMultiplier","initial","Fragment","Visualization","Analyser","audioContext","audioSource","rawData","setRawData","setLowPassData","animationFrameIdRef","rawAnalyser","createAnalyser","fftSize","smoothingTimeConstant","destination","filter","createBiquadFilter","lowPassAnalyser","rawDataContainer","getByteTimeDomainData","lowPassDataContainer","disconnect","Visualizer_VisualizationSelector","Loading","_ref$isShown","isShown","show","songs","artist","title","path","AudioControls","onHover","onHoverStop","audioIndex","prevTrack","nextTrack","currentSong","onMouseEnter","onMouseLeave","toLocaleLowerCase","onTouchEnd","onMouseUp","index_es","icon","faStepBackward","faStepForward","dispatch","goToNextVisualization","goToPrevVisualization","isOverlayShown","setIsOverlayShown","isControlHovered","setIsControlHovered","timeoutRef","touchRef","onKeyDown","event","which","showOverlay","togglePlay","resume","onTouchStart","preventDefault","timestamp","touches","clientX","goToRepo","open","onMouseDown","nativeEvent","changedTouches","onPrev","onNext","wantsToPlay","isPlaying","components_Loading","onMouseMove","onClick","versionInfo","play","pause","viewBox","strokeWidth","strokeLinecap","strokeLinejoin","points","Controls_AudioControls","App","setWantsToPlay","setIsPlaying","_useStateRef","_useStateRef2","setAudioContext","audioContextRef","_useState5","_useState6","setSource","_useStateRef3","_useStateRef4","setAudioIndex","audioRef","audioElement","nextAudioIndex","src","prevAudioIndex","shouldStayOnThisTrack","currentTime","onAudioPlay","onAudioPause","onAudioError","console","error","initializeAudioContext","AudioContext","webkitAudioContext","createMediaElementSource","paused","preload","crossOrigin","components_Analyser","components_Controls","ReactDOM","es","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cf35cd4e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export type StoreState = {\r\n  currentVisualizationIndex: number;\r\n  prevVisualizationIndex: number;\r\n};\r\n\r\nexport enum ActionConstants {\r\n  BEGIN_VISUALIZATION_TRANSITION = 'BEGIN_VISUALIZATION_TRANSITION',\r\n  END_VISUALIZATION_TRANSITION = 'END_VISUALIZATION_TRANSITION',\r\n  GO_TO_PREV_VISUALIZATION = 'GO_TO_PREV_VISUALIZATION',\r\n  GO_TO_NEXT_VISUALIZATION = 'GO_TO_NEXT_VISUALIZATION'\r\n}\r\n\r\ninterface GoToNextVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_NEXT_VISUALIZATION;\r\n}\r\n\r\ninterface GoToPrevVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_PREV_VISUALIZATION;\r\n}\r\n\r\nexport type ActionUnionType =\r\n  | GoToNextVisualizationAction\r\n  | GoToPrevVisualizationAction;\r\n","import { StoreState, ActionConstants, ActionUnionType } from './types';\r\n\r\nconst initialState: StoreState = {\r\n  currentVisualizationIndex: 0,\r\n  prevVisualizationIndex: 0\r\n};\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: ActionUnionType\r\n): StoreState {\r\n  switch (action.type) {\r\n    case ActionConstants.GO_TO_NEXT_VISUALIZATION:\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex + 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.GO_TO_PREV_VISUALIZATION:\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex - 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Options } from './index';\r\nimport './Visualization.scss';\r\n\r\nexport type Props = {\r\n  // array of frequency data with values 0-255\r\n  data: Uint8Array;\r\n  lowPassData: Uint8Array;\r\n  options?: Options;\r\n};\r\n\r\nexport type WrappedProps = {\r\n  data: Uint8Array;\r\n  lowPassData: Uint8Array;\r\n  isBeat: boolean;\r\n  intensity: number;\r\n  lowPassIntensity: number;\r\n};\r\n\r\nconst defaultProps: Props = {\r\n  data: new Uint8Array(),\r\n  lowPassData: new Uint8Array(),\r\n  options: {}\r\n};\r\n\r\n// all visualization components should be wrapped with this HOC\r\nexport function wrap(\r\n  WrappedComponent: React.ComponentType<WrappedProps>\r\n): React.ComponentType<Props> {\r\n  return function({ data, lowPassData, options }: Props = defaultProps) {\r\n    const rawIntensitiesRef = useRef<number[]>([]);\r\n    const lowPassIntensitiesRef = useRef<number[]>([]);\r\n    const startingTimestampRef = useRef<number>(Date.now());\r\n\r\n    let totalDifferenceFromRawBaseline = 0;\r\n    let totalDifferenceFromLowBaseline = 0;\r\n\r\n    const renderedData = data.map((rawDataElement, i) => {\r\n      totalDifferenceFromRawBaseline += Math.abs(rawDataElement - 128);\r\n\r\n      const lowPassDataElement = lowPassData[i];\r\n      totalDifferenceFromLowBaseline += Math.abs(lowPassDataElement - 128);\r\n\r\n      if (options == null || !options.smoothing) {\r\n        return rawDataElement;\r\n      } else {\r\n        // smooth out each data value using a range of values around it,\r\n        // the range of this window is the value of options.smoothing\r\n        let sum = 0;\r\n        let count = 0;\r\n\r\n        let rangeIndex = i - options.smoothing;\r\n\r\n        while (rangeIndex < i + options.smoothing) {\r\n          const rawDataAtRangeIndex = data[rangeIndex] || 128;\r\n          sum += rawDataAtRangeIndex;\r\n          count += 1;\r\n          rangeIndex += 1;\r\n        }\r\n\r\n        return sum / count;\r\n      }\r\n    });\r\n\r\n    let rawIntensityMax = 0;\r\n\r\n    let lowPassIntensitySum = 0;\r\n    let lowPassIntensityCount = 0;\r\n    let lowPassIntensityMax = 0;\r\n\r\n    rawIntensitiesRef.current.forEach((rawIntensity, i) => {\r\n      if (rawIntensity > rawIntensityMax) {\r\n        rawIntensityMax = rawIntensity;\r\n      }\r\n\r\n      const lowPassIntensity = lowPassIntensitiesRef.current[i];\r\n      lowPassIntensitySum += lowPassIntensity;\r\n      lowPassIntensityCount += 1;\r\n\r\n      if (lowPassIntensity > lowPassIntensityMax) {\r\n        lowPassIntensityMax = lowPassIntensity;\r\n      }\r\n    });\r\n\r\n    const currentRawIntensity = totalDifferenceFromRawBaseline / data.length;\r\n    const recentLowPassAvgIntensity =\r\n      lowPassIntensitySum / lowPassIntensityCount || 0;\r\n\r\n    const currentLowPassIntensity =\r\n      totalDifferenceFromLowBaseline / lowPassData.length;\r\n\r\n    rawIntensitiesRef.current = rawIntensitiesRef.current.concat(\r\n      currentRawIntensity\r\n    );\r\n    lowPassIntensitiesRef.current = lowPassIntensitiesRef.current.concat(\r\n      currentLowPassIntensity\r\n    );\r\n\r\n    // remove intensities older than 2 seconds\r\n    if (Date.now() - startingTimestampRef.current > 2000) {\r\n      rawIntensitiesRef.current.shift();\r\n      lowPassIntensitiesRef.current.shift();\r\n    }\r\n\r\n    const isBeat = currentLowPassIntensity > recentLowPassAvgIntensity * 1.5;\r\n\r\n    return (\r\n      <WrappedComponent\r\n        data={renderedData}\r\n        lowPassData={lowPassData}\r\n        isBeat={isBeat}\r\n        intensity={currentRawIntensity}\r\n        lowPassIntensity={currentLowPassIntensity}\r\n      />\r\n    );\r\n  };\r\n}\r\n","const colorTriples = [\r\n  ['#0E9AA7', '#F6CD61', '#FE8A71'],\r\n  ['#EE4540', '#801336', '#2D142C'],\r\n  ['#8FB9A8', '#FDFBD4', '#FCD0BA'],\r\n  ['#AC6D83', '#685D79', '#465C7A'],\r\n  ['#F36E38', '#EF4648', '#582841'],\r\n  ['#F1F1F1', '#9BD7D1', '#305D7A'],\r\n  ['#DEA5B6', '#F3CD8C', '#F2E9C2'],\r\n  ['#E27B47', '#EFCA58', '#46B29E'],\r\n  ['#2E7345', '#2E9975', '#2DB3B3'],\r\n  ['#52A3CC', '#7EA1E5', '#AAAAF2'],\r\n  ['#CC5285', '#CC5285', '#F2BCAA'],\r\n  ['#D8E0BB', '#B6CEC7', '#86A3C3']\r\n];\r\n\r\nconst colorTriplesWithIds = colorTriples.map((colorTriple, i) => ({\r\n  id: i,\r\n  colorTriple\r\n}));\r\n\r\nfunction randomColorTriple() {\r\n  return colorTriples[Math.floor(Math.random() * colorTriples.length)];\r\n}\r\n\r\nexport function getRandomColors(numColors: number, areUnique?: boolean): string[] {\r\n  const colors: string[] = [];\r\n\r\n  while (colors.length < numColors) {\r\n    const randomTriple = randomColorTriple();\r\n    const randomColor = randomTriple[Math.floor(Math.random() * randomTriple.length)];\r\n\r\n    if (areUnique && colors.includes(randomColor)) {\r\n      break;\r\n    }\r\n\r\n    colors.push(randomColor);\r\n  }\r\n  return colors;\r\n}\r\n\r\nexport function getRandomColor() {\r\n  return getRandomColors(1)[0];\r\n}\r\n\r\nexport function getRandomColorTriple() {\r\n  const colorCopy = [...randomColorTriple()];\r\n  if (Math.random() <= 0.5) {\r\n    return colorCopy.reverse();\r\n  } else {\r\n    return colorCopy;\r\n  }\r\n}\r\n","export function modulo(number1: number, number2: number): number {\r\n  return ((number1 % number2) + number2) % number2;\r\n}\r\n\r\nexport function isMobileDevice(): boolean {\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n    navigator.userAgent\r\n  );\r\n}\r\n\r\nfunction isInteger(number: number) {\r\n  return modulo(number, 1) === 0;\r\n}\r\n\r\nexport function randomNumberBetween(\r\n  min: number,\r\n  max: number,\r\n  decimalPrecision = 1\r\n) {\r\n  if (isInteger(min) && isInteger(max)) {\r\n    return min + Math.floor(Math.random() * (max - min));\r\n  }\r\n\r\n  const randomFloat = min + Math.random() * (max - min);\r\n  return Number(randomFloat.toPrecision(decimalPrecision));\r\n}\r\n\r\nexport function debounced(\r\n  fn: (...args: any[]) => any,\r\n  msToWait: number = 500,\r\n  isImmediate: boolean = false\r\n) {\r\n  let timeoutId: number | null = null;\r\n\r\n  return function(this: any, ...args: any[]): any {\r\n    const context = this;\r\n\r\n    const delayedFunction = function() {\r\n      timeoutId = null;\r\n\r\n      if (!isImmediate) {\r\n        fn.apply(context, args);\r\n      }\r\n    };\r\n\r\n    const shouldCallNow = isImmediate && timeoutId == null;\r\n\r\n    if (timeoutId != null) {\r\n      window.clearTimeout(timeoutId);\r\n    }\r\n\r\n    timeoutId = window.setTimeout(delayedFunction, msToWait);\r\n\r\n    if (shouldCallNow) {\r\n      fn.apply(context, args);\r\n    }\r\n  };\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { debounced } from '../utils';\r\n\r\nexport function useStateRef<S>(\r\n  initialState: S | (() => S)\r\n): [S, React.Dispatch<React.SetStateAction<S>>, React.MutableRefObject<S>] {\r\n  const [state, setState] = useState(initialState);\r\n  const stateRef = useRef(state);\r\n\r\n  useEffect(() => {\r\n    stateRef.current = state;\r\n  }, [state]);\r\n\r\n  return [state, setState, stateRef];\r\n}\r\n\r\nexport function useDebouncedResize(\r\n  fn: React.EffectCallback,\r\n  deps?: React.DependencyList\r\n) {\r\n  useEffect(() => {\r\n    fn();\r\n    const debouncedFn = debounced(fn);\r\n\r\n    window.addEventListener('resize', debouncedFn);\r\n    return () => window.removeEventListener('resize', debouncedFn);\r\n  }, deps);\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { getColors } from './utils';\r\nimport { useDebouncedResize } from '../../../../utils/hooks';\r\nimport './Waveform.scss';\r\n\r\nconst LINE_WIDTH = 10;\r\nconst LINE_X_OFFSET = 0;\r\nconst LINE_Y_OFFSET = 5;\r\n\r\nconst Waveform: React.FC<VisualizationHOC.WrappedProps> = ({ data }) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useDebouncedResize(() => {\r\n    const { innerWidth, innerHeight, devicePixelRatio = 1 } = window;\r\n\r\n    const canvas = canvasRef.current!;\r\n    canvas.width = innerWidth * devicePixelRatio;\r\n    canvas.height = innerHeight * devicePixelRatio;\r\n\r\n    // initial paint to match fade out color from rounding error\r\n    const ctx = canvas.getContext('2d')!;\r\n    ctx.fillStyle = '#101010';\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n\r\n    const fadeOut = () => {\r\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    };\r\n\r\n    const intervalId = window.setInterval(fadeOut, 7);\r\n    return () => window.clearInterval(intervalId);\r\n  }, []);\r\n\r\n  // paint on every data update\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n    ctx.lineWidth = LINE_WIDTH;\r\n    ctx.lineCap = 'round';\r\n\r\n    const colors = getColors(2);\r\n\r\n    const sliceWidth = canvas.width / data.length;\r\n\r\n    colors.forEach((color, i) => {\r\n      ctx.strokeStyle = color;\r\n      ctx.beginPath();\r\n\r\n      let x = i * LINE_X_OFFSET;\r\n      ctx.moveTo(x, canvas.height / 2);\r\n\r\n      data.forEach(dataElement => {\r\n        const y =\r\n          (dataElement / 255.0) * canvas.height -\r\n          (LINE_Y_OFFSET * colors.length) / 2;\r\n        ctx.lineTo(x, y + i * ((LINE_Y_OFFSET * colors.length) / 2));\r\n        x += sliceWidth;\r\n      });\r\n\r\n      ctx.lineTo(x, canvas.height / 2);\r\n      ctx.stroke();\r\n    });\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"waveform\">\r\n      <div className=\"backdrop\" />\r\n      <canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Waveform);\r\n","import {\r\n  getRandomColorTriple,\r\n  getRandomColors,\r\n  getRandomColor\r\n} from '../../../../utils/colors';\r\n\r\nexport function getColors(numColors: number) {\r\n  switch (numColors) {\r\n    case 3:\r\n      return getRandomColorTriple();\r\n    case 2:\r\n      return getRandomColors(2, true);\r\n    case 1:\r\n      return [getRandomColor()];\r\n    default:\r\n      return getRandomColorTriple();\r\n  }\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport { useTransition, animated, interpolate, config } from 'react-spring';\r\nimport classNames from 'classnames';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { useDebouncedResize } from '../../../../utils/hooks';\r\nimport { getRandomColor } from '../../../../utils/colors';\r\nimport { DATA_SIZE } from '../../../../config';\r\nimport './Drummer.scss';\r\n\r\nconst MIN_HIT_COUNT = 0.04;\r\nconst MIN_FREQUENCY_VARIATION = 10;\r\nconst MIN_DELAY_BETWEEN_COLOR_CHANGE = 200;\r\nconst NUM_DRUMMERS = 10;\r\n\r\nconst minHitCount = MIN_HIT_COUNT * DATA_SIZE;\r\n\r\nconst Drummer: React.FC<VisualizationHOC.WrappedProps> = ({ data, isBeat }) => {\r\n  const [size, setSize] = useState(0);\r\n  const [colorSize, setColorSize] = useState(0);\r\n\r\n  const colorsRef = useRef({\r\n    values: [getRandomColor()],\r\n    lastChangedTimestamp: Date.now()\r\n  });\r\n\r\n  useDebouncedResize(() => {\r\n    const { innerWidth, innerHeight } = window;\r\n    const maxSideLength = Math.max(innerWidth, innerHeight);\r\n    setSize(maxSideLength * 2);\r\n\r\n    const colorDiameter = Math.sqrt(\r\n      Math.pow(innerWidth, 2) + Math.pow(innerHeight, 2)\r\n    );\r\n    setColorSize(colorDiameter);\r\n  }, []);\r\n\r\n  const colors = colorsRef.current;\r\n  const numDrummers = NUM_DRUMMERS;\r\n\r\n  const freqMap: { [key: string]: number } = {};\r\n  const numPerSlice = 256 / numDrummers;\r\n\r\n  for (let freqKey = 0; freqKey < numDrummers; freqKey++) {\r\n    freqMap[freqKey] = 0;\r\n  }\r\n\r\n  data.forEach(freqData => {\r\n    for (let freqKey = 0; freqKey < numDrummers; freqKey++) {\r\n      const ceiling = numPerSlice * (freqKey + 1);\r\n      if (\r\n        Math.abs(freqData - 128) > MIN_FREQUENCY_VARIATION &&\r\n        freqData <= ceiling\r\n      ) {\r\n        freqMap[freqKey] += 1;\r\n        break;\r\n      }\r\n    }\r\n  });\r\n\r\n  // space out background color changes so they're not jarring\r\n  const now = Date.now();\r\n  if (\r\n    isBeat &&\r\n    now - colors.lastChangedTimestamp > MIN_DELAY_BETWEEN_COLOR_CHANGE\r\n  ) {\r\n    let newColor;\r\n    do {\r\n      newColor = getRandomColor();\r\n    } while (colors.values[colors.values.length - 1] === newColor);\r\n\r\n    colors.values.push(newColor);\r\n    if (colors.values.length > 1) {\r\n      colors.values.shift();\r\n    }\r\n    colors.lastChangedTimestamp = now;\r\n  }\r\n\r\n  const drummers = Object.entries(freqMap).map(([freqKey, hitCount], i) => {\r\n    const drummerContainerSize = ((1 + +freqKey) * size) / numDrummers;\r\n\r\n    return (\r\n      <div\r\n        key={freqKey}\r\n        className=\"drummer-container\"\r\n        style={{\r\n          width: `${drummerContainerSize}px`,\r\n          height: `${drummerContainerSize}px`,\r\n          opacity: ((numDrummers - i) / numDrummers) * 0.5 * 0.25\r\n        }}\r\n      >\r\n        <div className={classNames('beat', { hit: hitCount > minHitCount })} />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const smallestDrummerSize = size / (numDrummers * 2);\r\n\r\n  const transitions = useTransition(colors.values, null, {\r\n    from: item => ({\r\n      backgroundColor: item,\r\n      width: smallestDrummerSize,\r\n      height: smallestDrummerSize,\r\n      scale: 1\r\n    }),\r\n    enter: { scale: (colorSize / smallestDrummerSize) * 1.5 },\r\n    leave: { scale: 0 },\r\n    config: config.slow\r\n  });\r\n\r\n  return (\r\n    <div className=\"drummer\">\r\n      {drummers}\r\n      {transitions.map(({ item, props, key }) => {\r\n        const { scale, ...style } = props as any;\r\n\r\n        return (\r\n          <animated.div\r\n            className=\"color-overlay\"\r\n            key={key}\r\n            style={{\r\n              ...style,\r\n              transform: interpolate(\r\n                [scale],\r\n                (s: number) => `translate3d(0, 0, 0) scale(${s})`\r\n              )\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Drummer);\r\n","import { Scene, PointsMaterial, Clock } from 'three';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\nimport { createSphereGeometry, createPoints } from './entities/polys';\r\nimport { debounced } from '../../../../../utils';\r\n\r\nconst DELAY_BEFORE_ROTATING_X = 1500;\r\nconst CAMERA_MAX_DISTANCE = 200;\r\nconst CAMERA_DRIFT = 0.025;\r\nconst ROTATE_Y = -0.3;\r\nconst ROTATE_X = 0.3;\r\nconst SPHERE_SEGMENTS = 60;\r\n\r\nexport default function sceneManager(rendererContainer: HTMLDivElement) {\r\n  let animationFrameId: number;\r\n  let sceneInitializedTimestamp = Date.now();\r\n  let t = 0;\r\n\r\n  const sphereGeometry = createSphereGeometry(SPHERE_SEGMENTS);\r\n  const halpern = createPoints(sphereGeometry);\r\n  const camera = createCamera(CAMERA_MAX_DISTANCE);\r\n  const renderer = createRenderer();\r\n  rendererContainer.appendChild(renderer.domElement);\r\n\r\n  const scene = new Scene();\r\n  scene.add(halpern);\r\n\r\n  // clock is started in Halpern component when the\r\n  // animation loop is started\r\n  const clock = new Clock();\r\n\r\n  const debouncedResize = debounced(onResize);\r\n  window.addEventListener('resize', debouncedResize);\r\n  document.addEventListener('visibilitychange', onVisibilityChange);\r\n\r\n  function animate() {\r\n    const delta = clock.getDelta();\r\n\r\n    halpern.rotateY(ROTATE_Y * delta);\r\n\r\n    if (Date.now() - sceneInitializedTimestamp > DELAY_BEFORE_ROTATING_X) {\r\n      halpern.rotateX(ROTATE_X * delta);\r\n    }\r\n\r\n    t += delta;\r\n\r\n    if (t >= Math.PI * 2) {\r\n      t = 0;\r\n    }\r\n\r\n    camera.translateY(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateX(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateZ(Math.cos(t) * CAMERA_DRIFT * 5);\r\n\r\n    renderer.render(scene, camera);\r\n    animationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function onVisibilityChange() {\r\n    if (document.visibilityState === 'hidden') {\r\n      clock.stop();\r\n    } else {\r\n      clock.start();\r\n    }\r\n  }\r\n\r\n  function cleanup() {\r\n    window.cancelAnimationFrame(animationFrameId);\r\n    window.removeEventListener('resize', debouncedResize);\r\n    document.removeEventListener('visibilitychange', onVisibilityChange);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    scene.remove(halpern);\r\n\r\n    halpern.geometry.dispose();\r\n    (halpern.material as PointsMaterial).dispose();\r\n    sphereGeometry.dispose();\r\n\r\n    renderer.dispose();\r\n  }\r\n\r\n  return {\r\n    clock,\r\n    sphereGeometry,\r\n    halpern,\r\n    animate,\r\n    cleanup\r\n  };\r\n}\r\n","import {\r\n  Points,\r\n  PointsMaterial,\r\n  SphereGeometry,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  TextureLoader\r\n} from 'three';\r\n\r\nexport function createSphereGeometry(segments: number): SphereGeometry {\r\n  return new SphereGeometry(48, segments, segments);\r\n}\r\n\r\nexport function createPoints(sphereGeometry: SphereGeometry): Points {\r\n  const pointGeometry = new SphereGeometry(\r\n    sphereGeometry.parameters.radius,\r\n    sphereGeometry.parameters.widthSegments,\r\n    sphereGeometry.parameters.heightSegments\r\n  );\r\n\r\n  const { vertices } = pointGeometry;\r\n  const positions = new Float32Array(vertices.length * 3);\r\n\r\n  vertices.forEach((vertex, i) => {\r\n    vertex.toArray(positions, i * 3);\r\n  });\r\n\r\n  const geometry = new BufferGeometry();\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n  (geometry.attributes.position as BufferAttribute).dynamic = true;\r\n\r\n  const material = new PointsMaterial({\r\n    size: 0.5,\r\n    map: new TextureLoader().load('assets/images/point.png'),\r\n    alphaTest: 0.5,\r\n    color: 0x666666,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, material);\r\n}\r\n","import { PerspectiveCamera, Vector3 } from 'three';\r\n\r\nexport function createCamera(startingY: number) {\r\n  const camera = new PerspectiveCamera(\r\n    75,\r\n    window.innerWidth / window.innerHeight,\r\n    0.1,\r\n    1000\r\n  );\r\n\r\n  camera.position.set(0, startingY, 0);\r\n  camera.lookAt(new Vector3(0, 0, 0));\r\n\r\n  return camera;\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ alpha: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x000000, 0);\r\n\r\n  return renderer;\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { BufferGeometry, BufferAttribute } from 'three';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport sceneManager from './three/sceneManager';\r\nimport './Halpern.scss';\r\n\r\nconst RIPPLE_SPEED = 3;\r\nconst VERTEX_SEGMENT_WEIGHT_COEFFICIENT = 0.1;\r\nconst BASELINE_VERTEX_SCALAR_FACTOR = 1;\r\n\r\nconst Halpern: React.FC<VisualizationHOC.WrappedProps> = ({ data }) => {\r\n  const rendererRef = useRef<HTMLDivElement>(null);\r\n  const managedSceneRef = useRef<any>();\r\n  const originalVerticesRef = useRef<ArrayLike<number>>();\r\n  const sphereDataSegmentsRef = useRef<number>();\r\n  const vertexSegmentLengthRef = useRef<number>();\r\n  const focusedDataRef = useRef<number[]>(new Array(data.length).fill(128));\r\n\r\n  useEffect(() => {\r\n    const rendererContainer = rendererRef.current!;\r\n    const managedScene = sceneManager(rendererContainer);\r\n\r\n    managedSceneRef.current = managedScene;\r\n\r\n    const halpernGeometry = managedScene.halpern.geometry as BufferGeometry;\r\n\r\n    sphereDataSegmentsRef.current = Math.floor(\r\n      data.length / managedScene.sphereGeometry.parameters.widthSegments\r\n    );\r\n\r\n    // split vertices up into segments belonging to slices of x cross sections,\r\n    // first and last vertices are at top and bottom of sphere\r\n    vertexSegmentLengthRef.current =\r\n      (managedScene.sphereGeometry.vertices.length - 2) /\r\n      (managedScene.sphereGeometry.parameters.widthSegments - 1);\r\n\r\n    originalVerticesRef.current = (halpernGeometry.attributes.position\r\n      .array as Float32Array).slice(0);\r\n\r\n    managedScene.clock.start();\r\n\r\n    managedScene.animate();\r\n\r\n    return managedScene.cleanup;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const rippleSpeed = RIPPLE_SPEED;\r\n    const focusedDataIndex = Math.floor(data.length / 2);\r\n\r\n    focusedDataRef.current.splice(0, rippleSpeed);\r\n    focusedDataRef.current = focusedDataRef.current.concat(\r\n      new Array(rippleSpeed).fill(data[focusedDataIndex])\r\n    );\r\n\r\n    const halpernGeometry = managedSceneRef.current!.halpern.geometry;\r\n    const halpernBufferPositions = halpernGeometry.getAttribute('position')\r\n      .array as Float32Array;\r\n\r\n    let i = 0;\r\n    while (i < originalVerticesRef.current!.length) {\r\n      // find which segment the current index belongs to\r\n      const vertexSegmentIndex = Math.ceil(\r\n        Math.floor(i / 3) / vertexSegmentLengthRef.current!\r\n      );\r\n\r\n      const dataIndex = vertexSegmentIndex * sphereDataSegmentsRef.current!;\r\n      const vertexSegmentWeight = Math.min(\r\n        vertexSegmentIndex,\r\n        vertexSegmentLengthRef.current! - vertexSegmentIndex\r\n      );\r\n\r\n      const dataVariation =\r\n        Math.abs(focusedDataRef.current[dataIndex] - 128) / 255;\r\n\r\n      const scalar =\r\n        dataVariation *\r\n          vertexSegmentWeight *\r\n          VERTEX_SEGMENT_WEIGHT_COEFFICIENT +\r\n        BASELINE_VERTEX_SCALAR_FACTOR;\r\n\r\n      // update X, Y, and Z vector positions in BufferGeometry\r\n      halpernBufferPositions[i] = originalVerticesRef.current![i] * scalar;\r\n      halpernBufferPositions[i + 1] =\r\n        originalVerticesRef.current![i + 1] * scalar;\r\n      halpernBufferPositions[i + 2] =\r\n        originalVerticesRef.current![i + 2] * scalar;\r\n\r\n      i += 3;\r\n    }\r\n\r\n    // inform three.js that vertices should be repositioned,\r\n    // final render is handled in sceneManager animate loop\r\n    (halpernGeometry.getAttribute(\r\n      'position'\r\n    ) as BufferAttribute).needsUpdate = true;\r\n  }, [data]);\r\n\r\n  return <div className=\"halpern\" ref={rendererRef} />;\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Halpern);\r\n","export const starVertexShader = `\r\nattribute float alpha;\r\nvarying float vAlpha;\r\n\r\nvoid main() {\r\n  vAlpha = alpha;\r\n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n  gl_PointSize = 4.0 * alpha;\r\n  gl_Position = projectionMatrix * mvPosition;\r\n}\r\n`;\r\n\r\nexport const starFragmentShader = `\r\nuniform vec3 color;\r\nvarying float vAlpha;\r\n\r\nvoid main() {\r\n  float r = 0.0;\r\n  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\r\n  r = dot(cxy, cxy);\r\n  if (r > 1.0) {\r\n    discard;\r\n  }\r\n\r\n  gl_FragColor = vec4(color, vAlpha);\r\n}\r\n`;\r\n","import {\r\n  Points,\r\n  BufferAttribute,\r\n  ShaderMaterial,\r\n  Color,\r\n  BufferGeometry,\r\n  TextureLoader,\r\n  MeshLambertMaterial,\r\n  Mesh,\r\n  PlaneGeometry\r\n} from 'three';\r\nimport { starVertexShader, starFragmentShader } from './shaders';\r\n\r\nexport function createStars(starCount: number): Points {\r\n  const geometry = new BufferGeometry();\r\n\r\n  const positions = new Float32Array(starCount * 3);\r\n\r\n  let i = 0;\r\n  while (i < starCount) {\r\n    // add random x, y, and z vector positions\r\n    positions[i++] = Math.random() * 100 - 50;\r\n    positions[i++] = Math.random() * 100 - 50;\r\n    positions[i++] = Math.random() * 100 - 50;\r\n  }\r\n\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n\r\n  const alphas = new Float32Array(geometry.attributes.position.count * 1);\r\n\r\n  let j = 0;\r\n  while (j < alphas.length) {\r\n    alphas[j] = Math.random();\r\n    j += 1;\r\n  }\r\n\r\n  geometry.addAttribute('alpha', new BufferAttribute(alphas, 1));\r\n\r\n  const shaderMaterial = new ShaderMaterial({\r\n    uniforms: {\r\n      color: { type: 'c', value: new Color(0xffffff) }\r\n    },\r\n    vertexShader: starVertexShader,\r\n    fragmentShader: starFragmentShader,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, shaderMaterial);\r\n}\r\n\r\nexport function createCloud(): Mesh {\r\n  const texture = Math.random() < 0.5 ? 'cloud.png' : 'smoke.png';\r\n\r\n  const geometry = new PlaneGeometry(50, 50);\r\n\r\n  const cloudMaterial = new MeshLambertMaterial({\r\n    map: new TextureLoader().load(`assets/images/${texture}`),\r\n    transparent: true,\r\n    opacity: 0.15,\r\n    depthTest: false\r\n  });\r\n\r\n  geometry.rotateZ(Math.random() * 360);\r\n\r\n  const cloud = new Mesh(geometry, cloudMaterial);\r\n\r\n  const zPosition = Math.random() * 15 + 10;\r\n\r\n  cloud.position.set(\r\n    Math.random() * 100 - 50,\r\n    Math.random() * 100 - 50,\r\n    Math.random() < 0.5 ? zPosition : -zPosition\r\n  );\r\n\r\n  return cloud;\r\n}\r\n","import { DirectionalLight, AmbientLight } from 'three';\r\n\r\nexport function createAmbientLight(color: number, intensity: number) {\r\n  return new AmbientLight(color, intensity);\r\n}\r\n\r\nexport function createDirectionalLight(color: number, intensity: number) {\r\n  return new DirectionalLight(color, intensity);\r\n}\r\n","import {\r\n  Scene,\r\n  PointsMaterial,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  Group,\r\n  Mesh,\r\n  ShaderMaterial,\r\n  Clock\r\n} from 'three';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\nimport { createStars, createCloud } from './entities/polys';\r\nimport { createAmbientLight, createDirectionalLight } from './entities/light';\r\nimport { debounced } from '../../../../../utils';\r\n\r\nconst STAR_COUNT = 10 * 1000;\r\nconst CLOUD_COUNT = 40;\r\nconst MAX_STAR_ALPHA = 1.0;\r\nconst MIN_STAR_ALPHA = 0.2;\r\nconst STAR_ALPHA_DELTA = 0.75;\r\nconst ROTATE_Y = 0.025;\r\nconst ROTATE_X = 0.001;\r\nconst STATIC_LIGHT_COLOR = 0x00c4b6;\r\nconst VARIABLE_LIGHT_COLOR = 0xd10022;\r\n\r\nexport default function sceneManager(\r\n  rendererContainer: HTMLDivElement,\r\n  lightIntensity: number\r\n) {\r\n  let animationFrameId: number;\r\n\r\n  const renderer = createRenderer();\r\n  rendererContainer.appendChild(renderer.domElement);\r\n  const camera = createCamera();\r\n  const scene = new Scene();\r\n\r\n  const stars = createStars(STAR_COUNT);\r\n  scene.add(stars);\r\n\r\n  const cloudCover = new Group();\r\n\r\n  let cloudCount = 0;\r\n  while (cloudCount <= CLOUD_COUNT) {\r\n    const cloud = createCloud();\r\n    cloudCover.add(cloud);\r\n    cloudCount += 1;\r\n  }\r\n\r\n  scene.add(cloudCover);\r\n\r\n  const aLight = createAmbientLight(0xffffff, lightIntensity);\r\n  scene.add(aLight);\r\n\r\n  const fixedDLight = createDirectionalLight(STATIC_LIGHT_COLOR, 2);\r\n  fixedDLight.position.set(0, 0, 1);\r\n  scene.add(fixedDLight);\r\n\r\n  const dLight = createDirectionalLight(VARIABLE_LIGHT_COLOR, lightIntensity);\r\n  dLight.position.set(0, 0, 1);\r\n  scene.add(dLight);\r\n\r\n  // create a fixed array to track which direction to adjust each star alpha\r\n  const starAlphas = (stars.geometry as BufferGeometry).attributes.alpha;\r\n  const alphaDirection = new Float32Array(starAlphas.count);\r\n\r\n  for (let i = 0; i < alphaDirection.length; i++) {\r\n    // direction of 1 means alpha should increase\r\n    // -1 means alpha should decrease\r\n    alphaDirection[i] = Math.random() < 0.5 ? 1 : -1;\r\n  }\r\n\r\n  // clock is started in Stars component when\r\n  // the animation loop is first triggered\r\n  const clock = new Clock();\r\n\r\n  const debouncedResize = debounced(onResize);\r\n  window.addEventListener('resize', debouncedResize);\r\n  document.addEventListener('visibilitychange', onVisibilityChange);\r\n\r\n  function animate() {\r\n    const delta = clock.getDelta();\r\n\r\n    stars.rotateX(ROTATE_X * delta);\r\n    stars.rotateY(ROTATE_Y * delta);\r\n\r\n    cloudCover.rotateX(ROTATE_X * 24 * delta);\r\n    cloudCover.rotateY(ROTATE_Y * 2 * delta);\r\n    cloudCover.rotateZ(ROTATE_X * 3 * delta);\r\n\r\n    cloudCover.children.forEach(cloud => {\r\n      (cloud as Mesh).lookAt(camera.position);\r\n    });\r\n\r\n    // use alphaDirection to maintain alpha adjustment direction until we\r\n    // reach a limit, then switch the direction\r\n    for (let i = 0; i < starAlphas.count; i++) {\r\n      if (alphaDirection[i] > 0) {\r\n        (starAlphas.array as Float32Array)[i] *= 1 + STAR_ALPHA_DELTA * delta;\r\n        if ((starAlphas.array as Float32Array)[i] > MAX_STAR_ALPHA) {\r\n          alphaDirection[i] = -1;\r\n        }\r\n      } else {\r\n        (starAlphas.array as Float32Array)[i] *= 1 - STAR_ALPHA_DELTA * delta;\r\n        if ((starAlphas.array as Float32Array)[i] < MIN_STAR_ALPHA) {\r\n          alphaDirection[i] = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    (starAlphas as BufferAttribute).needsUpdate = true;\r\n\r\n    renderer.render(scene, camera);\r\n    animationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function onVisibilityChange() {\r\n    if (document.visibilityState === 'hidden') {\r\n      clock.stop();\r\n    } else {\r\n      clock.start();\r\n    }\r\n  }\r\n\r\n  function cleanup() {\r\n    window.cancelAnimationFrame(animationFrameId);\r\n    window.removeEventListener('resize', debouncedResize);\r\n    document.removeEventListener('visibilitychange', onVisibilityChange);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    scene.remove(stars);\r\n    stars.geometry.dispose();\r\n    (stars.material as PointsMaterial).dispose();\r\n\r\n    scene.remove(cloudCover);\r\n    cloudCover.children.forEach(cloud => {\r\n      (cloud as Mesh).geometry.dispose();\r\n      ((cloud as Mesh).material as ShaderMaterial).dispose();\r\n    });\r\n\r\n    renderer.dispose();\r\n  }\r\n\r\n  return {\r\n    clock,\r\n    animate,\r\n    cleanup,\r\n    dLight\r\n  };\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ antialias: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x0000f, 1);\r\n\r\n  return renderer;\r\n}\r\n","import { PerspectiveCamera } from 'three';\r\n\r\nexport function createCamera() {\r\n  const camera = new PerspectiveCamera(\r\n    50,\r\n    window.innerWidth / window.innerHeight,\r\n    1,\r\n    1000\r\n  );\r\n\r\n  return camera;\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport sceneManager from './three/sceneManager';\r\nimport './Stars.scss';\r\n\r\nconst MIN_DELAY_BETWEEN_INTENSITY_CHANGE = 75;\r\nconst MAX_LIGHT_INTENSITY_INCREASE_DELTA = 2.5;\r\nconst MIN_LIGHT_INTENSITY = 1;\r\n\r\nconst Stars: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  intensity\r\n}) => {\r\n  const rendererRef = useRef<HTMLDivElement>(null);\r\n  const managedSceneRef = useRef<any>();\r\n  const lightTimestampRef = useRef<number>(Date.now());\r\n\r\n  useEffect(() => {\r\n    const rendererContainer = rendererRef.current!;\r\n    const managedScene = sceneManager(rendererContainer, MIN_LIGHT_INTENSITY);\r\n\r\n    managedSceneRef.current = managedScene;\r\n\r\n    managedScene.clock.start();\r\n    managedScene.animate();\r\n\r\n    return managedScene.cleanup;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const now = Date.now();\r\n\r\n    if (now - lightTimestampRef.current <= MIN_DELAY_BETWEEN_INTENSITY_CHANGE) {\r\n      return;\r\n    }\r\n\r\n    const { dLight } = managedSceneRef.current!;\r\n\r\n    const currentLightIntensity = dLight.intensity;\r\n\r\n    let newLightIntensity = intensity / 2 || MIN_LIGHT_INTENSITY;\r\n\r\n    if (\r\n      newLightIntensity - currentLightIntensity >\r\n      MAX_LIGHT_INTENSITY_INCREASE_DELTA\r\n    ) {\r\n      newLightIntensity =\r\n        currentLightIntensity + MAX_LIGHT_INTENSITY_INCREASE_DELTA;\r\n    }\r\n\r\n    dLight.intensity = newLightIntensity;\r\n\r\n    lightTimestampRef.current = now;\r\n  }, [data]);\r\n\r\n  return <div className=\"stars\" ref={rendererRef} />;\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Stars);\r\n","const WINDOW_FRAME_THICKNESS_DIVISOR = 50;\r\n\r\nexport abstract class Renderer {\r\n  protected canvasWidth: number;\r\n  protected canvasHeight: number;\r\n  protected oneThirdCanvasWidth: number;\r\n  protected oneHalfCanvasHeight: number;\r\n  protected windowFrameThickness: number;\r\n  protected roundedRadius: number;\r\n\r\n  constructor(protected ctx: CanvasRenderingContext2D) {\r\n    this.canvasWidth = ctx.canvas.width;\r\n    this.canvasHeight = ctx.canvas.height;\r\n    this.oneThirdCanvasWidth = this.canvasWidth / 3;\r\n    this.oneHalfCanvasHeight = this.canvasHeight / 2;\r\n    this.windowFrameThickness = Math.floor(\r\n      Math.max(this.canvasWidth, this.canvasHeight) /\r\n        WINDOW_FRAME_THICKNESS_DIVISOR\r\n    );\r\n    this.roundedRadius = Math.floor(this.windowFrameThickness / 3);\r\n    ctx.save();\r\n  }\r\n\r\n  // for initial paint - subclasses should call super.render()\r\n  render(): void {\r\n    this.ctx.restore();\r\n  }\r\n\r\n  // for animation\r\n  tick(args: any): void {}\r\n}\r\n","import { randomNumberBetween } from '../../../../../utils';\r\n\r\nconst LIGHT_COLOR = 'rgb(255, 255, 255)';\r\nconst MIN_LIGHT_HEIGHT_RATIO = 0.02;\r\nconst MAX_LIGHT_HEIGHT_RATIO = 0.03;\r\nconst MIN_LIGHTS_PER_FLOOR = 2;\r\nconst MAX_LIGHTS_PER_FLOOR = 6;\r\nconst MIN_GAP_WIDTH_RATIO = 0.01;\r\nconst MAX_GAP_WIDTH_RATIO = 0.05;\r\nconst MIN_LIGHT_PADDING_RATIO = 0.01;\r\nconst MAX_LIGHT_PADDING_RATIO = 0.03;\r\nconst MIN_BUILDING_X_PADDING_RATIO = 0.05;\r\nconst MAX_BUILDING_X_PADDING_RATIO = 0.1;\r\nconst MIN_BUILDING_TOP_PADDING_RATIO = 0.025;\r\nconst MAX_BUILDING_TOP_PADDING_RATIO = 0.1;\r\n\r\nexport type BuildingBlueprint = {\r\n  ctx: CanvasRenderingContext2D;\r\n  canvasHeight: number;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  color: string;\r\n};\r\n\r\ntype Light = {\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  isOn: boolean;\r\n};\r\n\r\nexport class Building {\r\n  private ctx: CanvasRenderingContext2D;\r\n  private canvasHeight: number;\r\n\r\n  public x: number;\r\n  public y: number;\r\n  public width: number;\r\n  public height: number;\r\n  public color: string;\r\n  public lights: Light[] = [];\r\n\r\n  constructor(blueprint: BuildingBlueprint) {\r\n    this.ctx = blueprint.ctx;\r\n    this.canvasHeight = blueprint.canvasHeight;\r\n    this.x = blueprint.x;\r\n    this.y = blueprint.y;\r\n    this.width = blueprint.width;\r\n    this.height = blueprint.height;\r\n    this.color = blueprint.color;\r\n  }\r\n\r\n  // called externally so that buildings may be\r\n  // repositioned before light positions are determined\r\n  generateLights() {\r\n    const { canvasHeight, width, height } = this;\r\n\r\n    const lightHeight =\r\n      randomNumberBetween(MIN_LIGHT_HEIGHT_RATIO, MAX_LIGHT_HEIGHT_RATIO) *\r\n      height;\r\n\r\n    const lightPadding =\r\n      randomNumberBetween(MIN_LIGHT_PADDING_RATIO, MAX_LIGHT_PADDING_RATIO) *\r\n      height;\r\n\r\n    const lightsPerFloor = randomNumberBetween(\r\n      MIN_LIGHTS_PER_FLOOR,\r\n      MAX_LIGHTS_PER_FLOOR\r\n    );\r\n\r\n    const buildingXPadding =\r\n      randomNumberBetween(\r\n        MIN_BUILDING_X_PADDING_RATIO,\r\n        MAX_BUILDING_X_PADDING_RATIO\r\n      ) * width;\r\n\r\n    const buildingTopPadding =\r\n      randomNumberBetween(\r\n        MIN_BUILDING_TOP_PADDING_RATIO,\r\n        MAX_BUILDING_TOP_PADDING_RATIO\r\n      ) * height;\r\n\r\n    const gapWidth =\r\n      randomNumberBetween(MIN_GAP_WIDTH_RATIO, MAX_GAP_WIDTH_RATIO) * width;\r\n\r\n    const lightWidth =\r\n      (this.width - buildingXPadding * 2 - gapWidth * (lightsPerFloor - 1)) /\r\n      lightsPerFloor;\r\n\r\n    const lights: Light[] = [];\r\n    let x = this.x + buildingXPadding;\r\n    let y = this.y + buildingTopPadding;\r\n\r\n    while (y < canvasHeight * 0.98) {\r\n      // each iteration generates a row of lights for the floor\r\n      if (x >= this.x + this.width - buildingXPadding) {\r\n        // start a new floor\r\n        x = this.x + buildingXPadding;\r\n        y += lightHeight + lightPadding;\r\n      } else {\r\n        lights.push({\r\n          x,\r\n          y,\r\n          width: lightWidth,\r\n          height: lightHeight,\r\n          isOn: Math.random() > 0.4\r\n        });\r\n\r\n        x += lightWidth + gapWidth;\r\n      }\r\n    }\r\n\r\n    this.lights = lights;\r\n  }\r\n\r\n  render() {\r\n    const { ctx, x, y, width, height, color } = this;\r\n    ctx.save();\r\n\r\n    // render building\r\n    ctx.fillStyle = color;\r\n    ctx.fillRect(x, y, width, height);\r\n\r\n    // render lights\r\n    ctx.fillStyle = LIGHT_COLOR;\r\n    for (const light of this.lights) {\r\n      if (light.isOn) {\r\n        ctx.fillRect(light.x, light.y, light.width, light.height);\r\n      }\r\n    }\r\n\r\n    // garbage collect\r\n    this.lights = [];\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { Building } from './building';\r\nimport { randomNumberBetween } from '../../../../../utils';\r\nimport { getRandomColor } from '../../../../../utils/colors';\r\n\r\nconst LAYER_OVERLAY_COLOR = 'rgba(65, 35, 66, 0.6)';\r\n\r\nconst MAX_BUILDING_HEIGHT_RATIO = 0.95;\r\nconst MIN_BUILDING_HEIGHT_RATIO = 0.3;\r\nconst MIN_BUILDING_WIDTH_RATIO = 0.08;\r\nconst MAX_BUILDING_WIDTH_RATIO = 0.15;\r\nconst MIN_BUILDING_GAP_RATIO = 0.02;\r\nconst MAX_BUILDING_GAP_RATIO = 0.05;\r\nconst NUMBER_OF_LAYERS = 4;\r\n\r\nexport class City extends Renderer {\r\n  private layers: Building[][] = [];\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n    this.generateBuildings();\r\n  }\r\n\r\n  generateBuildings() {\r\n    const { ctx, canvasWidth, canvasHeight } = this;\r\n\r\n    for (let i = 0; i < NUMBER_OF_LAYERS; i++) {\r\n      // buildings per layer\r\n      const layer: Building[] = [];\r\n      let x = 0;\r\n\r\n      while (x < canvasWidth) {\r\n        const width =\r\n          randomNumberBetween(\r\n            MIN_BUILDING_WIDTH_RATIO,\r\n            MAX_BUILDING_WIDTH_RATIO,\r\n            2\r\n          ) * canvasWidth;\r\n\r\n        const height =\r\n          randomNumberBetween(\r\n            MIN_BUILDING_HEIGHT_RATIO,\r\n            MAX_BUILDING_HEIGHT_RATIO,\r\n            2\r\n          ) * canvasHeight;\r\n\r\n        const gap =\r\n          randomNumberBetween(MIN_BUILDING_GAP_RATIO, MAX_BUILDING_GAP_RATIO) *\r\n          canvasWidth;\r\n\r\n        const building = new Building({\r\n          y: canvasHeight - height,\r\n          color: getRandomColor(),\r\n          ctx,\r\n          canvasHeight,\r\n          x,\r\n          width,\r\n          height\r\n        });\r\n\r\n        layer.push(building);\r\n\r\n        x += width + gap;\r\n      }\r\n\r\n      // offset the buildings so the leftmost starts off screen\r\n      const leftMostBuilding = layer[0];\r\n\r\n      const xOffset = randomNumberBetween(\r\n        leftMostBuilding.width * 0.25,\r\n        leftMostBuilding.width * 0.75\r\n      );\r\n\r\n      layer.forEach(building => (building.x -= xOffset));\r\n      this.layers.push(layer);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const { ctx, canvasWidth, canvasHeight, layers } = this;\r\n\r\n    for (let i = 0; i < layers.length; i++) {\r\n      const currentLayer = layers[i];\r\n\r\n      if (i === layers.length - 1) {\r\n        currentLayer.forEach(building => building.generateLights());\r\n      }\r\n\r\n      for (const building of currentLayer) {\r\n        building.render();\r\n      }\r\n\r\n      // fade each layer out a bit\r\n      ctx.fillStyle = LAYER_OVERLAY_COLOR;\r\n      ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n    }\r\n\r\n    // garbage collect\r\n    this.layers = [];\r\n  }\r\n}\r\n","const TIME_TO_FALL = 300;\r\nconst RAINDROPS_HEIGHTWISE = 10;\r\nconst RAINDROP_COLOR = '#788';\r\n\r\nclass Raindrop {\r\n  private createdDate: number;\r\n  public y = 0;\r\n\r\n  constructor(\r\n    private ctx: CanvasRenderingContext2D,\r\n    private canvasHeight: number,\r\n    public x: number,\r\n    public height: number\r\n  ) {\r\n    this.createdDate = Date.now();\r\n  }\r\n\r\n  tick(now: number) {\r\n    const timeDelta = now - this.createdDate;\r\n    this.y = Math.floor(\r\n      (timeDelta / TIME_TO_FALL) * this.canvasHeight * 0.75 +\r\n        this.canvasHeight * 0.25\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { ctx, x, y, height } = this;\r\n\r\n    ctx.strokeStyle = RAINDROP_COLOR;\r\n    ctx.lineWidth = 1;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y);\r\n    ctx.lineTo(x, y + height);\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nexport class Rainfall {\r\n  private raindrops: Raindrop[] = [];\r\n  private raindropHeight: number;\r\n  public canvasWidth: number;\r\n  public canvasHeight: number;\r\n\r\n  constructor(private ctx: CanvasRenderingContext2D) {\r\n    this.canvasWidth = ctx.canvas.width;\r\n    this.canvasHeight = ctx.canvas.height;\r\n    this.raindropHeight = Math.floor(\r\n      (this.canvasHeight * 0.5) / RAINDROPS_HEIGHTWISE\r\n    );\r\n  }\r\n\r\n  tick() {\r\n    const { raindrops, canvasHeight } = this;\r\n    const now = Date.now();\r\n\r\n    for (let i = raindrops.length - 1; i >= 0; i--) {\r\n      const raindrop = raindrops[i];\r\n      raindrop.tick(now);\r\n\r\n      // remove raindrops that have fallen out of view\r\n      if (raindrop.y >= canvasHeight * 0.75) {\r\n        raindrops.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  add() {\r\n    const { ctx, canvasWidth, canvasHeight, raindrops, raindropHeight } = this;\r\n\r\n    const startingX = Math.random() * (canvasWidth / 3 - 1) + canvasWidth / 3;\r\n\r\n    raindrops.push(new Raindrop(ctx, canvasHeight, startingX, raindropHeight));\r\n  }\r\n\r\n  render() {\r\n    this.raindrops.forEach(raindrop => raindrop.render());\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst WALL_START_COLOR = '#181623';\r\nconst WALL_END_COLOR = '#111019';\r\n\r\nexport class Wall extends Renderer {\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const { ctx, canvasWidth, canvasHeight } = this;\r\n\r\n    const linearGradient = this.ctx.createLinearGradient(0, 0, 0, canvasHeight);\r\n    linearGradient.addColorStop(0, WALL_START_COLOR);\r\n    linearGradient.addColorStop(1, WALL_END_COLOR);\r\n    ctx.fillStyle = linearGradient;\r\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n  }\r\n}\r\n","export type CornerRadii = {\r\n  tl: number;\r\n  tr: number;\r\n  br: number;\r\n  bl: number;\r\n};\r\n\r\nconst defaultCornerRadii = {\r\n  tl: 0,\r\n  tr: 0,\r\n  br: 0,\r\n  bl: 0\r\n};\r\n\r\nexport function roundedRect(\r\n  ctx: CanvasRenderingContext2D,\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number,\r\n  radius: CornerRadii = defaultCornerRadii,\r\n  stroke = false\r\n) {\r\n  ctx.beginPath();\r\n\r\n  ctx.moveTo(x + radius.tl, y);\r\n  ctx.lineTo(x + width - radius.tr, y);\r\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n\r\n  ctx.lineTo(x + width, y + height - radius.br);\r\n  ctx.quadraticCurveTo(\r\n    x + width,\r\n    y + height,\r\n    x + width - radius.br,\r\n    y + height\r\n  );\r\n\r\n  ctx.lineTo(x + radius.bl, y + height);\r\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n\r\n  ctx.lineTo(x, y + radius.tl);\r\n  ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n\r\n  ctx.closePath();\r\n  ctx.fill();\r\n  stroke && ctx.stroke();\r\n}\r\n\r\nexport function distanceBetween(\r\n  point1: { x: number; y: number },\r\n  point2: { x: number; y: number }\r\n) {\r\n  return Math.sqrt(\r\n    Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2)\r\n  );\r\n}\r\n\r\n// where 0 degrees corresponds to positive direction of x-axis\r\nexport function radiansBetween(\r\n  point1: { x: number; y: number },\r\n  point2: { x: number; y: number }\r\n) {\r\n  const deltaX = point2.x - point1.x;\r\n  const deltaY = point2.y - point1.y;\r\n  return Math.atan2(deltaY, deltaX);\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { roundedRect, CornerRadii } from '../utils';\r\n\r\nconst WINDOW_FRAME_COLOR = '#3D1A1E';\r\nconst WINDOW_DECORATION_COLOR = '#682634';\r\n\r\nexport class Window extends Renderer {\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const {\r\n      ctx,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight,\r\n      windowFrameThickness\r\n    } = this;\r\n\r\n    ctx.fillStyle = WINDOW_FRAME_COLOR;\r\n\r\n    // window trim\r\n    ctx.fillRect(\r\n      oneThirdCanvasWidth - windowFrameThickness,\r\n      oneHalfCanvasHeight / 2 - windowFrameThickness,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    // make a hole\r\n    ctx.clearRect(\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight / 2,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight\r\n    );\r\n\r\n    // window muntin\r\n    const muntinWidth = Math.floor(windowFrameThickness / 2);\r\n\r\n    const topLeftX = (oneThirdCanvasWidth * 4) / 3 - (muntinWidth * 2) / 3;\r\n    const topRightX = (oneThirdCanvasWidth * 5) / 3 - muntinWidth / 3;\r\n    const topY = oneHalfCanvasHeight / 2 - windowFrameThickness;\r\n\r\n    const leftX = oneThirdCanvasWidth - windowFrameThickness;\r\n    const leftTopY = (oneHalfCanvasHeight * 5) / 6 - (muntinWidth * 2) / 3;\r\n    const leftBottomY = (oneHalfCanvasHeight * 7) / 6 - muntinWidth / 3;\r\n\r\n    ctx.fillRect(\r\n      topLeftX,\r\n      topY,\r\n      muntinWidth,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    ctx.fillRect(\r\n      topRightX,\r\n      topY,\r\n      muntinWidth,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    ctx.fillRect(\r\n      leftX,\r\n      leftTopY,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      muntinWidth\r\n    );\r\n\r\n    ctx.fillRect(\r\n      leftX,\r\n      leftBottomY,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      muntinWidth\r\n    );\r\n\r\n    ctx.fillStyle = WINDOW_DECORATION_COLOR;\r\n\r\n    // window head\r\n    ctx.fillRect(\r\n      oneThirdCanvasWidth - windowFrameThickness * 2,\r\n      oneHalfCanvasHeight / 2 - windowFrameThickness * 2,\r\n      oneThirdCanvasWidth + windowFrameThickness * 4,\r\n      windowFrameThickness - 1\r\n    );\r\n\r\n    // window stool\r\n    const windowSillCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: 0,\r\n      bl: this.roundedRadius,\r\n      br: this.roundedRadius\r\n    };\r\n\r\n    roundedRect(\r\n      ctx,\r\n      oneThirdCanvasWidth - windowFrameThickness * 2,\r\n      (oneHalfCanvasHeight * 3) / 2 + windowFrameThickness + 1,\r\n      oneThirdCanvasWidth + windowFrameThickness * 4,\r\n      windowFrameThickness,\r\n      windowSillCornerRadii\r\n    );\r\n\r\n    // trim decoration\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = WINDOW_DECORATION_COLOR;\r\n    ctx.rect(\r\n      oneThirdCanvasWidth - (windowFrameThickness * 2) / 3,\r\n      oneHalfCanvasHeight / 2 - (windowFrameThickness * 2) / 3,\r\n      oneThirdCanvasWidth + (windowFrameThickness * 4) / 3,\r\n      oneHalfCanvasHeight + (windowFrameThickness * 4) / 3\r\n    );\r\n    ctx.stroke();\r\n\r\n    ctx.rect(\r\n      oneThirdCanvasWidth - (windowFrameThickness * 5) / 9,\r\n      oneHalfCanvasHeight / 2 - (windowFrameThickness * 5) / 9,\r\n      oneThirdCanvasWidth + (windowFrameThickness * 10) / 9,\r\n      oneHalfCanvasHeight + (windowFrameThickness * 10) / 9\r\n    );\r\n    ctx.stroke();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst WOOD_DECORATION_COLOR = '#091c1b';\r\nconst STEREO_COLOR = '#222';\r\nconst STEREO_DETAIL_COLOR = '#444';\r\nconst STEREO_DARK_COLOR = '#111';\r\n\r\nexport class Dresser extends Renderer {\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  dresser() {\r\n    const { ctx, canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    const x = (canvasWidth * 2) / 3 + windowFrameThickness * 5;\r\n    const y = (canvasHeight * 2) / 3;\r\n\r\n    // dresser body\r\n    ctx.fillStyle = WOOD_COLOR;\r\n    ctx.fillRect(x, y, canvasWidth, canvasHeight);\r\n\r\n    // dresser detail rectangle\r\n    ctx.strokeStyle = WOOD_DECORATION_COLOR;\r\n    ctx.lineWidth = 3;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      x + windowFrameThickness,\r\n      y + windowFrameThickness,\r\n      canvasWidth,\r\n      canvasHeight\r\n    );\r\n    ctx.stroke();\r\n\r\n    // dresser top handle\r\n    const dresserWidth = canvasWidth - (x + windowFrameThickness);\r\n    const dresserHandleMidpoint =\r\n      x + windowFrameThickness + (dresserWidth * 3) / 5;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(dresserHandleMidpoint, y + windowFrameThickness * 2.5);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 2.5);\r\n    ctx.lineWidth = (windowFrameThickness * 2) / 3;\r\n    ctx.stroke();\r\n\r\n    // dresser horizontal detail line\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + windowFrameThickness, y + windowFrameThickness * 6);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 6);\r\n    ctx.lineWidth = 2;\r\n    ctx.stroke();\r\n\r\n    // dresser bottom handle\r\n    ctx.beginPath();\r\n    ctx.moveTo(dresserHandleMidpoint, y + windowFrameThickness * 7.5);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 7.5);\r\n    ctx.lineWidth = (windowFrameThickness * 2) / 3;\r\n    ctx.stroke();\r\n  }\r\n\r\n  stereo() {\r\n    const { ctx, canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    const dresserX = (canvasWidth * 2) / 3 + windowFrameThickness * 5;\r\n    const dresserY = (canvasHeight * 2) / 3;\r\n\r\n    // speaker body\r\n    const speakerWidth = windowFrameThickness * 3.5;\r\n    const speakerHeight = canvasHeight * 0.2;\r\n    const speakerX = dresserX + windowFrameThickness * 4;\r\n    const speakerY = dresserY - speakerHeight;\r\n\r\n    ctx.fillStyle = STEREO_COLOR;\r\n    ctx.fillRect(speakerX, speakerY, speakerWidth, speakerHeight);\r\n\r\n    // mid driver\r\n    const driverRadius = Math.min(speakerWidth, speakerHeight) / 8;\r\n    const driverCenterX = speakerX + speakerWidth / 2;\r\n    const driverCenterY = speakerY + driverRadius * 2;\r\n\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(driverCenterX, driverCenterY, driverRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // dividers\r\n    const dividerWidth = windowFrameThickness / 10;\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n\r\n    ctx.fillRect(\r\n      speakerX - dividerWidth,\r\n      speakerY,\r\n      dividerWidth,\r\n      speakerHeight\r\n    );\r\n\r\n    ctx.fillRect(\r\n      speakerX + speakerWidth,\r\n      speakerY,\r\n      dividerWidth,\r\n      speakerHeight\r\n    );\r\n\r\n    // deck\r\n    const deckX = speakerX + speakerWidth + dividerWidth;\r\n    const deckHeight = speakerHeight * 0.8;\r\n    const deckY = speakerY + speakerHeight - deckHeight;\r\n\r\n    ctx.fillStyle = STEREO_COLOR;\r\n    ctx.fillRect(deckX, deckY, canvasWidth, deckHeight);\r\n\r\n    const deckDetailX = deckX + windowFrameThickness / 2;\r\n\r\n    ctx.fillStyle = STEREO_DETAIL_COLOR;\r\n    ctx.strokeStyle = STEREO_DARK_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 8;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      deckDetailX,\r\n      deckY + windowFrameThickness * 1.5,\r\n      canvasWidth,\r\n      deckHeight * 0.25\r\n    );\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n    ctx.fillRect(\r\n      deckDetailX,\r\n      deckY + windowFrameThickness,\r\n      canvasWidth,\r\n      windowFrameThickness / 4\r\n    );\r\n\r\n    const bottomDetailY = deckY + deckHeight - windowFrameThickness * 0.8;\r\n    ctx.fillRect(\r\n      deckX + windowFrameThickness * 2,\r\n      bottomDetailY,\r\n      canvasWidth,\r\n      windowFrameThickness / 4\r\n    );\r\n\r\n    ctx.fillStyle = STEREO_DETAIL_COLOR;\r\n    const knobRadius = windowFrameThickness / 2;\r\n    const knobX = deckX + windowFrameThickness;\r\n    const knobY = bottomDetailY + windowFrameThickness / 8;\r\n    ctx.beginPath();\r\n    ctx.arc(knobX, knobY, knobRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.clip();\r\n    ctx.save();\r\n\r\n    ctx.translate(knobX, knobY);\r\n    const knobMarkerAngle = Math.PI * 0.75;\r\n    const knobMarkerStart = {\r\n      x: Math.sin(knobMarkerAngle) * (knobRadius - windowFrameThickness / 4),\r\n      y: Math.cos(knobMarkerAngle) * (knobRadius - windowFrameThickness / 4)\r\n    };\r\n    const knobMarkerEnd = {\r\n      x: Math.sin(knobMarkerAngle) * knobRadius * 2,\r\n      y: Math.cos(knobMarkerAngle) * knobRadius * 2\r\n    };\r\n    ctx.lineWidth = windowFrameThickness / 8;\r\n    ctx.lineCap = 'round';\r\n    ctx.beginPath();\r\n    ctx.moveTo(knobMarkerStart.x, knobMarkerStart.y);\r\n    ctx.lineTo(knobMarkerEnd.x, knobMarkerEnd.y);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.dresser();\r\n    this.stereo();\r\n    this.tick();\r\n  }\r\n\r\n  tick(isBeat = false) {\r\n    const { ctx, canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    const dresserX = (canvasWidth * 2) / 3 + windowFrameThickness * 5;\r\n    const dresserY = (canvasHeight * 2) / 3;\r\n\r\n    // speaker body\r\n    const speakerWidth = windowFrameThickness * 3.5;\r\n    const speakerHeight = canvasHeight * 0.2;\r\n    const speakerX = dresserX + windowFrameThickness * 4;\r\n    const speakerY = dresserY - speakerHeight;\r\n\r\n    // mid driver\r\n    const driverRadius = Math.min(speakerWidth, speakerHeight) / 8;\r\n    const driverCenterX = speakerX + speakerWidth / 2;\r\n\r\n    // speaker woofer\r\n    const wooferRadius = Math.min(speakerWidth, speakerHeight) / 2.5;\r\n    const wooferCenterY = Math.max(\r\n      speakerY + wooferRadius + driverRadius * 4,\r\n      speakerY + speakerHeight - (wooferRadius + driverRadius * 2)\r\n    );\r\n\r\n    ctx.strokeStyle = STEREO_DETAIL_COLOR;\r\n    ctx.fillStyle = STEREO_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 8;\r\n    ctx.beginPath();\r\n    ctx.arc(driverCenterX, wooferCenterY, wooferRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      driverCenterX,\r\n      wooferCenterY,\r\n      isBeat ? wooferRadius * 0.63 : wooferRadius * 0.6,\r\n      0,\r\n      Math.PI * 2\r\n    );\r\n    ctx.fill();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { distanceBetween } from '../utils';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\n\r\ntype Picture = {\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\nexport class Pictures extends Renderer {\r\n  pictures: Picture[] = [];\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    const { oneThirdCanvasWidth, windowFrameThickness } = this;\r\n\r\n    // X & Y coords and dimensions for each picture\r\n    this.pictures.push({\r\n      x: (oneThirdCanvasWidth * 3) / 4 - windowFrameThickness * 4,\r\n      y: -windowFrameThickness,\r\n      width: windowFrameThickness * 4,\r\n      height: windowFrameThickness * 5\r\n    });\r\n\r\n    this.pictures.push({\r\n      x: this.pictures[0].x - windowFrameThickness * 7,\r\n      y: windowFrameThickness * 2,\r\n      width: windowFrameThickness * 5,\r\n      height: windowFrameThickness * 4\r\n    });\r\n\r\n    this.pictures.push({\r\n      x: this.pictures[1].x + windowFrameThickness * 2,\r\n      y:\r\n        this.pictures[1].y +\r\n        this.pictures[1].height +\r\n        windowFrameThickness * 1.5,\r\n      width: windowFrameThickness * 6,\r\n      height: windowFrameThickness * 8\r\n    });\r\n  }\r\n\r\n  graph() {\r\n    const { ctx, windowFrameThickness } = this;\r\n    const { x, y, width, height } = this.pictures[0];\r\n\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.clip();\r\n\r\n    const gradient1 = ctx.createLinearGradient(x, y, x, y + height);\r\n    gradient1.addColorStop(0, '#24131f');\r\n    gradient1.addColorStop(1, '#051b1f');\r\n    ctx.fillStyle = gradient1;\r\n    ctx.fill();\r\n\r\n    const nodes: Array<{ x: number; y: number }> = [];\r\n    const nodeSize = windowFrameThickness / 6;\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n      nodes.push({\r\n        x: Math.floor(Math.random() * width + x),\r\n        y: Math.floor(Math.random() * height + y)\r\n      });\r\n    }\r\n\r\n    const nodeColor = '#703c3a';\r\n    ctx.fillStyle = nodeColor;\r\n    ctx.strokeStyle = nodeColor;\r\n    ctx.lineWidth = 1;\r\n\r\n    while (nodes.length) {\r\n      const currentNode = nodes.pop()!;\r\n      ctx.beginPath();\r\n      ctx.arc(currentNode.x, currentNode.y, nodeSize / 2, 0, Math.PI * 2);\r\n      ctx.fill();\r\n\r\n      for (const otherNode of nodes) {\r\n        if (distanceBetween(currentNode, otherNode) < height / 4) {\r\n          ctx.beginPath();\r\n          ctx.moveTo(currentNode.x, currentNode.y);\r\n          ctx.lineTo(otherNode.x, otherNode.y);\r\n          ctx.stroke();\r\n        }\r\n      }\r\n    }\r\n\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 1.5;\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  orbits() {\r\n    const { ctx, windowFrameThickness } = this;\r\n    const { x, y, width, height } = this.pictures[1];\r\n\r\n    ctx.save();\r\n\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.clip();\r\n\r\n    const gradient2 = ctx.createLinearGradient(x, y, x, y + height);\r\n    gradient2.addColorStop(0, '#556e53');\r\n    gradient2.addColorStop(1, '#29435c');\r\n    ctx.fillStyle = gradient2;\r\n    ctx.fill();\r\n\r\n    // sun\r\n    const color = '#879591';\r\n    ctx.fillStyle = color;\r\n    ctx.strokeStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(x + width / 2, y + height / 2, height / 14, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // orbits\r\n    for (\r\n      let radius = Math.floor(height / 6);\r\n      radius <= height / 2;\r\n      radius += windowFrameThickness / 4\r\n    ) {\r\n      ctx.beginPath();\r\n      ctx.arc(x + width / 2, y + height / 2, radius, 0, Math.PI * 2);\r\n      ctx.stroke();\r\n\r\n      const randomAngle = Math.random() * Math.PI * 2;\r\n      const planetX = x + width / 2 + Math.cos(randomAngle) * radius;\r\n      const planetY = y + height / 2 + Math.sin(randomAngle) * radius;\r\n      const randomRadius = Math.random() * (width / 64) + width / 192;\r\n      ctx.beginPath();\r\n      ctx.arc(planetX, planetY, randomRadius, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = '#152a38';\r\n    ctx.lineWidth = windowFrameThickness / 1.2;\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  stars() {\r\n    const { ctx, windowFrameThickness } = this;\r\n    const { x, y, width, height } = this.pictures[2];\r\n\r\n    ctx.save();\r\n\r\n    // background\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.clip();\r\n\r\n    const gradient3 = ctx.createLinearGradient(x, y, x, y + height);\r\n    gradient3.addColorStop(0, '#09325E');\r\n    gradient3.addColorStop(0.75, '#2A2A47');\r\n    ctx.fillStyle = gradient3;\r\n    ctx.fill();\r\n\r\n    // sky\r\n    ctx.fillStyle = '#F5E7F8';\r\n    const starCount = 60;\r\n\r\n    for (let i = 0; i < starCount; i++) {\r\n      const starX = Math.floor(Math.random() * width + x);\r\n      const starY = Math.floor(Math.random() * height + y);\r\n      const radius = Math.floor(Math.random() * 2 + 1);\r\n      ctx.beginPath();\r\n      ctx.arc(starX, starY, radius, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = '#0D0B21';\r\n    ctx.lineWidth = windowFrameThickness / 1.5;\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.graph();\r\n    this.orbits();\r\n    this.stars();\r\n\r\n    this.pictures = [];\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { roundedRect, CornerRadii } from '../utils';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst TABLE_DECORATION_COLOR = '#06151A';\r\nconst BOWL_COLOR = '#3e3e3e';\r\nconst BOWL_BASE_COLOR = '#1e1e1e';\r\nconst FRUIT_COLORS = ['#564837', '#713C3A'];\r\nconst FRUIT_STEM_COLOR = '#04070F';\r\n\r\nexport class Table extends Renderer {\r\n  y: number;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    this.y = this.canvasHeight * 0.7;\r\n  }\r\n\r\n  top() {\r\n    const {\r\n      ctx,\r\n      y,\r\n      windowFrameThickness,\r\n      oneThirdCanvasWidth,\r\n      roundedRadius\r\n    } = this;\r\n\r\n    const width = oneThirdCanvasWidth * 0.7;\r\n    const thickness = windowFrameThickness * 1.35;\r\n\r\n    const tableCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: roundedRadius,\r\n      br: 0,\r\n      bl: 0\r\n    };\r\n\r\n    ctx.fillStyle = WOOD_COLOR;\r\n    roundedRect(ctx, 0, y, width, thickness, tableCornerRadii);\r\n\r\n    ctx.fillStyle = TABLE_DECORATION_COLOR;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      0,\r\n      y + thickness - windowFrameThickness / 4,\r\n      width,\r\n      windowFrameThickness / 4\r\n    );\r\n    ctx.fill();\r\n  }\r\n\r\n  leg() {\r\n    const {\r\n      ctx,\r\n      y,\r\n      windowFrameThickness,\r\n      canvasHeight,\r\n      oneThirdCanvasWidth\r\n    } = this;\r\n\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n    ctx.lineWidth = windowFrameThickness * 1.5;\r\n    ctx.beginPath();\r\n    ctx.moveTo(oneThirdCanvasWidth * 0.5, y);\r\n    ctx.lineTo(oneThirdCanvasWidth * 0.5, canvasHeight);\r\n    ctx.stroke();\r\n  }\r\n\r\n  centerpiece() {\r\n    const {\r\n      ctx,\r\n      y,\r\n      windowFrameThickness,\r\n      canvasWidth,\r\n      oneThirdCanvasWidth\r\n    } = this;\r\n\r\n    const bowlCenterX = oneThirdCanvasWidth * 0.25;\r\n    const bowlWidth = oneThirdCanvasWidth * 0.3;\r\n    const bowlHeight = windowFrameThickness * 2;\r\n\r\n    // fruit\r\n    const fruits = [\r\n      {\r\n        xOffset: (bowlWidth - bowlWidth * 0.4) / 4,\r\n        y: y - bowlHeight,\r\n        radius: bowlWidth * 0.2,\r\n        color: FRUIT_COLORS[0],\r\n        stemAngle: Math.PI * 0.9\r\n      },\r\n      {\r\n        xOffset: -(bowlWidth - bowlWidth * 0.4) / 4,\r\n        y: y - bowlHeight + bowlHeight / 8,\r\n        radius: bowlWidth * 0.2,\r\n        color: FRUIT_COLORS[1],\r\n        stemAngle: Math.PI * 1.1\r\n      }\r\n    ];\r\n\r\n    for (const fruit of fruits) {\r\n      ctx.fillStyle = fruit.color;\r\n      ctx.beginPath();\r\n      ctx.arc(\r\n        bowlCenterX + fruit.xOffset,\r\n        fruit.y,\r\n        fruit.radius,\r\n        0,\r\n        Math.PI * 2\r\n      );\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = FRUIT_STEM_COLOR;\r\n    ctx.lineCap = 'round';\r\n    ctx.lineWidth = 2;\r\n\r\n    for (const fruit of fruits) {\r\n      ctx.save();\r\n      ctx.translate(bowlCenterX + fruit.xOffset, fruit.y);\r\n      const stemStart = {\r\n        x: Math.sin(fruit.stemAngle) * fruits[1].radius * 0.9,\r\n        y: Math.cos(fruit.stemAngle) * fruits[1].radius * 0.9\r\n      };\r\n      const stemEnd = {\r\n        x: Math.sin(fruit.stemAngle) * fruits[1].radius * 1.1,\r\n        y: Math.cos(fruit.stemAngle) * fruits[1].radius * 1.1\r\n      };\r\n      ctx.beginPath();\r\n      ctx.moveTo(stemStart.x, stemStart.y);\r\n      ctx.lineTo(stemEnd.x, stemEnd.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    }\r\n\r\n    // bowl\r\n    const bowlCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: 0,\r\n      br: oneThirdCanvasWidth * 0.1,\r\n      bl: oneThirdCanvasWidth * 0.1\r\n    };\r\n\r\n    const bowlBaseHeight = bowlHeight / 8;\r\n    const bowlBaseWidth = bowlWidth * 0.5;\r\n\r\n    ctx.fillStyle = BOWL_BASE_COLOR;\r\n    ctx.fillRect(\r\n      bowlCenterX - bowlBaseWidth / 2,\r\n      y - bowlHeight - bowlBaseHeight,\r\n      bowlBaseWidth,\r\n      bowlHeight + bowlBaseHeight\r\n    );\r\n\r\n    ctx.fillStyle = BOWL_COLOR;\r\n    roundedRect(\r\n      ctx,\r\n      bowlCenterX - bowlWidth / 2,\r\n      y - bowlHeight - bowlBaseHeight,\r\n      bowlWidth,\r\n      bowlHeight,\r\n      bowlCornerRadii\r\n    );\r\n\r\n    ctx.save();\r\n    ctx.clip();\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = TABLE_DECORATION_COLOR;\r\n    const bowlDecorationY = y - bowlHeight - bowlBaseHeight + bowlHeight / 6;\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, bowlDecorationY);\r\n    ctx.lineTo(canvasWidth, bowlDecorationY);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.leg();\r\n    this.top();\r\n    this.centerpiece();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst CLOCK_INNER_COLOR = '#4B4721';\r\nconst CLOCK_HANDS_COLOR = '#192124';\r\nconst CLOCK_DECORATION_COLOR = '#06151A';\r\n\r\nexport class Clock extends Renderer {\r\n  private clockSize: number;\r\n  private clockCoords: { x: number; y: number };\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n    this.clockSize = this.windowFrameThickness * 5;\r\n    const x = Math.max(\r\n      this.canvasWidth * 0.7,\r\n      (this.canvasWidth * 2) / 3 + this.windowFrameThickness * 8\r\n    );\r\n    const y = this.canvasHeight / 5;\r\n    this.clockCoords = { x, y };\r\n  }\r\n\r\n  face() {\r\n    const { ctx, clockSize, clockCoords } = this;\r\n    const { x, y } = clockCoords;\r\n\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n\r\n    // clock frame\r\n    ctx.lineWidth = this.windowFrameThickness / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 1.75, 0, Math.PI * 2, true);\r\n    ctx.stroke();\r\n\r\n    ctx.strokeStyle = CLOCK_DECORATION_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2, 0, Math.PI * 2, true);\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2, 0, Math.PI * 2, true);\r\n    ctx.fillStyle = CLOCK_INNER_COLOR;\r\n    ctx.fill();\r\n\r\n    // markings\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = CLOCK_HANDS_COLOR;\r\n\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n\r\n    for (let i = 1; i <= 60; i++) {\r\n      const angle = (i * Math.PI) / 30;\r\n\r\n      const start = {\r\n        x: Math.sin(angle) * (clockSize / 2 - clockSize / 20),\r\n        y: Math.cos(angle) * (clockSize / 2 - clockSize / 20)\r\n      };\r\n      const end = {\r\n        x: Math.sin(angle) * (clockSize / 2 - clockSize / 15),\r\n        y: Math.cos(angle) * (clockSize / 2 - clockSize / 15)\r\n      };\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(start.x, start.y);\r\n      ctx.lineTo(end.x, end.y);\r\n      ctx.stroke();\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  hands() {\r\n    const { ctx, clockSize, clockCoords } = this;\r\n    const { x, y } = clockCoords;\r\n\r\n    // fill in hands area so we can redraw them\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2 - clockSize / 15, 0, Math.PI * 2, true);\r\n    ctx.fillStyle = CLOCK_INNER_COLOR;\r\n    ctx.fill();\r\n\r\n    ctx.lineWidth = clockSize / 40;\r\n    ctx.lineCap = 'round';\r\n    ctx.strokeStyle = CLOCK_HANDS_COLOR;\r\n\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n\r\n    const now = new Date();\r\n    const hours = now.getHours();\r\n    const minutes = now.getMinutes();\r\n    const seconds = now.getSeconds();\r\n\r\n    // hour hand\r\n    ctx.save();\r\n    ctx.rotate((Math.PI / 6) * (hours + minutes / 60 + seconds / 3600));\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 4);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    // minute hand\r\n    ctx.save();\r\n    ctx.rotate((Math.PI / 30) * (minutes + seconds / 60));\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 2.75);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    // second hand\r\n    ctx.lineWidth = clockSize / 100;\r\n    ctx.save();\r\n    ctx.rotate((Math.PI / 30) * seconds);\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 2.7);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n    this.face();\r\n    this.hands();\r\n  }\r\n\r\n  tick() {\r\n    this.hands();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst CAT_COLOR = '#000';\r\n\r\nexport class Cat extends Renderer {\r\n  private isWagging = false;\r\n  private prevTailAngle = -Math.PI / 2;\r\n  private headRadius: number;\r\n  private bodyHeight: number;\r\n  private bodyWidth: number;\r\n  private x: number;\r\n  private createdTimestamp: number;\r\n  private tailWidth: number;\r\n  private tailY: number;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    const {\r\n      windowFrameThickness,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight\r\n    } = this;\r\n\r\n    this.x = oneThirdCanvasWidth * 2 - windowFrameThickness * 1.2;\r\n    this.headRadius = windowFrameThickness;\r\n    this.bodyHeight = windowFrameThickness * 3;\r\n    this.bodyWidth = windowFrameThickness * 2.2;\r\n    this.createdTimestamp = Date.now();\r\n    this.tailWidth = windowFrameThickness / 2;\r\n    this.tailY =\r\n      (oneHalfCanvasHeight * 3) / 2 + windowFrameThickness - this.tailWidth / 2;\r\n  }\r\n\r\n  head() {\r\n    const { ctx, oneHalfCanvasHeight, x, headRadius } = this;\r\n    const y = (oneHalfCanvasHeight * 3) / 2 - this.bodyHeight - this.headRadius;\r\n\r\n    ctx.fillStyle = CAT_COLOR;\r\n    ctx.strokeStyle = CAT_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, headRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // ears\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n\r\n    ctx.lineWidth = 5;\r\n    ctx.lineJoin = 'round';\r\n\r\n    const rightEar = {\r\n      start: {\r\n        x: Math.sin(Math.PI * 0.85) * headRadius,\r\n        y: Math.cos(Math.PI * 0.85) * headRadius\r\n      },\r\n      point: {\r\n        x: Math.sin(Math.PI * 0.8) * headRadius * 1.4,\r\n        y: Math.cos(Math.PI * 0.8) * headRadius * 1.4\r\n      },\r\n      end: {\r\n        x: Math.sin(Math.PI * 0.7) * headRadius,\r\n        y: Math.cos(Math.PI * 0.7) * headRadius\r\n      }\r\n    };\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(rightEar.start.x, rightEar.start.y);\r\n    ctx.lineTo(rightEar.point.x, rightEar.point.y);\r\n    ctx.lineTo(rightEar.end.x, rightEar.end.y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    const leftEar = {\r\n      start: {\r\n        x: Math.sin(Math.PI * 1.2) * headRadius,\r\n        y: Math.cos(Math.PI * 1.2) * headRadius\r\n      },\r\n      point: {\r\n        x: Math.sin(Math.PI * 1.22) * headRadius * 1.5,\r\n        y: Math.cos(Math.PI * 1.22) * headRadius * 1.5\r\n      },\r\n      end: {\r\n        x: Math.sin(Math.PI * 1.3) * headRadius,\r\n        y: Math.cos(Math.PI * 1.3) * headRadius\r\n      }\r\n    };\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(leftEar.start.x, leftEar.start.y);\r\n    ctx.lineTo(leftEar.point.x, leftEar.point.y);\r\n    ctx.lineTo(leftEar.end.x, leftEar.end.y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  body() {\r\n    const {\r\n      ctx,\r\n      oneHalfCanvasHeight,\r\n      windowFrameThickness,\r\n      x,\r\n      headRadius,\r\n      bodyWidth,\r\n      bodyHeight\r\n    } = this;\r\n    const y = (oneHalfCanvasHeight * 3) / 2 - bodyHeight;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y - headRadius / 2);\r\n    ctx.quadraticCurveTo(\r\n      x - bodyWidth * 0.75,\r\n      y + bodyHeight / 4,\r\n      x - bodyWidth / 3,\r\n      y + bodyHeight + windowFrameThickness\r\n    );\r\n    ctx.lineTo(x + bodyWidth / 2, y + bodyHeight + windowFrameThickness);\r\n    ctx.quadraticCurveTo(\r\n      x + bodyWidth * 1.2,\r\n      y + bodyHeight + windowFrameThickness,\r\n      x + bodyWidth / 3,\r\n      y - headRadius / 3\r\n    );\r\n    ctx.closePath();\r\n    ctx.fill();\r\n\r\n    // left leg\r\n    ctx.beginPath();\r\n    ctx.moveTo(x - bodyWidth / 4, y + bodyHeight * 0.3);\r\n    ctx.quadraticCurveTo(\r\n      x - bodyWidth,\r\n      y + bodyHeight,\r\n      x - bodyWidth / 3,\r\n      y + bodyHeight + windowFrameThickness\r\n    );\r\n    ctx.lineTo(x + bodyWidth / 2, y + bodyHeight + windowFrameThickness);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n  }\r\n\r\n  tail() {\r\n    const { ctx, tailWidth, x, bodyWidth, tailY } = this;\r\n\r\n    ctx.lineWidth = tailWidth;\r\n    ctx.lineCap = 'round';\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, tailY);\r\n    ctx.lineTo(x - bodyWidth, tailY);\r\n    ctx.stroke();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const { ctx, canvasWidth, canvasHeight } = this;\r\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n    this.head();\r\n    this.body();\r\n    this.tail();\r\n  }\r\n\r\n  tick() {\r\n    const {\r\n      ctx,\r\n      canvasWidth,\r\n      canvasHeight,\r\n      createdTimestamp,\r\n      x,\r\n      bodyWidth,\r\n      tailY\r\n    } = this;\r\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n    this.head();\r\n    this.body();\r\n\r\n    // tail wag\r\n    const timeDelta = Date.now() - createdTimestamp;\r\n\r\n    // oscillate between angles\r\n    let nextTailAngle =\r\n      -Math.PI / 2 + (Math.sin(timeDelta / 200) * -Math.PI) / 20;\r\n\r\n    if (this.prevTailAngle > -Math.PI / 2 && nextTailAngle < -Math.PI / 2) {\r\n      // each oscillation has a chance of producing a tail wag\r\n      this.isWagging = Math.random() < 0.1;\r\n    }\r\n\r\n    this.prevTailAngle = nextTailAngle;\r\n\r\n    if (nextTailAngle > -Math.PI / 2) {\r\n      nextTailAngle = -Math.PI / 2;\r\n    }\r\n\r\n    if (!this.isWagging) {\r\n      this.tail();\r\n      return;\r\n    }\r\n\r\n    ctx.save();\r\n    ctx.translate(x, tailY);\r\n\r\n    const tailEnd = {\r\n      x: Math.sin(nextTailAngle) * bodyWidth,\r\n      y: Math.cos(nextTailAngle) * bodyWidth\r\n    };\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 0);\r\n    ctx.quadraticCurveTo(\r\n      -bodyWidth,\r\n      (-Math.cos(nextTailAngle) * bodyWidth) / 10,\r\n      tailEnd.x,\r\n      tailEnd.y\r\n    );\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { radiansBetween } from '../utils';\r\n\r\nconst STEM_COLOR = '#8e8e8e';\r\nconst LIGHT_COLOR = 'rgba(252, 243, 126, 0.085)';\r\n\r\ntype ShadeCoords = { x: number; y: number };\r\n\r\nexport class Lamp extends Renderer {\r\n  private stemX: number;\r\n  private stemHeight: number;\r\n  private lampWidth: number;\r\n  private shadeTopLeft: ShadeCoords;\r\n  private shadeTopRight: ShadeCoords;\r\n  private shadeBottomRight: ShadeCoords;\r\n  private shadeBottomLeft: ShadeCoords;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    const { canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    this.stemX = (canvasWidth * 7) / 11;\r\n    this.stemHeight = canvasHeight / 5;\r\n    this.lampWidth = windowFrameThickness * 3.5;\r\n\r\n    this.shadeTopLeft = {\r\n      x: this.stemX - windowFrameThickness / 5,\r\n      y: this.stemHeight + windowFrameThickness\r\n    };\r\n    this.shadeTopRight = {\r\n      x: this.stemX + windowFrameThickness / 5,\r\n      y: this.stemHeight + windowFrameThickness\r\n    };\r\n    this.shadeBottomRight = {\r\n      x: this.stemX + this.lampWidth / 2,\r\n      y: this.stemHeight + windowFrameThickness * 3\r\n    };\r\n    this.shadeBottomLeft = {\r\n      x: this.stemX - this.lampWidth / 2,\r\n      y: this.stemHeight + windowFrameThickness * 3\r\n    };\r\n  }\r\n\r\n  stem() {\r\n    const { ctx, windowFrameThickness, stemX, stemHeight } = this;\r\n\r\n    ctx.strokeStyle = STEM_COLOR;\r\n    ctx.fillStyle = STEM_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 5;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(stemX, 0);\r\n    ctx.lineTo(stemX, stemHeight);\r\n    ctx.stroke();\r\n\r\n    ctx.lineWidth = 1;\r\n    ctx.fillRect(\r\n      stemX - windowFrameThickness / 5,\r\n      stemHeight - 1,\r\n      (windowFrameThickness * 2) / 5,\r\n      windowFrameThickness\r\n    );\r\n    ctx.stroke();\r\n  }\r\n\r\n  lampshade() {\r\n    const {\r\n      ctx,\r\n      shadeTopLeft,\r\n      shadeTopRight,\r\n      shadeBottomRight,\r\n      shadeBottomLeft\r\n    } = this;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(shadeTopLeft.x, shadeTopLeft.y);\r\n    ctx.lineTo(shadeTopRight.x, shadeTopRight.y);\r\n    ctx.lineTo(shadeBottomRight.x, shadeBottomRight.y);\r\n    ctx.lineTo(shadeBottomLeft.x, shadeBottomLeft.y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    // thin line of bright light color at bottom\r\n    ctx.fillStyle = '#ff7';\r\n    ctx.fillRect(\r\n      shadeBottomLeft.x,\r\n      shadeBottomLeft.y,\r\n      shadeBottomRight.x - shadeBottomLeft.x,\r\n      2\r\n    );\r\n  }\r\n\r\n  light() {\r\n    const {\r\n      ctx,\r\n      canvasHeight,\r\n      windowFrameThickness,\r\n      stemX,\r\n      stemHeight,\r\n      lampWidth,\r\n      shadeTopLeft,\r\n      shadeBottomRight,\r\n      shadeBottomLeft\r\n    } = this;\r\n\r\n    ctx.fillStyle = LIGHT_COLOR;\r\n    const lightHeight = canvasHeight - shadeBottomLeft.y;\r\n    // compensate for inverted canvas y-coords when\r\n    // getting angle between lampshade corners\r\n    const lightAngle = radiansBetween(shadeBottomLeft, {\r\n      x: shadeTopLeft.x,\r\n      y: shadeBottomLeft.y + shadeBottomLeft.y - shadeTopLeft.y\r\n    });\r\n\r\n    // light makes a right triangle with bottom of canvas so\r\n    // we can calculate its adjacent width using height and\r\n    // the angle of the lampshade\r\n    // tan θ = opposite (height) / adjacent (width)\r\n    const lightTriangleAdjacentWidth = lightHeight / Math.tan(lightAngle);\r\n\r\n    const lightBottomLeftX = shadeBottomLeft.x - lightTriangleAdjacentWidth;\r\n    const lightBottomRightX = shadeBottomRight.x + lightTriangleAdjacentWidth;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(stemX - lampWidth / 2, stemHeight + windowFrameThickness * 3);\r\n    ctx.lineTo(stemX + lampWidth / 2, stemHeight + windowFrameThickness * 3);\r\n    ctx.lineTo(lightBottomRightX, canvasHeight);\r\n    ctx.lineTo(lightBottomLeftX, canvasHeight);\r\n    ctx.fill();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.stem();\r\n    this.lampshade();\r\n    this.tick();\r\n  }\r\n\r\n  tick() {\r\n    const {\r\n      ctx,\r\n      canvasWidth,\r\n      canvasHeight,\r\n      windowFrameThickness,\r\n      stemHeight\r\n    } = this;\r\n\r\n    ctx.clearRect(\r\n      0,\r\n      // add 2 to clear under the thin line\r\n      stemHeight + windowFrameThickness * 3 + 2,\r\n      canvasWidth,\r\n      canvasHeight\r\n    );\r\n\r\n    this.light();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { Wall } from './wall';\r\nimport { Window } from './window';\r\nimport { Dresser } from './dresser';\r\nimport { Pictures } from './pictures';\r\nimport { Table } from './table';\r\nimport { Clock } from './clock';\r\n\r\nexport { Cat } from './cat';\r\nexport { Lamp } from './lamp';\r\n\r\nexport class Home extends Renderer {\r\n  wall: Wall;\r\n  window: Window;\r\n  dresser: Dresser;\r\n  pictures: Pictures;\r\n  table: Table;\r\n  clock: Clock;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    this.wall = new Wall(ctx);\r\n    this.window = new Window(ctx);\r\n    this.dresser = new Dresser(ctx);\r\n    this.pictures = new Pictures(ctx);\r\n    this.table = new Table(ctx);\r\n    this.clock = new Clock(ctx);\r\n  }\r\n\r\n  render() {\r\n    this.wall.render();\r\n    this.window.render();\r\n    this.dresser.render();\r\n    this.pictures.render();\r\n    this.table.render();\r\n    this.clock.render();\r\n  }\r\n}\r\n","import Waveform from './Waveform';\r\nimport Drummer from './Drummer';\r\nimport Halpern from './Halpern';\r\nimport Stars from './Stars';\r\nimport Rain from './Rain';\r\nimport { Props } from './VisualizationHOC';\r\n\r\nexport type QualitySettings = {\r\n  [quality: number]: { [setting: string]: any };\r\n};\r\n\r\nexport type Options = {\r\n  smoothing?: number;\r\n};\r\n\r\nexport type SelectableVisualization = {\r\n  component: React.ComponentType<Props>;\r\n  options?: Options;\r\n};\r\n\r\nconst visualizations: SelectableVisualization[] = [\r\n  {\r\n    component: Rain\r\n  },\r\n  {\r\n    component: Stars,\r\n    options: { smoothing: 128 }\r\n  },\r\n  {\r\n    component: Waveform\r\n  },\r\n  {\r\n    component: Drummer,\r\n    options: { smoothing: 64 }\r\n  },\r\n  {\r\n    component: Halpern\r\n  }\r\n];\r\n\r\nexport default visualizations;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { City } from './city';\r\nimport { Rainfall } from './rain';\r\nimport { Home, Cat, Lamp } from './home';\r\nimport { useDebouncedResize } from '../../../../utils/hooks';\r\nimport './Rain.scss';\r\n\r\nconst MIN_RAINDROPS_PER_TICK = 1;\r\nconst MAX_RAINDROPS_PER_TICK = 15;\r\n\r\nconst Rain: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  isBeat,\r\n  lowPassIntensity\r\n}) => {\r\n  // city\r\n  const cityCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const cityRef = useRef<City>();\r\n\r\n  useDebouncedResize(() => {\r\n    const cityCanvas = cityCanvasRef.current!;\r\n\r\n    const createCity = (width: number, height: number, dpi: number) => {\r\n      cityCanvas.width = width * dpi;\r\n      cityCanvas.height = height * dpi;\r\n\r\n      const ctx = cityCanvas.getContext('2d')!;\r\n      const city = new City(ctx);\r\n      cityRef.current = city;\r\n      city.render();\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createCity(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  // rain\r\n  const rainCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const rainfallRef = useRef<Rainfall>();\r\n\r\n  useDebouncedResize(() => {\r\n    const rainCanvas = rainCanvasRef.current!;\r\n\r\n    const createRain = (width: number, height: number, dpi: number) => {\r\n      rainCanvas.width = width * dpi;\r\n      rainCanvas.height = height * dpi;\r\n\r\n      const ctx = rainCanvas.getContext('2d')!;\r\n      let rainfall = rainfallRef.current;\r\n      if (rainfall == null) {\r\n        rainfallRef.current = new Rainfall(ctx);\r\n      } else {\r\n        rainfall = rainfallRef.current!;\r\n        rainfall.canvasWidth = width * dpi;\r\n        rainfall.canvasHeight = height * dpi;\r\n      }\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createRain(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  const homeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const homeRef = useRef<Home>();\r\n  const clockIntervalRef = useRef<number>();\r\n\r\n  // home\r\n  useDebouncedResize(() => {\r\n    const homeCanvas = homeCanvasRef.current!;\r\n\r\n    const createHome = (width: number, height: number, dpi: number) => {\r\n      homeCanvas.width = width * dpi;\r\n      homeCanvas.height = height * dpi;\r\n\r\n      const ctx = homeCanvas.getContext('2d')!;\r\n\r\n      const home = new Home(ctx);\r\n      homeRef.current = home;\r\n      home.render();\r\n\r\n      clockIntervalRef.current && window.clearTimeout(clockIntervalRef.current);\r\n      clockIntervalRef.current = window.setInterval(\r\n        () => home.clock.tick(),\r\n        1000\r\n      );\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createHome(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  // cat\r\n  const catCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const catRef = useRef<Cat>();\r\n\r\n  useDebouncedResize(() => {\r\n    const catCanvas = catCanvasRef.current!;\r\n\r\n    const adoptCat = (width: number, height: number, dpi: number) => {\r\n      catCanvas.width = width * dpi;\r\n      catCanvas.height = height * dpi;\r\n\r\n      const ctx = catCanvas.getContext('2d')!;\r\n\r\n      const cat = new Cat(ctx);\r\n      catRef.current = cat;\r\n      cat.render();\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    adoptCat(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  // lamp\r\n  const lampCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const lampRef = useRef<Lamp>();\r\n\r\n  useDebouncedResize(() => {\r\n    const lampCanvas = lampCanvasRef.current!;\r\n\r\n    const createLamp = (width: number, height: number, dpi: number) => {\r\n      lampCanvas.width = width * dpi;\r\n      lampCanvas.height = height * dpi;\r\n\r\n      const ctx = lampCanvas.getContext('2d')!;\r\n\r\n      const lamp = new Lamp(ctx);\r\n      lampRef.current = lamp;\r\n      lamp.render();\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createLamp(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  // call animating effects on each data and isBeat change\r\n  useEffect(() => {\r\n    const home = homeRef.current!;\r\n    const rainfall = rainfallRef.current!;\r\n    const cat = catRef.current!;\r\n    const lamp = lampRef.current!;\r\n\r\n    let raindropsToAdd = Math.floor(lowPassIntensity / 2);\r\n\r\n    if (raindropsToAdd < MIN_RAINDROPS_PER_TICK) {\r\n      raindropsToAdd = MIN_RAINDROPS_PER_TICK;\r\n    } else if (raindropsToAdd > MAX_RAINDROPS_PER_TICK) {\r\n      raindropsToAdd = MAX_RAINDROPS_PER_TICK;\r\n    }\r\n\r\n    let newRaindropsAdded = 0;\r\n\r\n    while (newRaindropsAdded < raindropsToAdd) {\r\n      rainfall.add();\r\n      newRaindropsAdded += 1;\r\n    }\r\n\r\n    rainfall.tick();\r\n    home.dresser.tick(isBeat);\r\n    // re-render lamp light since the dresser stereo\r\n    // may have been repainted by changing isBeat\r\n    lamp.tick();\r\n    cat.tick();\r\n\r\n    const rainCanvas = rainCanvasRef.current!;\r\n    const rainCtx = rainCanvas.getContext('2d')!;\r\n\r\n    rainCtx.clearRect(0, 0, rainCanvas.width, rainCanvas.height);\r\n\r\n    rainfall.render();\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"rain\">\r\n      <canvas ref={cityCanvasRef} />\r\n      <canvas ref={rainCanvasRef} />\r\n      <canvas ref={homeCanvasRef} />\r\n      <canvas ref={catCanvasRef} />\r\n      <canvas ref={lampCanvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Rain);\r\n","import React, { useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useTransition, animated } from 'react-spring';\r\nimport * as VisualizationHOC from './Visualizations/VisualizationHOC';\r\nimport visualizations from './Visualizations';\r\nimport { modulo } from '../../utils';\r\nimport { StoreState } from '../../../src/store/types';\r\n\r\ntype Props = Pick<VisualizationHOC.Props, 'data' | 'lowPassData'>;\r\n\r\ntype StyledProps = Props & {\r\n  style: React.CSSProperties;\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  currentIndex: state.currentVisualizationIndex,\r\n  prevIndex: state.prevVisualizationIndex\r\n});\r\n\r\nconst styledVisualizations = visualizations.map(vis => {\r\n  return (props: StyledProps) => {\r\n    const { style, ...rest } = props;\r\n\r\n    return (\r\n      <animated.div className=\"visualization\" style={props.style}>\r\n        <vis.component {...rest} options={vis.options} />\r\n      </animated.div>\r\n    );\r\n  };\r\n});\r\n\r\nconst VisualizationSelector: React.FC<\r\n  Props & ReturnType<typeof mapStateToProps>\r\n> = ({ data, lowPassData, prevIndex, currentIndex }) => {\r\n  const visIndex = modulo(currentIndex, visualizations.length);\r\n\r\n  const direction = useCallback((current?, prev?) => {\r\n    let translateXMultiplier = 0;\r\n\r\n    if (current < prev) {\r\n      translateXMultiplier = 1;\r\n    } else if (prev < current) {\r\n      translateXMultiplier = -1;\r\n    }\r\n\r\n    return `translate3d(${100 * translateXMultiplier}%, 0, 0)`;\r\n  }, []);\r\n\r\n  const transitions = useTransition(visIndex, null, {\r\n    from: { transform: direction(currentIndex, prevIndex) },\r\n    enter: { transform: direction() },\r\n    leave: { transform: direction(prevIndex, currentIndex) },\r\n    initial: { transform: direction(0, -1) }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {transitions.map(({ item, props, key }) => {\r\n        const Visualization = styledVisualizations[item];\r\n        return (\r\n          <Visualization\r\n            key={key}\r\n            data={data}\r\n            lowPassData={lowPassData}\r\n            style={props}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps)(VisualizationSelector);\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport VisualizationSelector from '../Visualizer/VisualizationSelector';\r\nimport { FFT_SIZE } from '../../config';\r\n\r\ntype Props = {\r\n  audioContext?: AudioContext;\r\n  audioSource?: MediaElementAudioSourceNode;\r\n};\r\n\r\nconst Analyser: React.FC<Props> = ({ audioContext, audioSource }) => {\r\n  const [rawData, setRawData] = useState(new Uint8Array());\r\n  const [lowPassData, setLowPassData] = useState(new Uint8Array());\r\n\r\n  const animationFrameIdRef = useRef<number>();\r\n\r\n  useEffect(() => {\r\n    if (audioContext == null || audioSource == null) {\r\n      return;\r\n    }\r\n\r\n    const rawAnalyser = audioContext.createAnalyser();\r\n    rawAnalyser.fftSize = FFT_SIZE;\r\n    rawAnalyser.smoothingTimeConstant = 0;\r\n    audioSource.connect(rawAnalyser);\r\n    rawAnalyser.connect(audioContext.destination);\r\n\r\n    const filter = audioContext.createBiquadFilter();\r\n    filter.type = 'lowpass';\r\n    const lowPassAnalyser = audioContext.createAnalyser();\r\n    lowPassAnalyser.fftSize = FFT_SIZE;\r\n    lowPassAnalyser.smoothingTimeConstant = 0;\r\n    audioSource.connect(filter);\r\n    filter.connect(lowPassAnalyser);\r\n\r\n    const tick = () => {\r\n      const rawDataContainer = new Uint8Array(FFT_SIZE);\r\n      rawAnalyser.getByteTimeDomainData(rawDataContainer);\r\n      setRawData(rawDataContainer);\r\n\r\n      const lowPassDataContainer = new Uint8Array(FFT_SIZE);\r\n      lowPassAnalyser.getByteTimeDomainData(lowPassDataContainer);\r\n      setLowPassData(lowPassDataContainer);\r\n\r\n      animationFrameIdRef.current = window.requestAnimationFrame(tick);\r\n    };\r\n\r\n    animationFrameIdRef.current = window.requestAnimationFrame(tick);\r\n\r\n    return () => {\r\n      animationFrameIdRef.current != null &&\r\n        window.cancelAnimationFrame(animationFrameIdRef.current);\r\n      rawAnalyser && rawAnalyser.disconnect();\r\n      lowPassAnalyser && lowPassAnalyser.disconnect();\r\n      audioSource && audioSource.disconnect();\r\n    };\r\n  }, [audioContext, audioSource]);\r\n\r\n  return <VisualizationSelector data={rawData} lowPassData={lowPassData} />;\r\n};\r\n\r\nexport default Analyser;\r\n","export const FFT_SIZE = 512;\r\nexport const DATA_SIZE = FFT_SIZE / 2;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './Loading.scss';\r\n\r\ntype Props = {\r\n  isShown?: boolean;\r\n};\r\n\r\nconst Loading: React.FC<Props> = ({ isShown = true }) => (\r\n  <div className={classNames('loading', { show: isShown })}>\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","type Song = {\r\n  artist: string;\r\n  title: string;\r\n  path: string;\r\n};\r\n\r\nexport const songs: Song[] = [\r\n  {\r\n    artist: 'Nujabes',\r\n    title: 'Aruarian Dance',\r\n    path: 'https://blackwright-late.s3.amazonaws.com/nujabes-aruarian-dance.mp3'\r\n  },\r\n  {\r\n    artist: 'BØJET',\r\n    title: 'Lost',\r\n    path: 'https://blackwright-late.s3.amazonaws.com/b%C3%B8jet-lost.mp3'\r\n  },\r\n  {\r\n    artist: 'Kudasai',\r\n    title: 'Dream of Her',\r\n    path: 'https://blackwright-late.s3.amazonaws.com/kudasai-dream-of-her.mp3'\r\n  },\r\n  {\r\n    artist: 'Wys',\r\n    title: 'Close My Eyes',\r\n    path: 'https://blackwright-late.s3.amazonaws.com/wys-close-my-eyes.mp3'\r\n  },\r\n  {\r\n    artist: 'Sky.High',\r\n    title: `Cold Days (feat. j'san)`,\r\n    path:\r\n      'https://blackwright-late.s3.amazonaws.com/sky.high-cold-days-feat-jsan.mp3'\r\n  },\r\n  {\r\n    artist: 'Kudasai',\r\n    title: `The Girl I Haven't Met`,\r\n    path: 'https://blackwright-late.s3.amazonaws.com/kudasai-the-girl.mp3'\r\n  },\r\n  {\r\n    artist: 'Fujitsu',\r\n    title: 'Awaiting',\r\n    path: 'https://blackwright-late.s3.amazonaws.com/fujitsu-awaiting.mp3'\r\n  },\r\n  {\r\n    artist: 'Nymano',\r\n    title: 'For You',\r\n    path: 'https://blackwright-late.s3.amazonaws.com/nymano-for-you.mp3'\r\n  },\r\n  {\r\n    artist: 'Kudasai',\r\n    title: 'Technicolor',\r\n    path: 'https://blackwright-late.s3.amazonaws.com/kudasai-technicolor.mp3'\r\n  },\r\n  {\r\n    artist: 'Juan Rios',\r\n    title: 'Noche',\r\n    path: 'https://blackwright-late.s3.amazonaws.com/juan-rios-noche.mp3'\r\n  },\r\n  {\r\n    artist: 'Philanthrope',\r\n    title: 'Carwash',\r\n    path: 'https://blackwright-late.s3.amazonaws.com/philanthrope-carwash.mp3'\r\n  },\r\n  {\r\n    artist: 'agxxd1ne',\r\n    title: 'Sunday Morning',\r\n    path:\r\n      'https://blackwright-late.s3.amazonaws.com/agxxd1ne-sunday-morning.mp3'\r\n  },\r\n  {\r\n    artist: 'Flamingosis',\r\n    title: 'Football Head',\r\n    path:\r\n      'https://blackwright-late.s3.amazonaws.com/flamingosis-football-head.mp3'\r\n  },\r\n  {\r\n    artist: 'Nujabes',\r\n    title: 'Counting Stars',\r\n    path: 'https://blackwright-late.s3.amazonaws.com/nujabes-counting-stars.mp3'\r\n  }\r\n];\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faStepBackward,\r\n  faStepForward\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport './AudioControls.scss';\r\nimport { songs } from '../../../songs';\r\n\r\ntype Props = {\r\n  onHover: () => void;\r\n  onHoverStop: () => void;\r\n  audioIndex: number;\r\n  prevTrack: () => void;\r\n  nextTrack: () => void;\r\n};\r\n\r\nconst AudioControls: React.FC<Props> = ({\r\n  onHover,\r\n  onHoverStop,\r\n  audioIndex,\r\n  prevTrack,\r\n  nextTrack\r\n}) => {\r\n  const currentSong = songs[audioIndex];\r\n\r\n  return (\r\n    <div id=\"audio-controls\" onMouseEnter={onHover} onMouseLeave={onHoverStop}>\r\n      {currentSong.artist.toLocaleLowerCase()}\r\n      {' - '}\r\n      {currentSong.title.toLocaleLowerCase()}\r\n      <div id=\"track-controls\">\r\n        <button onTouchEnd={prevTrack} onMouseUp={prevTrack}>\r\n          <FontAwesomeIcon icon={faStepBackward} size=\"xs\" />\r\n        </button>\r\n        <button onTouchEnd={nextTrack} onMouseUp={nextTrack}>\r\n          <FontAwesomeIcon icon={faStepForward} size=\"xs\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioControls;\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport Loading from '../Loading';\r\nimport * as Actions from '../../store/actions';\r\nimport * as versionInfo from '../../metadata/build-version.json';\r\nimport AudioControls from './AudioControls';\r\nimport './Controls.scss';\r\n\r\nconst CONTROLS_FADE_OUT_DELAY = 3000;\r\nconst TOUCH_WAS_CLICK_THRESHOLD = 250;\r\nconst TOUCH_WAS_SWIPE_THRESHOLD = 350;\r\n\r\ntype Props = {\r\n  audioContext?: AudioContext;\r\n  wantsToPlay: boolean;\r\n  isPlaying: boolean;\r\n  togglePlay: () => void;\r\n  audioIndex: number;\r\n  prevTrack: () => void;\r\n  nextTrack: () => void;\r\n} & ReturnType<typeof mapDispatchToProps>;\r\n\r\ntype Touch = {\r\n  timestamp: number;\r\n  x: number;\r\n};\r\n\r\nconst Controls: React.FC<Props> = props => {\r\n  const [isOverlayShown, setIsOverlayShown] = useState(true);\r\n  const [isControlHovered, setIsControlHovered] = useState(false);\r\n\r\n  const timeoutRef = useRef<number>();\r\n  const touchRef = useRef<Touch>();\r\n\r\n  useEffect(() => {\r\n    const onKeyDown = (event: KeyboardEvent) => {\r\n      switch (event.which) {\r\n        case 37:\r\n        case 38: {\r\n          props.goToPrevVisualization();\r\n          break;\r\n        }\r\n        case 39:\r\n        case 40: {\r\n          props.goToNextVisualization();\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', onKeyDown);\r\n    return () => document.removeEventListener('keydown', onKeyDown);\r\n  }, []);\r\n\r\n  const showOverlay = useCallback(() => {\r\n    timeoutRef.current != null && window.clearTimeout(timeoutRef.current);\r\n\r\n    setIsOverlayShown(true);\r\n    timeoutRef.current = window.setTimeout(() => {\r\n      if (!isControlHovered) {\r\n        setIsOverlayShown(false);\r\n      }\r\n    }, CONTROLS_FADE_OUT_DELAY);\r\n  }, [isControlHovered]);\r\n\r\n  const togglePlay = useCallback(() => {\r\n    props.audioContext && props.audioContext.resume();\r\n    props.togglePlay();\r\n    showOverlay();\r\n  }, [props.audioContext, props.togglePlay]);\r\n\r\n  const onTouchStart = useCallback((event: React.TouchEvent) => {\r\n    event.preventDefault();\r\n    touchRef.current = { timestamp: Date.now(), x: event.touches[0].clientX };\r\n  }, []);\r\n\r\n  const goToRepo = () => window.open('https://github.com/blackwright/late');\r\n\r\n  const onMouseDown = useCallback((event: React.MouseEvent) => {\r\n    if (event.nativeEvent.which === 1) {\r\n      touchRef.current = { timestamp: Date.now(), x: event.clientX };\r\n    }\r\n  }, []);\r\n\r\n  const onMouseUp = useCallback((event: React.MouseEvent) => {\r\n    if (\r\n      event.nativeEvent.which === 1 &&\r\n      touchRef.current &&\r\n      Date.now() - touchRef.current.timestamp < TOUCH_WAS_CLICK_THRESHOLD\r\n    ) {\r\n      togglePlay();\r\n    }\r\n  }, []);\r\n\r\n  const onTouchEnd = useCallback(\r\n    (event: React.TouchEvent) => {\r\n      event.preventDefault();\r\n      if (\r\n        touchRef.current &&\r\n        Date.now() - touchRef.current.timestamp < TOUCH_WAS_CLICK_THRESHOLD\r\n      ) {\r\n        showOverlay();\r\n      }\r\n\r\n      if (\r\n        touchRef.current &&\r\n        Date.now() - touchRef.current.timestamp < TOUCH_WAS_SWIPE_THRESHOLD\r\n      ) {\r\n        const deltaX = event.changedTouches[0].clientX - touchRef.current.x;\r\n        if (Math.abs(deltaX) > 50) {\r\n          if (deltaX < 0) {\r\n            props.goToPrevVisualization();\r\n          } else {\r\n            props.goToNextVisualization();\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [isControlHovered]\r\n  );\r\n\r\n  const onPrev = useCallback(\r\n    (event: React.MouseEvent | React.TouchEvent) => {\r\n      event.preventDefault();\r\n      props.goToPrevVisualization();\r\n      showOverlay();\r\n    },\r\n    [isControlHovered]\r\n  );\r\n\r\n  const onNext = useCallback(\r\n    (event: React.MouseEvent | React.TouchEvent) => {\r\n      event.preventDefault();\r\n      props.goToNextVisualization();\r\n      showOverlay();\r\n    },\r\n    [isControlHovered]\r\n  );\r\n\r\n  const onHover = useCallback(() => setIsControlHovered(true), []);\r\n\r\n  const onHoverStop = useCallback(() => setIsControlHovered(false), []);\r\n\r\n  const { wantsToPlay, isPlaying, audioIndex, prevTrack, nextTrack } = props;\r\n\r\n  return (\r\n    <>\r\n      {wantsToPlay && !isPlaying && <Loading />}\r\n      <div\r\n        id=\"overlay\"\r\n        onTouchStart={onTouchStart}\r\n        onTouchEnd={onTouchEnd}\r\n        onMouseMove={showOverlay}\r\n        className={classNames({ show: isOverlayShown })}\r\n      >\r\n        <h1\r\n          id=\"title\"\r\n          onClick={goToRepo}\r\n          onTouchEnd={goToRepo}\r\n          onMouseEnter={onHover}\r\n          onMouseLeave={onHoverStop}\r\n        >\r\n          late\r\n        </h1>\r\n        <div id=\"version\">build {versionInfo.version}</div>\r\n        <div\r\n          id=\"play-pause-container\"\r\n          onMouseDown={onMouseDown}\r\n          onMouseUp={onMouseUp}\r\n          onTouchEnd={togglePlay}\r\n          onMouseEnter={onHover}\r\n          onMouseLeave={onHoverStop}\r\n        >\r\n          <div\r\n            className={classNames({\r\n              play: !wantsToPlay && !isPlaying,\r\n              pause: wantsToPlay && isPlaying\r\n            })}\r\n          />\r\n        </div>\r\n        <div className=\"navigation\">\r\n          <div\r\n            className=\"arrow-container\"\r\n            onTouchEnd={onPrev}\r\n            onMouseUp={onPrev}\r\n            onMouseEnter={onHover}\r\n            onMouseLeave={onHoverStop}\r\n          >\r\n            <svg\r\n              className=\"arrow\"\r\n              width=\"60px\"\r\n              height=\"80px\"\r\n              viewBox=\"0 0 50 80\"\r\n            >\r\n              <polyline\r\n                fill=\"none\"\r\n                stroke=\"#FFF\"\r\n                strokeWidth=\"3\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                points=\"45.63,75.8 0.375,38.087 45.63,0.375\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div\r\n            className=\"arrow-container\"\r\n            onTouchEnd={onNext}\r\n            onMouseUp={onNext}\r\n            onMouseEnter={onHover}\r\n            onMouseLeave={onHoverStop}\r\n          >\r\n            <svg\r\n              className=\"arrow\"\r\n              width=\"60px\"\r\n              height=\"80px\"\r\n              viewBox=\"0 0 50 80\"\r\n            >\r\n              <polyline\r\n                fill=\"none\"\r\n                stroke=\"#FFF\"\r\n                strokeWidth=\"3\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                points=\"0.375,0.375 45.63,38.087 0.375,75.8\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        <AudioControls\r\n          onHover={onHover}\r\n          onHoverStop={onHoverStop}\r\n          audioIndex={audioIndex}\r\n          prevTrack={prevTrack}\r\n          nextTrack={nextTrack}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  goToNextVisualization: () => dispatch(Actions.goToNextVisualization()),\r\n  goToPrevVisualization: () => dispatch(Actions.goToPrevVisualization())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Controls);\r\n","import { ActionConstants, ActionUnionType } from './types';\r\n\r\nexport const goToNextVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_NEXT_VISUALIZATION\r\n});\r\n\r\nexport const goToPrevVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_PREV_VISUALIZATION\r\n});\r\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport Analyser from '../Analyser';\r\nimport Controls from '../Controls';\r\nimport { useStateRef } from '../../utils/hooks';\r\nimport { modulo } from '../../utils';\r\nimport { songs } from '../../songs';\r\n\r\nconst App: React.FC = () => {\r\n  const [wantsToPlay, setWantsToPlay] = useState(false);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [audioContext, setAudioContext, audioContextRef] = useStateRef<\r\n    AudioContext | undefined\r\n  >(undefined);\r\n  const [audioSource, setSource] = useState<MediaElementAudioSourceNode>();\r\n  const [audioIndex, setAudioIndex, audioIndexRef] = useStateRef(0);\r\n\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n\r\n  const nextTrack = useCallback(() => {\r\n    const audioElement = audioRef.current!;\r\n    const nextAudioIndex = modulo(audioIndex + 1, songs.length);\r\n    audioElement.src = songs[nextAudioIndex].path;\r\n    audioElement.play();\r\n    setAudioIndex(nextAudioIndex);\r\n  }, [audioIndex, audioRef.current]);\r\n\r\n  const prevTrack = useCallback(() => {\r\n    const audioElement = audioRef.current!;\r\n    const prevAudioIndex = modulo(audioIndex - 1, songs.length);\r\n    const shouldStayOnThisTrack = audioElement.currentTime > 5;\r\n    audioElement.src =\r\n      songs[shouldStayOnThisTrack ? audioIndex : prevAudioIndex].path;\r\n    audioElement.play();\r\n    setAudioIndex(prevAudioIndex);\r\n  }, [audioIndex, audioRef.current]);\r\n\r\n  // attach audio event listeners\r\n  useEffect(() => {\r\n    const audioElement = audioRef.current!;\r\n\r\n    const onAudioPlay = () => setIsPlaying(true);\r\n    const onAudioPause = () => setIsPlaying(false);\r\n    const onAudioError = console.error;\r\n\r\n    audioElement.addEventListener('playing', onAudioPlay);\r\n    audioElement.addEventListener('pause', onAudioPause);\r\n    audioElement.addEventListener('error', onAudioError);\r\n\r\n    return () => {\r\n      audioElement.removeEventListener('playing', onAudioPlay);\r\n      audioElement.removeEventListener('pause', onAudioPause);\r\n      audioElement.removeEventListener('error', onAudioError);\r\n    };\r\n  }, []);\r\n\r\n  // next track listener on track end\r\n  useEffect(() => {\r\n    const audioElement = audioRef.current!;\r\n\r\n    audioElement.addEventListener('ended', nextTrack);\r\n    return () => audioElement.removeEventListener('ended', nextTrack);\r\n  }, [audioIndex, audioRef.current]);\r\n\r\n  const initializeAudioContext = useCallback(() => {\r\n    const audioElement = audioRef.current!;\r\n    const audioContext = new (window.AudioContext ||\r\n      (window as any).webkitAudioContext)();\r\n    const audioSource = audioContext.createMediaElementSource(audioElement);\r\n\r\n    setAudioContext(audioContext);\r\n    setSource(audioSource);\r\n  }, [audioRef.current]);\r\n\r\n  const togglePlay = useCallback(() => {\r\n    const audioElement = audioRef.current!;\r\n\r\n    if (audioElement.paused) {\r\n      setWantsToPlay(true);\r\n      audioElement.play();\r\n\r\n      if (!audioContextRef.current) {\r\n        initializeAudioContext();\r\n      }\r\n    } else {\r\n      setWantsToPlay(false);\r\n      audioElement.pause();\r\n    }\r\n  }, [audioRef.current]);\r\n\r\n  return (\r\n    <>\r\n      <audio\r\n        ref={audioRef}\r\n        id=\"audioElement\"\r\n        src={songs[0].path}\r\n        preload=\"auto\"\r\n        crossOrigin=\"anonymous\"\r\n      />\r\n\r\n      <Analyser audioContext={audioContext} audioSource={audioSource} />\r\n\r\n      <Controls\r\n        audioContext={audioContext}\r\n        wantsToPlay={wantsToPlay}\r\n        isPlaying={isPlaying}\r\n        togglePlay={togglePlay}\r\n        audioIndex={audioIndex}\r\n        prevTrack={prevTrack}\r\n        nextTrack={nextTrack}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\nimport App from './components/App';\r\nimport './reset.scss';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}