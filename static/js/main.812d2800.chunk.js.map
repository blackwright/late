{"version":3,"sources":["serviceWorker.js","store/types.ts","store/reducer.ts","store/index.ts","components/Visualizer/Visualizations/VisualizationHOC.tsx","utils/colors.ts","utils/index.ts","utils/hooks.ts","components/Visualizer/Visualizations/Waveform/index.tsx","components/Visualizer/Visualizations/Waveform/utils.ts","components/Visualizer/Visualizations/Drummer/index.tsx","components/Visualizer/Visualizations/Halpern/three/sceneManager.ts","components/Visualizer/Visualizations/Halpern/three/entities/polys.ts","components/Visualizer/Visualizations/Halpern/three/entities/camera.ts","components/Visualizer/Visualizations/Halpern/three/entities/renderer.ts","components/Visualizer/Visualizations/Halpern/index.tsx","components/Visualizer/Visualizations/Stars/three/entities/shaders.ts","components/Visualizer/Visualizations/Stars/three/entities/polys.ts","components/Visualizer/Visualizations/Stars/three/entities/light.ts","components/Visualizer/Visualizations/Stars/three/sceneManager.ts","components/Visualizer/Visualizations/Stars/three/entities/renderer.ts","components/Visualizer/Visualizations/Stars/three/entities/camera.ts","components/Visualizer/Visualizations/Stars/index.tsx","components/Visualizer/Visualizations/Rain/renderer.ts","components/Visualizer/Visualizations/Rain/city/building.ts","components/Visualizer/Visualizations/Rain/city/index.ts","components/Visualizer/Visualizations/Rain/rain/index.ts","components/Visualizer/Visualizations/Rain/home/wall.ts","components/Visualizer/Visualizations/Rain/utils.ts","components/Visualizer/Visualizations/Rain/home/window.ts","components/Visualizer/Visualizations/Rain/home/dresser.ts","components/Visualizer/Visualizations/Rain/home/pictures.ts","components/Visualizer/Visualizations/Rain/home/table.ts","components/Visualizer/Visualizations/Rain/home/clock.ts","components/Visualizer/Visualizations/Rain/home/cat.ts","components/Visualizer/Visualizations/Rain/home/lamp.ts","components/Visualizer/Visualizations/Rain/home/index.ts","components/Visualizer/Visualizations/Rain/index.tsx","components/Visualizer/Visualizations/index.tsx","components/Visualizer/Visualizations/MobileDisabled/index.tsx","components/Visualizer/VisualizationSelector.tsx","components/Analyser/index.tsx","config/index.ts","components/Loading/index.tsx","components/Controls/index.tsx","store/actions.ts","components/App/utils.ts","components/App/index.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","ActionConstants","initialState","currentVisualizationIndex","prevVisualizationIndex","store","createStore","state","arguments","length","undefined","type","GO_TO_NEXT_VISUALIZATION","Object","objectSpread","GO_TO_PREV_VISUALIZATION","__REDUX_DEVTOOLS_EXTENSION__","defaultProps","data","Uint8Array","lowPassData","options","wrap","WrappedComponent","_ref","rawIntensitiesRef","useRef","lowPassIntensitiesRef","startingTimestampRef","Date","now","totalDifferenceFromRawBaseline","totalDifferenceFromLowBaseline","renderedData","map","rawDataElement","i","Math","abs","lowPassDataElement","smoothing","sum","count","rangeIndex","rawIntensityMax","lowPassIntensitySum","lowPassIntensityCount","lowPassIntensityMax","current","forEach","rawIntensity","lowPassIntensity","currentRawIntensity","recentLowPassAvgIntensity","currentLowPassIntensity","concat","shift","isBeat","react_default","a","createElement","intensity","colorTriples","colorTriple","id","randomColorTriple","floor","random","getRandomColors","numColors","areUnique","colors","randomTriple","randomColor","includes","push","getRandomColor","getRandomColorTriple","colorCopy","toConsumableArray","reverse","modulo","number1","number2","isInteger","number","randomNumberBetween","min","max","decimalPrecision","randomFloat","Number","toPrecision","debounced","fn","msToWait","isImmediate","timeoutId","_len","args","Array","_key","context","this","shouldCallNow","clearTimeout","setTimeout","apply","useDebouncedResize","deps","useEffect","debouncedFn","addEventListener","removeEventListener","VisualizationHOC","canvasRef","_window","innerWidth","innerHeight","_window$devicePixelRa","devicePixelRatio","canvas","width","height","ctx","getContext","fillStyle","fillRect","intervalId","setInterval","clearInterval","lineWidth","lineCap","getColors","sliceWidth","color","strokeStyle","beginPath","x","moveTo","dataElement","y","lineTo","stroke","className","ref","_useState","useState","_useState2","slicedToArray","size","setSize","_useState3","_useState4","colorSize","setColorSize","colorsRef","values","lastChangedTimestamp","maxSideLength","colorDiameter","sqrt","pow","freqMap","freqKey","freqData","ceiling","newColor","drummers","entries","_ref2","_ref3","hitCount","drummerContainerSize","key","style","opacity","classNames","hit","MIN_HIT_COUNT","smallestDrummerSize","transitions","useTransition","from","item","backgroundColor","scale","enter","leave","config","slow","_ref4","props","_ref5","objectWithoutProperties","web","div","transform","interpolate","s","DELAY_BEFORE_ROTATING_X","CAMERA_MAX_DISTANCE","CAMERA_DRIFT","ROTATE_Y","ROTATE_X","SPHERE_SEGMENTS","sceneManager","rendererContainer","animationFrameId","segments","sceneInitializedTimestamp","t","sphereGeometry","SphereGeometry","halpern","vertices","parameters","radius","widthSegments","heightSegments","positions","Float32Array","vertex","toArray","geometry","BufferGeometry","addAttribute","BufferAttribute","attributes","position","dynamic","material","PointsMaterial","TextureLoader","load","alphaTest","transparent","Points","createPoints","camera","startingY","PerspectiveCamera","set","lookAt","Vector3","createCamera","renderer","WebGLRenderer","alpha","setPixelRatio","setClearColor","createRenderer","appendChild","domElement","scene","Scene","add","clock","Clock","debouncedResize","aspect","updateProjectionMatrix","render","onVisibilityChange","document","visibilityState","stop","start","animate","delta","getDelta","rotateY","rotateX","PI","translateY","cos","translateX","translateZ","requestAnimationFrame","cleanup","cancelAnimationFrame","removeChild","remove","dispose","rendererRef","managedSceneRef","originalVerticesRef","sphereDataSegmentsRef","vertexSegmentLengthRef","focusedDataRef","fill","managedScene","halpernGeometry","array","slice","focusedDataIndex","splice","halpernBufferPositions","getAttribute","vertexSegmentIndex","ceil","dataIndex","vertexSegmentWeight","scalar","needsUpdate","starVertexShader","starFragmentShader","createCloud","texture","PlaneGeometry","cloudMaterial","MeshLambertMaterial","depthTest","rotateZ","cloud","Mesh","zPosition","createDirectionalLight","DirectionalLight","STAR_COUNT","CLOUD_COUNT","MAX_STAR_ALPHA","MIN_STAR_ALPHA","STAR_ALPHA_DELTA","STATIC_LIGHT_COLOR","VARIABLE_LIGHT_COLOR","lightIntensity","antialias","stars","starCount","alphas","j","shaderMaterial","ShaderMaterial","uniforms","value","Color","vertexShader","fragmentShader","createStars","cloudCover","Group","cloudCount","aLight","AmbientLight","fixedDLight","dLight","starAlphas","alphaDirection","children","console","log","lightTimestampRef","currentLightIntensity","newLightIntensity","WINDOW_FRAME_THICKNESS_DIVISOR","Renderer","classCallCheck","canvasWidth","canvasHeight","oneThirdCanvasWidth","oneHalfCanvasHeight","windowFrameThickness","roundedRadius","save","createClass","restore","Building","blueprint","lights","lightHeight","lightPadding","lightsPerFloor","buildingXPadding","buildingTopPadding","gapWidth","lightWidth","isOn","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","light","err","return","City","_Renderer","_this","possibleConstructorReturn","getPrototypeOf","call","layers","generateBuildings","inherits","_this2","_loop","layer","gap","building","leftMostBuilding","xOffset","get","prototype","currentLayer","generateLights","RAINDROPS_HEIGHTWISE","Raindrop","createdDate","timeDelta","Rainfall","raindrops","raindropHeight","raindrop","tick","startingX","Wall","linearGradient","createLinearGradient","addColorStop","defaultCornerRadii","tl","tr","br","bl","roundedRect","quadraticCurveTo","closePath","Window","clearRect","muntinWidth","topLeftX","topRightX","topY","leftX","leftTopY","leftBottomY","rect","Dresser","dresserHandleMidpoint","speakerWidth","speakerHeight","speakerX","speakerY","driverRadius","driverCenterX","driverCenterY","arc","dividerWidth","deckX","deckHeight","deckY","deckDetailX","bottomDetailY","knobRadius","knobX","knobY","clip","translate","knobMarkerAngle","knobMarkerStart","sin","knobMarkerEnd","dresser","stereo","wooferRadius","wooferCenterY","Pictures","pictures","_assertThisInitialize","assertThisInitialized","_this$pictures$","gradient1","nodes","nodeSize","point1","point2","currentNode","pop","_i","otherNode","_this$pictures$2","gradient2","randomAngle","planetX","planetY","randomRadius","_this$pictures$3","gradient3","starX","starY","graph","orbits","FRUIT_COLORS","Table","thickness","tableCornerRadii","bowlCenterX","bowlWidth","bowlHeight","fruits","stemAngle","fruit","_i2","stemStart","stemEnd","bowlCornerRadii","bowlBaseHeight","bowlBaseWidth","bowlDecorationY","leg","top","centerpiece","clockSize","clockCoords","angle","end","hours","getHours","minutes","getMinutes","seconds","getSeconds","rotate","face","hands","Cat","isWagging","prevTailAngle","headRadius","bodyHeight","bodyWidth","createdTimestamp","tailWidth","tailY","lineJoin","rightEar","point","leftEar","head","body","tail","nextTailAngle","tailEnd","Lamp","stemX","stemHeight","lampWidth","shadeTopLeft","shadeTopRight","shadeBottomRight","shadeBottomLeft","lightAngle","deltaX","deltaY","atan2","radiansBetween","lightTriangleAdjacentWidth","tan","lightBottomLeftX","lightBottomRightX","stem","lampshade","Home","wall","table","cityCanvasRef","cityRef","cityCanvas","dpi","city","createCity","rainCanvasRef","rainfallRef","rainCanvas","_window2","rainfall","createRain","homeCanvasRef","homeRef","clockIntervalRef","homeCanvas","_window3","home","createHome","catCanvasRef","catRef","catCanvas","_window4","cat","adoptCat","lampCanvasRef","lampRef","lampCanvas","_window5","lamp","createLamp","raindropsToAdd","newRaindropsAdded","visualizations","src","process","test","navigator","userAgent","component","Rain","Stars","Waveform","Drummer","Halpern","styledVisualizations","vis","rest","assign","connect","currentIndex","prevIndex","visIndex","direction","useCallback","prev","translateXMultiplier","initial","Fragment","Visualization","Analyser","audioContext","audioSource","rawData","setRawData","setLowPassData","animationFrameIdRef","rawAnalyser","createAnalyser","fftSize","smoothingTimeConstant","destination","filter","createBiquadFilter","lowPassAnalyser","rawDataContainer","getByteTimeDomainData","lowPassDataContainer","disconnect","Visualizer_VisualizationSelector","Loading","_ref$isShown","isShown","show","dispatch","goToNextVisualization","goToPrevVisualization","isOverlayShown","setIsOverlayShown","isControlHovered","setIsControlHovered","timeoutRef","touchRef","onKeyDown","event","which","showOverlay","togglePlay","resume","onTouchStart","preventDefault","timestamp","touches","clientX","goToRepo","open","onMouseDown","nativeEvent","onMouseUp","onTouchEnd","changedTouches","onPrev","onNext","onHover","onHoverStop","wantsToPlay","isPlaying","components_Loading","onMouseMove","onClick","onMouseEnter","onMouseLeave","versionInfo","play","pause","viewBox","strokeWidth","strokeLinecap","strokeLinejoin","points","audioPaths","App","setWantsToPlay","setIsPlaying","_useStateRef","setState","stateRef","useStateRef","_useStateRef2","setContext","contextRef","_useState5","_useState6","setSource","audioIndexRef","audioRef","audioElement","onAudioPlay","onAudioPause","onAudioError","error","onAudioEnded","nextAudioIndex","initializeAudioContext","AudioContext","webkitAudioContext","createMediaElementSource","paused","preload","crossOrigin","components_Analyser","components_Controls","ReactDOM","es","components_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"ybAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+DCbMC,uRCHZ,IAAMC,EAA2B,CAC/BC,0BAA2B,EAC3BC,uBAAwB,GCD1B,IAMeC,EANDC,YDIC,WAGD,IAFZC,EAEYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFJN,EAGR,QADYM,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACGC,MACb,KAAKV,EAAgBW,yBACnB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEJ,0BAA2BI,EAAMJ,0BAA4B,EAC7DC,uBAAwBG,EAAMJ,4BAGlC,KAAKF,EAAgBc,yBACnB,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEJ,0BAA2BI,EAAMJ,0BAA4B,EAC7DC,uBAAwBG,EAAMJ,4BAGlC,QACE,OAAOI,ICtBVV,OAAemB,8BACbnB,OAAemB,uDCadC,SAAsB,CAC1BC,KAAM,IAAIC,WACVC,YAAa,IAAID,WACjBE,QAAS,KAIJ,SAASC,EACdC,GAEA,OAAO,WAA+D,IAAAC,EAAAhB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAdS,EAAtCC,EAAoDM,EAApDN,KAAME,EAA8CI,EAA9CJ,YAAaC,EAAiCG,EAAjCH,QAC7BI,EAAoBC,iBAAiB,IACrCC,EAAwBD,iBAAiB,IACzCE,EAAuBF,iBAAeG,KAAKC,OAE7CC,EAAiC,EACjCC,EAAiC,EAE/BC,EAAef,EAAKgB,IAAI,SAACC,EAAgBC,GAC7CL,GAAkCM,KAAKC,IAAIH,EAAiB,KAE5D,IAAMI,EAAqBnB,EAAYgB,GAGvC,GAFAJ,GAAkCK,KAAKC,IAAIC,EAAqB,KAEjD,MAAXlB,GAAoBA,EAAQmB,UAEzB,CAQL,IALA,IAAIC,EAAM,EACNC,EAAQ,EAERC,EAAaP,EAAIf,EAAQmB,UAEtBG,EAAaP,EAAIf,EAAQmB,WAAW,CAEzCC,GAD4BvB,EAAKyB,IAAe,IAEhDD,GAAS,EACTC,GAAc,EAGhB,OAAOF,EAAMC,EAhBb,OAAOP,IAoBPS,EAAkB,EAElBC,EAAsB,EACtBC,EAAwB,EACxBC,EAAsB,EAE1BtB,EAAkBuB,QAAQC,QAAQ,SAACC,EAAcd,GAC3Cc,EAAeN,IACjBA,EAAkBM,GAGpB,IAAMC,EAAmBxB,EAAsBqB,QAAQZ,GACvDS,GAAuBM,EACvBL,GAAyB,EAErBK,EAAmBJ,IACrBA,EAAsBI,KAI1B,IAAMC,EAAsBrB,EAAiCb,EAAKT,OAC5D4C,EACJR,EAAsBC,GAAyB,EAE3CQ,EACJtB,EAAiCZ,EAAYX,OAE/CgB,EAAkBuB,QAAUvB,EAAkBuB,QAAQO,OACpDH,GAEFzB,EAAsBqB,QAAUrB,EAAsBqB,QAAQO,OAC5DD,GAIEzB,KAAKC,MAAQF,EAAqBoB,QAAU,MAC9CvB,EAAkBuB,QAAQQ,QAC1B7B,EAAsBqB,QAAQQ,SAGhC,IAAMC,EAASH,EAAsD,IAA5BD,EAEzC,OACEK,EAAAC,EAAAC,cAACrC,EAAD,CACEL,KAAMe,EACNb,YAAaA,EACbqC,OAAQA,EACRI,UAAWT,EACXD,iBAAkBG,iBChHpBQ,EAAe,CACnB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,YAGGA,EAAa5B,IAAI,SAAC6B,EAAa3B,GAAd,MAAqB,CAChE4B,GAAI5B,EACJ2B,iBAGF,SAASE,IACP,OAAOH,EAAazB,KAAK6B,MAAM7B,KAAK8B,SAAWL,EAAarD,SAGvD,SAAS2D,EAAgBC,EAAmBC,GAGjD,IAFA,IAAMC,EAAmB,GAElBA,EAAO9D,OAAS4D,GAAW,CAChC,IAAMG,EAAeP,IACfQ,EAAcD,EAAanC,KAAK6B,MAAM7B,KAAK8B,SAAWK,EAAa/D,SAEzE,GAAI6D,GAAaC,EAAOG,SAASD,GAC/B,MAGFF,EAAOI,KAAKF,GAEd,OAAOF,EAGF,SAASK,IACd,OAAOR,EAAgB,GAAG,GAGrB,SAASS,IACd,IAAMC,EAASjE,OAAAkE,EAAA,EAAAlE,CAAOoD,KACtB,OAAI5B,KAAK8B,UAAY,GACZW,EAAUE,UAEVF,ECjDJ,SAASG,EAAOC,EAAiBC,GACtC,OAASD,EAAUC,EAAWA,GAAWA,EAS3C,SAASC,EAAUC,GACjB,OAA6B,IAAtBJ,EAAOI,EAAQ,GAGjB,SAASC,EACdC,EACAC,GAEA,IADAC,EACAjF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADmB,EAEnB,GAAI4E,EAAUG,IAAQH,EAAUI,GAC9B,OAAOD,EAAMlD,KAAK6B,MAAM7B,KAAK8B,UAAYqB,EAAMD,IAGjD,IAAMG,EAAcH,EAAMlD,KAAK8B,UAAYqB,EAAMD,GACjD,OAAOI,OAAOD,EAAYE,YAAYH,IAGjC,SAASI,EACdC,GAGA,IAFAC,EAEAvF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFmB,IACnBwF,EACAxF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACIyF,EAA2B,KAE/B,OAAO,WAAyC,QAAAC,EAAA1F,UAAAC,OAAlB0F,EAAkB,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAlBF,EAAkBE,GAAA7F,UAAA6F,GAC9C,IAAMC,EAAUC,KAUVC,EAAgBR,GAA4B,MAAbC,EAEpB,MAAbA,GACFpG,OAAO4G,aAAaR,GAGtBA,EAAYpG,OAAO6G,WAdK,WACtBT,EAAY,KAEPD,GACHF,EAAGa,MAAML,EAASH,IAUyBJ,GAE3CS,GACFV,EAAGa,MAAML,EAASH,ICtCjB,SAASS,EACdd,EACAe,GAEAC,oBAAU,WACRhB,IACA,IAAMiB,EAAclB,EAAUC,GAG9B,OADAjG,OAAOmH,iBAAiB,SAAUD,GAC3B,kBAAMlH,OAAOoH,oBAAoB,SAAUF,KACjDF,aCoDUK,IApE2C,SAAA1F,GAAc,IAAXN,EAAWM,EAAXN,KACrDiG,EAAYzF,iBAA0B,MA2D5C,OAzDAkF,EAAmB,WAAM,IAAAQ,EACmCvH,OAAlDwH,EADeD,EACfC,WAAYC,EADGF,EACHE,YADGC,EAAAH,EACUI,wBADV,IAAAD,EAC6B,EAD7BA,EAGjBE,EAASN,EAAUnE,QACzByE,EAAOC,MAAQL,EAAaG,EAC5BC,EAAOE,OAASL,EAAcE,EAG9B,IAAMI,EAAMH,EAAOI,WAAW,MAC9BD,EAAIE,UAAY,UAChBF,EAAIG,SAAS,EAAG,EAAGN,EAAOC,MAAOD,EAAOE,SACvC,IAEHb,oBAAU,WACR,IAAMW,EAASN,EAAUnE,QACnB4E,EAAMH,EAAOI,WAAW,MAOxBG,EAAanI,OAAOoI,YALV,WACdL,EAAIE,UAAY,sBAChBF,EAAIG,SAAS,EAAG,EAAGN,EAAOC,MAAOD,EAAOE,SAGK,GAC/C,OAAO,kBAAM9H,OAAOqI,cAAcF,KACjC,IAGHlB,oBAAU,WACR,IAAMW,EAASN,EAAUnE,QACnB4E,EAAMH,EAAOI,WAAW,MAC9BD,EAAIO,UArCW,GAsCfP,EAAIQ,QAAU,QAEd,IAAM7D,ECxCH,SAAmBF,GACxB,OAAQA,GACN,KAAK,EACH,OAAOQ,IACT,KAAK,EACH,OAAOT,EAAgB,GAAG,GAC5B,KAAK,EACH,MAAO,CAACQ,KACV,QACE,OAAOC,KD+BMwD,CAAU,GAEnBC,EAAab,EAAOC,MAAQxG,EAAKT,OAEvC8D,EAAOtB,QAAQ,SAACsF,EAAOnG,GACrBwF,EAAIY,YAAcD,EAClBX,EAAIa,YAEJ,IAAIC,EA/CY,EA+CRtG,EACRwF,EAAIe,OAAOD,EAAGjB,EAAOE,OAAS,GAE9BzG,EAAK+B,QAAQ,SAAA2F,GACX,IAAMC,EACHD,EAAc,IAASnB,EAAOE,OAnDnB,EAoDKpD,EAAO9D,OAAU,EACpCmH,EAAIkB,OAAOJ,EAAGG,EAAIzG,GArDJ,EAqD0BmC,EAAO9D,OAAU,IACzDiI,GAAKJ,IAGPV,EAAIkB,OAAOJ,EAAGjB,EAAOE,OAAS,GAC9BC,EAAImB,YAEL,CAAC7H,IAGFwC,EAAAC,EAAAC,cAAA,OAAKoF,UAAU,YACbtF,EAAAC,EAAAC,cAAA,OAAKoF,UAAU,aACftF,EAAAC,EAAAC,cAAA,UAAQqF,IAAK9B,wBEgEJD,WAzH0C,SAAA1F,GAAsB,IAAnBN,EAAmBM,EAAnBN,KAAMuC,EAAajC,EAAbiC,OAAayF,EACrDC,mBAAS,GAD4CC,EAAAvI,OAAAwI,EAAA,EAAAxI,CAAAqI,EAAA,GACtEI,EADsEF,EAAA,GAChEG,EADgEH,EAAA,GAAAI,EAE3CL,mBAAS,GAFkCM,EAAA5I,OAAAwI,EAAA,EAAAxI,CAAA2I,EAAA,GAEtEE,EAFsED,EAAA,GAE3DE,EAF2DF,EAAA,GAIvEG,EAAYlI,iBAAO,CACvBmI,OAAQ,CAACjF,KACTkF,qBAAsBjI,KAAKC,QAG7B8E,EAAmB,WAAM,IAAAQ,EACavH,OAA5BwH,EADeD,EACfC,WAAYC,EADGF,EACHE,YACdyC,EAAgB1H,KAAKmD,IAAI6B,EAAYC,GAC3CiC,EAAwB,EAAhBQ,GAER,IAAMC,EAAgB3H,KAAK4H,KACzB5H,KAAK6H,IAAI7C,EAAY,GAAKhF,KAAK6H,IAAI5C,EAAa,IAElDqC,EAAaK,IACZ,IASH,IAPA,IAAMzF,EAASqF,EAAU5G,QAGnBmH,EAAqC,GAGvCC,EAAU,EACPA,EA/BY,IAgCjBD,EAAQC,GAAW,EACnBA,GAAW,EAGblJ,EAAK+B,QAAQ,SAAAoH,GAEX,IADA,IAAID,EAAU,EACPA,EAtCU,IAsCa,CAC5B,IAAME,EAXU,MAWeF,EAAU,GACzC,GACE/H,KAAKC,IAAI+H,EAAW,KA3CI,IA4CxBA,GAAYC,EACZ,CACAH,EAAQC,IAAY,EACpB,MAEFA,GAAW,KAKf,IAAMtI,EAAMD,KAAKC,MACjB,GACE2B,GACA3B,EAAMyC,EAAOuF,qBAxDsB,IAyDnC,CACA,IAAIS,EACJ,GACEA,EAAW3F,UACJL,EAAOsF,OAAOtF,EAAOsF,OAAOpJ,OAAS,KAAO8J,GAErDhG,EAAOsF,OAAOlF,KAAK4F,GACfhG,EAAOsF,OAAOpJ,OAAS,GACzB8D,EAAOsF,OAAOrG,QAEhBe,EAAOuF,qBAAuBhI,EAGhC,IAAM0I,EAAW3J,OAAO4J,QAAQN,GAASjI,IAAI,SAAAwI,EAAsBtI,GAAM,IAAAuI,EAAA9J,OAAAwI,EAAA,EAAAxI,CAAA6J,EAAA,GAA1BN,EAA0BO,EAAA,GAAjBC,EAAiBD,EAAA,GACjEE,IAA8BT,EAAL,GAAgBd,EAtE9B,GAwEjB,OACE5F,EAAAC,EAAAC,cAAA,OACEkH,IAAKV,EACLpB,UAAU,oBACV+B,MAAO,CACLrD,MAAK,GAAAnE,OAAKsH,EAAL,MACLlD,OAAM,GAAApE,OAAKsH,EAAL,MACNG,SA/EW,GA+Ec5I,GA/Ed,GA+EkC,GAAM,MAGrDsB,EAAAC,EAAAC,cAAA,OAAKoF,UAAWiC,IAAW,OAAQ,CAAEC,IAAKN,EAhF9BO,aAqFZC,EAAsB9B,EAAI,GAE1B+B,EAAcC,YAAc/G,EAAOsF,OAAQ,KAAM,CACrD0B,KAAM,SAAAC,GAAI,MAAK,CACbC,gBAAiBD,EACjB9D,MAAO0D,EACPzD,OAAQyD,EACRM,MAAO,IAETC,MAAO,CAAED,MAAQhC,EAAY0B,EAAuB,KACpDQ,MAAO,CAAEF,MAAO,GAChBG,OAAQA,IAAOC,OAGjB,OACEpI,EAAAC,EAAAC,cAAA,OAAKoF,UAAU,WACZwB,EACAa,EAAYnJ,IAAI,SAAA6J,GAA0BA,EAAvBP,KAAuB,IAAjBQ,EAAiBD,EAAjBC,MAAOlB,EAAUiB,EAAVjB,IAAUmB,EACbD,EAApBN,EADiCO,EACjCP,MAAUX,EADuBlK,OAAAqL,EAAA,EAAArL,CAAAoL,EAAA,WAGzC,OACEvI,EAAAC,EAAAC,cAACuI,EAAA,EAASC,IAAV,CACEpD,UAAU,gBACV8B,IAAKA,EACLC,MAAKlK,OAAAC,EAAA,EAAAD,CAAA,GACAkK,EADA,CAEHsB,UAAWC,YACT,CAACZ,GACD,SAACa,GAAD,oCAAAhJ,OAA6CgJ,EAA7C,wBCzHhB,IAAMC,EAA0B,KAC1BC,EAAsB,IACtBC,EAAe,KACfC,GAAY,GACZC,EAAW,GACXC,EAAkB,GAET,SAASC,EAAaC,GACnC,IAAIC,ECL+BC,EDM/BC,EAA4BrL,KAAKC,MACjCqL,EAAI,EAEFC,GCT6BH,EDSSJ,ECRrC,IAAIQ,IAAe,GAAIJ,EAAUA,IDSlCK,ECND,SAAsBF,GAC3B,IAMQG,EANc,IAAIF,IACxBD,EAAeI,WAAWC,OAC1BL,EAAeI,WAAWE,cAC1BN,EAAeI,WAAWG,gBAGpBJ,SACFK,EAAY,IAAIC,aAA+B,EAAlBN,EAAS9M,QAE5C8M,EAAStK,QAAQ,SAAC6K,EAAQ1L,GACxB0L,EAAOC,QAAQH,EAAe,EAAJxL,KAG5B,IAAM4L,EAAW,IAAIC,IACrBD,EAASE,aAAa,WAAY,IAAIC,IAAgBP,EAAW,IAChEI,EAASI,WAAWC,SAA6BC,SAAU,EAE5D,IAAMC,EAAW,IAAIC,IAAe,CAClClF,KAAM,GACNpH,KAAK,IAAIuM,KAAgBC,KAAK,2BAC9BC,UAAW,GACXpG,MAAO,QACPqG,aAAa,IAGf,OAAO,IAAIC,IAAOb,EAAUO,GDpBZO,CAAa1B,GACvB2B,EElBD,SAAsBC,GAC3B,IAAMD,EAAS,IAAIE,IACjB,GACApP,OAAOwH,WAAaxH,OAAOyH,YAC3B,GACA,KAMF,OAHAyH,EAAOV,SAASa,IAAI,EAAGF,EAAW,GAClCD,EAAOI,OAAO,IAAIC,IAAQ,EAAG,EAAG,IAEzBL,EFOQM,CAAa5C,GACtB6C,EGnBD,WAA0B,IAAAlI,EACKvH,OAA5BwH,EADuBD,EACvBC,WAAYC,EADWF,EACXE,YAEdgI,EAAW,IAAIC,IAAc,CAAEC,OAAO,IAK5C,OAJAF,EAASG,cAAc5P,OAAO2H,kBAC9B8H,EAAS/F,QAAQlC,EAAYC,GAC7BgI,EAASI,cAAc,EAAU,GAE1BJ,EHWUK,GACjB5C,EAAkB6C,YAAYN,EAASO,YAEvC,IAAMC,EAAQ,IAAIC,IAClBD,EAAME,IAAI1C,GAIV,IAAM2C,EAAQ,IAAIC,IAEZC,EAAkBtK,EA0CxB,WACEkJ,EAAOqB,OAASvQ,OAAOwH,WAAaxH,OAAOyH,YAC3CyH,EAAOsB,yBAEPf,EAAS/F,QAAQ1J,OAAOwH,WAAYxH,OAAOyH,aAC3CgI,EAASgB,OAAOR,EAAOf,KAGzB,SAASwB,IAC0B,WAA7BC,SAASC,gBACXR,EAAMS,OAENT,EAAMU,QAIV,OAzDA9Q,OAAOmH,iBAAiB,SAAUmJ,GAClCK,SAASxJ,iBAAiB,mBAAoBuJ,GAwDvC,CACLN,QACA7C,iBACAE,UACAsD,QA1DF,SAASA,IACP,IAAMC,EAAQZ,EAAMa,WAEpBxD,EAAQyD,QAAQpE,EAAWkE,GAEvBhP,KAAKC,MAAQoL,EAA4BV,GAC3Cc,EAAQ0D,QAAQpE,EAAWiE,IAG7B1D,GAAK0D,IAEc,EAAVxO,KAAK4O,KACZ9D,EAAI,GAGN4B,EAAOmC,WAAW7O,KAAK8O,IAAIhE,GAAKT,GAChCqC,EAAOqC,WAAW/O,KAAK8O,IAAIhE,GAAKT,GAChCqC,EAAOsC,WAAWhP,KAAK8O,IAAIhE,GAAKT,EAAe,GAE/C4C,EAASgB,OAAOR,EAAOf,GACvB/B,EAAmBnN,OAAOyR,sBAAsBV,IAuChDW,QApCF,WACE1R,OAAO2R,qBAAqBxE,GAC5BnN,OAAOoH,oBAAoB,SAAUkJ,GACrCK,SAASvJ,oBAAoB,mBAAoBsJ,GACjDxD,EAAkB0E,YAAYnC,EAASO,YAEvCC,EAAM4B,OAAOpE,GAEbA,EAAQU,SAAS2D,UAChBrE,EAAQiB,SAA4BoD,UACrCvE,EAAeuE,UAEfrC,EAASqC,sBI+BEzK,IA3F0C,SAAA1F,GAAc,IAAXN,EAAWM,EAAXN,KACpD0Q,EAAclQ,iBAAuB,MACrCmQ,EAAkBnQ,mBAClBoQ,EAAsBpQ,mBACtBqQ,EAAwBrQ,mBACxBsQ,EAAyBtQ,mBACzBuQ,EAAiBvQ,iBAAiB,IAAI0E,MAAMlF,EAAKT,QAAQyR,KAAK,MAkFpE,OAhFApL,oBAAU,WACR,IACMqL,EAAerF,EADK8E,EAAY5O,SAGtC6O,EAAgB7O,QAAUmP,EAE1B,IAAMC,EAAkBD,EAAa7E,QAAQU,SAmB7C,OAjBA+D,EAAsB/O,QAAUX,KAAK6B,MACnChD,EAAKT,OAAS0R,EAAa/E,eAAeI,WAAWE,eAKvDsE,EAAuBhP,SACpBmP,EAAa/E,eAAeG,SAAS9M,OAAS,IAC9C0R,EAAa/E,eAAeI,WAAWE,cAAgB,GAE1DoE,EAAoB9O,QAAWoP,EAAgBhE,WAAWC,SACvDgE,MAAuBC,MAAM,GAEhCH,EAAalC,MAAMU,QAEnBwB,EAAavB,UAENuB,EAAaZ,SACnB,IAEHzK,oBAAU,WACR,IACMyL,EAAmBlQ,KAAK6B,MAAMhD,EAAKT,OAAS,GAElDwR,EAAejP,QAAQwP,OAAO,EA5Cb,GA6CjBP,EAAejP,QAAUiP,EAAejP,QAAQO,OAC9C,IAAI6C,MA9CW,GA8CQ8L,KAAKhR,EAAKqR,KAQnC,IALA,IAAMH,EAAkBP,EAAgB7O,QAASsK,QAAQU,SACnDyE,EAAyBL,EAAgBM,aAAa,YACzDL,MAECjQ,EAAI,EACDA,EAAI0P,EAAoB9O,QAASvC,QAAQ,CAE9C,IAAMkS,EAAqBtQ,KAAKuQ,KAC9BvQ,KAAK6B,MAAM9B,EAAI,GAAK4P,EAAuBhP,SAGvC6P,EAAYF,EAAqBZ,EAAsB/O,QACvD8P,EAAsBzQ,KAAKkD,IAC/BoN,EACAX,EAAuBhP,QAAW2P,GAM9BI,EAFJ1Q,KAAKC,IAAI2P,EAAejP,QAAQ6P,GAAa,KAAO,IAIlDC,EAtEgC,GACJ,EA0EhCL,EAAuBrQ,GAAK0P,EAAoB9O,QAASZ,GAAK2Q,EAC9DN,EAAuBrQ,EAAI,GACzB0P,EAAoB9O,QAASZ,EAAI,GAAK2Q,EACxCN,EAAuBrQ,EAAI,GACzB0P,EAAoB9O,QAASZ,EAAI,GAAK2Q,EAExC3Q,GAAK,EAKNgQ,EAAgBM,aACf,YACoBM,aAAc,GACnC,CAAC9R,IAEGwC,EAAAC,EAAAC,cAAA,OAAKoF,UAAU,UAAUC,IAAK2I,MClGhC,IAAMqB,EAAgB,sOAYhBC,EAAkB,oOCsCxB,SAASC,IACd,IAAMC,EAAU/Q,KAAK8B,SAAW,GAAM,YAAc,YAE9C6J,EAAW,IAAIqF,IAAc,GAAI,IAEjCC,EAAgB,IAAIC,IAAoB,CAC5CrR,KAAK,IAAIuM,KAAgBC,KAApB,iBAAAnL,OAA0C6P,IAC/CxE,aAAa,EACb5D,QAAS,IACTwI,WAAW,IAGbxF,EAASyF,QAAwB,IAAhBpR,KAAK8B,UAEtB,IAAMuP,EAAQ,IAAIC,IAAK3F,EAAUsF,GAE3BM,EAA4B,GAAhBvR,KAAK8B,SAAgB,GAQvC,OANAuP,EAAMrF,SAASa,IACG,IAAhB7M,KAAK8B,SAAiB,GACN,IAAhB9B,KAAK8B,SAAiB,GACtB9B,KAAK8B,SAAW,GAAMyP,GAAaA,GAG9BF,ECpEF,SAASG,EAAuBtL,EAAe1E,GACpD,OAAO,IAAIiQ,IAAiBvL,EAAO1E,GCSrC,IAAMkQ,EAAa,IACbC,EAAc,GACdC,EAAiB,EACjBC,EAAiB,GACjBC,EAAmB,IACnBxH,EAAW,KACXC,EAAW,KACXwH,EAAqB,MACrBC,GAAuB,SAEd,SAASvH,GACtBC,EACAuH,GAEA,IAAItH,EAEEsC,EC9BD,WAA0B,IAAAlI,EACKvH,OAA5BwH,EADuBD,EACvBC,WAAYC,EADWF,EACXE,YAEdgI,EAAW,IAAIC,IAAc,CAAEgF,WAAW,IAKhD,OAJAjF,EAASG,cAAc5P,OAAO2H,kBAC9B8H,EAAS/F,QAAQlC,EAAYC,GAC7BgI,EAASI,cAAc,GAAS,GAEzBJ,EDsBUK,GACjB5C,EAAkB6C,YAAYN,EAASO,YACvC,IAAMd,EE/BS,IAAIE,IACjB,GACApP,OAAOwH,WAAaxH,OAAOyH,YAC3B,EACA,KF4BIwI,EAAQ,IAAIC,IAEZyE,EFxBD,SAAqBC,GAM1B,IALA,IAAMzG,EAAW,IAAIC,IAEfL,EAAY,IAAIC,aAAyB,EAAZ4G,GAE/BrS,EAAI,EACDA,EAAIqS,GAET7G,EAAUxL,KAAuB,IAAhBC,KAAK8B,SAAiB,GACvCyJ,EAAUxL,KAAuB,IAAhBC,KAAK8B,SAAiB,GACvCyJ,EAAUxL,KAAuB,IAAhBC,KAAK8B,SAAiB,GAGzC6J,EAASE,aAAa,WAAY,IAAIC,IAAgBP,EAAW,IAKjE,IAHA,IAAM8G,EAAS,IAAI7G,aAAkD,EAArCG,EAASI,WAAWC,SAAS3L,OAEzDiS,EAAI,EACDA,EAAID,EAAOjU,QAChBiU,EAAOC,GAAKtS,KAAK8B,SACjBwQ,GAAK,EAGP3G,EAASE,aAAa,QAAS,IAAIC,IAAgBuG,EAAQ,IAE3D,IAAME,EAAiB,IAAIC,IAAe,CACxCC,SAAU,CACRvM,MAAO,CAAE5H,KAAM,IAAKoU,MAAO,IAAIC,IAAM,YAEvCC,aAAchC,EACdiC,eAAgBhC,EAChBtE,aAAa,IAGf,OAAO,IAAIC,IAAOb,EAAU4G,GEVdO,CAAYpB,GAC1BjE,EAAME,IAAIwE,GAKV,IAHA,IAAMY,EAAa,IAAIC,IAEnBC,EAAa,EACVA,GAActB,GAAa,CAChC,IAAMN,EAAQP,IACdiC,EAAWpF,IAAI0D,GACf4B,GAAc,EAGhBxF,EAAME,IAAIoF,GAEV,IDjDiC7M,EAAe1E,ECiD1C0R,GDjD2BhN,ECiDC,SDjDc1E,ECiDJyQ,EDhDrC,IAAIkB,IAAajN,EAAO1E,ICiD/BiM,EAAME,IAAIuF,GAEV,IAAME,EAAc5B,EAAuBO,EAAoB,GAC/DqB,EAAYpH,SAASa,IAAI,EAAG,EAAG,GAC/BY,EAAME,IAAIyF,GAEV,IAAMC,EAAS7B,EAAuBQ,GAAsBC,GAC5DoB,EAAOrH,SAASa,IAAI,EAAG,EAAG,GAC1BY,EAAME,IAAI0F,GAMV,IAHA,IAAMC,EAAcnB,EAAMxG,SAA4BI,WAAWoB,MAC3DoG,EAAiB,IAAI/H,aAAa8H,EAAWjT,OAE1CN,EAAI,EAAGA,EAAIwT,EAAenV,OAAQ2B,IAGzCwT,EAAexT,GAAKC,KAAK8B,SAAW,GAAM,GAAK,EAKjD,IAAM8L,EAAQ,IAAIC,IAEZC,EAAkBtK,EA4DxB,WACEkJ,EAAOqB,OAASvQ,OAAOwH,WAAaxH,OAAOyH,YAC3CyH,EAAOsB,yBAEPf,EAAS/F,QAAQ1J,OAAOwH,WAAYxH,OAAOyH,aAC3CgI,EAASgB,OAAOR,EAAOf,KAGzB,SAASwB,IAC0B,WAA7BC,SAASC,gBACXR,EAAMS,OAENT,EAAMU,QAIV,OA3EA9Q,OAAOmH,iBAAiB,SAAUmJ,GAClCK,SAASxJ,iBAAiB,mBAAoBuJ,GA0EvC,CACLN,QACAW,QA1EF,SAASA,IACP,IAAMC,EAAQZ,EAAMa,WAEpB0D,EAAMxD,QAAQpE,EAAWiE,GACzB2D,EAAMzD,QAAQpE,EAAWkE,GAEzBuE,EAAWpE,QAAmB,GAAXpE,EAAgBiE,GACnCuE,EAAWrE,QAAmB,EAAXpE,EAAekE,GAClCuE,EAAW3B,QAAmB,EAAX7G,EAAeiE,GAElCuE,EAAWS,SAAS5S,QAAQ,SAAAyQ,GACzBA,EAAevE,OAAOJ,EAAOV,YAKhC,IAAK,IAAIjM,EAAI,EAAGA,EAAIuT,EAAWjT,MAAON,IAChCwT,EAAexT,GAAK,GACrBuT,EAAWtD,MAAuBjQ,IAAM,EAAI+R,EAAmBtD,EAC3D8E,EAAWtD,MAAuBjQ,GAAK6R,IAC1C2B,EAAexT,IAAM,KAGtBuT,EAAWtD,MAAuBjQ,IAAM,EAAI+R,EAAmBtD,EAC3D8E,EAAWtD,MAAuBjQ,GAAK8R,IAC1C0B,EAAexT,GAAK,IAKzBuT,EAA+B3C,aAAc,EAE9C1D,EAASgB,OAAOR,EAAOf,GACvB/B,EAAmBnN,OAAOyR,sBAAsBV,IA0ChDW,QAvCF,WACE1R,OAAO2R,qBAAqBxE,GAC5BnN,OAAOoH,oBAAoB,SAAUkJ,GACrCK,SAASvJ,oBAAoB,mBAAoBsJ,GACjDxD,EAAkB0E,YAAYnC,EAASO,YAEvCC,EAAM4B,OAAO8C,GACbA,EAAMxG,SAAS2D,UACd6C,EAAMjG,SAA4BoD,UAEnC7B,EAAM4B,OAAO0D,GACbA,EAAWS,SAAS5S,QAAQ,SAAAyQ,GACzBA,EAAe1F,SAAS2D,UACvB+B,EAAenF,SAA4BoD,YAG/CrC,EAASqC,UACTmE,QAAQC,IAAI,2BAuBZL,oBGlGWxO,KAjDwC,SAAA1F,GAGjD,IAFJN,EAEIM,EAFJN,KACA2C,EACIrC,EADJqC,UAEM+N,EAAclQ,iBAAuB,MACrCmQ,EAAkBnQ,mBAClBsU,EAAoBtU,iBAAeG,KAAKC,OAwC9C,OAtCAgF,oBAAU,WACR,IACMqL,EAAerF,GADK8E,EAAY5O,QAXd,GAmBxB,OALA6O,EAAgB7O,QAAUmP,EAE1BA,EAAalC,MAAMU,QACnBwB,EAAavB,UAENuB,EAAaZ,SACnB,IAEHzK,oBAAU,WACR,IAAMhF,EAAMD,KAAKC,MAEjB,KAAIA,EAAMkU,EAAkBhT,SA3BW,IA2BvC,CAHc,IAON0S,EAAW7D,EAAgB7O,QAA3B0S,OAEFO,EAAwBP,EAAO7R,UAEjCqS,EAAoBrS,EAAY,GAjCZ,EAoCtBqS,EAAoBD,EArCiB,MAwCrCC,EACED,EAzCmC,KA4CvCP,EAAO7R,UAAYqS,EAEnBF,EAAkBhT,QAAUlB,IAC3B,CAACZ,IAEGwC,EAAAC,EAAAC,cAAA,OAAKoF,UAAU,QAAQC,IAAK2I,sDCvD/BuE,GAAiC,GAEjBC,GAAtB,WAQE,SAAAA,EAAsBxO,GAAgC/G,OAAAwV,GAAA,EAAAxV,CAAA0F,KAAA6P,GAAA7P,KAAAqB,MAAArB,KAP5C+P,iBAO2C,EAAA/P,KAN3CgQ,kBAM2C,EAAAhQ,KAL3CiQ,yBAK2C,EAAAjQ,KAJ3CkQ,yBAI2C,EAAAlQ,KAH3CmQ,0BAG2C,EAAAnQ,KAF3CoQ,mBAE2C,EACnDpQ,KAAK+P,YAAc1O,EAAIH,OAAOC,MAC9BnB,KAAKgQ,aAAe3O,EAAIH,OAAOE,OAC/BpB,KAAKiQ,oBAAsBjQ,KAAK+P,YAAc,EAC9C/P,KAAKkQ,oBAAsBlQ,KAAKgQ,aAAe,EAC/ChQ,KAAKmQ,qBAAuBrU,KAAK6B,MAC/B7B,KAAKmD,IAAIe,KAAK+P,YAAa/P,KAAKgQ,cAC9BJ,IAEJ5P,KAAKoQ,cAAgBtU,KAAK6B,MAAMqC,KAAKmQ,qBAAuB,GAC5D9O,EAAIgP,OAlBR,OAAA/V,OAAAgW,GAAA,EAAAhW,CAAAuV,EAAA,EAAAtL,IAAA,SAAAiK,MAAA,WAuBIxO,KAAKqB,IAAIkP,YAvBb,CAAAhM,IAAA,OAAAiK,MAAA,SA2BO5O,QA3BPiQ,EAAA,GCgCaW,GAAb,WAWE,SAAAA,EAAYC,GAA+BnW,OAAAwV,GAAA,EAAAxV,CAAA0F,KAAAwQ,GAAAxQ,KAVnCqB,SAUkC,EAAArB,KATlCgQ,kBASkC,EAAAhQ,KAPnCmC,OAOmC,EAAAnC,KANnCsC,OAMmC,EAAAtC,KALnCmB,WAKmC,EAAAnB,KAJnCoB,YAImC,EAAApB,KAHnCgC,WAGmC,EAAAhC,KAFnC0Q,OAAkB,GAGvB1Q,KAAKqB,IAAMoP,EAAUpP,IACrBrB,KAAKgQ,aAAeS,EAAUT,aAC9BhQ,KAAKmC,EAAIsO,EAAUtO,EACnBnC,KAAKsC,EAAImO,EAAUnO,EACnBtC,KAAKmB,MAAQsP,EAAUtP,MACvBnB,KAAKoB,OAASqP,EAAUrP,OACxBpB,KAAKgC,MAAQyO,EAAUzO,MAlB3B,OAAA1H,OAAAgW,GAAA,EAAAhW,CAAAkW,EAAA,EAAAjM,IAAA,iBAAAiK,MAAA,WA8DI,IAvCe,IACPwB,EAAgChQ,KAAhCgQ,aAAc7O,EAAkBnB,KAAlBmB,MAAOC,EAAWpB,KAAXoB,OAEvBuP,EACJ5R,EA1DyB,IACA,MA0DzBqC,EAEIwP,EACJ7R,EAxD0B,IACA,KAwD1BqC,EAEIyP,EAAiB9R,EA/DE,EACA,IAmEnB+R,EACJ/R,EA/D+B,IACA,IAiE3BoC,EAEA4P,EACJhS,EAnEiC,KACA,IAqE7BqC,EAEA4P,EACJjS,EA/EsB,IACA,KA8E0CoC,EAE5D8P,GACHjR,KAAKmB,MAA2B,EAAnB2P,EAAuBE,GAAYH,EAAiB,IAClEA,EAEIH,EAAkB,GACpBvO,EAAInC,KAAKmC,EAAI2O,EACbxO,EAAItC,KAAKsC,EAAIyO,EAEVzO,EAAmB,IAAf0N,GAEL7N,GAAKnC,KAAKmC,EAAInC,KAAKmB,MAAQ2P,GAE7B3O,EAAInC,KAAKmC,EAAI2O,EACbxO,GAAKqO,EAAcC,IAEnBF,EAAOtS,KAAK,CACV+D,IACAG,IACAnB,MAAO8P,EACP7P,OAAQuP,EACRO,KAAMpV,KAAK8B,SAAW,KAGxBuE,GAAK8O,EAAaD,GAItBhR,KAAK0Q,OAASA,IAjFlB,CAAAnM,IAAA,SAAAiK,MAAA,WAoFW,IACCnN,EAAoCrB,KAApCqB,IAAKc,EAA+BnC,KAA/BmC,EAAGG,EAA4BtC,KAA5BsC,EAAGnB,EAAyBnB,KAAzBmB,MAAOC,EAAkBpB,KAAlBoB,OAAQY,EAAUhC,KAAVgC,MAClCX,EAAIgP,OAGJhP,EAAIE,UAAYS,EAChBX,EAAIG,SAASW,EAAGG,EAAGnB,EAAOC,GAG1BC,EAAIE,UA7HY,qBAoHT,IAAA4P,GAAA,EAAAC,GAAA,EAAAC,OAAAlX,EAAA,IAUP,QAAAmX,EAAAC,EAAoBvR,KAAK0Q,OAAzBc,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAiC,KAAtBS,EAAsBN,EAAA9C,MAC3BoD,EAAMV,MACR7P,EAAIG,SAASoQ,EAAMzP,EAAGyP,EAAMtP,EAAGsP,EAAMzQ,MAAOyQ,EAAMxQ,SAZ/C,MAAAyQ,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAgBPhQ,EAAIkP,cApGRC,EAAA,GCnBauB,GAAb,SAAAC,GAGE,SAAAD,EAAY1Q,GAA+B,IAAA4Q,EAAA,OAAA3X,OAAAwV,GAAA,EAAAxV,CAAA0F,KAAA+R,IACzCE,EAAA3X,OAAA4X,GAAA,EAAA5X,CAAA0F,KAAA1F,OAAA6X,GAAA,EAAA7X,CAAAyX,GAAAK,KAAApS,KAAMqB,KAHAgR,OAAuB,GAI7BJ,EAAKK,oBAFoCL,EAH7C,OAAA3X,OAAAiY,GAAA,EAAAjY,CAAAyX,EAAAC,GAAA1X,OAAAgW,GAAA,EAAAhW,CAAAyX,EAAA,EAAAxN,IAAA,oBAAAiK,MAAA,WAWI,IAHkB,IAAAgE,EAAAxS,KACVqB,EAAmCrB,KAAnCqB,IAAK0O,EAA8B/P,KAA9B+P,YAAaC,EAAiBhQ,KAAjBgQ,aADRyC,EAAA,SAGT5W,GAKP,IAHA,IAAM6W,EAAoB,GACtBvQ,EAAI,EAEDA,EAAI4N,GAAa,CACtB,IAAM5O,EACJpC,EAxBuB,IACA,IA0BrB,GACEgR,EAEA3O,EACJrC,EAhCwB,GADA,IAoCtB,GACEiR,EAEA2C,EACJ5T,EApCqB,IACA,KAoCrBgR,EAEI6C,EAAW,IAAIpC,GAAS,CAC5BlO,EAAG0N,EAAe5O,EAClBY,MAAO3D,IACPgD,MACA2O,eACA7N,IACAhB,QACAC,WAGFsR,EAAMtU,KAAKwU,GAEXzQ,GAAKhB,EAAQwR,EAIf,IAAME,EAAmBH,EAAM,GAEzBI,EAAU/T,EACW,IAAzB8T,EAAiB1R,MACQ,IAAzB0R,EAAiB1R,OAGnBuR,EAAMhW,QAAQ,SAAAkW,GAAQ,OAAKA,EAASzQ,GAAK2Q,IACzCN,EAAKH,OAAOjU,KAAKsU,IAhDV7W,EAAI,EAAGA,EAbK,EAaiBA,IAAK4W,MAX/C,CAAAlO,IAAA,SAAAiK,MAAA,WAgEIlU,OAAAyY,GAAA,EAAAzY,QAAA6X,GAAA,EAAA7X,CAAAyX,EAAAiB,WAAA,SAAAhT,MAAAoS,KAAApS,MAIA,IALO,IAGCqB,EAA2CrB,KAA3CqB,IAAK0O,EAAsC/P,KAAtC+P,YAAaC,EAAyBhQ,KAAzBgQ,aAAcqC,EAAWrS,KAAXqS,OAE/BxW,EAAI,EAAGA,EAAIwW,EAAOnY,OAAQ2B,IAAK,CACtC,IAAMoX,EAAeZ,EAAOxW,GAExBA,IAAMwW,EAAOnY,OAAS,GACxB+Y,EAAavW,QAAQ,SAAAkW,GAAQ,OAAIA,EAASM,mBAJN,IAAA/B,GAAA,EAAAC,GAAA,EAAAC,OAAAlX,EAAA,IAOtC,QAAAmX,EAAAC,EAAuB0B,EAAvBzB,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAqC,CAAAG,EAAA9C,MAC1BzE,UAR2B,MAAA8H,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,GAYtChQ,EAAIE,UA1FkB,wBA2FtBF,EAAIG,SAAS,EAAG,EAAGuO,EAAaC,QAjFtC+B,EAAA,CAA0BlC,ICdpBsD,GAAuB,GAGvBC,cAGJ,SAAAA,EACU/R,EACA2O,EACD7N,EACAG,EACAlB,GACN9G,OAAAwV,GAAA,EAAAxV,CAAA0F,KAAAoT,GAAApT,KAAAqB,MAAArB,KAAAgQ,eAAAhQ,KAAAmC,IAAAnC,KAAAsC,IAAAtC,KAAAoB,SAAApB,KARKqT,iBAQN,EACArT,KAAKqT,YAAc/X,KAAKC,wDAGrBA,GACH,IAAM+X,EAAY/X,EAAMyE,KAAKqT,YAC7BrT,KAAKsC,EAAIxG,KAAK6B,MAAO2V,EAnBJ,IAmBgCtT,KAAKgQ,+CAG/C,IACC3O,EAAsBrB,KAAtBqB,IAAKc,EAAiBnC,KAAjBmC,EAAGG,EAActC,KAAdsC,EAAGlB,EAAWpB,KAAXoB,OAEnBC,EAAIY,YAvBe,OAwBnBZ,EAAIO,UAAY,EAEhBP,EAAIa,YACJb,EAAIe,OAAOD,EAAGG,GACdjB,EAAIkB,OAAOJ,EAAGG,EAAIlB,GAClBC,EAAImB,kBAIK+Q,GAAb,WAME,SAAAA,EAAoBlS,GAAgC/G,OAAAwV,GAAA,EAAAxV,CAAA0F,KAAAuT,GAAAvT,KAAAqB,MAAArB,KAL5CwT,UAAwB,GAKmBxT,KAJ3CyT,oBAI2C,EAAAzT,KAH5C+P,iBAG4C,EAAA/P,KAF5CgQ,kBAE4C,EACjDhQ,KAAK+P,YAAc1O,EAAIH,OAAOC,MAC9BnB,KAAKgQ,aAAe3O,EAAIH,OAAOE,OAC/BpB,KAAKyT,eAAiB3X,KAAK6B,MAAMqC,KAAKgQ,aAAemD,IATzD,OAAA7Y,OAAAgW,GAAA,EAAAhW,CAAAiZ,EAAA,EAAAhP,IAAA,OAAAiK,MAAA,WAgBI,IAJK,IACGgF,EAA4BxT,KAA5BwT,UAAWxD,EAAiBhQ,KAAjBgQ,aACbzU,EAAMD,KAAKC,MAERM,EAAI2X,EAAUtZ,OAAS,EAAG2B,GAAK,EAAGA,IAAK,CAC9C,IAAM6X,EAAWF,EAAU3X,GAC3B6X,EAASC,KAAKpY,GAGVmY,EAASpR,GAAK0N,GAChBwD,EAAUvH,OAAOpQ,EAAG,MAtB5B,CAAA0I,IAAA,MAAAiK,MAAA,WA2BQ,IACInN,EAA8DrB,KAA9DqB,IAAK0O,EAAyD/P,KAAzD+P,YAAaC,EAA4ChQ,KAA5CgQ,aAAcwD,EAA8BxT,KAA9BwT,UAAWC,EAAmBzT,KAAnByT,eAE7CG,EAAY9X,KAAK6B,MAAM7B,KAAK8B,UAAYmS,EAAc,GAAK,GAC3DtH,GAAauH,EAAemD,GAElCK,EAAUpV,KACR,IAAIgV,GAAS/R,EAAK2O,EAAc4D,EAAWnL,EAAWgL,MAlC5D,CAAAlP,IAAA,SAAAiK,MAAA,WAuCIxO,KAAKwT,UAAU9W,QAAQ,SAAAgX,GAAQ,OAAIA,EAAS3J,eAvChDwJ,EAAA,GC9BaM,GAAb,SAAA7B,GACE,SAAA6B,EAAYxS,GAAgC,OAAA/G,OAAAwV,GAAA,EAAAxV,CAAA0F,KAAA6T,GAAAvZ,OAAA4X,GAAA,EAAA5X,CAAA0F,KAAA1F,OAAA6X,GAAA,EAAA7X,CAAAuZ,GAAAzB,KAAApS,KACpCqB,IAFV,OAAA/G,OAAAiY,GAAA,EAAAjY,CAAAuZ,EAAA7B,GAAA1X,OAAAgW,GAAA,EAAAhW,CAAAuZ,EAAA,EAAAtP,IAAA,SAAAiK,MAAA,WAMIlU,OAAAyY,GAAA,EAAAzY,QAAA6X,GAAA,EAAA7X,CAAAuZ,EAAAb,WAAA,SAAAhT,MAAAoS,KAAApS,MADO,IAGCqB,EAAmCrB,KAAnCqB,IAAK0O,EAA8B/P,KAA9B+P,YAAaC,EAAiBhQ,KAAjBgQ,aAEpB8D,EAAiB9T,KAAKqB,IAAI0S,qBAAqB,EAAG,EAAG,EAAG/D,GAC9D8D,EAAeE,aAAa,EAdP,WAerBF,EAAeE,aAAa,EAdT,WAenB3S,EAAIE,UAAYuS,EAChBzS,EAAIG,SAAS,EAAG,EAAGuO,EAAaC,OAdpC6D,EAAA,CAA0BhE,ICEpBoE,GAAqB,CACzBC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAGC,SAASC,GACdjT,EACAc,EACAG,EACAnB,EACAC,GAGA,IAFA8F,EAEAjN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFsBga,GACtBzR,EACAvI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACAoH,EAAIa,YAEJb,EAAIe,OAAOD,EAAI+E,EAAOgN,GAAI5R,GAC1BjB,EAAIkB,OAAOJ,EAAIhB,EAAQ+F,EAAOiN,GAAI7R,GAClCjB,EAAIkT,iBAAiBpS,EAAIhB,EAAOmB,EAAGH,EAAIhB,EAAOmB,EAAI4E,EAAOiN,IAEzD9S,EAAIkB,OAAOJ,EAAIhB,EAAOmB,EAAIlB,EAAS8F,EAAOkN,IAC1C/S,EAAIkT,iBACFpS,EAAIhB,EACJmB,EAAIlB,EACJe,EAAIhB,EAAQ+F,EAAOkN,GACnB9R,EAAIlB,GAGNC,EAAIkB,OAAOJ,EAAI+E,EAAOmN,GAAI/R,EAAIlB,GAC9BC,EAAIkT,iBAAiBpS,EAAGG,EAAIlB,EAAQe,EAAGG,EAAIlB,EAAS8F,EAAOmN,IAE3DhT,EAAIkB,OAAOJ,EAAGG,EAAI4E,EAAOgN,IACzB7S,EAAIkT,iBAAiBpS,EAAGG,EAAGH,EAAI+E,EAAOgN,GAAI5R,GAE1CjB,EAAImT,YACJnT,EAAIsK,OACJnJ,GAAUnB,EAAImB,SC1ChB,IAGaiS,GAAb,SAAAzC,GACE,SAAAyC,EAAYpT,GAAgC,OAAA/G,OAAAwV,GAAA,EAAAxV,CAAA0F,KAAAyU,GAAAna,OAAA4X,GAAA,EAAA5X,CAAA0F,KAAA1F,OAAA6X,GAAA,EAAA7X,CAAAma,GAAArC,KAAApS,KACpCqB,IAFV,OAAA/G,OAAAiY,GAAA,EAAAjY,CAAAma,EAAAzC,GAAA1X,OAAAgW,GAAA,EAAAhW,CAAAma,EAAA,EAAAlQ,IAAA,SAAAiK,MAAA,WAMIlU,OAAAyY,GAAA,EAAAzY,QAAA6X,GAAA,EAAA7X,CAAAma,EAAAzB,WAAA,SAAAhT,MAAAoS,KAAApS,MADO,IAILqB,EAIErB,KAJFqB,IACA4O,EAGEjQ,KAHFiQ,oBACAC,EAEElQ,KAFFkQ,oBACAC,EACEnQ,KADFmQ,qBAGF9O,EAAIE,UAlBmB,UAqBvBF,EAAIG,SACFyO,EAAsBE,EACtBD,EAAsB,EAAIC,EAC1BF,EAA6C,EAAvBE,EACtBD,EAA6C,EAAvBC,GAIxB9O,EAAIqT,UACFzE,EACAC,EAAsB,EACtBD,EACAC,GAIF,IAAMyE,EAAc7Y,KAAK6B,MAAMwS,EAAuB,GAEhDyE,EAAkC,EAAtB3E,EAA2B,EAAmB,EAAd0E,EAAmB,EAC/DE,EAAmC,EAAtB5E,EAA2B,EAAI0E,EAAc,EAC1DG,EAAO5E,EAAsB,EAAIC,EAEjC4E,EAAQ9E,EAAsBE,EAC9B6E,EAAkC,EAAtB9E,EAA2B,EAAmB,EAAdyE,EAAmB,EAC/DM,EAAqC,EAAtB/E,EAA2B,EAAIyE,EAAc,EAElEtT,EAAIG,SACFoT,EACAE,EACAH,EACAzE,EAA6C,EAAvBC,GAGxB9O,EAAIG,SACFqT,EACAC,EACAH,EACAzE,EAA6C,EAAvBC,GAGxB9O,EAAIG,SACFuT,EACAC,EACA/E,EAA6C,EAAvBE,EACtBwE,GAGFtT,EAAIG,SACFuT,EACAE,EACAhF,EAA6C,EAAvBE,EACtBwE,GAGFtT,EAAIE,UA1EwB,UA6E5BF,EAAIG,SACFyO,EAA6C,EAAvBE,EACtBD,EAAsB,EAA2B,EAAvBC,EAC1BF,EAA6C,EAAvBE,EACtBA,EAAuB,GAWzBmE,GACEjT,EACA4O,EAA6C,EAAvBE,EACC,EAAtBD,EAA2B,EAAIC,EAAuB,EACvDF,EAA6C,EAAvBE,EACtBA,EAZyC,CACzC+D,GAAI,EACJC,GAAI,EACJE,GAAIrU,KAAKoQ,cACTgE,GAAIpU,KAAKoQ,gBAaX/O,EAAIO,UAAY,EAChBP,EAAIY,YAvGwB,UAwG5BZ,EAAI6T,KACFjF,EAA8C,EAAvBE,EAA4B,EACnDD,EAAsB,EAA4B,EAAvBC,EAA4B,EACvDF,EAA8C,EAAvBE,EAA4B,EACnDD,EAA8C,EAAvBC,EAA4B,GAErD9O,EAAImB,SAEJnB,EAAI6T,KACFjF,EAA8C,EAAvBE,EAA4B,EACnDD,EAAsB,EAA4B,EAAvBC,EAA4B,EACvDF,EAA8C,GAAvBE,EAA6B,EACpDD,EAA8C,GAAvBC,EAA6B,GAEtD9O,EAAImB,aApHRiS,EAAA,CAA4B5E,ICEfsF,GAAb,SAAAnD,GACE,SAAAmD,EAAY9T,GAAgC,OAAA/G,OAAAwV,GAAA,EAAAxV,CAAA0F,KAAAmV,GAAA7a,OAAA4X,GAAA,EAAA5X,CAAA0F,KAAA1F,OAAA6X,GAAA,EAAA7X,CAAA6a,GAAA/C,KAAApS,KACpCqB,IAFV,OAAA/G,OAAAiY,GAAA,EAAAjY,CAAA6a,EAAAnD,GAAA1X,OAAAgW,GAAA,EAAAhW,CAAA6a,EAAA,EAAA5Q,IAAA,UAAAiK,MAAA,WAKY,IACAnN,EAAyDrB,KAAzDqB,IAAK0O,EAAoD/P,KAApD+P,YAAaC,EAAuChQ,KAAvCgQ,aAAcG,EAAyBnQ,KAAzBmQ,qBAElChO,EAAmB,EAAd4N,EAAmB,EAA2B,EAAvBI,EAC5B7N,EAAoB,EAAf0N,EAAoB,EAG/B3O,EAAIE,UAlBW,UAmBfF,EAAIG,SAASW,EAAGG,EAAGyN,EAAaC,GAGhC3O,EAAIY,YArBsB,UAsB1BZ,EAAIO,UAAY,EAChBP,EAAIa,YACJb,EAAI6T,KACF/S,EAAIgO,EACJ7N,EAAI6N,EACJJ,EACAC,GAEF3O,EAAImB,SAGJ,IACM4S,EACJjT,EAAIgO,EAAuC,GAFxBJ,GAAe5N,EAAIgO,IAEU,EAElD9O,EAAIa,YACJb,EAAIe,OAAOgT,EAAuB9S,EAA2B,IAAvB6N,GACtC9O,EAAIkB,OAAOwN,EAAazN,EAA2B,IAAvB6N,GAC5B9O,EAAIO,UAAoC,EAAvBuO,EAA4B,EAC7C9O,EAAImB,SAGJnB,EAAIa,YACJb,EAAIe,OAAOD,EAAIgO,EAAsB7N,EAA2B,EAAvB6N,GACzC9O,EAAIkB,OAAOwN,EAAazN,EAA2B,EAAvB6N,GAC5B9O,EAAIO,UAAY,EAChBP,EAAImB,SAGJnB,EAAIa,YACJb,EAAIe,OAAOgT,EAAuB9S,EAA2B,IAAvB6N,GACtC9O,EAAIkB,OAAOwN,EAAazN,EAA2B,IAAvB6N,GAC5B9O,EAAIO,UAAoC,EAAvBuO,EAA4B,EAC7C9O,EAAImB,WAlDR,CAAA+B,IAAA,SAAAiK,MAAA,WAqDW,IACCnN,EAAyDrB,KAAzDqB,IAAK0O,EAAoD/P,KAApD+P,YAAaC,EAAuChQ,KAAvCgQ,aAAcG,EAAyBnQ,KAAzBmQ,qBAMlCkF,EAAsC,IAAvBlF,EACfmF,EAA+B,GAAftF,EAChBuF,EAN0B,EAAdxF,EAAmB,EAA2B,EAAvBI,EAMU,EAAvBA,EACtBqF,EAN2B,EAAfxF,EAAoB,EAMVsF,EAE5BjU,EAAIE,UArEa,OAsEjBF,EAAIG,SAAS+T,EAAUC,EAAUH,EAAcC,GAG/C,IAAMG,EAAe3Z,KAAKkD,IAAIqW,EAAcC,GAAiB,EACvDI,EAAgBH,EAAWF,EAAe,EAC1CM,EAAgBH,EAA0B,EAAfC,EAEjCpU,EAAIE,UA3EkB,OA4EtBF,EAAIa,YACJb,EAAIuU,IAAIF,EAAeC,EAAeF,EAAc,EAAa,EAAV3Z,KAAK4O,IAC5DrJ,EAAIsK,OAGJ,IAAMkK,EAAe1F,EAAuB,GAC5C9O,EAAIE,UAlFkB,OAoFtBF,EAAIG,SACF+T,EAAWM,EACXL,EACAK,EACAP,GAGFjU,EAAIG,SACF+T,EAAWF,EACXG,EACAK,EACAP,GAIF,IAAMQ,EAAQP,EAAWF,EAAeQ,EAClCE,EAA6B,GAAhBT,EACbU,EAAQR,EAAWF,EAAgBS,EAEzC1U,EAAIE,UAzGa,OA0GjBF,EAAIG,SAASsU,EAAOE,EAAOjG,EAAagG,GAExC,IAAME,EAAcH,EAAQ3F,EAAuB,EAEnD9O,EAAIE,UA7GoB,OA8GxBF,EAAIY,YA7GkB,OA8GtBZ,EAAIO,UAAYuO,EAAuB,EACvC9O,EAAIa,YACJb,EAAI6T,KACFe,EACAD,EAA+B,IAAvB7F,EACRJ,EACa,IAAbgG,GAEF1U,EAAIsK,OACJtK,EAAImB,SAEJnB,EAAIE,UAzHkB,OA0HtBF,EAAIG,SACFyU,EACAD,EAAQ7F,EACRJ,EACAI,EAAuB,GAGzB,IAAM+F,EAAgBF,EAAQD,EAAoC,GAAvB5F,EAC3C9O,EAAIG,SACFsU,EAA+B,EAAvB3F,EACR+F,EACAnG,EACAI,EAAuB,GAGzB9O,EAAIE,UA1IoB,OA2IxB,IAAM4U,EAAahG,EAAuB,EACpCiG,EAAQN,EAAQ3F,EAChBkG,EAAQH,EAAgB/F,EAAuB,EACrD9O,EAAIa,YACJb,EAAIuU,IAAIQ,EAAOC,EAAOF,EAAY,EAAa,EAAVra,KAAK4O,IAC1CrJ,EAAIsK,OACJtK,EAAIiV,OACJjV,EAAIgP,OAEJhP,EAAIkV,UAAUH,EAAOC,GACrB,IAAMG,EAA4B,IAAV1a,KAAK4O,GACvB+L,EAAkB,CACtBtU,EAAGrG,KAAK4a,IAAIF,IAAoBL,EAAahG,EAAuB,GACpE7N,EAAGxG,KAAK8O,IAAI4L,IAAoBL,EAAahG,EAAuB,IAEhEwG,EAAgB,CACpBxU,EAAGrG,KAAK4a,IAAIF,GAAmBL,EAAa,EAC5C7T,EAAGxG,KAAK8O,IAAI4L,GAAmBL,EAAa,GAE9C9U,EAAIO,UAAYuO,EAAuB,EACvC9O,EAAIQ,QAAU,QACdR,EAAIa,YACJb,EAAIe,OAAOqU,EAAgBtU,EAAGsU,EAAgBnU,GAC9CjB,EAAIkB,OAAOoU,EAAcxU,EAAGwU,EAAcrU,GAC1CjB,EAAImB,SACJnB,EAAIkP,UAEJlP,EAAIkP,YAnKR,CAAAhM,IAAA,SAAAiK,MAAA,WAuKIlU,OAAAyY,GAAA,EAAAzY,QAAA6X,GAAA,EAAA7X,CAAA6a,EAAAnC,WAAA,SAAAhT,MAAAoS,KAAApS,MAEAA,KAAK4W,UACL5W,KAAK6W,SACL7W,KAAK2T,SA3KT,CAAApP,IAAA,OAAAiK,MAAA,WA8KuB,IAAhBtR,EAAgBjD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACXoH,EAAyDrB,KAAzDqB,IAAK0O,EAAoD/P,KAApD+P,YAAaC,EAAuChQ,KAAvCgQ,aAAcG,EAAyBnQ,KAAzBmQ,qBAMlCkF,EAAsC,IAAvBlF,EACfmF,EAA+B,GAAftF,EAChBuF,EAN0B,EAAdxF,EAAmB,EAA2B,EAAvBI,EAMU,EAAvBA,EACtBqF,EAN2B,EAAfxF,EAAoB,EAMVsF,EAGtBG,EAAe3Z,KAAKkD,IAAIqW,EAAcC,GAAiB,EACvDI,EAAgBH,EAAWF,EAAe,EAG1CyB,EAAehb,KAAKkD,IAAIqW,EAAcC,GAAiB,IACvDyB,EAAgBjb,KAAKmD,IACzBuW,EAAWsB,EAA8B,EAAfrB,EAC1BD,EAAWF,GAAiBwB,EAA8B,EAAfrB,IAG7CpU,EAAIY,YAxMoB,OAyMxBZ,EAAIE,UA1Ma,OA2MjBF,EAAIO,UAAYuO,EAAuB,EACvC9O,EAAIa,YACJb,EAAIuU,IAAIF,EAAeqB,EAAeD,EAAc,EAAa,EAAVhb,KAAK4O,IAC5DrJ,EAAIsK,OACJtK,EAAImB,SAEJnB,EAAIE,UA/MkB,OAgNtBF,EAAIa,YACJb,EAAIuU,IACFF,EACAqB,EACA7Z,EAAwB,IAAf4Z,EAAqC,GAAfA,EAC/B,EACU,EAAVhb,KAAK4O,IAEPrJ,EAAIsK,WAtNRwJ,EAAA,CAA6BtF,YCIhBmH,GAAb,SAAAhF,GAGE,SAAAgF,EAAY3V,GAA+B,IAAA4Q,EAAA3X,OAAAwV,GAAA,EAAAxV,CAAA0F,KAAAgX,IACzC/E,EAAA3X,OAAA4X,GAAA,EAAA5X,CAAA0F,KAAA1F,OAAA6X,GAAA,EAAA7X,CAAA0c,GAAA5E,KAAApS,KAAMqB,KAHR4V,SAAsB,GAEqB,IAAAC,EAAA5c,OAAA6c,GAAA,EAAA7c,QAAA6c,GAAA,EAAA7c,CAAA2X,IAGjChC,EAHiCiH,EAGjCjH,oBAAqBE,EAHY+G,EAGZ/G,qBAHY,OAMzC8B,EAAKgF,SAAS7Y,KAAK,CACjB+D,EAA0B,EAAtB8N,EAA2B,EAA2B,EAAvBE,EACnC7N,GAAI6N,EACJhP,MAA8B,EAAvBgP,EACP/O,OAA+B,EAAvB+O,IAGV8B,EAAKgF,SAAS7Y,KAAK,CACjB+D,EAAG8P,EAAKgF,SAAS,GAAG9U,EAA2B,EAAvBgO,EACxB7N,EAA0B,EAAvB6N,EACHhP,MAA8B,EAAvBgP,EACP/O,OAA+B,EAAvB+O,IAGV8B,EAAKgF,SAAS7Y,KAAK,CACjB+D,EAAG8P,EAAKgF,SAAS,GAAG9U,EAA2B,EAAvBgO,EACxB7N,EACE2P,EAAKgF,SAAS,GAAG3U,EACjB2P,EAAKgF,SAAS,GAAG7V,OACM,IAAvB+O,EACFhP,MAA8B,EAAvBgP,EACP/O,OAA+B,EAAvB+O,IA3B+B8B,EAH7C,OAAA3X,OAAAiY,GAAA,EAAAjY,CAAA0c,EAAAhF,GAAA1X,OAAAgW,GAAA,EAAAhW,CAAA0c,EAAA,EAAAzS,IAAA,QAAAiK,MAAA,WAkCU,IACEnN,EAA8BrB,KAA9BqB,IAAK8O,EAAyBnQ,KAAzBmQ,qBADPiH,EAE0BpX,KAAKiX,SAAS,GAAtC9U,EAFFiV,EAEEjV,EAAGG,EAFL8U,EAEK9U,EAAGnB,EAFRiW,EAEQjW,MAAOC,EAFfgW,EAEehW,OAErBC,EAAIgP,OACJhP,EAAIa,YACJb,EAAI6T,KAAK/S,EAAGG,EAAGnB,EAAOC,GACtBC,EAAIiV,OAEJ,IAAMe,EAAYhW,EAAI0S,qBAAqB5R,EAAGG,EAAGH,EAAGG,EAAIlB,GACxDiW,EAAUrD,aAAa,EAAG,WAC1BqD,EAAUrD,aAAa,EAAG,WAC1B3S,EAAIE,UAAY8V,EAChBhW,EAAIsK,OAKJ,IAHA,IAAM2L,EAAyC,GACzCC,EAAWpH,EAAuB,EAE/BtU,EAAI,EAAGA,EAAI,GAAIA,IACtByb,EAAMlZ,KAAK,CACT+D,EAAGrG,KAAK6B,MAAM7B,KAAK8B,SAAWuD,EAAQgB,GACtCG,EAAGxG,KAAK6B,MAAM7B,KAAK8B,SAAWwD,EAASkB,KAI3C,IHtBFkV,EACAC,EG0BE,IAJApW,EAAIE,UADc,UAElBF,EAAIY,YAFc,UAGlBZ,EAAIO,UAAY,EAET0V,EAAMpd,QAAQ,CACnB,IAAMwd,EAAcJ,EAAMK,MAC1BtW,EAAIa,YACJb,EAAIuU,IAAI8B,EAAYvV,EAAGuV,EAAYpV,EAAGiV,EAAW,EAAG,EAAa,EAAVzb,KAAK4O,IAC5DrJ,EAAIsK,OAEJ,QAAAiM,EAAA,EAAAA,EAAwBN,EAAxBpd,OAAA0d,IAA+B,CAA1B,IAAMC,EAAaP,EAAJM,GHjCxBJ,EGkC0BE,EHjC1BD,EGiCuCI,EH/BhC/b,KAAK4H,KACV5H,KAAK6H,IAAI8T,EAAOtV,EAAIqV,EAAOrV,EAAG,GAAKrG,KAAK6H,IAAI8T,EAAOnV,EAAIkV,EAAOlV,EAAG,IG8BflB,EAAS,IACrDC,EAAIa,YACJb,EAAIe,OAAOsV,EAAYvV,EAAGuV,EAAYpV,GACtCjB,EAAIkB,OAAOsV,EAAU1V,EAAG0V,EAAUvV,GAClCjB,EAAImB,WAKVnB,EAAIY,YAzFW,UA0FfZ,EAAIO,UAAYuO,EAAuB,IACvC9O,EAAIa,YACJb,EAAI6T,KAAK/S,EAAGG,EAAGnB,EAAOC,GACtBC,EAAImB,SAEJnB,EAAIkP,YAtFR,CAAAhM,IAAA,SAAAiK,MAAA,WAyFW,IACCnN,EAA8BrB,KAA9BqB,IAAK8O,EAAyBnQ,KAAzBmQ,qBADN2H,EAEyB9X,KAAKiX,SAAS,GAAtC9U,EAFD2V,EAEC3V,EAAGG,EAFJwV,EAEIxV,EAAGnB,EAFP2W,EAEO3W,MAAOC,EAFd0W,EAEc1W,OAErBC,EAAIgP,OAEJhP,EAAIa,YACJb,EAAI6T,KAAK/S,EAAGG,EAAGnB,EAAOC,GACtBC,EAAIiV,OAEJ,IAAMyB,EAAY1W,EAAI0S,qBAAqB5R,EAAGG,EAAGH,EAAGG,EAAIlB,GACxD2W,EAAU/D,aAAa,EAAG,WAC1B+D,EAAU/D,aAAa,EAAG,WAC1B3S,EAAIE,UAAYwW,EAChB1W,EAAIsK,OAIJtK,EAAIE,UADU,UAEdF,EAAIY,YAFU,UAGdZ,EAAIa,YACJb,EAAIuU,IAAIzT,EAAIhB,EAAQ,EAAGmB,EAAIlB,EAAS,EAAGA,EAAS,GAAI,EAAa,EAAVtF,KAAK4O,IAC5DrJ,EAAIsK,OAGJ,IACE,IAAIzE,EAASpL,KAAK6B,MAAMyD,EAAS,GACjC8F,GAAU9F,EAAS,EACnB8F,GAAUiJ,EAAuB,EACjC,CACA9O,EAAIa,YACJb,EAAIuU,IAAIzT,EAAIhB,EAAQ,EAAGmB,EAAIlB,EAAS,EAAG8F,EAAQ,EAAa,EAAVpL,KAAK4O,IACvDrJ,EAAImB,SAEJ,IAAMwV,EAAclc,KAAK8B,SAAW9B,KAAK4O,GAAK,EACxCuN,EAAU9V,EAAIhB,EAAQ,EAAIrF,KAAK8O,IAAIoN,GAAe9Q,EAClDgR,EAAU5V,EAAIlB,EAAS,EAAItF,KAAK4a,IAAIsB,GAAe9Q,EACnDiR,EAAerc,KAAK8B,UAAYuD,EAAQ,IAAMA,EAAQ,IAC5DE,EAAIa,YACJb,EAAIuU,IAAIqC,EAASC,EAASC,EAAc,EAAa,EAAVrc,KAAK4O,IAChDrJ,EAAIsK,OAGNtK,EAAIY,YAAc,UAClBZ,EAAIO,UAAYuO,EAAuB,IACvC9O,EAAIa,YACJb,EAAI6T,KAAK/S,EAAGG,EAAGnB,EAAOC,GACtBC,EAAImB,SAEJnB,EAAIkP,YA1IR,CAAAhM,IAAA,QAAAiK,MAAA,WA6IU,IACEnN,EAA8BrB,KAA9BqB,IAAK8O,EAAyBnQ,KAAzBmQ,qBADPiI,EAE0BpY,KAAKiX,SAAS,GAAtC9U,EAFFiW,EAEEjW,EAAGG,EAFL8V,EAEK9V,EAAGnB,EAFRiX,EAEQjX,MAAOC,EAFfgX,EAEehX,OAErBC,EAAIgP,OAGJhP,EAAIa,YACJb,EAAI6T,KAAK/S,EAAGG,EAAGnB,EAAOC,GACtBC,EAAIiV,OAEJ,IAAM+B,EAAYhX,EAAI0S,qBAAqB5R,EAAGG,EAAGH,EAAGG,EAAIlB,GACxDiX,EAAUrE,aAAa,EAAG,WAC1BqE,EAAUrE,aAAa,IAAM,WAC7B3S,EAAIE,UAAY8W,EAChBhX,EAAIsK,OAGJtK,EAAIE,UAAY,UAGhB,IAFA,IAES1F,EAAI,EAAGA,EAFE,GAEaA,IAAK,CAClC,IAAMyc,EAAQxc,KAAK6B,MAAM7B,KAAK8B,SAAWuD,EAAQgB,GAC3CoW,EAAQzc,KAAK6B,MAAM7B,KAAK8B,SAAWwD,EAASkB,GAC5C4E,EAASpL,KAAK6B,MAAsB,EAAhB7B,KAAK8B,SAAe,GAC9CyD,EAAIa,YACJb,EAAIuU,IAAI0C,EAAOC,EAAOrR,EAAQ,EAAa,EAAVpL,KAAK4O,IACtCrJ,EAAIsK,OAGNtK,EAAIY,YAAc,UAClBZ,EAAIO,UAAYuO,EAAuB,IACvC9O,EAAIa,YACJb,EAAI6T,KAAK/S,EAAGG,EAAGnB,EAAOC,GACtBC,EAAImB,SAEJnB,EAAIkP,YAjLR,CAAAhM,IAAA,SAAAiK,MAAA,WAqLIlU,OAAAyY,GAAA,EAAAzY,QAAA6X,GAAA,EAAA7X,CAAA0c,EAAAhE,WAAA,SAAAhT,MAAAoS,KAAApS,MAEAA,KAAKwY,QACLxY,KAAKyY,SACLzY,KAAKiO,YAzLT+I,EAAA,CAA8BnH,ICLxB6I,GAAe,CAAC,UAAW,WAGpBC,GAAb,SAAA3G,GAGE,SAAA2G,EAAYtX,GAA+B,IAAA4Q,EAAA,OAAA3X,OAAAwV,GAAA,EAAAxV,CAAA0F,KAAA2Y,IACzC1G,EAAA3X,OAAA4X,GAAA,EAAA5X,CAAA0F,KAAA1F,OAAA6X,GAAA,EAAA7X,CAAAqe,GAAAvG,KAAApS,KAAMqB,KAHRiB,OAE2C,EAGzC2P,EAAK3P,EAAwB,GAApB2P,EAAKjC,aAH2BiC,EAH7C,OAAA3X,OAAAiY,GAAA,EAAAjY,CAAAqe,EAAA3G,GAAA1X,OAAAgW,GAAA,EAAAhW,CAAAqe,EAAA,EAAApU,IAAA,MAAAiK,MAAA,WASQ,IAEFnN,EAKErB,KALFqB,IACAiB,EAIEtC,KAJFsC,EACA6N,EAGEnQ,KAHFmQ,qBAKIhP,EAA8B,GAFhCnB,KAFFiQ,oBAKI2I,EAAmC,KAAvBzI,EAEZ0I,EAAgC,CACpC3E,GAAI,EACJC,GAPEnU,KADFoQ,cASAgE,GAAI,EACJC,GAAI,GAGNhT,EAAIE,UAnCW,UAoCf+S,GAAYjT,EAAK,EAAGiB,EAAGnB,EAAOyX,EAAWC,GAEzCxX,EAAIE,UArCuB,UAsC3BF,EAAIa,YACJb,EAAI6T,KACF,EACA5S,EAAIsW,EAAYzI,EAAuB,EACvChP,EACAgP,EAAuB,GAEzB9O,EAAIsK,SAvCR,CAAApH,IAAA,MAAAiK,MAAA,WA0CQ,IAEFnN,EAKErB,KALFqB,IACAiB,EAIEtC,KAJFsC,EACA6N,EAGEnQ,KAHFmQ,qBACAH,EAEEhQ,KAFFgQ,aACAC,EACEjQ,KADFiQ,oBAGF5O,EAAIY,YA1DW,UA2DfZ,EAAIO,UAAmC,IAAvBuO,EAChB9O,EAAIa,YACJb,EAAIe,OAA6B,GAAtB6N,EAA2B3N,GACtCjB,EAAIkB,OAA6B,GAAtB0N,EAA2BD,GACtC3O,EAAImB,WAxDR,CAAA+B,IAAA,cAAAiK,MAAA,WA0FI,IA/BY,IAEVnN,EAKErB,KALFqB,IACAiB,EAIEtC,KAJFsC,EACA6N,EAGEnQ,KAHFmQ,qBACAJ,EAEE/P,KAFF+P,YACAE,EACEjQ,KADFiQ,oBAGI6I,EAAoC,IAAtB7I,EACd8I,EAAkC,GAAtB9I,EACZ+I,EAAoC,EAAvB7I,EAGb8I,EAAS,CACb,CACEnG,SAAUiG,EAAwB,GAAZA,GAAmB,EACzCzW,EAAGA,EAAI0W,EACP9R,OAAoB,GAAZ6R,EACR/W,MAAO0W,GAAa,GACpBQ,UAAqB,GAAVpd,KAAK4O,IAElB,CACEoI,UAAWiG,EAAwB,GAAZA,GAAmB,EAC1CzW,EAAGA,EAAI0W,EAAaA,EAAa,EACjC9R,OAAoB,GAAZ6R,EACR/W,MAAO0W,GAAa,GACpBQ,UAAqB,IAAVpd,KAAK4O,KAIpBkN,EAAA,EAAAA,EAAoBqB,EAApB/e,OAAA0d,IAA4B,CAAvB,IAAMuB,EAASF,EAAJrB,GACdvW,EAAIE,UAAY4X,EAAMnX,MACtBX,EAAIa,YACJb,EAAIuU,IACFkD,EAAcK,EAAMrG,QACpBqG,EAAM7W,EACN6W,EAAMjS,OACN,EACU,EAAVpL,KAAK4O,IAEPrJ,EAAIsK,OAGNtK,EAAIY,YAzGiB,UA0GrBZ,EAAIQ,QAAU,QACdR,EAAIO,UAAY,EAEhB,QAAAwX,EAAA,EAAAA,EAAoBH,EAApB/e,OAAAkf,IAA4B,CAAvB,IAAMD,EAASF,EAAJG,GACd/X,EAAIgP,OACJhP,EAAIkV,UAAUuC,EAAcK,EAAMrG,QAASqG,EAAM7W,GACjD,IAAM+W,EAAY,CAChBlX,EAAGrG,KAAK4a,IAAIyC,EAAMD,WAAaD,EAAO,GAAG/R,OAAS,GAClD5E,EAAGxG,KAAK8O,IAAIuO,EAAMD,WAAaD,EAAO,GAAG/R,OAAS,IAE9CoS,EAAU,CACdnX,EAAGrG,KAAK4a,IAAIyC,EAAMD,WAAaD,EAAO,GAAG/R,OAAS,IAClD5E,EAAGxG,KAAK8O,IAAIuO,EAAMD,WAAaD,EAAO,GAAG/R,OAAS,KAEpD7F,EAAIa,YACJb,EAAIe,OAAOiX,EAAUlX,EAAGkX,EAAU/W,GAClCjB,EAAIkB,OAAO+W,EAAQnX,EAAGmX,EAAQhX,GAC9BjB,EAAImB,SACJnB,EAAIkP,UAIN,IAAMgJ,EAA+B,CACnCrF,GAAI,EACJC,GAAI,EACJC,GAA0B,GAAtBnE,EACJoE,GAA0B,GAAtBpE,GAGAuJ,EAAiBR,EAAa,EAC9BS,EAA4B,GAAZV,EAEtB1X,EAAIE,UA5IgB,UA6IpBF,EAAIG,SACFsX,EAAcW,EAAgB,EAC9BnX,EAAI0W,EAAaQ,EACjBC,EACAT,EAAaQ,GAGfnY,EAAIE,UArJW,UAsJf+S,GACEjT,EACAyX,EAAcC,EAAY,EAC1BzW,EAAI0W,EAAaQ,EACjBT,EACAC,EACAO,GAGFlY,EAAIgP,OACJhP,EAAIiV,OACJjV,EAAIO,UAAY,EAChBP,EAAIY,YAnKuB,UAoK3B,IAAMyX,EAAkBpX,EAAI0W,EAAaQ,EAAiBR,EAAa,EACvE3X,EAAIa,YACJb,EAAIe,OAAO,EAAGsX,GACdrY,EAAIkB,OAAOwN,EAAa2J,GACxBrY,EAAImB,SACJnB,EAAIkP,YAnKR,CAAAhM,IAAA,SAAAiK,MAAA,WAuKIlU,OAAAyY,GAAA,EAAAzY,QAAA6X,GAAA,EAAA7X,CAAAqe,EAAA3F,WAAA,SAAAhT,MAAAoS,KAAApS,MAEAA,KAAK2Z,MACL3Z,KAAK4Z,MACL5Z,KAAK6Z,kBA3KTlB,EAAA,CAA2B9I,ICHdlG,GAAb,SAAAqI,GAIE,SAAArI,EAAYtI,GAA+B,IAAA4Q,EAAA3X,OAAAwV,GAAA,EAAAxV,CAAA0F,KAAA2J,IACzCsI,EAAA3X,OAAA4X,GAAA,EAAA5X,CAAA0F,KAAA1F,OAAA6X,GAAA,EAAA7X,CAAAqP,GAAAyI,KAAApS,KAAMqB,KAJAyY,eAGmC,EAAA7H,EAFnC8H,iBAEmC,EAEzC9H,EAAK6H,UAAwC,EAA5B7H,EAAK9B,qBACtB,IAAMhO,EAAIrG,KAAKmD,IACM,GAAnBgT,EAAKlC,YACe,EAAnBkC,EAAKlC,YAAmB,EAAgC,EAA5BkC,EAAK9B,sBAE9B7N,EAAI2P,EAAKjC,aAAe,EAPW,OAQzCiC,EAAK8H,YAAc,CAAE5X,IAAGG,KARiB2P,EAJ7C,OAAA3X,OAAAiY,GAAA,EAAAjY,CAAAqP,EAAAqI,GAAA1X,OAAAgW,GAAA,EAAAhW,CAAAqP,EAAA,EAAApF,IAAA,OAAAiK,MAAA,WAeS,IACGnN,EAAgCrB,KAAhCqB,IAAKyY,EAA2B9Z,KAA3B8Z,UAAWC,EAAgB/Z,KAAhB+Z,YAChB5X,EAAS4X,EAAT5X,EAAGG,EAAMyX,EAANzX,EAEXjB,EAAIY,YAxBW,UA2BfZ,EAAIO,UAAY5B,KAAKmQ,qBAAuB,EAC5C9O,EAAIa,YACJb,EAAIuU,IAAIzT,EAAGG,EAAGwX,EAAY,KAAM,EAAa,EAAVhe,KAAK4O,IAAQ,GAChDrJ,EAAImB,SAEJnB,EAAIY,YA7BuB,UA8B3BZ,EAAIa,YACJb,EAAIuU,IAAIzT,EAAGG,EAAGwX,EAAY,EAAG,EAAa,EAAVhe,KAAK4O,IAAQ,GAC7CrJ,EAAImB,SAEJnB,EAAIa,YACJb,EAAIuU,IAAIzT,EAAGG,EAAGwX,EAAY,EAAG,EAAa,EAAVhe,KAAK4O,IAAQ,GAC7CrJ,EAAIE,UAtCkB,UAuCtBF,EAAIsK,OAGJtK,EAAIO,UAAY,EAChBP,EAAIY,YA1CkB,UA4CtBZ,EAAIgP,OACJhP,EAAIkV,UAAUpU,EAAGG,GAEjB,IAAK,IAAIzG,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC5B,IAAMme,EAASne,EAAIC,KAAK4O,GAAM,GAExBN,EAAQ,CACZjI,EAAGrG,KAAK4a,IAAIsD,IAAUF,EAAY,EAAIA,EAAY,IAClDxX,EAAGxG,KAAK8O,IAAIoP,IAAUF,EAAY,EAAIA,EAAY,KAE9CG,EAAM,CACV9X,EAAGrG,KAAK4a,IAAIsD,IAAUF,EAAY,EAAIA,EAAY,IAClDxX,EAAGxG,KAAK8O,IAAIoP,IAAUF,EAAY,EAAIA,EAAY,KAGpDzY,EAAIa,YACJb,EAAIe,OAAOgI,EAAMjI,EAAGiI,EAAM9H,GAC1BjB,EAAIkB,OAAO0X,EAAI9X,EAAG8X,EAAI3X,GACtBjB,EAAImB,SAGNnB,EAAIkP,YA9DR,CAAAhM,IAAA,QAAAiK,MAAA,WAiEU,IACEnN,EAAgCrB,KAAhCqB,IAAKyY,EAA2B9Z,KAA3B8Z,UAAWC,EAAgB/Z,KAAhB+Z,YAChB5X,EAAS4X,EAAT5X,EAAGG,EAAMyX,EAANzX,EAGXjB,EAAIa,YACJb,EAAIuU,IAAIzT,EAAGG,EAAGwX,EAAY,EAAIA,EAAY,GAAI,EAAa,EAAVhe,KAAK4O,IAAQ,GAC9DrJ,EAAIE,UA5EkB,UA6EtBF,EAAIsK,OAEJtK,EAAIO,UAAYkY,EAAY,GAC5BzY,EAAIQ,QAAU,QACdR,EAAIY,YAhFkB,UAkFtBZ,EAAIgP,OACJhP,EAAIkV,UAAUpU,EAAGG,GAEjB,IAAM/G,EAAM,IAAID,KACV4e,EAAQ3e,EAAI4e,WACZC,EAAU7e,EAAI8e,aACdC,EAAU/e,EAAIgf,aAGpBlZ,EAAIgP,OACJhP,EAAImZ,OAAQ1e,KAAK4O,GAAK,GAAMwP,EAAQE,EAAU,GAAKE,EAAU,OAC7DjZ,EAAIa,YACJb,EAAIe,OAAO,EAAG,IACdf,EAAIkB,OAAO,GAAIuX,EAAY,GAC3BzY,EAAImB,SACJnB,EAAIkP,UAGJlP,EAAIgP,OACJhP,EAAImZ,OAAQ1e,KAAK4O,GAAK,IAAO0P,EAAUE,EAAU,KACjDjZ,EAAIa,YACJb,EAAIe,OAAO,EAAG,IACdf,EAAIkB,OAAO,GAAIuX,EAAY,MAC3BzY,EAAImB,SACJnB,EAAIkP,UAGJlP,EAAIO,UAAYkY,EAAY,IAC5BzY,EAAIgP,OACJhP,EAAImZ,OAAQ1e,KAAK4O,GAAK,GAAM4P,GAC5BjZ,EAAIa,YACJb,EAAIe,OAAO,EAAG,IACdf,EAAIkB,OAAO,GAAIuX,EAAY,KAC3BzY,EAAImB,SACJnB,EAAIkP,UAEJlP,EAAIkP,YAnHR,CAAAhM,IAAA,SAAAiK,MAAA,WAuHIlU,OAAAyY,GAAA,EAAAzY,QAAA6X,GAAA,EAAA7X,CAAAqP,EAAAqJ,WAAA,SAAAhT,MAAAoS,KAAApS,MACAA,KAAKya,OACLza,KAAK0a,UAzHT,CAAAnW,IAAA,OAAAiK,MAAA,WA6HIxO,KAAK0a,YA7HT/Q,EAAA,CAA2BkG,ICHd8K,GAAb,SAAA3I,GAWE,SAAA2I,EAAYtZ,GAA+B,IAAA4Q,EAAA3X,OAAAwV,GAAA,EAAAxV,CAAA0F,KAAA2a,IACzC1I,EAAA3X,OAAA4X,GAAA,EAAA5X,CAAA0F,KAAA1F,OAAA6X,GAAA,EAAA7X,CAAAqgB,GAAAvI,KAAApS,KAAMqB,KAXAuZ,WAAY,EAUuB3I,EATnC4I,eAAiB/e,KAAK4O,GAAK,EASQuH,EARnC6I,gBAQmC,EAAA7I,EAPnC8I,gBAOmC,EAAA9I,EANnC+I,eAMmC,EAAA/I,EALnC9P,OAKmC,EAAA8P,EAJnCgJ,sBAImC,EAAAhJ,EAHnCiJ,eAGmC,EAAAjJ,EAFnCkJ,WAEmC,MAAAjE,EAAA5c,OAAA6c,GAAA,EAAA7c,QAAA6c,GAAA,EAAA7c,CAAA2X,IAIvC9B,EAJuC+G,EAIvC/G,qBACAF,EALuCiH,EAKvCjH,oBACAC,EANuCgH,EAMvChH,oBANuC,OASzC+B,EAAK9P,EAA0B,EAAtB8N,EAAiD,IAAvBE,EACnC8B,EAAK6I,WAAa3K,EAClB8B,EAAK8I,WAAoC,EAAvB5K,EAClB8B,EAAK+I,UAAmC,IAAvB7K,EACjB8B,EAAKgJ,iBAAmB3f,KAAKC,MAC7B0W,EAAKiJ,UAAY/K,EAAuB,EACxC8B,EAAKkJ,MACoB,EAAtBjL,EAA2B,EAAIC,EAAuB8B,EAAKiJ,UAAY,EAhBjCjJ,EAX7C,OAAA3X,OAAAiY,GAAA,EAAAjY,CAAAqgB,EAAA3I,GAAA1X,OAAAgW,GAAA,EAAAhW,CAAAqgB,EAAA,EAAApW,IAAA,OAAAiK,MAAA,WA8BS,IACGnN,EAA4CrB,KAA5CqB,IAAK6O,EAAuClQ,KAAvCkQ,oBAAqB/N,EAAkBnC,KAAlBmC,EAAG2Y,EAAe9a,KAAf8a,WAC/BxY,EAA2B,EAAtB4N,EAA2B,EAAIlQ,KAAK+a,WAAa/a,KAAK8a,WAEjEzZ,EAAIE,UApCU,OAqCdF,EAAIY,YArCU,OAsCdZ,EAAIa,YACJb,EAAIuU,IAAIzT,EAAGG,EAAGwY,EAAY,EAAa,EAAVhf,KAAK4O,IAClCrJ,EAAIsK,OAGJtK,EAAIgP,OACJhP,EAAIkV,UAAUpU,EAAGG,GAEjBjB,EAAIO,UAAY,EAChBP,EAAI+Z,SAAW,QAEf,IAAMC,EAAW,CACfjR,MAAO,CACLjI,EAAGrG,KAAK4a,IAAc,IAAV5a,KAAK4O,IAAaoQ,EAC9BxY,EAAGxG,KAAK8O,IAAc,IAAV9O,KAAK4O,IAAaoQ,GAEhCQ,MAAO,CACLnZ,EAAGrG,KAAK4a,IAAc,GAAV5a,KAAK4O,IAAYoQ,EAAa,IAC1CxY,EAAGxG,KAAK8O,IAAc,GAAV9O,KAAK4O,IAAYoQ,EAAa,KAE5Cb,IAAK,CACH9X,EAAGrG,KAAK4a,IAAc,GAAV5a,KAAK4O,IAAYoQ,EAC7BxY,EAAGxG,KAAK8O,IAAc,GAAV9O,KAAK4O,IAAYoQ,IAIjCzZ,EAAIa,YACJb,EAAIe,OAAOiZ,EAASjR,MAAMjI,EAAGkZ,EAASjR,MAAM9H,GAC5CjB,EAAIkB,OAAO8Y,EAASC,MAAMnZ,EAAGkZ,EAASC,MAAMhZ,GAC5CjB,EAAIkB,OAAO8Y,EAASpB,IAAI9X,EAAGkZ,EAASpB,IAAI3X,GACxCjB,EAAImT,YACJnT,EAAIsK,OACJtK,EAAImB,SAEJ,IAAM+Y,EAAU,CACdnR,MAAO,CACLjI,EAAGrG,KAAK4a,IAAc,IAAV5a,KAAK4O,IAAYoQ,EAC7BxY,EAAGxG,KAAK8O,IAAc,IAAV9O,KAAK4O,IAAYoQ,GAE/BQ,MAAO,CACLnZ,EAAGrG,KAAK4a,IAAc,KAAV5a,KAAK4O,IAAaoQ,EAAa,IAC3CxY,EAAGxG,KAAK8O,IAAc,KAAV9O,KAAK4O,IAAaoQ,EAAa,KAE7Cb,IAAK,CACH9X,EAAGrG,KAAK4a,IAAc,IAAV5a,KAAK4O,IAAYoQ,EAC7BxY,EAAGxG,KAAK8O,IAAc,IAAV9O,KAAK4O,IAAYoQ,IAIjCzZ,EAAIa,YACJb,EAAIe,OAAOmZ,EAAQnR,MAAMjI,EAAGoZ,EAAQnR,MAAM9H,GAC1CjB,EAAIkB,OAAOgZ,EAAQD,MAAMnZ,EAAGoZ,EAAQD,MAAMhZ,GAC1CjB,EAAIkB,OAAOgZ,EAAQtB,IAAI9X,EAAGoZ,EAAQtB,IAAI3X,GACtCjB,EAAImT,YACJnT,EAAIsK,OACJtK,EAAImB,SAEJnB,EAAIkP,YA7FR,CAAAhM,IAAA,OAAAiK,MAAA,WAgGS,IAEHnN,EAOErB,KAPFqB,IACA6O,EAMElQ,KANFkQ,oBACAC,EAKEnQ,KALFmQ,qBACAhO,EAIEnC,KAJFmC,EACA2Y,EAGE9a,KAHF8a,WACAE,EAEEhb,KAFFgb,UACAD,EACE/a,KADF+a,WAEIzY,EAA2B,EAAtB4N,EAA2B,EAAI6K,EAE1C1Z,EAAIa,YACJb,EAAIe,OAAOD,EAAGG,EAAIwY,EAAa,GAC/BzZ,EAAIkT,iBACFpS,EAAgB,IAAZ6Y,EACJ1Y,EAAIyY,EAAa,EACjB5Y,EAAI6Y,EAAY,EAChB1Y,EAAIyY,EAAa5K,GAEnB9O,EAAIkB,OAAOJ,EAAI6Y,EAAY,EAAG1Y,EAAIyY,EAAa5K,GAC/C9O,EAAIkT,iBACFpS,EAAgB,IAAZ6Y,EACJ1Y,EAAIyY,EAAa5K,EACjBhO,EAAI6Y,EAAY,EAChB1Y,EAAIwY,EAAa,GAEnBzZ,EAAImT,YACJnT,EAAIsK,OAGJtK,EAAIa,YACJb,EAAIe,OAAOD,EAAI6Y,EAAY,EAAG1Y,EAAiB,GAAbyY,GAClC1Z,EAAIkT,iBACFpS,EAAI6Y,EACJ1Y,EAAIyY,EACJ5Y,EAAI6Y,EAAY,EAChB1Y,EAAIyY,EAAa5K,GAEnB9O,EAAIkB,OAAOJ,EAAI6Y,EAAY,EAAG1Y,EAAIyY,EAAa5K,GAC/C9O,EAAImT,YACJnT,EAAIsK,SAzIR,CAAApH,IAAA,OAAAiK,MAAA,WA4IS,IACGnN,EAAwCrB,KAAxCqB,IAAK6Z,EAAmClb,KAAnCkb,UAAW/Y,EAAwBnC,KAAxBmC,EAAG6Y,EAAqBhb,KAArBgb,UAAWG,EAAUnb,KAAVmb,MAEtC9Z,EAAIO,UAAYsZ,EAChB7Z,EAAIQ,QAAU,QACdR,EAAIa,YACJb,EAAIe,OAAOD,EAAGgZ,GACd9Z,EAAIkB,OAAOJ,EAAI6Y,EAAWG,GAC1B9Z,EAAImB,WApJR,CAAA+B,IAAA,SAAAiK,MAAA,WAwJIlU,OAAAyY,GAAA,EAAAzY,QAAA6X,GAAA,EAAA7X,CAAAqgB,EAAA3H,WAAA,SAAAhT,MAAAoS,KAAApS,MADO,IAGCqB,EAAmCrB,KAAnCqB,IAAK0O,EAA8B/P,KAA9B+P,YAAaC,EAAiBhQ,KAAjBgQ,aAC1B3O,EAAIqT,UAAU,EAAG,EAAG3E,EAAaC,GAEjChQ,KAAKwb,OACLxb,KAAKyb,OACLzb,KAAK0b,SA/JT,CAAAnX,IAAA,OAAAiK,MAAA,WAkKS,IAEHnN,EAOErB,KAPFqB,IACA0O,EAME/P,KANF+P,YACAC,EAKEhQ,KALFgQ,aACAiL,EAIEjb,KAJFib,iBACA9Y,EAGEnC,KAHFmC,EACA6Y,EAEEhb,KAFFgb,UACAG,EACEnb,KADFmb,MAEF9Z,EAAIqT,UAAU,EAAG,EAAG3E,EAAaC,GAEjChQ,KAAKwb,OACLxb,KAAKyb,OAGL,IAAMnI,EAAYhY,KAAKC,MAAQ0f,EAG3BU,GACD7f,KAAK4O,GAAK,EAAK5O,KAAK4a,IAAIpD,EAAY,MAAQxX,KAAK4O,GAAM,GAa1D,GAXI1K,KAAK6a,eAAiB/e,KAAK4O,GAAK,GAAKiR,GAAiB7f,KAAK4O,GAAK,IAElE1K,KAAK4a,UAAY9e,KAAK8B,SAAW,IAGnCoC,KAAK6a,cAAgBc,EAEjBA,GAAiB7f,KAAK4O,GAAK,IAC7BiR,GAAiB7f,KAAK4O,GAAK,GAGxB1K,KAAK4a,UAAV,CAKAvZ,EAAIgP,OACJhP,EAAIkV,UAAUpU,EAAGgZ,GAEjB,IAAMS,EAAU,CACdzZ,EAAGrG,KAAK4a,IAAIiF,GAAiBX,EAC7B1Y,EAAGxG,KAAK8O,IAAI+Q,GAAiBX,GAG/B3Z,EAAIa,YACJb,EAAIe,OAAO,EAAG,GACdf,EAAIkT,kBACDyG,GACClf,KAAK8O,IAAI+Q,GAAiBX,EAAa,GACzCY,EAAQzZ,EACRyZ,EAAQtZ,GAEVjB,EAAImB,SAEJnB,EAAIkP,eAtBFvQ,KAAK0b,WApMXf,EAAA,CAAyB9K,ICIZgM,GAAb,SAAA7J,GASE,SAAA6J,EAAYxa,GAA+B,IAAA4Q,EAAA3X,OAAAwV,GAAA,EAAAxV,CAAA0F,KAAA6b,IACzC5J,EAAA3X,OAAA4X,GAAA,EAAA5X,CAAA0F,KAAA1F,OAAA6X,GAAA,EAAA7X,CAAAuhB,GAAAzJ,KAAApS,KAAMqB,KATAya,WAQmC,EAAA7J,EAPnC8J,gBAOmC,EAAA9J,EANnC+J,eAMmC,EAAA/J,EALnCgK,kBAKmC,EAAAhK,EAJnCiK,mBAImC,EAAAjK,EAHnCkK,sBAGmC,EAAAlK,EAFnCmK,qBAEmC,MAAAlF,EAAA5c,OAAA6c,GAAA,EAAA7c,QAAA6c,GAAA,EAAA7c,CAAA2X,IAGjClC,EAHiCmH,EAGjCnH,YAAaC,EAHoBkH,EAGpBlH,aAAcG,EAHM+G,EAGN/G,qBAHM,OAKzC8B,EAAK6J,MAAuB,EAAd/L,EAAmB,GACjCkC,EAAK8J,WAAa/L,EAAe,EACjCiC,EAAK+J,UAAmC,IAAvB7L,EAEjB8B,EAAKgK,aAAe,CAClB9Z,EAAG8P,EAAK6J,MAAQ3L,EAAuB,EACvC7N,EAAG2P,EAAK8J,WAAa5L,GAEvB8B,EAAKiK,cAAgB,CACnB/Z,EAAG8P,EAAK6J,MAAQ3L,EAAuB,EACvC7N,EAAG2P,EAAK8J,WAAa5L,GAEvB8B,EAAKkK,iBAAmB,CACtBha,EAAG8P,EAAK6J,MAAQ7J,EAAK+J,UAAY,EACjC1Z,EAAG2P,EAAK8J,WAAoC,EAAvB5L,GAEvB8B,EAAKmK,gBAAkB,CACrBja,EAAG8P,EAAK6J,MAAQ7J,EAAK+J,UAAY,EACjC1Z,EAAG2P,EAAK8J,WAAoC,EAAvB5L,GAvBkB8B,EAT7C,OAAA3X,OAAAiY,GAAA,EAAAjY,CAAAuhB,EAAA7J,GAAA1X,OAAAgW,GAAA,EAAAhW,CAAAuhB,EAAA,EAAAtX,IAAA,OAAAiK,MAAA,WAoCS,IACGnN,EAAiDrB,KAAjDqB,IAAK8O,EAA4CnQ,KAA5CmQ,qBAAsB2L,EAAsB9b,KAAtB8b,MAAOC,EAAe/b,KAAf+b,WAE1C1a,EAAIY,YA5CW,UA6CfZ,EAAIE,UA7CW,UA8CfF,EAAIO,UAAYuO,EAAuB,EAEvC9O,EAAIa,YACJb,EAAIe,OAAO0Z,EAAO,GAClBza,EAAIkB,OAAOuZ,EAAOC,GAClB1a,EAAImB,SAEJnB,EAAIO,UAAY,EAChBP,EAAIG,SACFsa,EAAQ3L,EAAuB,EAC/B4L,EAAa,EACW,EAAvB5L,EAA4B,EAC7BA,GAEF9O,EAAImB,WAvDR,CAAA+B,IAAA,YAAAiK,MAAA,WA0Dc,IAERnN,EAKErB,KALFqB,IACA4a,EAIEjc,KAJFic,aACAC,EAGElc,KAHFkc,cACAC,EAEEnc,KAFFmc,iBACAC,EACEpc,KADFoc,gBAGF/a,EAAIa,YACJb,EAAIe,OAAO6Z,EAAa9Z,EAAG8Z,EAAa3Z,GACxCjB,EAAIkB,OAAO2Z,EAAc/Z,EAAG+Z,EAAc5Z,GAC1CjB,EAAIkB,OAAO4Z,EAAiBha,EAAGga,EAAiB7Z,GAChDjB,EAAIkB,OAAO6Z,EAAgBja,EAAGia,EAAgB9Z,GAC9CjB,EAAImT,YACJnT,EAAIsK,OACJtK,EAAImB,SAGJnB,EAAIE,UAAY,OAChBF,EAAIG,SACF4a,EAAgBja,EAChBia,EAAgB9Z,EAChB6Z,EAAiBha,EAAIia,EAAgBja,EACrC,KAlFN,CAAAoC,IAAA,QAAAiK,MAAA,WAsFU,IAEJnN,EASErB,KATFqB,IACA2O,EAQEhQ,KARFgQ,aACAG,EAOEnQ,KAPFmQ,qBACA2L,EAME9b,KANF8b,MACAC,EAKE/b,KALF+b,WACAC,EAIEhc,KAJFgc,UACAC,EAGEjc,KAHFic,aACAE,EAEEnc,KAFFmc,iBACAC,EACEpc,KADFoc,gBAGF/a,EAAIE,UAvGY,6BAwGhB,IAAMoP,EAAcX,EAAeoM,EAAgB9Z,EAG7C+Z,EPrDH,SACL7E,EACAC,GAEA,IAAM6E,EAAS7E,EAAOtV,EAAIqV,EAAOrV,EAC3Boa,EAAS9E,EAAOnV,EAAIkV,EAAOlV,EACjC,OAAOxG,KAAK0gB,MAAMD,EAAQD,GO+CLG,CAAeL,EAAiB,CACjDja,EAAG8Z,EAAa9Z,EAChBG,EAAG8Z,EAAgB9Z,EAAI8Z,EAAgB9Z,EAAI2Z,EAAa3Z,IAOpDoa,EAA6B/L,EAAc7U,KAAK6gB,IAAIN,GAEpDO,EAAmBR,EAAgBja,EAAIua,EACvCG,EAAoBV,EAAiBha,EAAIua,EAE/Crb,EAAIa,YACJb,EAAIe,OAAO0Z,EAAQE,EAAY,EAAGD,EAAoC,EAAvB5L,GAC/C9O,EAAIkB,OAAOuZ,EAAQE,EAAY,EAAGD,EAAoC,EAAvB5L,GAC/C9O,EAAIkB,OAAOsa,EAAmB7M,GAC9B3O,EAAIkB,OAAOqa,EAAkB5M,GAC7B3O,EAAIsK,SA1HR,CAAApH,IAAA,SAAAiK,MAAA,WA8HIlU,OAAAyY,GAAA,EAAAzY,QAAA6X,GAAA,EAAA7X,CAAAuhB,EAAA7I,WAAA,SAAAhT,MAAAoS,KAAApS,MAEAA,KAAK8c,OACL9c,KAAK+c,YACL/c,KAAK2T,SAlIT,CAAApP,IAAA,OAAAiK,MAAA,WAqIS,IAEHnN,EAKErB,KALFqB,IACA0O,EAIE/P,KAJF+P,YACAC,EAGEhQ,KAHFgQ,aACAG,EAEEnQ,KAFFmQ,qBACA4L,EACE/b,KADF+b,WAGF1a,EAAIqT,UACF,EAEAqH,EAAoC,EAAvB5L,EAA2B,EACxCJ,EACAC,GAGFhQ,KAAK4R,YAtJTiK,EAAA,CAA0BhM,ICGbmN,GAAb,SAAAhL,GAQE,SAAAgL,EAAY3b,GAA+B,IAAA4Q,EAAA,OAAA3X,OAAAwV,GAAA,EAAAxV,CAAA0F,KAAAgd,IACzC/K,EAAA3X,OAAA4X,GAAA,EAAA5X,CAAA0F,KAAA1F,OAAA6X,GAAA,EAAA7X,CAAA0iB,GAAA5K,KAAApS,KAAMqB,KARR4b,UAO2C,EAAAhL,EAN3C3Y,YAM2C,EAAA2Y,EAL3C2E,aAK2C,EAAA3E,EAJ3CgF,cAI2C,EAAAhF,EAH3CiL,WAG2C,EAAAjL,EAF3CvI,WAE2C,EAGzCuI,EAAKgL,KAAO,IAAIpJ,GAAKxS,GACrB4Q,EAAK3Y,OAAS,IAAImb,GAAOpT,GACzB4Q,EAAK2E,QAAU,IAAIzB,GAAQ9T,GAC3B4Q,EAAKgF,SAAW,IAAID,GAAS3V,GAC7B4Q,EAAKiL,MAAQ,IAAIvE,GAAMtX,GACvB4Q,EAAKvI,MAAQ,IAAIC,GAAMtI,GARkB4Q,EAR7C,OAAA3X,OAAAiY,GAAA,EAAAjY,CAAA0iB,EAAAhL,GAAA1X,OAAAgW,GAAA,EAAAhW,CAAA0iB,EAAA,EAAAzY,IAAA,SAAAiK,MAAA,WAoBIxO,KAAKid,KAAKlT,SACV/J,KAAK1G,OAAOyQ,SACZ/J,KAAK4W,QAAQ7M,SACb/J,KAAKiX,SAASlN,SACd/J,KAAKkd,MAAMnT,SACX/J,KAAK0J,MAAMK,aAzBfiT,EAAA,CAA0BnN,IC8KXlP,YA7KuC,SAAA1F,GAIhD,IAHJN,EAGIM,EAHJN,KACAuC,EAEIjC,EAFJiC,OACAN,EACI3B,EADJ2B,iBAGMugB,EAAgBhiB,iBAA0B,MAC1CiiB,EAAUjiB,mBAEhBkF,EAAmB,WACjB,IAAMgd,EAAaF,EAAc1gB,QADVoE,EAa+BvH,QAVnC,SAAC6H,EAAeC,EAAgBkc,GACjDD,EAAWlc,MAAQA,EAAQmc,EAC3BD,EAAWjc,OAASA,EAASkc,EAE7B,IAAMjc,EAAMgc,EAAW/b,WAAW,MAC5Bic,EAAO,IAAIxL,GAAK1Q,GACtB+b,EAAQ3gB,QAAU8gB,EAClBA,EAAKxT,SAIPyT,CAduB3c,EAafC,WAbeD,EAaHE,YAbGF,EAaUI,mBAEhC,IAGH,IAAMwc,EAAgBtiB,iBAA0B,MAC1CuiB,EAAcviB,mBAEpBkF,EAAmB,WACjB,IAAMsd,EAAaF,EAAchhB,QADVmhB,EAkB+BtkB,QAfnC,SAAC6H,EAAeC,EAAgBkc,GACjDK,EAAWxc,MAAQA,EAAQmc,EAC3BK,EAAWvc,OAASA,EAASkc,EAE7B,IAAMjc,EAAMsc,EAAWrc,WAAW,MAC9Buc,EAAWH,EAAYjhB,QACX,MAAZohB,EACFH,EAAYjhB,QAAU,IAAI8W,GAASlS,KAEnCwc,EAAWH,EAAYjhB,SACdsT,YAAc5O,EAAQmc,EAC/BO,EAAS7N,aAAe5O,EAASkc,GAKrCQ,CAnBuBF,EAkBf9c,WAlBe8c,EAkBH7c,YAlBG6c,EAkBU3c,mBAEhC,IAEH,IAAM8c,EAAgB5iB,iBAA0B,MAC1C6iB,EAAU7iB,mBACV8iB,EAAmB9iB,mBAGzBkF,EAAmB,WACjB,IAAM6d,EAAaH,EAActhB,QADV0hB,EAoB+B7kB,QAjBnC,SAAC6H,EAAeC,EAAgBkc,GACjDY,EAAW/c,MAAQA,EAAQmc,EAC3BY,EAAW9c,OAASA,EAASkc,EAE7B,IAAMjc,EAAM6c,EAAW5c,WAAW,MAE5B8c,EAAO,IAAIpB,GAAK3b,GACtB2c,EAAQvhB,QAAU2hB,EAClBA,EAAKrU,SAELkU,EAAiBxhB,SAAWnD,OAAO4G,aAAa+d,EAAiBxhB,SACjEwhB,EAAiBxhB,QAAUnD,OAAOoI,YAChC,kBAAM0c,EAAK1U,MAAMiK,QACjB,KAKJ0K,CArBuBF,EAoBfrd,WApBeqd,EAoBHpd,YApBGod,EAoBUld,mBAEhC,IAGH,IAAMqd,EAAenjB,iBAA0B,MACzCojB,EAASpjB,mBAEfkF,EAAmB,WACjB,IAAMme,EAAYF,EAAa7hB,QADRgiB,EAc+BnlB,QAXrC,SAAC6H,EAAeC,EAAgBkc,GAC/CkB,EAAUrd,MAAQA,EAAQmc,EAC1BkB,EAAUpd,OAASA,EAASkc,EAE5B,IAAMjc,EAAMmd,EAAUld,WAAW,MAE3Bod,EAAM,IAAI/D,GAAItZ,GACpBkd,EAAO9hB,QAAUiiB,EACjBA,EAAI3U,SAIN4U,CAfuBF,EAcf3d,WAde2d,EAcH1d,YAdG0d,EAcUxd,mBAEhC,IAGH,IAAM2d,EAAgBzjB,iBAA0B,MAC1C0jB,EAAU1jB,mBAyDhB,OAvDAkF,EAAmB,WACjB,IAAMye,EAAaF,EAAcniB,QADVsiB,EAc+BzlB,QAXnC,SAAC6H,EAAeC,EAAgBkc,GACjDwB,EAAW3d,MAAQA,EAAQmc,EAC3BwB,EAAW1d,OAASA,EAASkc,EAE7B,IAAMjc,EAAMyd,EAAWxd,WAAW,MAE5B0d,EAAO,IAAInD,GAAKxa,GACtBwd,EAAQpiB,QAAUuiB,EAClBA,EAAKjV,SAIPkV,CAfuBF,EAcfje,WAdeie,EAcHhe,YAdGge,EAcU9d,mBAEhC,IAGHV,oBAAU,WACR,IAAM6d,EAAOJ,EAAQvhB,QACfohB,EAAWH,EAAYjhB,QACvBiiB,EAAMH,EAAO9hB,QACbuiB,EAAOH,EAAQpiB,QAEjByiB,EAAiBpjB,KAAK6B,MAAMf,EAAmB,GAE/CsiB,EAzIuB,EA0IzBA,EA1IyB,EA2IhBA,EA1IgB,KA2IzBA,EA3IyB,IAgJ3B,IAFA,IAAIC,EAAoB,EAEjBA,EAAoBD,GACzBrB,EAASpU,MACT0V,GAAqB,EAGvBtB,EAASlK,OACTyK,EAAKxH,QAAQjD,KAAKzW,GAGlB8hB,EAAKrL,OACL+K,EAAI/K,OAEJ,IAAMgK,EAAaF,EAAchhB,QACjBkhB,EAAWrc,WAAW,MAE9BoT,UAAU,EAAG,EAAGiJ,EAAWxc,MAAOwc,EAAWvc,QAErDyc,EAAS9T,UACR,CAACpP,IAGFwC,EAAAC,EAAAC,cAAA,OAAKoF,UAAU,QACbtF,EAAAC,EAAAC,cAAA,UAAQqF,IAAKya,IACbhgB,EAAAC,EAAAC,cAAA,UAAQqF,IAAK+a,IACbtgB,EAAAC,EAAAC,cAAA,UAAQqF,IAAKqb,IACb5gB,EAAAC,EAAAC,cAAA,UAAQqF,IAAK4b,IACbnhB,EAAAC,EAAAC,cAAA,UAAQqF,IAAKkc,QCvIJQ,UCzBAze,EAhBiD,WAC9D,OACExD,EAAAC,EAAAC,cAAA,OAAKoF,UAAU,mBACbtF,EAAAC,EAAAC,cAAA,OAAKoF,UAAU,WACbtF,EAAAC,EAAAC,cAAA,OACEI,GAAG,eACH4hB,IAAKC,oCAEPniB,EAAAC,EAAAC,cAAA,OAAKI,GAAG,WAAR,sEjCPC,iEAAiE8hB,KACtEC,UAAUC,WgCmBoC,CAChD,CACEC,UAAWC,IAEb,CACED,UAAWE,GACX9kB,QAAS,CAAEmB,UAAW,MAExB,CACEyjB,UAAWG,GAEb,CACEH,UAAWI,EACXhlB,QAAS,CAAEmB,UAAW,KAExB,CACEyjB,UAAWK,KEtBTC,GAAuBZ,GAAezjB,IAAI,SAAAskB,GAC9C,OAAO,SAACxa,GACqBA,EAAnBjB,MADqB,IACX0b,EADW5lB,OAAAqL,EAAA,EAAArL,CACFmL,EADE,WAG7B,OACEtI,EAAAC,EAAAC,cAACuI,EAAA,EAASC,IAAV,CAAcpD,UAAU,gBAAgB+B,MAAOiB,EAAMjB,OACnDrH,EAAAC,EAAAC,cAAC4iB,EAAIP,UAALplB,OAAA6lB,OAAA,GAAmBD,EAAnB,CAAyBplB,QAASmlB,EAAInlB,eA+C/BslB,eA1DS,SAACpmB,GAAD,MAAwB,CAC9CqmB,aAAcrmB,EAAMJ,0BACpB0mB,UAAWtmB,EAAMH,yBAwDJumB,CAvCX,SAAAnlB,GAAoD,IAAjDN,EAAiDM,EAAjDN,KAAME,EAA2CI,EAA3CJ,YAAaylB,EAA8BrlB,EAA9BqlB,UAAWD,EAAmBplB,EAAnBolB,aAC7BE,EAAW7hB,EAAO2hB,EAAcjB,GAAellB,QAE/CsmB,EAAYC,sBAAY,SAAChkB,EAAUikB,GACvC,IAAIC,EAAuB,EAQ3B,OANIlkB,EAAUikB,EACZC,EAAuB,EACdD,EAAOjkB,IAChBkkB,GAAwB,GAG1B,eAAA3jB,OAAsB,IAAM2jB,EAA5B,aACC,IAEG7b,EAAcC,YAAcwb,EAAU,KAAM,CAChDvb,KAAM,CAAEc,UAAW0a,EAAUH,EAAcC,IAC3Clb,MAAO,CAAEU,UAAW0a,KACpBnb,MAAO,CAAES,UAAW0a,EAAUF,EAAWD,IACzCO,QAAS,CAAE9a,UAAW0a,EAAU,GAAI,MAGtC,OACErjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyjB,SAAA,KACG/b,EAAYnJ,IAAI,SAAAwI,GAA0B,IAAvBc,EAAuBd,EAAvBc,KAAMQ,EAAiBtB,EAAjBsB,MAAOlB,EAAUJ,EAAVI,IACzBuc,EAAgBd,GAAqB/a,GAC3C,OACE9H,EAAAC,EAAAC,cAACyjB,EAAD,CACEvc,IAAKA,EACL5J,KAAMA,EACNE,YAAaA,EACb2J,MAAOiB,SCRJsb,GA/CmB,SAAA9lB,GAAmC,IAAhC+lB,EAAgC/lB,EAAhC+lB,aAAcC,EAAkBhmB,EAAlBgmB,YAAkBte,EACrCC,mBAAS,IAAIhI,YADwBiI,EAAAvI,OAAAwI,EAAA,EAAAxI,CAAAqI,EAAA,GAC5Due,EAD4Dre,EAAA,GACnDse,EADmDte,EAAA,GAAAI,EAE7BL,mBAAS,IAAIhI,YAFgBsI,EAAA5I,OAAAwI,EAAA,EAAAxI,CAAA2I,EAAA,GAE5DpI,EAF4DqI,EAAA,GAE/Cke,EAF+Cle,EAAA,GAI7Dme,EAAsBlmB,mBAwC5B,OAtCAoF,oBAAU,WACR,IAAM+gB,EAAcN,EAAaO,iBACjCD,EAAYE,QCjBQ,IDkBpBF,EAAYG,sBAAwB,EACpCR,EAAYb,QAAQkB,GACpBA,EAAYlB,QAAQY,EAAaU,aAEjC,IAAMC,EAASX,EAAaY,qBAC5BD,EAAOvnB,KAAO,UACd,IAAMynB,EAAkBb,EAAaO,iBAoBrC,OAnBAM,EAAgBL,QCzBI,ID0BpBK,EAAgBJ,sBAAwB,EACxCR,EAAYb,QAAQuB,GACpBA,EAAOvB,QAAQyB,GAcfR,EAAoB5kB,QAAUnD,OAAOyR,sBAZxB,SAAP4I,IACJ,IAAMmO,EAAmB,IAAIlnB,WC/BX,KDgClB0mB,EAAYS,sBAAsBD,GAClCX,EAAWW,GAEX,IAAME,EAAuB,IAAIpnB,WCnCf,KDoClBinB,EAAgBE,sBAAsBC,GACtCZ,EAAeY,GAEfX,EAAoB5kB,QAAUnD,OAAOyR,sBAAsB4I,KAKtD,WAC0B,MAA/B0N,EAAoB5kB,SAClBnD,OAAO2R,qBAAqBoW,EAAoB5kB,SAClD6kB,GAAeA,EAAYW,aAC3BJ,GAAmBA,EAAgBI,aACnChB,GAAeA,EAAYgB,eAE5B,CAACjB,EAAcC,IAEX9jB,EAAAC,EAAAC,cAAC6kB,GAAD,CAAuBvnB,KAAMumB,EAASrmB,YAAaA,KErC7CsnB,UARkB,SAAAlnB,GAAA,IAAAmnB,EAAAnnB,EAAGonB,eAAH,IAAAD,KAAA,OAC/BjlB,EAAAC,EAAAC,cAAA,OAAKoF,UAAWiC,IAAW,UAAW,CAAE4d,KAAMD,KAC5CllB,EAAAC,EAAAC,cAAA,QAAMoF,UAAU,gBAChBtF,EAAAC,EAAAC,cAAA,QAAMoF,UAAU,gBAChBtF,EAAAC,EAAAC,cAAA,QAAMoF,UAAU,4BC8NL2d,sBACb,KANyB,SAACmC,GAAD,MAAyB,CAClDC,sBAAuB,kBAAMD,ECpO8B,CAC3DnoB,KAAMV,EAAgBW,4BDoOtBooB,sBAAuB,kBAAMF,ECjO8B,CAC3DnoB,KAAMV,EAAgBc,8BDmOT4lB,CAjNmB,SAAA3a,GAAS,IAAA9C,EACGC,oBAAS,GADZC,EAAAvI,OAAAwI,EAAA,EAAAxI,CAAAqI,EAAA,GAClC+f,EADkC7f,EAAA,GAClB8f,EADkB9f,EAAA,GAAAI,EAEOL,oBAAS,GAFhBM,EAAA5I,OAAAwI,EAAA,EAAAxI,CAAA2I,EAAA,GAElC2f,EAFkC1f,EAAA,GAEhB2f,EAFgB3f,EAAA,GAInC4f,EAAa3nB,mBACb4nB,EAAW5nB,mBAEjBoF,oBAAU,WACR,IAAMyiB,EAAY,SAACC,GACjB,OAAQA,EAAMC,OACZ,KAAK,GACL,KAAK,GACHzd,EAAMgd,wBACN,MAEF,KAAK,GACL,KAAK,GACHhd,EAAM+c,0BAOZ,OADAvY,SAASxJ,iBAAiB,UAAWuiB,GAC9B,kBAAM/Y,SAASvJ,oBAAoB,UAAWsiB,KACpD,IAEH,IAAMG,EAAc1C,sBAAY,WACR,MAAtBqC,EAAWrmB,SAAmBnD,OAAO4G,aAAa4iB,EAAWrmB,SAE7DkmB,GAAkB,GAClBG,EAAWrmB,QAAUnD,OAAO6G,WAAW,WAChCyiB,GACHD,GAAkB,IAjDM,OAoD3B,CAACC,IAEEQ,EAAa3C,sBAAY,WAC7Bhb,EAAMub,cAAgBvb,EAAMub,aAAaqC,SACzC5d,EAAM2d,aACND,KACC,CAAC1d,EAAMub,aAAcvb,EAAM2d,aAExBE,EAAe7C,sBAAY,SAACwC,GAChCA,EAAMM,iBACNR,EAAStmB,QAAU,CAAE+mB,UAAWloB,KAAKC,MAAO4G,EAAG8gB,EAAMQ,QAAQ,GAAGC,UAC/D,IAEGC,EAAW,kBAAMrqB,OAAOsqB,KAAK,wCAE7BC,EAAcpD,sBAAY,SAACwC,GACC,IAA5BA,EAAMa,YAAYZ,QACpBH,EAAStmB,QAAU,CAAE+mB,UAAWloB,KAAKC,MAAO4G,EAAG8gB,EAAMS,WAEtD,IAEGK,EAAYtD,sBAAY,SAACwC,GAEC,IAA5BA,EAAMa,YAAYZ,OAClBH,EAAStmB,SACTnB,KAAKC,MAAQwnB,EAAStmB,QAAQ+mB,UA5EF,KA8E5BJ,KAED,IAEGY,EAAavD,sBACjB,SAACwC,GASC,GARAA,EAAMM,iBAEJR,EAAStmB,SACTnB,KAAKC,MAAQwnB,EAAStmB,QAAQ+mB,UAvFJ,KAyF1BL,IAIAJ,EAAStmB,SACTnB,KAAKC,MAAQwnB,EAAStmB,QAAQ+mB,UA7FJ,IA8F1B,CACA,IAAMlH,EAAS2G,EAAMgB,eAAe,GAAGP,QAAUX,EAAStmB,QAAQ0F,EAC9DrG,KAAKC,IAAIugB,GAAU,KACjBA,EAAS,EACX7W,EAAMgd,wBAENhd,EAAM+c,2BAKd,CAACI,IAGGsB,EAASzD,sBACb,SAACwC,GACCA,EAAMM,iBACN9d,EAAMgd,wBACNU,KAEF,CAACP,IAGGuB,EAAS1D,sBACb,SAACwC,GACCA,EAAMM,iBACN9d,EAAM+c,wBACNW,KAEF,CAACP,IAGGwB,EAAU3D,sBAAY,kBAAMoC,GAAoB,IAAO,IAEvDwB,EAAc5D,sBAAY,kBAAMoC,GAAoB,IAAQ,IAE1DyB,EAA2B7e,EAA3B6e,YAAaC,EAAc9e,EAAd8e,UAErB,OACEpnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyjB,SAAA,KACGyD,IAAgBC,GAAapnB,EAAAC,EAAAC,cAACmnB,GAAD,MAC9BrnB,EAAAC,EAAAC,cAAA,OACEI,GAAG,UACH6lB,aAAcA,EACdU,WAAYA,EACZS,YAAatB,EACb1gB,UAAWiC,IAAW,CAAE4d,KAAMI,KAE9BvlB,EAAAC,EAAAC,cAAA,MACEI,GAAG,QACHinB,QAASf,EACTK,WAAYL,EACZgB,aAAcP,EACdQ,aAAcP,GALhB,QASAlnB,EAAAC,EAAAC,cAAA,OAAKI,GAAG,WAAR,SAAyBonB,MAEvB1nB,EAAAC,EAAAC,cAAA,OACEwmB,YAAaA,EACbE,UAAWA,EACXC,WAAYZ,EACZuB,aAAcP,EACdQ,aAAcP,EACd5hB,UAAWiC,IAAW,CACpBogB,MAAOR,IAAgBC,EACvBQ,MAAOT,GAAeC,MAI5BpnB,EAAAC,EAAAC,cAAA,OAAKoF,UAAU,cACbtF,EAAAC,EAAAC,cAAA,OACEoF,UAAU,kBACVuhB,WAAYE,EACZH,UAAWG,EACXS,aAAcP,EACdQ,aAAcP,GAEdlnB,EAAAC,EAAAC,cAAA,OACEoF,UAAU,QACVtB,MAAM,OACNC,OAAO,OACP4jB,QAAQ,aAER7nB,EAAAC,EAAAC,cAAA,YACEsO,KAAK,OACLnJ,OAAO,OACPyiB,YAAY,IACZC,cAAc,QACdC,eAAe,QACfC,OAAO,0CAIbjoB,EAAAC,EAAAC,cAAA,OACEoF,UAAU,kBACVuhB,WAAYG,EACZJ,UAAWI,EACXQ,aAAcP,EACdQ,aAAcP,GAEdlnB,EAAAC,EAAAC,cAAA,OACEoF,UAAU,QACVtB,MAAM,OACNC,OAAO,OACP4jB,QAAQ,aAER7nB,EAAAC,EAAAC,cAAA,YACEsO,KAAK,OACLnJ,OAAO,OACPyiB,YAAY,IACZC,cAAc,QACdC,eAAe,QACfC,OAAO,gDE3NVC,GAAa,CACxB,2CACA,oCACA,iCACA,wCACA,wCC6FaC,GA3FO,WAAM,IAAA3iB,EACYC,oBAAS,GADrBC,EAAAvI,OAAAwI,EAAA,EAAAxI,CAAAqI,EAAA,GACnB2hB,EADmBzhB,EAAA,GACN0iB,EADM1iB,EAAA,GAAAI,EAEQL,oBAAS,GAFjBM,EAAA5I,OAAAwI,EAAA,EAAAxI,CAAA2I,EAAA,GAEnBshB,EAFmBrhB,EAAA,GAERsiB,EAFQtiB,EAAA,GAAAuiB,ExCJrB,SACL9rB,GACyE,IAAAgJ,EAC/CC,mBAASjJ,GADsCkJ,EAAAvI,OAAAwI,EAAA,EAAAxI,CAAAqI,EAAA,GAClE3I,EADkE6I,EAAA,GAC3D6iB,EAD2D7iB,EAAA,GAEnE8iB,EAAWxqB,iBAAOnB,GAMxB,OAJAuG,oBAAU,WACRolB,EAASlpB,QAAUzC,GAClB,CAACA,IAEG,CAACA,EAAO0rB,EAAUC,GwCHsBC,MAE7CzrB,GALwB0rB,EAAAvrB,OAAAwI,EAAA,EAAAxI,CAAAmrB,EAAA,GAGnBzE,EAHmB6E,EAAA,GAGLC,EAHKD,EAAA,GAGOE,EAHPF,EAAA,GAAAG,EAMOpjB,qBANPqjB,EAAA3rB,OAAAwI,EAAA,EAAAxI,CAAA0rB,EAAA,GAMnB/E,EANmBgF,EAAA,GAMNC,EANMD,EAAA,GAOpBE,EAAgBhrB,iBAAO,GAEvBirB,EAAWjrB,iBAAyB,MAG1CoF,oBAAU,WACR,IAAM8lB,EAAeD,EAAS3pB,QAExB6pB,EAAc,kBAAMd,GAAa,IACjCe,EAAe,kBAAMf,GAAa,IAClCgB,EAAejX,QAAQkX,MACvBC,EAAe,WACnB,IAAMC,EAAiBjoB,EACrBynB,EAAc1pB,QAAU,EACxB4oB,GAAWnrB,QAEbmsB,EAAahH,IAAMgG,GAAWsB,GAC9BN,EAAavB,OACbqB,EAAc1pB,QAAUkqB,GAQ1B,OALAN,EAAa5lB,iBAAiB,UAAW6lB,GACzCD,EAAa5lB,iBAAiB,QAAS8lB,GACvCF,EAAa5lB,iBAAiB,QAAS+lB,GACvCH,EAAa5lB,iBAAiB,QAASimB,GAEhC,WACLL,EAAa3lB,oBAAoB,UAAW4lB,GAC5CD,EAAa3lB,oBAAoB,QAAS6lB,GAC1CF,EAAa3lB,oBAAoB,QAAS8lB,GAC1CH,EAAa3lB,oBAAoB,QAASgmB,KAE3C,IAEH,IAAME,EAAyBnG,sBAAY,WACzC,IAAM4F,EAAeD,EAAS3pB,QACxBukB,EAAe,IAAK1nB,OAAOutB,cAC9BvtB,OAAewtB,oBACZ7F,EAAcD,EAAa+F,yBAAyBV,GAE1DP,EAAW9E,GACXkF,EAAUjF,IACT,CAACmF,EAAS3pB,UAEP2mB,EAAa3C,sBAAY,WAC7B,IAAM4F,EAAeD,EAAS3pB,QAE1B4pB,EAAaW,QACfzB,GAAe,GACfc,EAAavB,OAERiB,EAAWtpB,SACdmqB,MAGFrB,GAAe,GACfc,EAAatB,UAEd,CAACqB,EAAS3pB,UAEb,OACEU,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyjB,SAAA,KACE1jB,EAAAC,EAAAC,cAAA,SACEqF,IAAK0jB,EACL3oB,GAAG,eACH4hB,IAAKgG,GAAW,GAChB4B,QAAQ,OACRC,YAAY,cAGblG,GAAgBC,GACf9jB,EAAAC,EAAAC,cAAC8pB,GAAD,CAAUnG,aAAcA,EAAcC,YAAaA,IAGrD9jB,EAAAC,EAAAC,cAAC+pB,GAAD,CACEpG,aAAcA,EACdsD,YAAaA,EACbC,UAAWA,EACXnB,WAAYA,kBCnFpBiE,IAAStd,OACP5M,EAAAC,EAAAC,cAACiqB,EAAA,EAAD,CAAUxtB,MAAOA,GACfqD,EAAAC,EAAAC,cAACkqB,GAAD,OAEFtd,SAASud,eAAe,ShDoHpB,kBAAmBhI,WACrBA,UAAUiI,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.812d2800.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export type StoreState = {\r\n  currentVisualizationIndex: number;\r\n  prevVisualizationIndex: number;\r\n};\r\n\r\nexport enum ActionConstants {\r\n  BEGIN_VISUALIZATION_TRANSITION = 'BEGIN_VISUALIZATION_TRANSITION',\r\n  END_VISUALIZATION_TRANSITION = 'END_VISUALIZATION_TRANSITION',\r\n  GO_TO_PREV_VISUALIZATION = 'GO_TO_PREV_VISUALIZATION',\r\n  GO_TO_NEXT_VISUALIZATION = 'GO_TO_NEXT_VISUALIZATION'\r\n}\r\n\r\ninterface GoToNextVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_NEXT_VISUALIZATION;\r\n}\r\n\r\ninterface GoToPrevVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_PREV_VISUALIZATION;\r\n}\r\n\r\nexport type ActionUnionType =\r\n  | GoToNextVisualizationAction\r\n  | GoToPrevVisualizationAction;\r\n","import { StoreState, ActionConstants, ActionUnionType } from './types';\r\n\r\nconst initialState: StoreState = {\r\n  currentVisualizationIndex: 0,\r\n  prevVisualizationIndex: 0\r\n};\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: ActionUnionType\r\n): StoreState {\r\n  switch (action.type) {\r\n    case ActionConstants.GO_TO_NEXT_VISUALIZATION:\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex + 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.GO_TO_PREV_VISUALIZATION:\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex - 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Options } from './index';\r\nimport './Visualization.scss';\r\n\r\nexport type Props = {\r\n  // array of frequency data with values 0-255\r\n  data: Uint8Array;\r\n  lowPassData: Uint8Array;\r\n  options?: Options;\r\n};\r\n\r\nexport type WrappedProps = {\r\n  data: Uint8Array;\r\n  lowPassData: Uint8Array;\r\n  isBeat: boolean;\r\n  intensity: number;\r\n  lowPassIntensity: number;\r\n};\r\n\r\nconst defaultProps: Props = {\r\n  data: new Uint8Array(),\r\n  lowPassData: new Uint8Array(),\r\n  options: {}\r\n};\r\n\r\n// all visualization components should be wrapped with this HOC\r\nexport function wrap(\r\n  WrappedComponent: React.ComponentType<WrappedProps>\r\n): React.ComponentType<Props> {\r\n  return function({ data, lowPassData, options }: Props = defaultProps) {\r\n    const rawIntensitiesRef = useRef<number[]>([]);\r\n    const lowPassIntensitiesRef = useRef<number[]>([]);\r\n    const startingTimestampRef = useRef<number>(Date.now());\r\n\r\n    let totalDifferenceFromRawBaseline = 0;\r\n    let totalDifferenceFromLowBaseline = 0;\r\n\r\n    const renderedData = data.map((rawDataElement, i) => {\r\n      totalDifferenceFromRawBaseline += Math.abs(rawDataElement - 128);\r\n\r\n      const lowPassDataElement = lowPassData[i];\r\n      totalDifferenceFromLowBaseline += Math.abs(lowPassDataElement - 128);\r\n\r\n      if (options == null || !options.smoothing) {\r\n        return rawDataElement;\r\n      } else {\r\n        // smooth out each data value using a range of values around it,\r\n        // the range of this window is the value of options.smoothing\r\n        let sum = 0;\r\n        let count = 0;\r\n\r\n        let rangeIndex = i - options.smoothing;\r\n\r\n        while (rangeIndex < i + options.smoothing) {\r\n          const rawDataAtRangeIndex = data[rangeIndex] || 128;\r\n          sum += rawDataAtRangeIndex;\r\n          count += 1;\r\n          rangeIndex += 1;\r\n        }\r\n\r\n        return sum / count;\r\n      }\r\n    });\r\n\r\n    let rawIntensityMax = 0;\r\n\r\n    let lowPassIntensitySum = 0;\r\n    let lowPassIntensityCount = 0;\r\n    let lowPassIntensityMax = 0;\r\n\r\n    rawIntensitiesRef.current.forEach((rawIntensity, i) => {\r\n      if (rawIntensity > rawIntensityMax) {\r\n        rawIntensityMax = rawIntensity;\r\n      }\r\n\r\n      const lowPassIntensity = lowPassIntensitiesRef.current[i];\r\n      lowPassIntensitySum += lowPassIntensity;\r\n      lowPassIntensityCount += 1;\r\n\r\n      if (lowPassIntensity > lowPassIntensityMax) {\r\n        lowPassIntensityMax = lowPassIntensity;\r\n      }\r\n    });\r\n\r\n    const currentRawIntensity = totalDifferenceFromRawBaseline / data.length;\r\n    const recentLowPassAvgIntensity =\r\n      lowPassIntensitySum / lowPassIntensityCount || 0;\r\n\r\n    const currentLowPassIntensity =\r\n      totalDifferenceFromLowBaseline / lowPassData.length;\r\n\r\n    rawIntensitiesRef.current = rawIntensitiesRef.current.concat(\r\n      currentRawIntensity\r\n    );\r\n    lowPassIntensitiesRef.current = lowPassIntensitiesRef.current.concat(\r\n      currentLowPassIntensity\r\n    );\r\n\r\n    // remove intensities older than 2 seconds\r\n    if (Date.now() - startingTimestampRef.current > 2000) {\r\n      rawIntensitiesRef.current.shift();\r\n      lowPassIntensitiesRef.current.shift();\r\n    }\r\n\r\n    const isBeat = currentLowPassIntensity > recentLowPassAvgIntensity * 1.5;\r\n\r\n    return (\r\n      <WrappedComponent\r\n        data={renderedData}\r\n        lowPassData={lowPassData}\r\n        isBeat={isBeat}\r\n        intensity={currentRawIntensity}\r\n        lowPassIntensity={currentLowPassIntensity}\r\n      />\r\n    );\r\n  };\r\n}\r\n","const colorTriples = [\r\n  ['#0E9AA7', '#F6CD61', '#FE8A71'],\r\n  ['#EE4540', '#801336', '#2D142C'],\r\n  ['#8FB9A8', '#FDFBD4', '#FCD0BA'],\r\n  ['#AC6D83', '#685D79', '#465C7A'],\r\n  ['#F36E38', '#EF4648', '#582841'],\r\n  ['#F1F1F1', '#9BD7D1', '#305D7A'],\r\n  ['#DEA5B6', '#F3CD8C', '#F2E9C2'],\r\n  ['#E27B47', '#EFCA58', '#46B29E'],\r\n  ['#2E7345', '#2E9975', '#2DB3B3'],\r\n  ['#52A3CC', '#7EA1E5', '#AAAAF2'],\r\n  ['#CC5285', '#CC5285', '#F2BCAA'],\r\n  ['#D8E0BB', '#B6CEC7', '#86A3C3']\r\n];\r\n\r\nconst colorTriplesWithIds = colorTriples.map((colorTriple, i) => ({\r\n  id: i,\r\n  colorTriple\r\n}));\r\n\r\nfunction randomColorTriple() {\r\n  return colorTriples[Math.floor(Math.random() * colorTriples.length)];\r\n}\r\n\r\nexport function getRandomColors(numColors: number, areUnique?: boolean): string[] {\r\n  const colors: string[] = [];\r\n\r\n  while (colors.length < numColors) {\r\n    const randomTriple = randomColorTriple();\r\n    const randomColor = randomTriple[Math.floor(Math.random() * randomTriple.length)];\r\n\r\n    if (areUnique && colors.includes(randomColor)) {\r\n      break;\r\n    }\r\n\r\n    colors.push(randomColor);\r\n  }\r\n  return colors;\r\n}\r\n\r\nexport function getRandomColor() {\r\n  return getRandomColors(1)[0];\r\n}\r\n\r\nexport function getRandomColorTriple() {\r\n  const colorCopy = [...randomColorTriple()];\r\n  if (Math.random() <= 0.5) {\r\n    return colorCopy.reverse();\r\n  } else {\r\n    return colorCopy;\r\n  }\r\n}\r\n","export function modulo(number1: number, number2: number): number {\r\n  return ((number1 % number2) + number2) % number2;\r\n}\r\n\r\nexport function isMobileDevice(): boolean {\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n    navigator.userAgent\r\n  );\r\n}\r\n\r\nfunction isInteger(number: number) {\r\n  return modulo(number, 1) === 0;\r\n}\r\n\r\nexport function randomNumberBetween(\r\n  min: number,\r\n  max: number,\r\n  decimalPrecision = 1\r\n) {\r\n  if (isInteger(min) && isInteger(max)) {\r\n    return min + Math.floor(Math.random() * (max - min));\r\n  }\r\n\r\n  const randomFloat = min + Math.random() * (max - min);\r\n  return Number(randomFloat.toPrecision(decimalPrecision));\r\n}\r\n\r\nexport function debounced(\r\n  fn: (...args: any[]) => any,\r\n  msToWait: number = 500,\r\n  isImmediate: boolean = false\r\n) {\r\n  let timeoutId: number | null = null;\r\n\r\n  return function(this: any, ...args: any[]): any {\r\n    const context = this;\r\n\r\n    const delayedFunction = function() {\r\n      timeoutId = null;\r\n\r\n      if (!isImmediate) {\r\n        fn.apply(context, args);\r\n      }\r\n    };\r\n\r\n    const shouldCallNow = isImmediate && timeoutId == null;\r\n\r\n    if (timeoutId != null) {\r\n      window.clearTimeout(timeoutId);\r\n    }\r\n\r\n    timeoutId = window.setTimeout(delayedFunction, msToWait);\r\n\r\n    if (shouldCallNow) {\r\n      fn.apply(context, args);\r\n    }\r\n  };\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { debounced } from '../utils';\r\n\r\nexport function useStateRef<S>(\r\n  initialState: S | (() => S)\r\n): [S, React.Dispatch<React.SetStateAction<S>>, React.MutableRefObject<S>] {\r\n  const [state, setState] = useState(initialState);\r\n  const stateRef = useRef(state);\r\n\r\n  useEffect(() => {\r\n    stateRef.current = state;\r\n  }, [state]);\r\n\r\n  return [state, setState, stateRef];\r\n}\r\n\r\nexport function useDebouncedResize(\r\n  fn: React.EffectCallback,\r\n  deps?: React.DependencyList\r\n) {\r\n  useEffect(() => {\r\n    fn();\r\n    const debouncedFn = debounced(fn);\r\n\r\n    window.addEventListener('resize', debouncedFn);\r\n    return () => window.removeEventListener('resize', debouncedFn);\r\n  }, deps);\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { getColors } from './utils';\r\nimport { useDebouncedResize } from '../../../../utils/hooks';\r\nimport './Waveform.scss';\r\n\r\nconst LINE_WIDTH = 10;\r\nconst LINE_X_OFFSET = 0;\r\nconst LINE_Y_OFFSET = 5;\r\n\r\nconst Waveform: React.FC<VisualizationHOC.WrappedProps> = ({ data }) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useDebouncedResize(() => {\r\n    const { innerWidth, innerHeight, devicePixelRatio = 1 } = window;\r\n\r\n    const canvas = canvasRef.current!;\r\n    canvas.width = innerWidth * devicePixelRatio;\r\n    canvas.height = innerHeight * devicePixelRatio;\r\n\r\n    // initial paint to match fade out color from rounding error\r\n    const ctx = canvas.getContext('2d')!;\r\n    ctx.fillStyle = '#101010';\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n\r\n    const fadeOut = () => {\r\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    };\r\n\r\n    const intervalId = window.setInterval(fadeOut, 7);\r\n    return () => window.clearInterval(intervalId);\r\n  }, []);\r\n\r\n  // paint on every data update\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n    ctx.lineWidth = LINE_WIDTH;\r\n    ctx.lineCap = 'round';\r\n\r\n    const colors = getColors(2);\r\n\r\n    const sliceWidth = canvas.width / data.length;\r\n\r\n    colors.forEach((color, i) => {\r\n      ctx.strokeStyle = color;\r\n      ctx.beginPath();\r\n\r\n      let x = i * LINE_X_OFFSET;\r\n      ctx.moveTo(x, canvas.height / 2);\r\n\r\n      data.forEach(dataElement => {\r\n        const y =\r\n          (dataElement / 255.0) * canvas.height -\r\n          (LINE_Y_OFFSET * colors.length) / 2;\r\n        ctx.lineTo(x, y + i * ((LINE_Y_OFFSET * colors.length) / 2));\r\n        x += sliceWidth;\r\n      });\r\n\r\n      ctx.lineTo(x, canvas.height / 2);\r\n      ctx.stroke();\r\n    });\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"waveform\">\r\n      <div className=\"backdrop\" />\r\n      <canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Waveform);\r\n","import {\r\n  getRandomColorTriple,\r\n  getRandomColors,\r\n  getRandomColor\r\n} from '../../../../utils/colors';\r\n\r\nexport function getColors(numColors: number) {\r\n  switch (numColors) {\r\n    case 3:\r\n      return getRandomColorTriple();\r\n    case 2:\r\n      return getRandomColors(2, true);\r\n    case 1:\r\n      return [getRandomColor()];\r\n    default:\r\n      return getRandomColorTriple();\r\n  }\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport { useTransition, animated, interpolate, config } from 'react-spring';\r\nimport classNames from 'classnames';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { useDebouncedResize } from '../../../../utils/hooks';\r\nimport { getRandomColor } from '../../../../utils/colors';\r\nimport { DATA_SIZE } from '../../../../config';\r\nimport './Drummer.scss';\r\n\r\nconst MIN_HIT_COUNT = 0.04;\r\nconst MIN_FREQUENCY_VARIATION = 10;\r\nconst MIN_DELAY_BETWEEN_COLOR_CHANGE = 200;\r\nconst NUM_DRUMMERS = 10;\r\n\r\nconst minHitCount = MIN_HIT_COUNT * DATA_SIZE;\r\n\r\nconst Drummer: React.FC<VisualizationHOC.WrappedProps> = ({ data, isBeat }) => {\r\n  const [size, setSize] = useState(0);\r\n  const [colorSize, setColorSize] = useState(0);\r\n\r\n  const colorsRef = useRef({\r\n    values: [getRandomColor()],\r\n    lastChangedTimestamp: Date.now()\r\n  });\r\n\r\n  useDebouncedResize(() => {\r\n    const { innerWidth, innerHeight } = window;\r\n    const maxSideLength = Math.max(innerWidth, innerHeight);\r\n    setSize(maxSideLength * 2);\r\n\r\n    const colorDiameter = Math.sqrt(\r\n      Math.pow(innerWidth, 2) + Math.pow(innerHeight, 2)\r\n    );\r\n    setColorSize(colorDiameter);\r\n  }, []);\r\n\r\n  const colors = colorsRef.current;\r\n  const numDrummers = NUM_DRUMMERS;\r\n\r\n  const freqMap: { [key: string]: number } = {};\r\n  const numPerSlice = 256 / numDrummers;\r\n\r\n  let freqKey = 0;\r\n  while (freqKey < numDrummers) {\r\n    freqMap[freqKey] = 0;\r\n    freqKey += 1;\r\n  }\r\n\r\n  data.forEach(freqData => {\r\n    let freqKey = 0;\r\n    while (freqKey < numDrummers) {\r\n      const ceiling = numPerSlice * (freqKey + 1);\r\n      if (\r\n        Math.abs(freqData - 128) > MIN_FREQUENCY_VARIATION &&\r\n        freqData <= ceiling\r\n      ) {\r\n        freqMap[freqKey] += 1;\r\n        break;\r\n      }\r\n      freqKey += 1;\r\n    }\r\n  });\r\n\r\n  // space out background color changes so they're not jarring\r\n  const now = Date.now();\r\n  if (\r\n    isBeat &&\r\n    now - colors.lastChangedTimestamp > MIN_DELAY_BETWEEN_COLOR_CHANGE\r\n  ) {\r\n    let newColor;\r\n    do {\r\n      newColor = getRandomColor();\r\n    } while (colors.values[colors.values.length - 1] === newColor);\r\n\r\n    colors.values.push(newColor);\r\n    if (colors.values.length > 1) {\r\n      colors.values.shift();\r\n    }\r\n    colors.lastChangedTimestamp = now;\r\n  }\r\n\r\n  const drummers = Object.entries(freqMap).map(([freqKey, hitCount], i) => {\r\n    const drummerContainerSize = ((1 + +freqKey) * size) / numDrummers;\r\n\r\n    return (\r\n      <div\r\n        key={freqKey}\r\n        className=\"drummer-container\"\r\n        style={{\r\n          width: `${drummerContainerSize}px`,\r\n          height: `${drummerContainerSize}px`,\r\n          opacity: ((numDrummers - i) / numDrummers) * 0.5 * 0.25\r\n        }}\r\n      >\r\n        <div className={classNames('beat', { hit: hitCount > minHitCount })} />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const smallestDrummerSize = size / (numDrummers * 2);\r\n\r\n  const transitions = useTransition(colors.values, null, {\r\n    from: item => ({\r\n      backgroundColor: item,\r\n      width: smallestDrummerSize,\r\n      height: smallestDrummerSize,\r\n      scale: 1\r\n    }),\r\n    enter: { scale: (colorSize / smallestDrummerSize) * 1.5 },\r\n    leave: { scale: 0 },\r\n    config: config.slow\r\n  });\r\n\r\n  return (\r\n    <div className=\"drummer\">\r\n      {drummers}\r\n      {transitions.map(({ item, props, key }) => {\r\n        const { scale, ...style } = props as any;\r\n\r\n        return (\r\n          <animated.div\r\n            className=\"color-overlay\"\r\n            key={key}\r\n            style={{\r\n              ...style,\r\n              transform: interpolate(\r\n                [scale],\r\n                (s: number) => `translate3d(0, 0, 0) scale(${s})`\r\n              )\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Drummer);\r\n","import { Scene, PointsMaterial, Clock } from 'three';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\nimport { createSphereGeometry, createPoints } from './entities/polys';\r\nimport { debounced } from '../../../../../utils';\r\n\r\nconst DELAY_BEFORE_ROTATING_X = 1500;\r\nconst CAMERA_MAX_DISTANCE = 200;\r\nconst CAMERA_DRIFT = 0.025;\r\nconst ROTATE_Y = -0.3;\r\nconst ROTATE_X = 0.3;\r\nconst SPHERE_SEGMENTS = 60;\r\n\r\nexport default function sceneManager(rendererContainer: HTMLDivElement) {\r\n  let animationFrameId: number;\r\n  let sceneInitializedTimestamp = Date.now();\r\n  let t = 0;\r\n\r\n  const sphereGeometry = createSphereGeometry(SPHERE_SEGMENTS);\r\n  const halpern = createPoints(sphereGeometry);\r\n  const camera = createCamera(CAMERA_MAX_DISTANCE);\r\n  const renderer = createRenderer();\r\n  rendererContainer.appendChild(renderer.domElement);\r\n\r\n  const scene = new Scene();\r\n  scene.add(halpern);\r\n\r\n  // clock is started in Halpern component when the\r\n  // animation loop is started\r\n  const clock = new Clock();\r\n\r\n  const debouncedResize = debounced(onResize);\r\n  window.addEventListener('resize', debouncedResize);\r\n  document.addEventListener('visibilitychange', onVisibilityChange);\r\n\r\n  function animate() {\r\n    const delta = clock.getDelta();\r\n\r\n    halpern.rotateY(ROTATE_Y * delta);\r\n\r\n    if (Date.now() - sceneInitializedTimestamp > DELAY_BEFORE_ROTATING_X) {\r\n      halpern.rotateX(ROTATE_X * delta);\r\n    }\r\n\r\n    t += delta;\r\n\r\n    if (t >= Math.PI * 2) {\r\n      t = 0;\r\n    }\r\n\r\n    camera.translateY(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateX(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateZ(Math.cos(t) * CAMERA_DRIFT * 5);\r\n\r\n    renderer.render(scene, camera);\r\n    animationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function cleanup() {\r\n    window.cancelAnimationFrame(animationFrameId);\r\n    window.removeEventListener('resize', debouncedResize);\r\n    document.removeEventListener('visibilitychange', onVisibilityChange);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    scene.remove(halpern);\r\n\r\n    halpern.geometry.dispose();\r\n    (halpern.material as PointsMaterial).dispose();\r\n    sphereGeometry.dispose();\r\n\r\n    renderer.dispose();\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function onVisibilityChange() {\r\n    if (document.visibilityState === 'hidden') {\r\n      clock.stop();\r\n    } else {\r\n      clock.start();\r\n    }\r\n  }\r\n\r\n  return {\r\n    clock,\r\n    sphereGeometry,\r\n    halpern,\r\n    animate,\r\n    cleanup\r\n  };\r\n}\r\n","import {\r\n  Points,\r\n  PointsMaterial,\r\n  SphereGeometry,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  TextureLoader\r\n} from 'three';\r\n\r\nexport function createSphereGeometry(segments: number): SphereGeometry {\r\n  return new SphereGeometry(48, segments, segments);\r\n}\r\n\r\nexport function createPoints(sphereGeometry: SphereGeometry): Points {\r\n  const pointGeometry = new SphereGeometry(\r\n    sphereGeometry.parameters.radius,\r\n    sphereGeometry.parameters.widthSegments,\r\n    sphereGeometry.parameters.heightSegments\r\n  );\r\n\r\n  const { vertices } = pointGeometry;\r\n  const positions = new Float32Array(vertices.length * 3);\r\n\r\n  vertices.forEach((vertex, i) => {\r\n    vertex.toArray(positions, i * 3);\r\n  });\r\n\r\n  const geometry = new BufferGeometry();\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n  (geometry.attributes.position as BufferAttribute).dynamic = true;\r\n\r\n  const material = new PointsMaterial({\r\n    size: 0.5,\r\n    map: new TextureLoader().load('assets/images/point.png'),\r\n    alphaTest: 0.5,\r\n    color: 0x666666,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, material);\r\n}\r\n","import { PerspectiveCamera, Vector3 } from 'three';\r\n\r\nexport function createCamera(startingY: number) {\r\n  const camera = new PerspectiveCamera(\r\n    75,\r\n    window.innerWidth / window.innerHeight,\r\n    0.1,\r\n    1000\r\n  );\r\n\r\n  camera.position.set(0, startingY, 0);\r\n  camera.lookAt(new Vector3(0, 0, 0));\r\n\r\n  return camera;\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ alpha: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x000000, 0);\r\n\r\n  return renderer;\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { BufferGeometry, BufferAttribute } from 'three';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport sceneManager from './three/sceneManager';\r\nimport './Halpern.scss';\r\n\r\nconst RIPPLE_SPEED = 3;\r\nconst VERTEX_SEGMENT_WEIGHT_COEFFICIENT = 0.1;\r\nconst BASELINE_VERTEX_SCALAR_FACTOR = 1;\r\n\r\nconst Halpern: React.FC<VisualizationHOC.WrappedProps> = ({ data }) => {\r\n  const rendererRef = useRef<HTMLDivElement>(null);\r\n  const managedSceneRef = useRef<any>();\r\n  const originalVerticesRef = useRef<ArrayLike<number>>();\r\n  const sphereDataSegmentsRef = useRef<number>();\r\n  const vertexSegmentLengthRef = useRef<number>();\r\n  const focusedDataRef = useRef<number[]>(new Array(data.length).fill(128));\r\n\r\n  useEffect(() => {\r\n    const rendererContainer = rendererRef.current!;\r\n    const managedScene = sceneManager(rendererContainer);\r\n\r\n    managedSceneRef.current = managedScene;\r\n\r\n    const halpernGeometry = managedScene.halpern.geometry as BufferGeometry;\r\n\r\n    sphereDataSegmentsRef.current = Math.floor(\r\n      data.length / managedScene.sphereGeometry.parameters.widthSegments\r\n    );\r\n\r\n    // split vertices up into segments belonging to slices of x cross sections,\r\n    // first and last vertices are at top and bottom of sphere\r\n    vertexSegmentLengthRef.current =\r\n      (managedScene.sphereGeometry.vertices.length - 2) /\r\n      (managedScene.sphereGeometry.parameters.widthSegments - 1);\r\n\r\n    originalVerticesRef.current = (halpernGeometry.attributes.position\r\n      .array as Float32Array).slice(0);\r\n\r\n    managedScene.clock.start();\r\n\r\n    managedScene.animate();\r\n\r\n    return managedScene.cleanup;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const rippleSpeed = RIPPLE_SPEED;\r\n    const focusedDataIndex = Math.floor(data.length / 2);\r\n\r\n    focusedDataRef.current.splice(0, rippleSpeed);\r\n    focusedDataRef.current = focusedDataRef.current.concat(\r\n      new Array(rippleSpeed).fill(data[focusedDataIndex])\r\n    );\r\n\r\n    const halpernGeometry = managedSceneRef.current!.halpern.geometry;\r\n    const halpernBufferPositions = halpernGeometry.getAttribute('position')\r\n      .array as Float32Array;\r\n\r\n    let i = 0;\r\n    while (i < originalVerticesRef.current!.length) {\r\n      // find which segment the current index belongs to\r\n      const vertexSegmentIndex = Math.ceil(\r\n        Math.floor(i / 3) / vertexSegmentLengthRef.current!\r\n      );\r\n\r\n      const dataIndex = vertexSegmentIndex * sphereDataSegmentsRef.current!;\r\n      const vertexSegmentWeight = Math.min(\r\n        vertexSegmentIndex,\r\n        vertexSegmentLengthRef.current! - vertexSegmentIndex\r\n      );\r\n\r\n      const dataVariation =\r\n        Math.abs(focusedDataRef.current[dataIndex] - 128) / 255;\r\n\r\n      const scalar =\r\n        dataVariation *\r\n          vertexSegmentWeight *\r\n          VERTEX_SEGMENT_WEIGHT_COEFFICIENT +\r\n        BASELINE_VERTEX_SCALAR_FACTOR;\r\n\r\n      // update X, Y, and Z vector positions in BufferGeometry\r\n      halpernBufferPositions[i] = originalVerticesRef.current![i] * scalar;\r\n      halpernBufferPositions[i + 1] =\r\n        originalVerticesRef.current![i + 1] * scalar;\r\n      halpernBufferPositions[i + 2] =\r\n        originalVerticesRef.current![i + 2] * scalar;\r\n\r\n      i += 3;\r\n    }\r\n\r\n    // inform three.js that vertices should be repositioned,\r\n    // final render is handled in sceneManager animate loop\r\n    (halpernGeometry.getAttribute(\r\n      'position'\r\n    ) as BufferAttribute).needsUpdate = true;\r\n  }, [data]);\r\n\r\n  return <div className=\"halpern\" ref={rendererRef} />;\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Halpern);\r\n","export const starVertexShader = `\r\nattribute float alpha;\r\nvarying float vAlpha;\r\n\r\nvoid main() {\r\n  vAlpha = alpha;\r\n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n  gl_PointSize = 4.0 * alpha;\r\n  gl_Position = projectionMatrix * mvPosition;\r\n}\r\n`;\r\n\r\nexport const starFragmentShader = `\r\nuniform vec3 color;\r\nvarying float vAlpha;\r\n\r\nvoid main() {\r\n  float r = 0.0;\r\n  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\r\n  r = dot(cxy, cxy);\r\n  if (r > 1.0) {\r\n    discard;\r\n  }\r\n\r\n  gl_FragColor = vec4(color, vAlpha);\r\n}\r\n`;\r\n","import {\r\n  Points,\r\n  BufferAttribute,\r\n  ShaderMaterial,\r\n  Color,\r\n  BufferGeometry,\r\n  TextureLoader,\r\n  MeshLambertMaterial,\r\n  Mesh,\r\n  PlaneGeometry\r\n} from 'three';\r\nimport { starVertexShader, starFragmentShader } from './shaders';\r\n\r\nexport function createStars(starCount: number): Points {\r\n  const geometry = new BufferGeometry();\r\n\r\n  const positions = new Float32Array(starCount * 3);\r\n\r\n  let i = 0;\r\n  while (i < starCount) {\r\n    // add random x, y, and z vector positions\r\n    positions[i++] = Math.random() * 100 - 50;\r\n    positions[i++] = Math.random() * 100 - 50;\r\n    positions[i++] = Math.random() * 100 - 50;\r\n  }\r\n\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n\r\n  const alphas = new Float32Array(geometry.attributes.position.count * 1);\r\n\r\n  let j = 0;\r\n  while (j < alphas.length) {\r\n    alphas[j] = Math.random();\r\n    j += 1;\r\n  }\r\n\r\n  geometry.addAttribute('alpha', new BufferAttribute(alphas, 1));\r\n\r\n  const shaderMaterial = new ShaderMaterial({\r\n    uniforms: {\r\n      color: { type: 'c', value: new Color(0xffffff) }\r\n    },\r\n    vertexShader: starVertexShader,\r\n    fragmentShader: starFragmentShader,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, shaderMaterial);\r\n}\r\n\r\nexport function createCloud(): Mesh {\r\n  const texture = Math.random() < 0.5 ? 'cloud.png' : 'smoke.png';\r\n\r\n  const geometry = new PlaneGeometry(50, 50);\r\n\r\n  const cloudMaterial = new MeshLambertMaterial({\r\n    map: new TextureLoader().load(`assets/images/${texture}`),\r\n    transparent: true,\r\n    opacity: 0.15,\r\n    depthTest: false\r\n  });\r\n\r\n  geometry.rotateZ(Math.random() * 360);\r\n\r\n  const cloud = new Mesh(geometry, cloudMaterial);\r\n\r\n  const zPosition = Math.random() * 15 + 10;\r\n\r\n  cloud.position.set(\r\n    Math.random() * 100 - 50,\r\n    Math.random() * 100 - 50,\r\n    Math.random() < 0.5 ? zPosition : -zPosition\r\n  );\r\n\r\n  return cloud;\r\n}\r\n","import { DirectionalLight, AmbientLight } from 'three';\r\n\r\nexport function createAmbientLight(color: number, intensity: number) {\r\n  return new AmbientLight(color, intensity);\r\n}\r\n\r\nexport function createDirectionalLight(color: number, intensity: number) {\r\n  return new DirectionalLight(color, intensity);\r\n}\r\n","import {\r\n  Scene,\r\n  PointsMaterial,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  Group,\r\n  Mesh,\r\n  ShaderMaterial,\r\n  Clock\r\n} from 'three';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\nimport { createStars, createCloud } from './entities/polys';\r\nimport { createAmbientLight, createDirectionalLight } from './entities/light';\r\nimport { debounced } from '../../../../../utils';\r\n\r\nconst STAR_COUNT = 10 * 1000;\r\nconst CLOUD_COUNT = 40;\r\nconst MAX_STAR_ALPHA = 1.0;\r\nconst MIN_STAR_ALPHA = 0.2;\r\nconst STAR_ALPHA_DELTA = 0.75;\r\nconst ROTATE_Y = 0.025;\r\nconst ROTATE_X = 0.001;\r\nconst STATIC_LIGHT_COLOR = 0x00c4b6;\r\nconst VARIABLE_LIGHT_COLOR = 0xd10022;\r\n\r\nexport default function sceneManager(\r\n  rendererContainer: HTMLDivElement,\r\n  lightIntensity: number\r\n) {\r\n  let animationFrameId: number;\r\n\r\n  const renderer = createRenderer();\r\n  rendererContainer.appendChild(renderer.domElement);\r\n  const camera = createCamera();\r\n  const scene = new Scene();\r\n\r\n  const stars = createStars(STAR_COUNT);\r\n  scene.add(stars);\r\n\r\n  const cloudCover = new Group();\r\n\r\n  let cloudCount = 0;\r\n  while (cloudCount <= CLOUD_COUNT) {\r\n    const cloud = createCloud();\r\n    cloudCover.add(cloud);\r\n    cloudCount += 1;\r\n  }\r\n\r\n  scene.add(cloudCover);\r\n\r\n  const aLight = createAmbientLight(0xffffff, lightIntensity);\r\n  scene.add(aLight);\r\n\r\n  const fixedDLight = createDirectionalLight(STATIC_LIGHT_COLOR, 2);\r\n  fixedDLight.position.set(0, 0, 1);\r\n  scene.add(fixedDLight);\r\n\r\n  const dLight = createDirectionalLight(VARIABLE_LIGHT_COLOR, lightIntensity);\r\n  dLight.position.set(0, 0, 1);\r\n  scene.add(dLight);\r\n\r\n  // create a fixed array to track which direction to adjust each star alpha\r\n  const starAlphas = (stars.geometry as BufferGeometry).attributes.alpha;\r\n  const alphaDirection = new Float32Array(starAlphas.count);\r\n\r\n  for (let i = 0; i < alphaDirection.length; i++) {\r\n    // direction of 1 means alpha should increase\r\n    // -1 means alpha should decrease\r\n    alphaDirection[i] = Math.random() < 0.5 ? 1 : -1;\r\n  }\r\n\r\n  // clock is started in Stars component when\r\n  // the animation loop is first triggered\r\n  const clock = new Clock();\r\n\r\n  const debouncedResize = debounced(onResize);\r\n  window.addEventListener('resize', debouncedResize);\r\n  document.addEventListener('visibilitychange', onVisibilityChange);\r\n\r\n  function animate() {\r\n    const delta = clock.getDelta();\r\n\r\n    stars.rotateX(ROTATE_X * delta);\r\n    stars.rotateY(ROTATE_Y * delta);\r\n\r\n    cloudCover.rotateX(ROTATE_X * 24 * delta);\r\n    cloudCover.rotateY(ROTATE_Y * 2 * delta);\r\n    cloudCover.rotateZ(ROTATE_X * 3 * delta);\r\n\r\n    cloudCover.children.forEach(cloud => {\r\n      (cloud as Mesh).lookAt(camera.position);\r\n    });\r\n\r\n    // use alphaDirection to maintain alpha adjustment direction until we\r\n    // reach a limit, then switch the direction\r\n    for (let i = 0; i < starAlphas.count; i++) {\r\n      if (alphaDirection[i] > 0) {\r\n        (starAlphas.array as Float32Array)[i] *= 1 + STAR_ALPHA_DELTA * delta;\r\n        if ((starAlphas.array as Float32Array)[i] > MAX_STAR_ALPHA) {\r\n          alphaDirection[i] = -1;\r\n        }\r\n      } else {\r\n        (starAlphas.array as Float32Array)[i] *= 1 - STAR_ALPHA_DELTA * delta;\r\n        if ((starAlphas.array as Float32Array)[i] < MIN_STAR_ALPHA) {\r\n          alphaDirection[i] = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    (starAlphas as BufferAttribute).needsUpdate = true;\r\n\r\n    renderer.render(scene, camera);\r\n    animationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function cleanup() {\r\n    window.cancelAnimationFrame(animationFrameId);\r\n    window.removeEventListener('resize', debouncedResize);\r\n    document.removeEventListener('visibilitychange', onVisibilityChange);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    scene.remove(stars);\r\n    stars.geometry.dispose();\r\n    (stars.material as PointsMaterial).dispose();\r\n\r\n    scene.remove(cloudCover);\r\n    cloudCover.children.forEach(cloud => {\r\n      (cloud as Mesh).geometry.dispose();\r\n      ((cloud as Mesh).material as ShaderMaterial).dispose();\r\n    });\r\n\r\n    renderer.dispose();\r\n    console.log('disposed three objects');\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function onVisibilityChange() {\r\n    if (document.visibilityState === 'hidden') {\r\n      clock.stop();\r\n    } else {\r\n      clock.start();\r\n    }\r\n  }\r\n\r\n  return {\r\n    clock,\r\n    animate,\r\n    cleanup,\r\n    dLight\r\n  };\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ antialias: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x0000f, 1);\r\n\r\n  return renderer;\r\n}\r\n","import { PerspectiveCamera } from 'three';\r\n\r\nexport function createCamera() {\r\n  const camera = new PerspectiveCamera(\r\n    50,\r\n    window.innerWidth / window.innerHeight,\r\n    1,\r\n    1000\r\n  );\r\n\r\n  return camera;\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport sceneManager from './three/sceneManager';\r\nimport './Stars.scss';\r\n\r\nconst MIN_DELAY_BETWEEN_INTENSITY_CHANGE = 75;\r\nconst MAX_LIGHT_INTENSITY_INCREASE_DELTA = 2.5;\r\nconst MIN_LIGHT_INTENSITY = 1;\r\n\r\nconst Stars: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  intensity\r\n}) => {\r\n  const rendererRef = useRef<HTMLDivElement>(null);\r\n  const managedSceneRef = useRef<any>();\r\n  const lightTimestampRef = useRef<number>(Date.now());\r\n\r\n  useEffect(() => {\r\n    const rendererContainer = rendererRef.current!;\r\n    const managedScene = sceneManager(rendererContainer, MIN_LIGHT_INTENSITY);\r\n\r\n    managedSceneRef.current = managedScene;\r\n\r\n    managedScene.clock.start();\r\n    managedScene.animate();\r\n\r\n    return managedScene.cleanup;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const now = Date.now();\r\n\r\n    if (now - lightTimestampRef.current <= MIN_DELAY_BETWEEN_INTENSITY_CHANGE) {\r\n      return;\r\n    }\r\n\r\n    const { dLight } = managedSceneRef.current!;\r\n\r\n    const currentLightIntensity = dLight.intensity;\r\n\r\n    let newLightIntensity = intensity / 2 || MIN_LIGHT_INTENSITY;\r\n\r\n    if (\r\n      newLightIntensity - currentLightIntensity >\r\n      MAX_LIGHT_INTENSITY_INCREASE_DELTA\r\n    ) {\r\n      newLightIntensity =\r\n        currentLightIntensity + MAX_LIGHT_INTENSITY_INCREASE_DELTA;\r\n    }\r\n\r\n    dLight.intensity = newLightIntensity;\r\n\r\n    lightTimestampRef.current = now;\r\n  }, [data]);\r\n\r\n  return <div className=\"stars\" ref={rendererRef} />;\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Stars);\r\n","const WINDOW_FRAME_THICKNESS_DIVISOR = 50;\r\n\r\nexport abstract class Renderer {\r\n  protected canvasWidth: number;\r\n  protected canvasHeight: number;\r\n  protected oneThirdCanvasWidth: number;\r\n  protected oneHalfCanvasHeight: number;\r\n  protected windowFrameThickness: number;\r\n  protected roundedRadius: number;\r\n\r\n  constructor(protected ctx: CanvasRenderingContext2D) {\r\n    this.canvasWidth = ctx.canvas.width;\r\n    this.canvasHeight = ctx.canvas.height;\r\n    this.oneThirdCanvasWidth = this.canvasWidth / 3;\r\n    this.oneHalfCanvasHeight = this.canvasHeight / 2;\r\n    this.windowFrameThickness = Math.floor(\r\n      Math.max(this.canvasWidth, this.canvasHeight) /\r\n        WINDOW_FRAME_THICKNESS_DIVISOR\r\n    );\r\n    this.roundedRadius = Math.floor(this.windowFrameThickness / 3);\r\n    ctx.save();\r\n  }\r\n\r\n  // for initial paint - subclasses should call super.render()\r\n  render(): void {\r\n    this.ctx.restore();\r\n  }\r\n\r\n  // for animation\r\n  tick(args: any): void {}\r\n}\r\n","import { randomNumberBetween } from '../../../../../utils';\r\n\r\nconst LIGHT_COLOR = 'rgb(255, 255, 255)';\r\nconst MIN_LIGHT_HEIGHT_RATIO = 0.01;\r\nconst MAX_LIGHT_HEIGHT_RATIO = 0.025;\r\nconst MIN_LIGHTS_PER_FLOOR = 3;\r\nconst MAX_LIGHTS_PER_FLOOR = 10;\r\nconst MIN_GAP_WIDTH_RATIO = 0.01;\r\nconst MAX_GAP_WIDTH_RATIO = 0.05;\r\nconst MIN_LIGHT_PADDING_RATIO = 0.01;\r\nconst MAX_LIGHT_PADDING_RATIO = 0.03;\r\nconst MIN_BUILDING_X_PADDING_RATIO = 0.05;\r\nconst MAX_BUILDING_X_PADDING_RATIO = 0.1;\r\nconst MIN_BUILDING_TOP_PADDING_RATIO = 0.025;\r\nconst MAX_BUILDING_TOP_PADDING_RATIO = 0.1;\r\n\r\nexport type BuildingBlueprint = {\r\n  ctx: CanvasRenderingContext2D;\r\n  canvasHeight: number;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  color: string;\r\n};\r\n\r\ntype Light = {\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  isOn: boolean;\r\n};\r\n\r\nexport class Building {\r\n  private ctx: CanvasRenderingContext2D;\r\n  private canvasHeight: number;\r\n\r\n  public x: number;\r\n  public y: number;\r\n  public width: number;\r\n  public height: number;\r\n  public color: string;\r\n  public lights: Light[] = [];\r\n\r\n  constructor(blueprint: BuildingBlueprint) {\r\n    this.ctx = blueprint.ctx;\r\n    this.canvasHeight = blueprint.canvasHeight;\r\n    this.x = blueprint.x;\r\n    this.y = blueprint.y;\r\n    this.width = blueprint.width;\r\n    this.height = blueprint.height;\r\n    this.color = blueprint.color;\r\n  }\r\n\r\n  // called externally so that buildings may be\r\n  // repositioned before light positions are determined\r\n  generateLights() {\r\n    const { canvasHeight, width, height } = this;\r\n\r\n    const lightHeight =\r\n      randomNumberBetween(MIN_LIGHT_HEIGHT_RATIO, MAX_LIGHT_HEIGHT_RATIO) *\r\n      height;\r\n\r\n    const lightPadding =\r\n      randomNumberBetween(MIN_LIGHT_PADDING_RATIO, MAX_LIGHT_PADDING_RATIO) *\r\n      height;\r\n\r\n    const lightsPerFloor = randomNumberBetween(\r\n      MIN_LIGHTS_PER_FLOOR,\r\n      MAX_LIGHTS_PER_FLOOR\r\n    );\r\n\r\n    const buildingXPadding =\r\n      randomNumberBetween(\r\n        MIN_BUILDING_X_PADDING_RATIO,\r\n        MAX_BUILDING_X_PADDING_RATIO\r\n      ) * width;\r\n\r\n    const buildingTopPadding =\r\n      randomNumberBetween(\r\n        MIN_BUILDING_TOP_PADDING_RATIO,\r\n        MAX_BUILDING_TOP_PADDING_RATIO\r\n      ) * height;\r\n\r\n    const gapWidth =\r\n      randomNumberBetween(MIN_GAP_WIDTH_RATIO, MAX_GAP_WIDTH_RATIO) * width;\r\n\r\n    const lightWidth =\r\n      (this.width - buildingXPadding * 2 - gapWidth * (lightsPerFloor - 1)) /\r\n      lightsPerFloor;\r\n\r\n    const lights: Light[] = [];\r\n    let x = this.x + buildingXPadding;\r\n    let y = this.y + buildingTopPadding;\r\n\r\n    while (y < canvasHeight * 0.98) {\r\n      // each iteration generates a row of lights for the floor\r\n      if (x >= this.x + this.width - buildingXPadding) {\r\n        // start a new floor\r\n        x = this.x + buildingXPadding;\r\n        y += lightHeight + lightPadding;\r\n      } else {\r\n        lights.push({\r\n          x,\r\n          y,\r\n          width: lightWidth,\r\n          height: lightHeight,\r\n          isOn: Math.random() > 0.4\r\n        });\r\n\r\n        x += lightWidth + gapWidth;\r\n      }\r\n    }\r\n\r\n    this.lights = lights;\r\n  }\r\n\r\n  render() {\r\n    const { ctx, x, y, width, height, color } = this;\r\n    ctx.save();\r\n\r\n    // render building\r\n    ctx.fillStyle = color;\r\n    ctx.fillRect(x, y, width, height);\r\n\r\n    // render lights\r\n    ctx.fillStyle = LIGHT_COLOR;\r\n    for (const light of this.lights) {\r\n      if (light.isOn) {\r\n        ctx.fillRect(light.x, light.y, light.width, light.height);\r\n      }\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { Building } from './building';\r\nimport { randomNumberBetween } from '../../../../../utils';\r\nimport { getRandomColor } from '../../../../../utils/colors';\r\n\r\nconst LAYER_OVERLAY_COLOR = 'rgba(65, 35, 66, 0.6)';\r\n\r\nconst MAX_BUILDING_HEIGHT_RATIO = 0.95;\r\nconst MIN_BUILDING_HEIGHT_RATIO = 0.3;\r\nconst MIN_BUILDING_WIDTH_RATIO = 0.08;\r\nconst MAX_BUILDING_WIDTH_RATIO = 0.15;\r\nconst MIN_BUILDING_GAP_RATIO = 0.02;\r\nconst MAX_BUILDING_GAP_RATIO = 0.05;\r\nconst NUMBER_OF_LAYERS = 4;\r\n\r\nexport class City extends Renderer {\r\n  private layers: Building[][] = [];\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n    this.generateBuildings();\r\n  }\r\n\r\n  generateBuildings() {\r\n    const { ctx, canvasWidth, canvasHeight } = this;\r\n\r\n    for (let i = 0; i < NUMBER_OF_LAYERS; i++) {\r\n      // buildings per layer\r\n      const layer: Building[] = [];\r\n      let x = 0;\r\n\r\n      while (x < canvasWidth) {\r\n        const width =\r\n          randomNumberBetween(\r\n            MIN_BUILDING_WIDTH_RATIO,\r\n            MAX_BUILDING_WIDTH_RATIO,\r\n            2\r\n          ) * canvasWidth;\r\n\r\n        const height =\r\n          randomNumberBetween(\r\n            MIN_BUILDING_HEIGHT_RATIO,\r\n            MAX_BUILDING_HEIGHT_RATIO,\r\n            2\r\n          ) * canvasHeight;\r\n\r\n        const gap =\r\n          randomNumberBetween(MIN_BUILDING_GAP_RATIO, MAX_BUILDING_GAP_RATIO) *\r\n          canvasWidth;\r\n\r\n        const building = new Building({\r\n          y: canvasHeight - height,\r\n          color: getRandomColor(),\r\n          ctx,\r\n          canvasHeight,\r\n          x,\r\n          width,\r\n          height\r\n        });\r\n\r\n        layer.push(building);\r\n\r\n        x += width + gap;\r\n      }\r\n\r\n      // offset the buildings so the leftmost starts off screen\r\n      const leftMostBuilding = layer[0];\r\n\r\n      const xOffset = randomNumberBetween(\r\n        leftMostBuilding.width * 0.25,\r\n        leftMostBuilding.width * 0.75\r\n      );\r\n\r\n      layer.forEach(building => (building.x -= xOffset));\r\n      this.layers.push(layer);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const { ctx, canvasWidth, canvasHeight, layers } = this;\r\n\r\n    for (let i = 0; i < layers.length; i++) {\r\n      const currentLayer = layers[i];\r\n\r\n      if (i === layers.length - 1) {\r\n        currentLayer.forEach(building => building.generateLights());\r\n      }\r\n\r\n      for (const building of currentLayer) {\r\n        building.render();\r\n      }\r\n\r\n      // fade each layer out a bit\r\n      ctx.fillStyle = LAYER_OVERLAY_COLOR;\r\n      ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n    }\r\n  }\r\n}\r\n","const TIME_TO_FALL = 400;\r\nconst RAINDROPS_HEIGHTWISE = 15;\r\nconst RAINDROP_COLOR = '#788';\r\n\r\nclass Raindrop {\r\n  private createdDate: number;\r\n\r\n  constructor(\r\n    private ctx: CanvasRenderingContext2D,\r\n    private canvasHeight: number,\r\n    public x: number,\r\n    public y: number,\r\n    public height: number\r\n  ) {\r\n    this.createdDate = Date.now();\r\n  }\r\n\r\n  tick(now: number) {\r\n    const timeDelta = now - this.createdDate;\r\n    this.y = Math.floor((timeDelta / TIME_TO_FALL) * this.canvasHeight);\r\n  }\r\n\r\n  render() {\r\n    const { ctx, x, y, height } = this;\r\n\r\n    ctx.strokeStyle = RAINDROP_COLOR;\r\n    ctx.lineWidth = 1;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y);\r\n    ctx.lineTo(x, y + height);\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nexport class Rainfall {\r\n  private raindrops: Raindrop[] = [];\r\n  private raindropHeight: number;\r\n  public canvasWidth: number;\r\n  public canvasHeight: number;\r\n\r\n  constructor(private ctx: CanvasRenderingContext2D) {\r\n    this.canvasWidth = ctx.canvas.width;\r\n    this.canvasHeight = ctx.canvas.height;\r\n    this.raindropHeight = Math.floor(this.canvasHeight / RAINDROPS_HEIGHTWISE);\r\n  }\r\n\r\n  tick() {\r\n    const { raindrops, canvasHeight } = this;\r\n    const now = Date.now();\r\n\r\n    for (let i = raindrops.length - 1; i >= 0; i--) {\r\n      const raindrop = raindrops[i];\r\n      raindrop.tick(now);\r\n\r\n      // remove raindrops that have fallen out of view\r\n      if (raindrop.y >= canvasHeight) {\r\n        raindrops.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  add() {\r\n    const { ctx, canvasWidth, canvasHeight, raindrops, raindropHeight } = this;\r\n\r\n    const startingX = Math.floor(Math.random() * (canvasWidth - 1) + 1);\r\n    const startingY = -canvasHeight / RAINDROPS_HEIGHTWISE;\r\n\r\n    raindrops.push(\r\n      new Raindrop(ctx, canvasHeight, startingX, startingY, raindropHeight)\r\n    );\r\n  }\r\n\r\n  render() {\r\n    this.raindrops.forEach(raindrop => raindrop.render());\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst WALL_START_COLOR = '#181623';\r\nconst WALL_END_COLOR = '#111019';\r\n\r\nexport class Wall extends Renderer {\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const { ctx, canvasWidth, canvasHeight } = this;\r\n\r\n    const linearGradient = this.ctx.createLinearGradient(0, 0, 0, canvasHeight);\r\n    linearGradient.addColorStop(0, WALL_START_COLOR);\r\n    linearGradient.addColorStop(1, WALL_END_COLOR);\r\n    ctx.fillStyle = linearGradient;\r\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n  }\r\n}\r\n","export type CornerRadii = {\r\n  tl: number;\r\n  tr: number;\r\n  br: number;\r\n  bl: number;\r\n};\r\n\r\nconst defaultCornerRadii = {\r\n  tl: 0,\r\n  tr: 0,\r\n  br: 0,\r\n  bl: 0\r\n};\r\n\r\nexport function roundedRect(\r\n  ctx: CanvasRenderingContext2D,\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number,\r\n  radius: CornerRadii = defaultCornerRadii,\r\n  stroke = false\r\n) {\r\n  ctx.beginPath();\r\n\r\n  ctx.moveTo(x + radius.tl, y);\r\n  ctx.lineTo(x + width - radius.tr, y);\r\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n\r\n  ctx.lineTo(x + width, y + height - radius.br);\r\n  ctx.quadraticCurveTo(\r\n    x + width,\r\n    y + height,\r\n    x + width - radius.br,\r\n    y + height\r\n  );\r\n\r\n  ctx.lineTo(x + radius.bl, y + height);\r\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n\r\n  ctx.lineTo(x, y + radius.tl);\r\n  ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n\r\n  ctx.closePath();\r\n  ctx.fill();\r\n  stroke && ctx.stroke();\r\n}\r\n\r\nexport function distanceBetween(\r\n  point1: { x: number; y: number },\r\n  point2: { x: number; y: number }\r\n) {\r\n  return Math.sqrt(\r\n    Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2)\r\n  );\r\n}\r\n\r\n// where 0 degrees corresponds to positive direction of x-axis\r\nexport function radiansBetween(\r\n  point1: { x: number; y: number },\r\n  point2: { x: number; y: number }\r\n) {\r\n  const deltaX = point2.x - point1.x;\r\n  const deltaY = point2.y - point1.y;\r\n  return Math.atan2(deltaY, deltaX);\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { roundedRect, CornerRadii } from '../utils';\r\n\r\nconst WINDOW_FRAME_COLOR = '#3D1A1E';\r\nconst WINDOW_DECORATION_COLOR = '#682634';\r\n\r\nexport class Window extends Renderer {\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const {\r\n      ctx,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight,\r\n      windowFrameThickness\r\n    } = this;\r\n\r\n    ctx.fillStyle = WINDOW_FRAME_COLOR;\r\n\r\n    // window trim\r\n    ctx.fillRect(\r\n      oneThirdCanvasWidth - windowFrameThickness,\r\n      oneHalfCanvasHeight / 2 - windowFrameThickness,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    // make a hole\r\n    ctx.clearRect(\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight / 2,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight\r\n    );\r\n\r\n    // window muntin\r\n    const muntinWidth = Math.floor(windowFrameThickness / 2);\r\n\r\n    const topLeftX = (oneThirdCanvasWidth * 4) / 3 - (muntinWidth * 2) / 3;\r\n    const topRightX = (oneThirdCanvasWidth * 5) / 3 - muntinWidth / 3;\r\n    const topY = oneHalfCanvasHeight / 2 - windowFrameThickness;\r\n\r\n    const leftX = oneThirdCanvasWidth - windowFrameThickness;\r\n    const leftTopY = (oneHalfCanvasHeight * 5) / 6 - (muntinWidth * 2) / 3;\r\n    const leftBottomY = (oneHalfCanvasHeight * 7) / 6 - muntinWidth / 3;\r\n\r\n    ctx.fillRect(\r\n      topLeftX,\r\n      topY,\r\n      muntinWidth,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    ctx.fillRect(\r\n      topRightX,\r\n      topY,\r\n      muntinWidth,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    ctx.fillRect(\r\n      leftX,\r\n      leftTopY,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      muntinWidth\r\n    );\r\n\r\n    ctx.fillRect(\r\n      leftX,\r\n      leftBottomY,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      muntinWidth\r\n    );\r\n\r\n    ctx.fillStyle = WINDOW_DECORATION_COLOR;\r\n\r\n    // window head\r\n    ctx.fillRect(\r\n      oneThirdCanvasWidth - windowFrameThickness * 2,\r\n      oneHalfCanvasHeight / 2 - windowFrameThickness * 2,\r\n      oneThirdCanvasWidth + windowFrameThickness * 4,\r\n      windowFrameThickness - 1\r\n    );\r\n\r\n    // window stool\r\n    const windowSillCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: 0,\r\n      bl: this.roundedRadius,\r\n      br: this.roundedRadius\r\n    };\r\n\r\n    roundedRect(\r\n      ctx,\r\n      oneThirdCanvasWidth - windowFrameThickness * 2,\r\n      (oneHalfCanvasHeight * 3) / 2 + windowFrameThickness + 1,\r\n      oneThirdCanvasWidth + windowFrameThickness * 4,\r\n      windowFrameThickness,\r\n      windowSillCornerRadii\r\n    );\r\n\r\n    // trim decoration\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = WINDOW_DECORATION_COLOR;\r\n    ctx.rect(\r\n      oneThirdCanvasWidth - (windowFrameThickness * 2) / 3,\r\n      oneHalfCanvasHeight / 2 - (windowFrameThickness * 2) / 3,\r\n      oneThirdCanvasWidth + (windowFrameThickness * 4) / 3,\r\n      oneHalfCanvasHeight + (windowFrameThickness * 4) / 3\r\n    );\r\n    ctx.stroke();\r\n\r\n    ctx.rect(\r\n      oneThirdCanvasWidth - (windowFrameThickness * 5) / 9,\r\n      oneHalfCanvasHeight / 2 - (windowFrameThickness * 5) / 9,\r\n      oneThirdCanvasWidth + (windowFrameThickness * 10) / 9,\r\n      oneHalfCanvasHeight + (windowFrameThickness * 10) / 9\r\n    );\r\n    ctx.stroke();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst WOOD_DECORATION_COLOR = '#091c1b';\r\nconst STEREO_COLOR = '#222';\r\nconst STEREO_DETAIL_COLOR = '#444';\r\nconst STEREO_DARK_COLOR = '#111';\r\n\r\nexport class Dresser extends Renderer {\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  dresser() {\r\n    const { ctx, canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    const x = (canvasWidth * 2) / 3 + windowFrameThickness * 5;\r\n    const y = (canvasHeight * 2) / 3;\r\n\r\n    // dresser body\r\n    ctx.fillStyle = WOOD_COLOR;\r\n    ctx.fillRect(x, y, canvasWidth, canvasHeight);\r\n\r\n    // dresser detail rectangle\r\n    ctx.strokeStyle = WOOD_DECORATION_COLOR;\r\n    ctx.lineWidth = 3;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      x + windowFrameThickness,\r\n      y + windowFrameThickness,\r\n      canvasWidth,\r\n      canvasHeight\r\n    );\r\n    ctx.stroke();\r\n\r\n    // dresser top handle\r\n    const dresserWidth = canvasWidth - (x + windowFrameThickness);\r\n    const dresserHandleMidpoint =\r\n      x + windowFrameThickness + (dresserWidth * 3) / 5;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(dresserHandleMidpoint, y + windowFrameThickness * 2.5);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 2.5);\r\n    ctx.lineWidth = (windowFrameThickness * 2) / 3;\r\n    ctx.stroke();\r\n\r\n    // dresser horizontal detail line\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + windowFrameThickness, y + windowFrameThickness * 6);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 6);\r\n    ctx.lineWidth = 2;\r\n    ctx.stroke();\r\n\r\n    // dresser bottom handle\r\n    ctx.beginPath();\r\n    ctx.moveTo(dresserHandleMidpoint, y + windowFrameThickness * 7.5);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 7.5);\r\n    ctx.lineWidth = (windowFrameThickness * 2) / 3;\r\n    ctx.stroke();\r\n  }\r\n\r\n  stereo() {\r\n    const { ctx, canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    const dresserX = (canvasWidth * 2) / 3 + windowFrameThickness * 5;\r\n    const dresserY = (canvasHeight * 2) / 3;\r\n\r\n    // speaker body\r\n    const speakerWidth = windowFrameThickness * 3.5;\r\n    const speakerHeight = canvasHeight * 0.2;\r\n    const speakerX = dresserX + windowFrameThickness * 4;\r\n    const speakerY = dresserY - speakerHeight;\r\n\r\n    ctx.fillStyle = STEREO_COLOR;\r\n    ctx.fillRect(speakerX, speakerY, speakerWidth, speakerHeight);\r\n\r\n    // mid driver\r\n    const driverRadius = Math.min(speakerWidth, speakerHeight) / 8;\r\n    const driverCenterX = speakerX + speakerWidth / 2;\r\n    const driverCenterY = speakerY + driverRadius * 2;\r\n\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(driverCenterX, driverCenterY, driverRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // dividers\r\n    const dividerWidth = windowFrameThickness / 10;\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n\r\n    ctx.fillRect(\r\n      speakerX - dividerWidth,\r\n      speakerY,\r\n      dividerWidth,\r\n      speakerHeight\r\n    );\r\n\r\n    ctx.fillRect(\r\n      speakerX + speakerWidth,\r\n      speakerY,\r\n      dividerWidth,\r\n      speakerHeight\r\n    );\r\n\r\n    // deck\r\n    const deckX = speakerX + speakerWidth + dividerWidth;\r\n    const deckHeight = speakerHeight * 0.8;\r\n    const deckY = speakerY + speakerHeight - deckHeight;\r\n\r\n    ctx.fillStyle = STEREO_COLOR;\r\n    ctx.fillRect(deckX, deckY, canvasWidth, deckHeight);\r\n\r\n    const deckDetailX = deckX + windowFrameThickness / 2;\r\n\r\n    ctx.fillStyle = STEREO_DETAIL_COLOR;\r\n    ctx.strokeStyle = STEREO_DARK_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 8;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      deckDetailX,\r\n      deckY + windowFrameThickness * 1.5,\r\n      canvasWidth,\r\n      deckHeight * 0.25\r\n    );\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n    ctx.fillRect(\r\n      deckDetailX,\r\n      deckY + windowFrameThickness,\r\n      canvasWidth,\r\n      windowFrameThickness / 4\r\n    );\r\n\r\n    const bottomDetailY = deckY + deckHeight - windowFrameThickness * 0.8;\r\n    ctx.fillRect(\r\n      deckX + windowFrameThickness * 2,\r\n      bottomDetailY,\r\n      canvasWidth,\r\n      windowFrameThickness / 4\r\n    );\r\n\r\n    ctx.fillStyle = STEREO_DETAIL_COLOR;\r\n    const knobRadius = windowFrameThickness / 2;\r\n    const knobX = deckX + windowFrameThickness;\r\n    const knobY = bottomDetailY + windowFrameThickness / 8;\r\n    ctx.beginPath();\r\n    ctx.arc(knobX, knobY, knobRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.clip();\r\n    ctx.save();\r\n\r\n    ctx.translate(knobX, knobY);\r\n    const knobMarkerAngle = Math.PI * 0.75;\r\n    const knobMarkerStart = {\r\n      x: Math.sin(knobMarkerAngle) * (knobRadius - windowFrameThickness / 4),\r\n      y: Math.cos(knobMarkerAngle) * (knobRadius - windowFrameThickness / 4)\r\n    };\r\n    const knobMarkerEnd = {\r\n      x: Math.sin(knobMarkerAngle) * knobRadius * 2,\r\n      y: Math.cos(knobMarkerAngle) * knobRadius * 2\r\n    };\r\n    ctx.lineWidth = windowFrameThickness / 8;\r\n    ctx.lineCap = 'round';\r\n    ctx.beginPath();\r\n    ctx.moveTo(knobMarkerStart.x, knobMarkerStart.y);\r\n    ctx.lineTo(knobMarkerEnd.x, knobMarkerEnd.y);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.dresser();\r\n    this.stereo();\r\n    this.tick();\r\n  }\r\n\r\n  tick(isBeat = false) {\r\n    const { ctx, canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    const dresserX = (canvasWidth * 2) / 3 + windowFrameThickness * 5;\r\n    const dresserY = (canvasHeight * 2) / 3;\r\n\r\n    // speaker body\r\n    const speakerWidth = windowFrameThickness * 3.5;\r\n    const speakerHeight = canvasHeight * 0.2;\r\n    const speakerX = dresserX + windowFrameThickness * 4;\r\n    const speakerY = dresserY - speakerHeight;\r\n\r\n    // mid driver\r\n    const driverRadius = Math.min(speakerWidth, speakerHeight) / 8;\r\n    const driverCenterX = speakerX + speakerWidth / 2;\r\n\r\n    // speaker woofer\r\n    const wooferRadius = Math.min(speakerWidth, speakerHeight) / 2.5;\r\n    const wooferCenterY = Math.max(\r\n      speakerY + wooferRadius + driverRadius * 4,\r\n      speakerY + speakerHeight - (wooferRadius + driverRadius * 2)\r\n    );\r\n\r\n    ctx.strokeStyle = STEREO_DETAIL_COLOR;\r\n    ctx.fillStyle = STEREO_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 8;\r\n    ctx.beginPath();\r\n    ctx.arc(driverCenterX, wooferCenterY, wooferRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      driverCenterX,\r\n      wooferCenterY,\r\n      isBeat ? wooferRadius * 0.63 : wooferRadius * 0.6,\r\n      0,\r\n      Math.PI * 2\r\n    );\r\n    ctx.fill();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { distanceBetween } from '../utils';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\n\r\ntype Picture = {\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\nexport class Pictures extends Renderer {\r\n  pictures: Picture[] = [];\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    const { oneThirdCanvasWidth, windowFrameThickness } = this;\r\n\r\n    // X & Y coords and dimensions for each picture\r\n    this.pictures.push({\r\n      x: (oneThirdCanvasWidth * 3) / 4 - windowFrameThickness * 4,\r\n      y: -windowFrameThickness,\r\n      width: windowFrameThickness * 4,\r\n      height: windowFrameThickness * 5\r\n    });\r\n\r\n    this.pictures.push({\r\n      x: this.pictures[0].x - windowFrameThickness * 7,\r\n      y: windowFrameThickness * 2,\r\n      width: windowFrameThickness * 5,\r\n      height: windowFrameThickness * 4\r\n    });\r\n\r\n    this.pictures.push({\r\n      x: this.pictures[1].x + windowFrameThickness * 2,\r\n      y:\r\n        this.pictures[1].y +\r\n        this.pictures[1].height +\r\n        windowFrameThickness * 1.5,\r\n      width: windowFrameThickness * 6,\r\n      height: windowFrameThickness * 8\r\n    });\r\n  }\r\n\r\n  graph() {\r\n    const { ctx, windowFrameThickness } = this;\r\n    const { x, y, width, height } = this.pictures[0];\r\n\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.clip();\r\n\r\n    const gradient1 = ctx.createLinearGradient(x, y, x, y + height);\r\n    gradient1.addColorStop(0, '#24131f');\r\n    gradient1.addColorStop(1, '#051b1f');\r\n    ctx.fillStyle = gradient1;\r\n    ctx.fill();\r\n\r\n    const nodes: Array<{ x: number; y: number }> = [];\r\n    const nodeSize = windowFrameThickness / 6;\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n      nodes.push({\r\n        x: Math.floor(Math.random() * width + x),\r\n        y: Math.floor(Math.random() * height + y)\r\n      });\r\n    }\r\n\r\n    const nodeColor = '#703c3a';\r\n    ctx.fillStyle = nodeColor;\r\n    ctx.strokeStyle = nodeColor;\r\n    ctx.lineWidth = 1;\r\n\r\n    while (nodes.length) {\r\n      const currentNode = nodes.pop()!;\r\n      ctx.beginPath();\r\n      ctx.arc(currentNode.x, currentNode.y, nodeSize / 2, 0, Math.PI * 2);\r\n      ctx.fill();\r\n\r\n      for (const otherNode of nodes) {\r\n        if (distanceBetween(currentNode, otherNode) < height / 4) {\r\n          ctx.beginPath();\r\n          ctx.moveTo(currentNode.x, currentNode.y);\r\n          ctx.lineTo(otherNode.x, otherNode.y);\r\n          ctx.stroke();\r\n        }\r\n      }\r\n    }\r\n\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 1.5;\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  orbits() {\r\n    const { ctx, windowFrameThickness } = this;\r\n    const { x, y, width, height } = this.pictures[1];\r\n\r\n    ctx.save();\r\n\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.clip();\r\n\r\n    const gradient2 = ctx.createLinearGradient(x, y, x, y + height);\r\n    gradient2.addColorStop(0, '#556e53');\r\n    gradient2.addColorStop(1, '#29435c');\r\n    ctx.fillStyle = gradient2;\r\n    ctx.fill();\r\n\r\n    // sun\r\n    const color = '#879591';\r\n    ctx.fillStyle = color;\r\n    ctx.strokeStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(x + width / 2, y + height / 2, height / 14, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // orbits\r\n    for (\r\n      let radius = Math.floor(height / 6);\r\n      radius <= height / 2;\r\n      radius += windowFrameThickness / 4\r\n    ) {\r\n      ctx.beginPath();\r\n      ctx.arc(x + width / 2, y + height / 2, radius, 0, Math.PI * 2);\r\n      ctx.stroke();\r\n\r\n      const randomAngle = Math.random() * Math.PI * 2;\r\n      const planetX = x + width / 2 + Math.cos(randomAngle) * radius;\r\n      const planetY = y + height / 2 + Math.sin(randomAngle) * radius;\r\n      const randomRadius = Math.random() * (width / 64) + width / 192;\r\n      ctx.beginPath();\r\n      ctx.arc(planetX, planetY, randomRadius, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = '#152a38';\r\n    ctx.lineWidth = windowFrameThickness / 1.2;\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  stars() {\r\n    const { ctx, windowFrameThickness } = this;\r\n    const { x, y, width, height } = this.pictures[2];\r\n\r\n    ctx.save();\r\n\r\n    // background\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.clip();\r\n\r\n    const gradient3 = ctx.createLinearGradient(x, y, x, y + height);\r\n    gradient3.addColorStop(0, '#09325E');\r\n    gradient3.addColorStop(0.75, '#2A2A47');\r\n    ctx.fillStyle = gradient3;\r\n    ctx.fill();\r\n\r\n    // sky\r\n    ctx.fillStyle = '#F5E7F8';\r\n    const starCount = 60;\r\n\r\n    for (let i = 0; i < starCount; i++) {\r\n      const starX = Math.floor(Math.random() * width + x);\r\n      const starY = Math.floor(Math.random() * height + y);\r\n      const radius = Math.floor(Math.random() * 2 + 1);\r\n      ctx.beginPath();\r\n      ctx.arc(starX, starY, radius, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = '#0D0B21';\r\n    ctx.lineWidth = windowFrameThickness / 1.5;\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.graph();\r\n    this.orbits();\r\n    this.stars();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { roundedRect, CornerRadii } from '../utils';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst TABLE_DECORATION_COLOR = '#06151A';\r\nconst BOWL_COLOR = '#3e3e3e';\r\nconst BOWL_BASE_COLOR = '#1e1e1e';\r\nconst FRUIT_COLORS = ['#564837', '#713C3A'];\r\nconst FRUIT_STEM_COLOR = '#04070F';\r\n\r\nexport class Table extends Renderer {\r\n  y: number;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    this.y = this.canvasHeight * 0.7;\r\n  }\r\n\r\n  top() {\r\n    const {\r\n      ctx,\r\n      y,\r\n      windowFrameThickness,\r\n      oneThirdCanvasWidth,\r\n      roundedRadius\r\n    } = this;\r\n\r\n    const width = oneThirdCanvasWidth * 0.7;\r\n    const thickness = windowFrameThickness * 1.35;\r\n\r\n    const tableCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: roundedRadius,\r\n      br: 0,\r\n      bl: 0\r\n    };\r\n\r\n    ctx.fillStyle = WOOD_COLOR;\r\n    roundedRect(ctx, 0, y, width, thickness, tableCornerRadii);\r\n\r\n    ctx.fillStyle = TABLE_DECORATION_COLOR;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      0,\r\n      y + thickness - windowFrameThickness / 4,\r\n      width,\r\n      windowFrameThickness / 4\r\n    );\r\n    ctx.fill();\r\n  }\r\n\r\n  leg() {\r\n    const {\r\n      ctx,\r\n      y,\r\n      windowFrameThickness,\r\n      canvasHeight,\r\n      oneThirdCanvasWidth\r\n    } = this;\r\n\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n    ctx.lineWidth = windowFrameThickness * 1.5;\r\n    ctx.beginPath();\r\n    ctx.moveTo(oneThirdCanvasWidth * 0.5, y);\r\n    ctx.lineTo(oneThirdCanvasWidth * 0.5, canvasHeight);\r\n    ctx.stroke();\r\n  }\r\n\r\n  centerpiece() {\r\n    const {\r\n      ctx,\r\n      y,\r\n      windowFrameThickness,\r\n      canvasWidth,\r\n      oneThirdCanvasWidth\r\n    } = this;\r\n\r\n    const bowlCenterX = oneThirdCanvasWidth * 0.25;\r\n    const bowlWidth = oneThirdCanvasWidth * 0.3;\r\n    const bowlHeight = windowFrameThickness * 2;\r\n\r\n    // fruit\r\n    const fruits = [\r\n      {\r\n        xOffset: (bowlWidth - bowlWidth * 0.4) / 4,\r\n        y: y - bowlHeight,\r\n        radius: bowlWidth * 0.2,\r\n        color: FRUIT_COLORS[0],\r\n        stemAngle: Math.PI * 0.9\r\n      },\r\n      {\r\n        xOffset: -(bowlWidth - bowlWidth * 0.4) / 4,\r\n        y: y - bowlHeight + bowlHeight / 8,\r\n        radius: bowlWidth * 0.2,\r\n        color: FRUIT_COLORS[1],\r\n        stemAngle: Math.PI * 1.1\r\n      }\r\n    ];\r\n\r\n    for (const fruit of fruits) {\r\n      ctx.fillStyle = fruit.color;\r\n      ctx.beginPath();\r\n      ctx.arc(\r\n        bowlCenterX + fruit.xOffset,\r\n        fruit.y,\r\n        fruit.radius,\r\n        0,\r\n        Math.PI * 2\r\n      );\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = FRUIT_STEM_COLOR;\r\n    ctx.lineCap = 'round';\r\n    ctx.lineWidth = 2;\r\n\r\n    for (const fruit of fruits) {\r\n      ctx.save();\r\n      ctx.translate(bowlCenterX + fruit.xOffset, fruit.y);\r\n      const stemStart = {\r\n        x: Math.sin(fruit.stemAngle) * fruits[1].radius * 0.9,\r\n        y: Math.cos(fruit.stemAngle) * fruits[1].radius * 0.9\r\n      };\r\n      const stemEnd = {\r\n        x: Math.sin(fruit.stemAngle) * fruits[1].radius * 1.1,\r\n        y: Math.cos(fruit.stemAngle) * fruits[1].radius * 1.1\r\n      };\r\n      ctx.beginPath();\r\n      ctx.moveTo(stemStart.x, stemStart.y);\r\n      ctx.lineTo(stemEnd.x, stemEnd.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    }\r\n\r\n    // bowl\r\n    const bowlCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: 0,\r\n      br: oneThirdCanvasWidth * 0.1,\r\n      bl: oneThirdCanvasWidth * 0.1\r\n    };\r\n\r\n    const bowlBaseHeight = bowlHeight / 8;\r\n    const bowlBaseWidth = bowlWidth * 0.5;\r\n\r\n    ctx.fillStyle = BOWL_BASE_COLOR;\r\n    ctx.fillRect(\r\n      bowlCenterX - bowlBaseWidth / 2,\r\n      y - bowlHeight - bowlBaseHeight,\r\n      bowlBaseWidth,\r\n      bowlHeight + bowlBaseHeight\r\n    );\r\n\r\n    ctx.fillStyle = BOWL_COLOR;\r\n    roundedRect(\r\n      ctx,\r\n      bowlCenterX - bowlWidth / 2,\r\n      y - bowlHeight - bowlBaseHeight,\r\n      bowlWidth,\r\n      bowlHeight,\r\n      bowlCornerRadii\r\n    );\r\n\r\n    ctx.save();\r\n    ctx.clip();\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = TABLE_DECORATION_COLOR;\r\n    const bowlDecorationY = y - bowlHeight - bowlBaseHeight + bowlHeight / 6;\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, bowlDecorationY);\r\n    ctx.lineTo(canvasWidth, bowlDecorationY);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.leg();\r\n    this.top();\r\n    this.centerpiece();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst CLOCK_INNER_COLOR = '#4B4721';\r\nconst CLOCK_HANDS_COLOR = '#192124';\r\nconst CLOCK_DECORATION_COLOR = '#06151A';\r\n\r\nexport class Clock extends Renderer {\r\n  private clockSize: number;\r\n  private clockCoords: { x: number; y: number };\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n    this.clockSize = this.windowFrameThickness * 5;\r\n    const x = Math.max(\r\n      this.canvasWidth * 0.7,\r\n      (this.canvasWidth * 2) / 3 + this.windowFrameThickness * 8\r\n    );\r\n    const y = this.canvasHeight / 5;\r\n    this.clockCoords = { x, y };\r\n  }\r\n\r\n  face() {\r\n    const { ctx, clockSize, clockCoords } = this;\r\n    const { x, y } = clockCoords;\r\n\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n\r\n    // clock frame\r\n    ctx.lineWidth = this.windowFrameThickness / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 1.75, 0, Math.PI * 2, true);\r\n    ctx.stroke();\r\n\r\n    ctx.strokeStyle = CLOCK_DECORATION_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2, 0, Math.PI * 2, true);\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2, 0, Math.PI * 2, true);\r\n    ctx.fillStyle = CLOCK_INNER_COLOR;\r\n    ctx.fill();\r\n\r\n    // markings\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = CLOCK_HANDS_COLOR;\r\n\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n\r\n    for (let i = 1; i <= 60; i++) {\r\n      const angle = (i * Math.PI) / 30;\r\n\r\n      const start = {\r\n        x: Math.sin(angle) * (clockSize / 2 - clockSize / 20),\r\n        y: Math.cos(angle) * (clockSize / 2 - clockSize / 20)\r\n      };\r\n      const end = {\r\n        x: Math.sin(angle) * (clockSize / 2 - clockSize / 15),\r\n        y: Math.cos(angle) * (clockSize / 2 - clockSize / 15)\r\n      };\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(start.x, start.y);\r\n      ctx.lineTo(end.x, end.y);\r\n      ctx.stroke();\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  hands() {\r\n    const { ctx, clockSize, clockCoords } = this;\r\n    const { x, y } = clockCoords;\r\n\r\n    // fill in hands area so we can redraw them\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2 - clockSize / 15, 0, Math.PI * 2, true);\r\n    ctx.fillStyle = CLOCK_INNER_COLOR;\r\n    ctx.fill();\r\n\r\n    ctx.lineWidth = clockSize / 40;\r\n    ctx.lineCap = 'round';\r\n    ctx.strokeStyle = CLOCK_HANDS_COLOR;\r\n\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n\r\n    const now = new Date();\r\n    const hours = now.getHours();\r\n    const minutes = now.getMinutes();\r\n    const seconds = now.getSeconds();\r\n\r\n    // hour hand\r\n    ctx.save();\r\n    ctx.rotate((Math.PI / 6) * (hours + minutes / 60 + seconds / 3600));\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 4);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    // minute hand\r\n    ctx.save();\r\n    ctx.rotate((Math.PI / 30) * (minutes + seconds / 60));\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 2.75);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    // second hand\r\n    ctx.lineWidth = clockSize / 100;\r\n    ctx.save();\r\n    ctx.rotate((Math.PI / 30) * seconds);\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 2.7);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n    this.face();\r\n    this.hands();\r\n  }\r\n\r\n  tick() {\r\n    this.hands();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst CAT_COLOR = '#000';\r\n\r\nexport class Cat extends Renderer {\r\n  private isWagging = false;\r\n  private prevTailAngle = -Math.PI / 2;\r\n  private headRadius: number;\r\n  private bodyHeight: number;\r\n  private bodyWidth: number;\r\n  private x: number;\r\n  private createdTimestamp: number;\r\n  private tailWidth: number;\r\n  private tailY: number;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    const {\r\n      windowFrameThickness,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight\r\n    } = this;\r\n\r\n    this.x = oneThirdCanvasWidth * 2 - windowFrameThickness * 1.2;\r\n    this.headRadius = windowFrameThickness;\r\n    this.bodyHeight = windowFrameThickness * 3;\r\n    this.bodyWidth = windowFrameThickness * 2.2;\r\n    this.createdTimestamp = Date.now();\r\n    this.tailWidth = windowFrameThickness / 2;\r\n    this.tailY =\r\n      (oneHalfCanvasHeight * 3) / 2 + windowFrameThickness - this.tailWidth / 2;\r\n  }\r\n\r\n  head() {\r\n    const { ctx, oneHalfCanvasHeight, x, headRadius } = this;\r\n    const y = (oneHalfCanvasHeight * 3) / 2 - this.bodyHeight - this.headRadius;\r\n\r\n    ctx.fillStyle = CAT_COLOR;\r\n    ctx.strokeStyle = CAT_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, headRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // ears\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n\r\n    ctx.lineWidth = 5;\r\n    ctx.lineJoin = 'round';\r\n\r\n    const rightEar = {\r\n      start: {\r\n        x: Math.sin(Math.PI * 0.85) * headRadius,\r\n        y: Math.cos(Math.PI * 0.85) * headRadius\r\n      },\r\n      point: {\r\n        x: Math.sin(Math.PI * 0.8) * headRadius * 1.4,\r\n        y: Math.cos(Math.PI * 0.8) * headRadius * 1.4\r\n      },\r\n      end: {\r\n        x: Math.sin(Math.PI * 0.7) * headRadius,\r\n        y: Math.cos(Math.PI * 0.7) * headRadius\r\n      }\r\n    };\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(rightEar.start.x, rightEar.start.y);\r\n    ctx.lineTo(rightEar.point.x, rightEar.point.y);\r\n    ctx.lineTo(rightEar.end.x, rightEar.end.y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    const leftEar = {\r\n      start: {\r\n        x: Math.sin(Math.PI * 1.2) * headRadius,\r\n        y: Math.cos(Math.PI * 1.2) * headRadius\r\n      },\r\n      point: {\r\n        x: Math.sin(Math.PI * 1.22) * headRadius * 1.5,\r\n        y: Math.cos(Math.PI * 1.22) * headRadius * 1.5\r\n      },\r\n      end: {\r\n        x: Math.sin(Math.PI * 1.3) * headRadius,\r\n        y: Math.cos(Math.PI * 1.3) * headRadius\r\n      }\r\n    };\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(leftEar.start.x, leftEar.start.y);\r\n    ctx.lineTo(leftEar.point.x, leftEar.point.y);\r\n    ctx.lineTo(leftEar.end.x, leftEar.end.y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  body() {\r\n    const {\r\n      ctx,\r\n      oneHalfCanvasHeight,\r\n      windowFrameThickness,\r\n      x,\r\n      headRadius,\r\n      bodyWidth,\r\n      bodyHeight\r\n    } = this;\r\n    const y = (oneHalfCanvasHeight * 3) / 2 - bodyHeight;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y - headRadius / 2);\r\n    ctx.quadraticCurveTo(\r\n      x - bodyWidth * 0.75,\r\n      y + bodyHeight / 4,\r\n      x - bodyWidth / 3,\r\n      y + bodyHeight + windowFrameThickness\r\n    );\r\n    ctx.lineTo(x + bodyWidth / 2, y + bodyHeight + windowFrameThickness);\r\n    ctx.quadraticCurveTo(\r\n      x + bodyWidth * 1.2,\r\n      y + bodyHeight + windowFrameThickness,\r\n      x + bodyWidth / 3,\r\n      y - headRadius / 3\r\n    );\r\n    ctx.closePath();\r\n    ctx.fill();\r\n\r\n    // left leg\r\n    ctx.beginPath();\r\n    ctx.moveTo(x - bodyWidth / 4, y + bodyHeight * 0.3);\r\n    ctx.quadraticCurveTo(\r\n      x - bodyWidth,\r\n      y + bodyHeight,\r\n      x - bodyWidth / 3,\r\n      y + bodyHeight + windowFrameThickness\r\n    );\r\n    ctx.lineTo(x + bodyWidth / 2, y + bodyHeight + windowFrameThickness);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n  }\r\n\r\n  tail() {\r\n    const { ctx, tailWidth, x, bodyWidth, tailY } = this;\r\n\r\n    ctx.lineWidth = tailWidth;\r\n    ctx.lineCap = 'round';\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, tailY);\r\n    ctx.lineTo(x - bodyWidth, tailY);\r\n    ctx.stroke();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const { ctx, canvasWidth, canvasHeight } = this;\r\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n    this.head();\r\n    this.body();\r\n    this.tail();\r\n  }\r\n\r\n  tick() {\r\n    const {\r\n      ctx,\r\n      canvasWidth,\r\n      canvasHeight,\r\n      createdTimestamp,\r\n      x,\r\n      bodyWidth,\r\n      tailY\r\n    } = this;\r\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n    this.head();\r\n    this.body();\r\n\r\n    // tail wag\r\n    const timeDelta = Date.now() - createdTimestamp;\r\n\r\n    // oscillate between angles\r\n    let nextTailAngle =\r\n      -Math.PI / 2 + (Math.sin(timeDelta / 200) * -Math.PI) / 20;\r\n\r\n    if (this.prevTailAngle > -Math.PI / 2 && nextTailAngle < -Math.PI / 2) {\r\n      // each oscillation has a chance of producing a tail wag\r\n      this.isWagging = Math.random() < 0.1;\r\n    }\r\n\r\n    this.prevTailAngle = nextTailAngle;\r\n\r\n    if (nextTailAngle > -Math.PI / 2) {\r\n      nextTailAngle = -Math.PI / 2;\r\n    }\r\n\r\n    if (!this.isWagging) {\r\n      this.tail();\r\n      return;\r\n    }\r\n\r\n    ctx.save();\r\n    ctx.translate(x, tailY);\r\n\r\n    const tailEnd = {\r\n      x: Math.sin(nextTailAngle) * bodyWidth,\r\n      y: Math.cos(nextTailAngle) * bodyWidth\r\n    };\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 0);\r\n    ctx.quadraticCurveTo(\r\n      -bodyWidth,\r\n      (-Math.cos(nextTailAngle) * bodyWidth) / 10,\r\n      tailEnd.x,\r\n      tailEnd.y\r\n    );\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { radiansBetween } from '../utils';\r\n\r\nconst STEM_COLOR = '#8e8e8e';\r\nconst LIGHT_COLOR = 'rgba(252, 243, 126, 0.085)';\r\n\r\ntype ShadeCoords = { x: number; y: number };\r\n\r\nexport class Lamp extends Renderer {\r\n  private stemX: number;\r\n  private stemHeight: number;\r\n  private lampWidth: number;\r\n  private shadeTopLeft: ShadeCoords;\r\n  private shadeTopRight: ShadeCoords;\r\n  private shadeBottomRight: ShadeCoords;\r\n  private shadeBottomLeft: ShadeCoords;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    const { canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    this.stemX = (canvasWidth * 7) / 11;\r\n    this.stemHeight = canvasHeight / 5;\r\n    this.lampWidth = windowFrameThickness * 3.5;\r\n\r\n    this.shadeTopLeft = {\r\n      x: this.stemX - windowFrameThickness / 5,\r\n      y: this.stemHeight + windowFrameThickness\r\n    };\r\n    this.shadeTopRight = {\r\n      x: this.stemX + windowFrameThickness / 5,\r\n      y: this.stemHeight + windowFrameThickness\r\n    };\r\n    this.shadeBottomRight = {\r\n      x: this.stemX + this.lampWidth / 2,\r\n      y: this.stemHeight + windowFrameThickness * 3\r\n    };\r\n    this.shadeBottomLeft = {\r\n      x: this.stemX - this.lampWidth / 2,\r\n      y: this.stemHeight + windowFrameThickness * 3\r\n    };\r\n  }\r\n\r\n  stem() {\r\n    const { ctx, windowFrameThickness, stemX, stemHeight } = this;\r\n\r\n    ctx.strokeStyle = STEM_COLOR;\r\n    ctx.fillStyle = STEM_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 5;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(stemX, 0);\r\n    ctx.lineTo(stemX, stemHeight);\r\n    ctx.stroke();\r\n\r\n    ctx.lineWidth = 1;\r\n    ctx.fillRect(\r\n      stemX - windowFrameThickness / 5,\r\n      stemHeight - 1,\r\n      (windowFrameThickness * 2) / 5,\r\n      windowFrameThickness\r\n    );\r\n    ctx.stroke();\r\n  }\r\n\r\n  lampshade() {\r\n    const {\r\n      ctx,\r\n      shadeTopLeft,\r\n      shadeTopRight,\r\n      shadeBottomRight,\r\n      shadeBottomLeft\r\n    } = this;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(shadeTopLeft.x, shadeTopLeft.y);\r\n    ctx.lineTo(shadeTopRight.x, shadeTopRight.y);\r\n    ctx.lineTo(shadeBottomRight.x, shadeBottomRight.y);\r\n    ctx.lineTo(shadeBottomLeft.x, shadeBottomLeft.y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    // thin line of bright light color at bottom\r\n    ctx.fillStyle = '#ff7';\r\n    ctx.fillRect(\r\n      shadeBottomLeft.x,\r\n      shadeBottomLeft.y,\r\n      shadeBottomRight.x - shadeBottomLeft.x,\r\n      2\r\n    );\r\n  }\r\n\r\n  light() {\r\n    const {\r\n      ctx,\r\n      canvasHeight,\r\n      windowFrameThickness,\r\n      stemX,\r\n      stemHeight,\r\n      lampWidth,\r\n      shadeTopLeft,\r\n      shadeBottomRight,\r\n      shadeBottomLeft\r\n    } = this;\r\n\r\n    ctx.fillStyle = LIGHT_COLOR;\r\n    const lightHeight = canvasHeight - shadeBottomLeft.y;\r\n    // compensate for inverted canvas y-coords when\r\n    // getting angle between lampshade corners\r\n    const lightAngle = radiansBetween(shadeBottomLeft, {\r\n      x: shadeTopLeft.x,\r\n      y: shadeBottomLeft.y + shadeBottomLeft.y - shadeTopLeft.y\r\n    });\r\n\r\n    // light makes a right triangle with bottom of canvas so\r\n    // we can calculate its adjacent width using height and\r\n    // the angle of the lampshade\r\n    // tan θ = opposite (height) / adjacent (width)\r\n    const lightTriangleAdjacentWidth = lightHeight / Math.tan(lightAngle);\r\n\r\n    const lightBottomLeftX = shadeBottomLeft.x - lightTriangleAdjacentWidth;\r\n    const lightBottomRightX = shadeBottomRight.x + lightTriangleAdjacentWidth;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(stemX - lampWidth / 2, stemHeight + windowFrameThickness * 3);\r\n    ctx.lineTo(stemX + lampWidth / 2, stemHeight + windowFrameThickness * 3);\r\n    ctx.lineTo(lightBottomRightX, canvasHeight);\r\n    ctx.lineTo(lightBottomLeftX, canvasHeight);\r\n    ctx.fill();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.stem();\r\n    this.lampshade();\r\n    this.tick();\r\n  }\r\n\r\n  tick() {\r\n    const {\r\n      ctx,\r\n      canvasWidth,\r\n      canvasHeight,\r\n      windowFrameThickness,\r\n      stemHeight\r\n    } = this;\r\n\r\n    ctx.clearRect(\r\n      0,\r\n      // add 2 to clear under the thin line\r\n      stemHeight + windowFrameThickness * 3 + 2,\r\n      canvasWidth,\r\n      canvasHeight\r\n    );\r\n\r\n    this.light();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { Wall } from './wall';\r\nimport { Window } from './window';\r\nimport { Dresser } from './dresser';\r\nimport { Pictures } from './pictures';\r\nimport { Table } from './table';\r\nimport { Clock } from './clock';\r\n\r\nexport { Cat } from './cat';\r\nexport { Lamp } from './lamp';\r\n\r\nexport class Home extends Renderer {\r\n  wall: Wall;\r\n  window: Window;\r\n  dresser: Dresser;\r\n  pictures: Pictures;\r\n  table: Table;\r\n  clock: Clock;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    this.wall = new Wall(ctx);\r\n    this.window = new Window(ctx);\r\n    this.dresser = new Dresser(ctx);\r\n    this.pictures = new Pictures(ctx);\r\n    this.table = new Table(ctx);\r\n    this.clock = new Clock(ctx);\r\n  }\r\n\r\n  render() {\r\n    this.wall.render();\r\n    this.window.render();\r\n    this.dresser.render();\r\n    this.pictures.render();\r\n    this.table.render();\r\n    this.clock.render();\r\n  }\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { QualitySettings } from '../index';\r\nimport { City } from './city';\r\nimport { Rainfall } from './rain';\r\nimport { Home, Cat, Lamp } from './home';\r\nimport { useDebouncedResize } from '../../../../utils/hooks';\r\nimport './Rain.scss';\r\n\r\nconst MIN_RAINDROPS_PER_TICK = 1;\r\nconst MAX_RAINDROPS_PER_TICK = 30;\r\n\r\nconst Rain: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  isBeat,\r\n  lowPassIntensity\r\n}) => {\r\n  // city\r\n  const cityCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const cityRef = useRef<City>();\r\n\r\n  useDebouncedResize(() => {\r\n    const cityCanvas = cityCanvasRef.current!;\r\n\r\n    const createCity = (width: number, height: number, dpi: number) => {\r\n      cityCanvas.width = width * dpi;\r\n      cityCanvas.height = height * dpi;\r\n\r\n      const ctx = cityCanvas.getContext('2d')!;\r\n      const city = new City(ctx);\r\n      cityRef.current = city;\r\n      city.render();\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createCity(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  // rain\r\n  const rainCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const rainfallRef = useRef<Rainfall>();\r\n\r\n  useDebouncedResize(() => {\r\n    const rainCanvas = rainCanvasRef.current!;\r\n\r\n    const createRain = (width: number, height: number, dpi: number) => {\r\n      rainCanvas.width = width * dpi;\r\n      rainCanvas.height = height * dpi;\r\n\r\n      const ctx = rainCanvas.getContext('2d')!;\r\n      let rainfall = rainfallRef.current;\r\n      if (rainfall == null) {\r\n        rainfallRef.current = new Rainfall(ctx);\r\n      } else {\r\n        rainfall = rainfallRef.current!;\r\n        rainfall.canvasWidth = width * dpi;\r\n        rainfall.canvasHeight = height * dpi;\r\n      }\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createRain(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  const homeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const homeRef = useRef<Home>();\r\n  const clockIntervalRef = useRef<number>();\r\n\r\n  // home\r\n  useDebouncedResize(() => {\r\n    const homeCanvas = homeCanvasRef.current!;\r\n\r\n    const createHome = (width: number, height: number, dpi: number) => {\r\n      homeCanvas.width = width * dpi;\r\n      homeCanvas.height = height * dpi;\r\n\r\n      const ctx = homeCanvas.getContext('2d')!;\r\n\r\n      const home = new Home(ctx);\r\n      homeRef.current = home;\r\n      home.render();\r\n\r\n      clockIntervalRef.current && window.clearTimeout(clockIntervalRef.current);\r\n      clockIntervalRef.current = window.setInterval(\r\n        () => home.clock.tick(),\r\n        1000\r\n      );\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createHome(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  // cat\r\n  const catCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const catRef = useRef<Cat>();\r\n\r\n  useDebouncedResize(() => {\r\n    const catCanvas = catCanvasRef.current!;\r\n\r\n    const adoptCat = (width: number, height: number, dpi: number) => {\r\n      catCanvas.width = width * dpi;\r\n      catCanvas.height = height * dpi;\r\n\r\n      const ctx = catCanvas.getContext('2d')!;\r\n\r\n      const cat = new Cat(ctx);\r\n      catRef.current = cat;\r\n      cat.render();\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    adoptCat(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  // lamp\r\n  const lampCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const lampRef = useRef<Lamp>();\r\n\r\n  useDebouncedResize(() => {\r\n    const lampCanvas = lampCanvasRef.current!;\r\n\r\n    const createLamp = (width: number, height: number, dpi: number) => {\r\n      lampCanvas.width = width * dpi;\r\n      lampCanvas.height = height * dpi;\r\n\r\n      const ctx = lampCanvas.getContext('2d')!;\r\n\r\n      const lamp = new Lamp(ctx);\r\n      lampRef.current = lamp;\r\n      lamp.render();\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createLamp(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  // call animating effects on each data and isBeat change\r\n  useEffect(() => {\r\n    const home = homeRef.current!;\r\n    const rainfall = rainfallRef.current!;\r\n    const cat = catRef.current!;\r\n    const lamp = lampRef.current!;\r\n\r\n    let raindropsToAdd = Math.floor(lowPassIntensity / 2);\r\n\r\n    if (raindropsToAdd < MIN_RAINDROPS_PER_TICK) {\r\n      raindropsToAdd = MIN_RAINDROPS_PER_TICK;\r\n    } else if (raindropsToAdd > MAX_RAINDROPS_PER_TICK) {\r\n      raindropsToAdd = MAX_RAINDROPS_PER_TICK;\r\n    }\r\n\r\n    let newRaindropsAdded = 0;\r\n\r\n    while (newRaindropsAdded < raindropsToAdd) {\r\n      rainfall.add();\r\n      newRaindropsAdded += 1;\r\n    }\r\n\r\n    rainfall.tick();\r\n    home.dresser.tick(isBeat);\r\n    // re-render lamp light since the dresser stereo\r\n    // may have been repainted by changing isBeat\r\n    lamp.tick();\r\n    cat.tick();\r\n\r\n    const rainCanvas = rainCanvasRef.current!;\r\n    const rainCtx = rainCanvas.getContext('2d')!;\r\n\r\n    rainCtx.clearRect(0, 0, rainCanvas.width, rainCanvas.height);\r\n\r\n    rainfall.render();\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"rain\">\r\n      <canvas ref={cityCanvasRef} />\r\n      <canvas ref={rainCanvasRef} />\r\n      <canvas ref={homeCanvasRef} />\r\n      <canvas ref={catCanvasRef} />\r\n      <canvas ref={lampCanvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Rain);\r\n","import Waveform from './Waveform';\r\nimport Drummer from './Drummer';\r\nimport Halpern from './Halpern';\r\nimport Stars from './Stars';\r\nimport Rain from './Rain';\r\nimport MobileDisabledComponent from './MobileDisabled';\r\nimport { Props } from './VisualizationHOC';\r\nimport { isMobileDevice as isMobileDeviceCheck } from '../../../utils';\r\n\r\nexport const isMobileDevice = isMobileDeviceCheck();\r\n\r\nexport type QualitySettings = {\r\n  [quality: number]: { [setting: string]: any };\r\n};\r\n\r\nexport type Options = {\r\n  smoothing?: number;\r\n  mobileDisabled?: boolean;\r\n};\r\n\r\nexport type SelectableVisualization = {\r\n  component: React.ComponentType<Props>;\r\n  options?: Options;\r\n};\r\n\r\nconst visualizations: SelectableVisualization[] = [\r\n  {\r\n    component: Rain\r\n  },\r\n  {\r\n    component: Stars,\r\n    options: { smoothing: 128 }\r\n  },\r\n  {\r\n    component: Waveform\r\n  },\r\n  {\r\n    component: Drummer,\r\n    options: { smoothing: 64 }\r\n  },\r\n  {\r\n    component: Halpern\r\n  }\r\n];\r\n\r\nexport default visualizations;\r\n\r\nexport const MobileDisabled: SelectableVisualization = {\r\n  component: MobileDisabledComponent\r\n};\r\n","import React from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport './MobileDisabled.scss';\r\n\r\nconst MobileDisabled: React.FC<VisualizationHOC.WrappedProps> = () => {\r\n  return (\r\n    <div className=\"mobile-disabled\">\r\n      <div className=\"content\">\r\n        <img\r\n          id=\"desktop-icon\"\r\n          src={process.env.PUBLIC_URL + '/assets/images/desktop.png'}\r\n        />\r\n        <div id=\"message\">\r\n          Sorry, this visualization cannot be viewed on a mobile device.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(MobileDisabled);\r\n","import React, { useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useTransition, animated } from 'react-spring';\r\nimport * as VisualizationHOC from './Visualizations/VisualizationHOC';\r\nimport visualizations from './Visualizations';\r\nimport { modulo } from '../../utils';\r\nimport { StoreState } from '../../../src/store/types';\r\n\r\ntype Props = Pick<VisualizationHOC.Props, 'data' | 'lowPassData'>;\r\n\r\ntype StyledProps = Props & {\r\n  style: React.CSSProperties;\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  currentIndex: state.currentVisualizationIndex,\r\n  prevIndex: state.prevVisualizationIndex\r\n});\r\n\r\nconst styledVisualizations = visualizations.map(vis => {\r\n  return (props: StyledProps) => {\r\n    const { style, ...rest } = props;\r\n\r\n    return (\r\n      <animated.div className=\"visualization\" style={props.style}>\r\n        <vis.component {...rest} options={vis.options} />\r\n      </animated.div>\r\n    );\r\n  };\r\n});\r\n\r\nconst VisualizationSelector: React.FC<\r\n  Props & ReturnType<typeof mapStateToProps>\r\n> = ({ data, lowPassData, prevIndex, currentIndex }) => {\r\n  const visIndex = modulo(currentIndex, visualizations.length);\r\n\r\n  const direction = useCallback((current?, prev?) => {\r\n    let translateXMultiplier = 0;\r\n\r\n    if (current < prev) {\r\n      translateXMultiplier = 1;\r\n    } else if (prev < current) {\r\n      translateXMultiplier = -1;\r\n    }\r\n\r\n    return `translate3d(${100 * translateXMultiplier}%, 0, 0)`;\r\n  }, []);\r\n\r\n  const transitions = useTransition(visIndex, null, {\r\n    from: { transform: direction(currentIndex, prevIndex) },\r\n    enter: { transform: direction() },\r\n    leave: { transform: direction(prevIndex, currentIndex) },\r\n    initial: { transform: direction(0, -1) }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {transitions.map(({ item, props, key }) => {\r\n        const Visualization = styledVisualizations[item];\r\n        return (\r\n          <Visualization\r\n            key={key}\r\n            data={data}\r\n            lowPassData={lowPassData}\r\n            style={props}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps)(VisualizationSelector);\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport VisualizationSelector from '../Visualizer/VisualizationSelector';\r\nimport { FFT_SIZE } from '../../config';\r\n\r\ntype Props = {\r\n  audioContext: AudioContext;\r\n  audioSource: MediaElementAudioSourceNode;\r\n};\r\n\r\nconst Analyser: React.FC<Props> = ({ audioContext, audioSource }) => {\r\n  const [rawData, setRawData] = useState(new Uint8Array());\r\n  const [lowPassData, setLowPassData] = useState(new Uint8Array());\r\n\r\n  const animationFrameIdRef = useRef<number>();\r\n\r\n  useEffect(() => {\r\n    const rawAnalyser = audioContext.createAnalyser();\r\n    rawAnalyser.fftSize = FFT_SIZE;\r\n    rawAnalyser.smoothingTimeConstant = 0;\r\n    audioSource.connect(rawAnalyser);\r\n    rawAnalyser.connect(audioContext.destination);\r\n\r\n    const filter = audioContext.createBiquadFilter();\r\n    filter.type = 'lowpass';\r\n    const lowPassAnalyser = audioContext.createAnalyser();\r\n    lowPassAnalyser.fftSize = FFT_SIZE;\r\n    lowPassAnalyser.smoothingTimeConstant = 0;\r\n    audioSource.connect(filter);\r\n    filter.connect(lowPassAnalyser);\r\n\r\n    const tick = () => {\r\n      const rawDataContainer = new Uint8Array(FFT_SIZE);\r\n      rawAnalyser.getByteTimeDomainData(rawDataContainer);\r\n      setRawData(rawDataContainer);\r\n\r\n      const lowPassDataContainer = new Uint8Array(FFT_SIZE);\r\n      lowPassAnalyser.getByteTimeDomainData(lowPassDataContainer);\r\n      setLowPassData(lowPassDataContainer);\r\n\r\n      animationFrameIdRef.current = window.requestAnimationFrame(tick);\r\n    };\r\n\r\n    animationFrameIdRef.current = window.requestAnimationFrame(tick);\r\n\r\n    return () => {\r\n      animationFrameIdRef.current != null &&\r\n        window.cancelAnimationFrame(animationFrameIdRef.current);\r\n      rawAnalyser && rawAnalyser.disconnect();\r\n      lowPassAnalyser && lowPassAnalyser.disconnect();\r\n      audioSource && audioSource.disconnect();\r\n    };\r\n  }, [audioContext, audioSource]);\r\n\r\n  return <VisualizationSelector data={rawData} lowPassData={lowPassData} />;\r\n};\r\n\r\nexport default Analyser;\r\n","export const FFT_SIZE = 512;\r\nexport const DATA_SIZE = FFT_SIZE / 2;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './Loading.scss';\r\n\r\ntype Props = {\r\n  isShown?: boolean;\r\n};\r\n\r\nconst Loading: React.FC<Props> = ({ isShown = true }) => (\r\n  <div className={classNames('loading', { show: isShown })}>\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport Loading from '../Loading';\r\nimport * as Actions from '../../store/actions';\r\nimport * as versionInfo from '../../metadata/build-version.json';\r\nimport './Controls.scss';\r\n\r\nconst CONTROLS_FADE_OUT_DELAY = 1500;\r\nconst TOUCH_WAS_CLICK_THRESHOLD = 250;\r\nconst TOUCH_WAS_SWIPE_THRESHOLD = 350;\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & {\r\n  audioContext?: AudioContext;\r\n  wantsToPlay: boolean;\r\n  isPlaying: boolean;\r\n  togglePlay: () => void;\r\n};\r\n\r\ntype Touch = {\r\n  timestamp: number;\r\n  x: number;\r\n};\r\n\r\nconst Controls: React.FC<Props> = props => {\r\n  const [isOverlayShown, setIsOverlayShown] = useState(true);\r\n  const [isControlHovered, setIsControlHovered] = useState(false);\r\n\r\n  const timeoutRef = useRef<number>();\r\n  const touchRef = useRef<Touch>();\r\n\r\n  useEffect(() => {\r\n    const onKeyDown = (event: KeyboardEvent) => {\r\n      switch (event.which) {\r\n        case 37:\r\n        case 38: {\r\n          props.goToPrevVisualization();\r\n          break;\r\n        }\r\n        case 39:\r\n        case 40: {\r\n          props.goToNextVisualization();\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', onKeyDown);\r\n    return () => document.removeEventListener('keydown', onKeyDown);\r\n  }, []);\r\n\r\n  const showOverlay = useCallback(() => {\r\n    timeoutRef.current != null && window.clearTimeout(timeoutRef.current);\r\n\r\n    setIsOverlayShown(true);\r\n    timeoutRef.current = window.setTimeout(() => {\r\n      if (!isControlHovered) {\r\n        setIsOverlayShown(false);\r\n      }\r\n    }, CONTROLS_FADE_OUT_DELAY);\r\n  }, [isControlHovered]);\r\n\r\n  const togglePlay = useCallback(() => {\r\n    props.audioContext && props.audioContext.resume();\r\n    props.togglePlay();\r\n    showOverlay();\r\n  }, [props.audioContext, props.togglePlay]);\r\n\r\n  const onTouchStart = useCallback((event: React.TouchEvent) => {\r\n    event.preventDefault();\r\n    touchRef.current = { timestamp: Date.now(), x: event.touches[0].clientX };\r\n  }, []);\r\n\r\n  const goToRepo = () => window.open('https://github.com/blackwright/late');\r\n\r\n  const onMouseDown = useCallback((event: React.MouseEvent) => {\r\n    if (event.nativeEvent.which === 1) {\r\n      touchRef.current = { timestamp: Date.now(), x: event.clientX };\r\n    }\r\n  }, []);\r\n\r\n  const onMouseUp = useCallback((event: React.MouseEvent) => {\r\n    if (\r\n      event.nativeEvent.which === 1 &&\r\n      touchRef.current &&\r\n      Date.now() - touchRef.current.timestamp < TOUCH_WAS_CLICK_THRESHOLD\r\n    ) {\r\n      togglePlay();\r\n    }\r\n  }, []);\r\n\r\n  const onTouchEnd = useCallback(\r\n    (event: React.TouchEvent) => {\r\n      event.preventDefault();\r\n      if (\r\n        touchRef.current &&\r\n        Date.now() - touchRef.current.timestamp < TOUCH_WAS_CLICK_THRESHOLD\r\n      ) {\r\n        showOverlay();\r\n      }\r\n\r\n      if (\r\n        touchRef.current &&\r\n        Date.now() - touchRef.current.timestamp < TOUCH_WAS_SWIPE_THRESHOLD\r\n      ) {\r\n        const deltaX = event.changedTouches[0].clientX - touchRef.current.x;\r\n        if (Math.abs(deltaX) > 50) {\r\n          if (deltaX < 0) {\r\n            props.goToPrevVisualization();\r\n          } else {\r\n            props.goToNextVisualization();\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [isControlHovered]\r\n  );\r\n\r\n  const onPrev = useCallback(\r\n    (event: React.MouseEvent | React.TouchEvent) => {\r\n      event.preventDefault();\r\n      props.goToPrevVisualization();\r\n      showOverlay();\r\n    },\r\n    [isControlHovered]\r\n  );\r\n\r\n  const onNext = useCallback(\r\n    (event: React.MouseEvent | React.TouchEvent) => {\r\n      event.preventDefault();\r\n      props.goToNextVisualization();\r\n      showOverlay();\r\n    },\r\n    [isControlHovered]\r\n  );\r\n\r\n  const onHover = useCallback(() => setIsControlHovered(true), []);\r\n\r\n  const onHoverStop = useCallback(() => setIsControlHovered(false), []);\r\n\r\n  const { wantsToPlay, isPlaying } = props;\r\n\r\n  return (\r\n    <>\r\n      {wantsToPlay && !isPlaying && <Loading />}\r\n      <div\r\n        id=\"overlay\"\r\n        onTouchStart={onTouchStart}\r\n        onTouchEnd={onTouchEnd}\r\n        onMouseMove={showOverlay}\r\n        className={classNames({ show: isOverlayShown })}\r\n      >\r\n        <h1\r\n          id=\"title\"\r\n          onClick={goToRepo}\r\n          onTouchEnd={goToRepo}\r\n          onMouseEnter={onHover}\r\n          onMouseLeave={onHoverStop}\r\n        >\r\n          late\r\n        </h1>\r\n        <div id=\"version\">build {versionInfo.version}</div>\r\n        {\r\n          <div\r\n            onMouseDown={onMouseDown}\r\n            onMouseUp={onMouseUp}\r\n            onTouchEnd={togglePlay}\r\n            onMouseEnter={onHover}\r\n            onMouseLeave={onHoverStop}\r\n            className={classNames({\r\n              play: !wantsToPlay && !isPlaying,\r\n              pause: wantsToPlay && isPlaying\r\n            })}\r\n          />\r\n        }\r\n        <div className=\"navigation\">\r\n          <div\r\n            className=\"arrow-container\"\r\n            onTouchEnd={onPrev}\r\n            onMouseUp={onPrev}\r\n            onMouseEnter={onHover}\r\n            onMouseLeave={onHoverStop}\r\n          >\r\n            <svg\r\n              className=\"arrow\"\r\n              width=\"60px\"\r\n              height=\"80px\"\r\n              viewBox=\"0 0 50 80\"\r\n            >\r\n              <polyline\r\n                fill=\"none\"\r\n                stroke=\"#FFF\"\r\n                strokeWidth=\"3\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                points=\"45.63,75.8 0.375,38.087 45.63,0.375\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div\r\n            className=\"arrow-container\"\r\n            onTouchEnd={onNext}\r\n            onMouseUp={onNext}\r\n            onMouseEnter={onHover}\r\n            onMouseLeave={onHoverStop}\r\n          >\r\n            <svg\r\n              className=\"arrow\"\r\n              width=\"60px\"\r\n              height=\"80px\"\r\n              viewBox=\"0 0 50 80\"\r\n            >\r\n              <polyline\r\n                fill=\"none\"\r\n                stroke=\"#FFF\"\r\n                strokeWidth=\"3\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                points=\"0.375,0.375 45.63,38.087 0.375,75.8\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  goToNextVisualization: () => dispatch(Actions.goToNextVisualization()),\r\n  goToPrevVisualization: () => dispatch(Actions.goToPrevVisualization())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Controls);\r\n","import { ActionConstants, ActionUnionType } from './types';\r\n\r\nexport const goToNextVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_NEXT_VISUALIZATION\r\n});\r\n\r\nexport const goToPrevVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_PREV_VISUALIZATION\r\n});\r\n","export const audioPaths = [\r\n  'assets/audio/sky-high-jsan-cold-days.mp3',\r\n  'assets/audio/kudasai-the-girl.mp3',\r\n  'assets/audio/BØJET-lost.mp3',\r\n  'assets/audio/philanthrope-carwash.mp3',\r\n  'assets/audio/kudasai-technicolor.mp3'\r\n];\r\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport Analyser from '../Analyser';\nimport Controls from '../Controls';\nimport { useStateRef } from '../../utils/hooks';\nimport { modulo } from '../../utils';\nimport { audioPaths } from './utils';\n\nconst App: React.FC = () => {\n  const [wantsToPlay, setWantsToPlay] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [audioContext, setContext, contextRef] = useStateRef<\n    AudioContext | undefined\n  >(undefined);\n  const [audioSource, setSource] = useState<MediaElementAudioSourceNode>();\n  const audioIndexRef = useRef(0);\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n\n  // attach audio event listeners\n  useEffect(() => {\n    const audioElement = audioRef.current!;\n\n    const onAudioPlay = () => setIsPlaying(true);\n    const onAudioPause = () => setIsPlaying(false);\n    const onAudioError = console.error;\n    const onAudioEnded = () => {\n      const nextAudioIndex = modulo(\n        audioIndexRef.current + 1,\n        audioPaths.length\n      );\n      audioElement.src = audioPaths[nextAudioIndex];\n      audioElement.play();\n      audioIndexRef.current = nextAudioIndex;\n    };\n\n    audioElement.addEventListener('playing', onAudioPlay);\n    audioElement.addEventListener('pause', onAudioPause);\n    audioElement.addEventListener('error', onAudioError);\n    audioElement.addEventListener('ended', onAudioEnded);\n\n    return () => {\n      audioElement.removeEventListener('playing', onAudioPlay);\n      audioElement.removeEventListener('pause', onAudioPause);\n      audioElement.removeEventListener('error', onAudioError);\n      audioElement.removeEventListener('ended', onAudioEnded);\n    };\n  }, []);\n\n  const initializeAudioContext = useCallback(() => {\n    const audioElement = audioRef.current!;\n    const audioContext = new (window.AudioContext ||\n      (window as any).webkitAudioContext)();\n    const audioSource = audioContext.createMediaElementSource(audioElement);\n\n    setContext(audioContext);\n    setSource(audioSource);\n  }, [audioRef.current]);\n\n  const togglePlay = useCallback(() => {\n    const audioElement = audioRef.current!;\n\n    if (audioElement.paused) {\n      setWantsToPlay(true);\n      audioElement.play();\n\n      if (!contextRef.current) {\n        initializeAudioContext();\n      }\n    } else {\n      setWantsToPlay(false);\n      audioElement.pause();\n    }\n  }, [audioRef.current]);\n\n  return (\n    <>\n      <audio\n        ref={audioRef}\n        id=\"audioElement\"\n        src={audioPaths[0]}\n        preload=\"auto\"\n        crossOrigin=\"anonymous\"\n      />\n\n      {audioContext && audioSource && (\n        <Analyser audioContext={audioContext} audioSource={audioSource} />\n      )}\n\n      <Controls\n        audioContext={audioContext}\n        wantsToPlay={wantsToPlay}\n        isPlaying={isPlaying}\n        togglePlay={togglePlay}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\nimport App from './components/App';\r\nimport './reset.scss';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}