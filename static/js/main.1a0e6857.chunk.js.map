{"version":3,"sources":["serviceWorker.js","store/types.ts","store/reducer.ts","store/index.ts","components/Visualizer/Visualizations/VisualizationHOC.tsx","utils/index.ts","utils/colors.ts","components/Visualizer/Visualizations/Waveform/index.tsx","components/Visualizer/Visualizations/Drummer/index.tsx","components/Visualizer/Visualizations/Halpern/three/entities/colors.ts","components/Visualizer/Visualizations/Halpern/three/sceneManager.ts","components/Visualizer/Visualizations/Halpern/three/entities/polys.ts","components/Visualizer/Visualizations/Halpern/three/entities/camera.ts","components/Visualizer/Visualizations/Halpern/three/entities/renderer.ts","components/Visualizer/Visualizations/Halpern/index.tsx","components/Visualizer/Visualizations/MobileDisabled/index.tsx","components/Visualizer/Visualizations/index.tsx","components/Visualizer/VisualizationSelector.tsx","store/actions.ts","components/Analyser/index.tsx","components/Loading/index.tsx","components/Controls/index.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","ActionConstants","initialState","currentVisualizationIndex","prevVisualizationIndex","isTransitioning","store","createStore","state","arguments","length","undefined","type","GO_TO_NEXT_VISUALIZATION","Object","objectSpread","GO_TO_PREV_VISUALIZATION","BEGIN_VISUALIZATION_TRANSITION","END_VISUALIZATION_TRANSITION","__REDUX_DEVTOOLS_EXTENSION__","wrap","WrappedComponent","_class","_temp","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","delayedAfterReflow","inherits","createClass","key","value","_this2","setTimeout","setState","_this$props","props","data","timeout","_this$props$options","options","transitionStyle","transition","renderedData","smoothing","range","map","dataElement","i","dataToAverage","rangeIndex","dataAtRangeIndex","push","numbers","sum","avg","smooth","react_default","a","createElement","style","React","Component","defaultProps","Uint8Array","TRANSITION_ANIMATION_LENGTH","colorTriples","colorTriple","id","randomColorTriple","Math","floor","random","getRandomColor","numColors","areUnique","colors","randomTriple","randomColor","includes","getRandomColors","LINE_WIDTH","LINE_X_OFFSET","LINE_Y_OFFSET","VisualizationHOC","ref","createRef","canvas","ctx","intervalId","resizeTimeoutId","onResize","clearTimeout","width","innerWidth","height","innerHeight","paint","colorCopy","toConsumableArray","reverse","getRandomColorTriple","lineWidth","lineCap","sliceWidth","forEach","color","strokeStyle","beginPath","x","moveTo","y","lineTo","stroke","fadeOut","fillStyle","fillRect","addEventListener","current","getContext","setInterval","clearInterval","removeEventListener","className","size","lastColorChangeTimestamp","Date","now","_window","maxSideLength","max","freqMap","freqKey","freqData","ceiling","abs","totalHits","values","reduce","acc","hitCount","newColor","drummers","entries","_ref","_ref2","slicedToArray","drummerContainerSize","opacity","classNames","hit","backgroundColor","pointColor","Color","DELAY_BEFORE_ROTATING_X","CAMERA_MAX_DISTANCE","CAMERA_MIN_DISTANCE","CAMERA_DRIFT","sceneManager","rendererContainer","currentAnimationFrameId","sceneInitializedTimestamp","t","isMouseDragging","mousePosition","polygon","geometry","SphereGeometry","material","MeshLambertMaterial","wireframe","Mesh","createPolygon","halpernSphere","sphereGeometry","vertices","parameters","radius","widthSegments","heightSegments","positions","Float32Array","vertex","toArray","BufferGeometry","addAttribute","BufferAttribute","attributes","position","dynamic","PointsMaterial","TextureLoader","load","alphaTest","transparent","Points","createPoints","camera","PerspectiveCamera","set","lookAt","Vector3","renderer","WebGLRenderer","alpha","setPixelRatio","devicePixelRatio","setSize","setClearColor","createRenderer","appendChild","domElement","scene","Scene","add","removeRotationControls","onMouseDown","onMouseUp","onMouseMove","event","moveDelta","offsetX","offsetY","rotationDeltaQuaternion","Quaternion","setFromEuler","Euler","toRadians","quaternion","multiplyQuaternions","addRotationControls","removeZoomControls","onMouseWheel","deltaY","min","addZoomControls","aspect","updateProjectionMatrix","render","animate","rotateY","rotateX","PI","translateY","cos","translateX","translateZ","requestAnimationFrame","stop","cancelAnimationFrame","removeChild","dispose","remove","getSphereGeometry","getHalpernGeometry","angle","RIPPLE_SPEED","VERTEX_SEGMENT_WEIGHT_COEFFICIENT","BASELINE_VERTEX_SCALAR_FACTOR","originalVertices","focusedDataIndex","sphereDataSegments","vertexSegmentLength","onUnmount","focusedData","rendererRef","updateVertices","splice","fill","halpernBufferPositions","getAttribute","array","vertexSegmentIndex","ceil","dataIndex","vertexSegmentWeight","scalar","needsUpdate","_sceneManager","slice","src","process","isMobileDevice","test","navigator","userAgent","visualizations","component","Waveform","Drummer","Halpern","MobileDisabled","MobileDisabledComponent","connect","currentIndex","prevIndex","dispatch","startTransition","endTransition","pure","number2","transitionClassName","classNameRoot","index","intendedVisualization","selectedVisualization","mobileDisabled","react_transition_group","childFactory","child","cloneElement","onExit","onExited","mountOnEnter","unmountOnExit","Analyser","analyser","context","createAnalyser","dataArray","tick","getByteTimeDomainData","source","fftSize","smoothingTimeConstant","destination","disconnect","Visualizer_VisualizationSelector","Loading","show","CONTROLS_FADE_OUT_DELAY","TOUCH_WAS_CLICK_THRESHOLD","Controls","showOverlay","isArrowHovered","lastTouchStartTimestamp","hideOverlayTimeoutId","nativeEvent","which","togglePlay","recordTouchTimestamp","preventDefault","onTouchEnd","onPrev","stopPropagation","goToPrevVisualization","onNext","goToNextVisualization","doNothing","onKeyDown","onToggleArrowHover","isHovered","document","wantsToPlay","isPlaying","Fragment","components_Loading","onTouchStart","play","pause","onClick","onMouseEnter","onMouseLeave","viewBox","strokeWidth","strokeLinecap","strokeLinejoin","points","App","audioRef","audioEventListeners","audioElement","initialize","AudioContext","webkitAudioContext","createMediaElementSource","addAudioEventListeners","listener","onAudioPlay","onAudioPause","onAudioError","paused","console","error","eventListeners","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","eventListener","err","return","removeAudioEventListeners","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_this$state","preload","crossOrigin","Analyser_Analyser","components_Controls","ReactDOM","es","App_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a0e6857.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export type StoreState = {\r\n  currentVisualizationIndex: number;\r\n  prevVisualizationIndex: number;\r\n  isTransitioning: boolean;\r\n};\r\n\r\nexport enum ActionConstants {\r\n  BEGIN_VISUALIZATION_TRANSITION = 'BEGIN_VISUALIZATION_TRANSITION',\r\n  END_VISUALIZATION_TRANSITION = 'END_VISUALIZATION_TRANSITION',\r\n  GO_TO_PREV_VISUALIZATION = 'GO_TO_PREV_VISUALIZATION',\r\n  GO_TO_NEXT_VISUALIZATION = 'GO_TO_NEXT_VISUALIZATION'\r\n}\r\n\r\ninterface BeginVisualizationTransitionAction {\r\n  type: typeof ActionConstants.BEGIN_VISUALIZATION_TRANSITION;\r\n}\r\n\r\ninterface EndVisualizationTransitionAction {\r\n  type: typeof ActionConstants.END_VISUALIZATION_TRANSITION;\r\n}\r\n\r\ninterface GoToNextVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_NEXT_VISUALIZATION;\r\n}\r\n\r\ninterface GoToPrevVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_PREV_VISUALIZATION;\r\n}\r\n\r\nexport type ActionUnionType =\r\n  | BeginVisualizationTransitionAction\r\n  | EndVisualizationTransitionAction\r\n  | GoToNextVisualizationAction\r\n  | GoToPrevVisualizationAction;\r\n","import { StoreState, ActionConstants, ActionUnionType } from './types';\r\n\r\nconst initialState: StoreState = {\r\n  currentVisualizationIndex: 0,\r\n  prevVisualizationIndex: 0,\r\n  isTransitioning: false\r\n};\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: ActionUnionType\r\n): StoreState {\r\n  switch (action.type) {\r\n    case ActionConstants.GO_TO_NEXT_VISUALIZATION:\r\n      if (state.isTransitioning) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex + 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.GO_TO_PREV_VISUALIZATION:\r\n      if (state.isTransitioning) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex - 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.BEGIN_VISUALIZATION_TRANSITION:\r\n      return {\r\n        ...state,\r\n        isTransitioning: true\r\n      };\r\n\r\n    case ActionConstants.END_VISUALIZATION_TRANSITION:\r\n      return {\r\n        ...state,\r\n        isTransitioning: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { TRANSITION_ANIMATION_LENGTH } from '../VisualizationSelector';\r\nimport './Visualization.scss';\r\nimport { Options } from './index';\r\nimport { smooth } from '../../../utils';\r\n\r\nexport type Props = {\r\n  // array of frequency data with values 0-255\r\n  data: Uint8Array;\r\n  // length of CSS transitions\r\n  timeout: number;\r\n  isTransitioning: boolean;\r\n  options?: Options;\r\n};\r\n\r\nexport type WrappedProps = {\r\n  data: Uint8Array;\r\n  style: { transition: string };\r\n  isTransitioning: boolean;\r\n};\r\n\r\n// all visualization components should be wrapped with this HOC\r\nexport function wrap(\r\n  WrappedComponent: React.ComponentType<WrappedProps>\r\n): React.ComponentType<Props> {\r\n  return class extends React.Component<Props> {\r\n    // bypass initial render because components that trigger\r\n    // reflow in componentDidMount interrupt CSS transitions\r\n    state = { delayedAfterReflow: false };\r\n\r\n    static defaultProps: Props = {\r\n      data: new Uint8Array(),\r\n      timeout: TRANSITION_ANIMATION_LENGTH,\r\n      isTransitioning: false,\r\n      options: {}\r\n    };\r\n\r\n    componentDidMount() {\r\n      window.setTimeout(() => {\r\n        this.setState({ delayedAfterReflow: true });\r\n      }, 0);\r\n    }\r\n\r\n    render() {\r\n      const { delayedAfterReflow } = this.state;\r\n\r\n      if (!delayedAfterReflow) {\r\n        return null;\r\n      }\r\n\r\n      const { data, timeout, isTransitioning, options = {} } = this.props;\r\n      const transitionStyle = { transition: `transform ${timeout}ms linear` };\r\n\r\n      const renderedData = options.smoothing\r\n        ? smooth(data, options.smoothing)\r\n        : data;\r\n\r\n      return (\r\n        <WrappedComponent\r\n          data={renderedData}\r\n          style={transitionStyle}\r\n          isTransitioning={isTransitioning}\r\n        />\r\n      );\r\n    }\r\n  };\r\n}\r\n","export function modulo(number1: number, number2: number): number {\r\n  return ((number1 % number2) + number2) % number2;\r\n}\r\n\r\nexport function avg(numbers: Uint8Array): number;\r\nexport function avg(numbers: number[]): number;\r\nexport function avg(numbers: Uint8Array | number[]) {\r\n  let sum = 0;\r\n  for (let i = 0; i < numbers.length; i++) {\r\n    sum += numbers[i];\r\n  }\r\n  return sum / numbers.length;\r\n}\r\n\r\nexport function smooth(data: Uint8Array, range: number): Uint8Array {\r\n  return data.map((dataElement, i) => {\r\n    const dataToAverage = [];\r\n\r\n    let rangeIndex = i - range;\r\n\r\n    while (rangeIndex < i + range) {\r\n      const dataAtRangeIndex = data[rangeIndex] || 128;\r\n      dataToAverage.push(dataAtRangeIndex);\r\n      rangeIndex += 1;\r\n    }\r\n\r\n    return avg(dataToAverage);\r\n  });\r\n}\r\n\r\nexport function isMobileDevice(): boolean {\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n    navigator.userAgent\r\n  );\r\n}\r\n","const colorTriples = [\r\n  ['#0E9AA7', '#F6CD61', '#FE8A71'],\r\n  ['#EE4540', '#801336', '#2D142C'],\r\n  ['#8FB9A8', '#FDFBD4', '#FCD0BA'],\r\n  ['#AC6D83', '#685D79', '#465C7A'],\r\n  ['#F36E38', '#EF4648', '#582841'],\r\n  ['#F1F1F1', '#9BD7D1', '#305D7A'],\r\n  ['#DEA5B6', '#F3CD8C', '#F2E9C2'],\r\n  ['#E27B47', '#EFCA58', '#46B29E'],\r\n  ['#2E7345', '#2E9975', '#2DB3B3'],\r\n  ['#52A3CC', '#7EA1E5', '#AAAAF2'],\r\n  ['#CC5285', '#CC5285', '#F2BCAA'],\r\n  ['#D8E0BB', '#B6CEC7', '#86A3C3']\r\n];\r\n\r\nconst colorTriplesWithIds = colorTriples.map((colorTriple, i) => ({\r\n  id: i,\r\n  colorTriple\r\n}));\r\n\r\nfunction randomColorTriple() {\r\n  return colorTriples[Math.floor(Math.random() * colorTriples.length)];\r\n}\r\n\r\nexport function getRandomColors(numColors: number, areUnique?: boolean): string[] {\r\n  const colors: string[] = [];\r\n\r\n  while (colors.length < numColors) {\r\n    const randomTriple = randomColorTriple();\r\n    const randomColor = randomTriple[Math.floor(Math.random() * randomTriple.length)];\r\n\r\n    if (areUnique && colors.includes(randomColor)) {\r\n      break;\r\n    }\r\n\r\n    colors.push(randomColor);\r\n  }\r\n  return colors;\r\n}\r\n\r\nexport function getRandomColor() {\r\n  return getRandomColors(1)[0];\r\n}\r\n\r\nexport function getRandomColorTriple() {\r\n  const colorCopy = [...randomColorTriple()];\r\n  if (Math.random() <= 0.5) {\r\n    return colorCopy.reverse();\r\n  } else {\r\n    return colorCopy;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { getRandomColorTriple } from '../../../../utils/colors';\r\nimport './Waveform.scss';\r\n\r\nconst LINE_WIDTH = 10;\r\nconst LINE_X_OFFSET = 0;\r\nconst LINE_Y_OFFSET = 5;\r\n\r\nclass Waveform extends React.Component<VisualizationHOC.WrappedProps> {\r\n  private ref: React.RefObject<HTMLCanvasElement> = React.createRef();\r\n  private canvas?: HTMLCanvasElement;\r\n  private ctx?: CanvasRenderingContext2D;\r\n  private intervalId?: number;\r\n  private resizeTimeoutId?: number;\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.onResize);\r\n\r\n    this.canvas = this.ref.current!;\r\n    this.canvas.width = window.innerWidth;\r\n    this.canvas.height = window.innerHeight;\r\n\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    this.ctx.fillStyle = '#050505';\r\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n    this.intervalId = window.setInterval(this.fadeOut, 7);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.paint();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.clearInterval(this.intervalId);\r\n    window.removeEventListener('resize', this.onResize);\r\n  }\r\n\r\n  onResize = () => {\r\n    window.clearTimeout(this.resizeTimeoutId);\r\n    const canvas = this.canvas!;\r\n\r\n    this.resizeTimeoutId = window.setTimeout(() => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n    }, 500);\r\n  };\r\n\r\n  paint = () => {\r\n    const { data } = this.props;\r\n    const canvas = this.canvas!;\r\n    const ctx = this.ctx!;\r\n\r\n    const colors = getRandomColorTriple();\r\n\r\n    ctx.lineWidth = LINE_WIDTH;\r\n    ctx.lineCap = 'round';\r\n\r\n    const sliceWidth = canvas.width / data.length;\r\n\r\n    colors.forEach((color, i) => {\r\n      ctx.strokeStyle = color;\r\n      ctx.beginPath();\r\n\r\n      let x = i * LINE_X_OFFSET;\r\n      ctx.moveTo(x, canvas.height / 2);\r\n\r\n      data.forEach(dataElement => {\r\n        const y =\r\n          (dataElement / 255.0) * canvas.height -\r\n          (LINE_Y_OFFSET * colors.length) / 2;\r\n        ctx.lineTo(x, y + i * ((LINE_Y_OFFSET * colors.length) / 2));\r\n        x += sliceWidth;\r\n      });\r\n\r\n      ctx.lineTo(x, canvas.height / 2);\r\n      ctx.stroke();\r\n    });\r\n  };\r\n\r\n  fadeOut = () => {\r\n    const ctx = this.ctx!;\r\n    const canvas = this.canvas!;\r\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  };\r\n\r\n  render() {\r\n    const { style } = this.props;\r\n\r\n    return (\r\n      <div className=\"visualization waveform\" style={style}>\r\n        <div className=\"backdrop\" />\r\n        <canvas ref={this.ref} />;\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VisualizationHOC.wrap(Waveform);\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport './Drummer.scss';\r\nimport { getRandomColor } from '../../../../utils/colors';\r\n\r\nconst NUM_DRUMMERS = 13;\r\nconst MIN_HIT_COUNT = 5;\r\nconst MIN_FREQUENCY_VARIATION = 10;\r\nconst COLOR_CHANGE_THRESHOLD = 0.3;\r\nconst MIN_DELAY_BETWEEN_COLOR_CHANGE = 200;\r\n\r\nclass Drummer extends React.Component<VisualizationHOC.WrappedProps> {\r\n  state = { size: 0 };\r\n\r\n  color = getRandomColor();\r\n  lastColorChangeTimestamp = Date.now();\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.onResize);\r\n    this.onResize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.onResize);\r\n  }\r\n\r\n  onResize = () => {\r\n    const { innerWidth, innerHeight } = window;\r\n    const maxSideLength = Math.max(innerWidth, innerHeight);\r\n    this.setState({ size: maxSideLength * 2 });\r\n  };\r\n\r\n  render() {\r\n    const { data, isTransitioning } = this.props;\r\n    const { size } = this.state;\r\n\r\n    const freqMap: { [key: string]: number } = {};\r\n    const numPerSlice = 256 / NUM_DRUMMERS;\r\n\r\n    let freqKey = 0;\r\n    while (freqKey < NUM_DRUMMERS) {\r\n      freqMap[freqKey] = 0;\r\n      freqKey += 1;\r\n    }\r\n\r\n    data.forEach(freqData => {\r\n      let freqKey = 0;\r\n      while (freqKey < NUM_DRUMMERS) {\r\n        const ceiling = numPerSlice * (freqKey + 1);\r\n        if (\r\n          Math.abs(freqData - 128) > MIN_FREQUENCY_VARIATION &&\r\n          freqData <= ceiling\r\n        ) {\r\n          freqMap[freqKey] += 1;\r\n          break;\r\n        }\r\n        freqKey += 1;\r\n      }\r\n    });\r\n\r\n    // determine if we should change the background color by\r\n    // comparing total drummer hits against a minimum threshold\r\n    const totalHits = Object.values(freqMap).reduce((acc, hitCount) => {\r\n      return hitCount > MIN_HIT_COUNT ? acc + 1 : acc;\r\n    }, 0);\r\n\r\n    // space out background color changes so they're not jarring\r\n    const now = Date.now();\r\n    if (\r\n      !isTransitioning &&\r\n      totalHits / NUM_DRUMMERS > COLOR_CHANGE_THRESHOLD &&\r\n      now - this.lastColorChangeTimestamp > MIN_DELAY_BETWEEN_COLOR_CHANGE\r\n    ) {\r\n      let newColor;\r\n      do {\r\n        newColor = getRandomColor();\r\n      } while (this.color === newColor);\r\n\r\n      this.color = newColor;\r\n      this.lastColorChangeTimestamp = now;\r\n    }\r\n\r\n    const drummers = Object.entries(freqMap).map(([freqKey, hitCount], i) => {\r\n      const drummerContainerSize = ((1 + +freqKey) * size) / NUM_DRUMMERS;\r\n\r\n      return (\r\n        <div\r\n          key={freqKey}\r\n          className=\"drummer-container\"\r\n          style={{\r\n            width: `${drummerContainerSize}px`,\r\n            height: `${drummerContainerSize}px`,\r\n            opacity: ((NUM_DRUMMERS - i) / NUM_DRUMMERS) * 0.5 * 0.25\r\n          }}\r\n        >\r\n          <div\r\n            className={classNames('beat', { hit: hitCount > MIN_HIT_COUNT })}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"visualization drummer\" style={this.props.style}>\r\n        {drummers}\r\n        <div className=\"overlay\" style={{ backgroundColor: this.color }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VisualizationHOC.wrap(Drummer);\r\n","import { Color } from 'three';\r\n\r\nexport const pointColor = new Color('#666');\r\n","import {\r\n  Scene,\r\n  SphereGeometry,\r\n  Vector3,\r\n  Quaternion,\r\n  Euler,\r\n  BufferGeometry,\r\n  PointsMaterial\r\n} from 'three';\r\nimport { createPolygon, createPoints } from './entities/polys';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\n\r\nconst DELAY_BEFORE_ROTATING_X = 1500;\r\nconst CAMERA_MAX_DISTANCE = 200;\r\nconst CAMERA_MIN_DISTANCE = 0;\r\nconst CAMERA_DRIFT = 0.05;\r\n\r\nexport default function sceneManager(rendererContainer: HTMLDivElement) {\r\n  let currentAnimationFrameId: number;\r\n  let sceneInitializedTimestamp = Date.now();\r\n  let t = 0;\r\n  let isMouseDragging = false;\r\n\r\n  const mousePosition = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n\r\n  const polygon = createPolygon();\r\n  const halpernSphere = createPoints(polygon);\r\n\r\n  const camera = createCamera();\r\n  camera.position.set(0, CAMERA_MAX_DISTANCE, 0);\r\n  camera.lookAt(new Vector3(0, 0, 0));\r\n\r\n  const renderer = createRenderer();\r\n  rendererContainer.appendChild(renderer.domElement);\r\n\r\n  const scene = new Scene();\r\n  scene.add(halpernSphere);\r\n\r\n  const removeRotationControls = addRotationControls();\r\n  const removeZoomControls = addZoomControls();\r\n\r\n  window.addEventListener('resize', onResize, false);\r\n\r\n  function animate() {\r\n    halpernSphere.rotateY(-0.002);\r\n\r\n    if (Date.now() - sceneInitializedTimestamp > DELAY_BEFORE_ROTATING_X) {\r\n      halpernSphere.rotateX(0.002);\r\n    }\r\n\r\n    t += 0.005;\r\n\r\n    if (t >= Math.PI * 2) {\r\n      t = 0;\r\n    }\r\n\r\n    camera.translateY(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateX(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateZ(Math.cos(t) * CAMERA_DRIFT * 5);\r\n\r\n    renderer.render(scene, camera);\r\n    currentAnimationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function stop() {\r\n    window.cancelAnimationFrame(currentAnimationFrameId);\r\n    window.removeEventListener('resize', onResize);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    removeRotationControls();\r\n    removeZoomControls();\r\n\r\n    halpernSphere.geometry.dispose();\r\n    (halpernSphere.material as PointsMaterial).dispose();\r\n    scene.remove(halpernSphere);\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function getSphereGeometry() {\r\n    return polygon.geometry as SphereGeometry;\r\n  }\r\n\r\n  function getHalpernGeometry() {\r\n    return halpernSphere.geometry as BufferGeometry;\r\n  }\r\n\r\n  function addRotationControls() {\r\n    renderer.domElement.addEventListener('mousedown', onMouseDown);\r\n    renderer.domElement.addEventListener('mouseup', onMouseUp);\r\n    renderer.domElement.addEventListener('mousemove', onMouseMove);\r\n\r\n    function onMouseDown() {\r\n      isMouseDragging = true;\r\n    }\r\n\r\n    function onMouseUp() {\r\n      isMouseDragging = false;\r\n    }\r\n\r\n    function onMouseMove(event: MouseEvent) {\r\n      const moveDelta = {\r\n        x: event.offsetX - mousePosition.x,\r\n        y: event.offsetY - mousePosition.y\r\n      };\r\n\r\n      if (isMouseDragging) {\r\n        const rotationDeltaQuaternion = new Quaternion().setFromEuler(\r\n          new Euler(\r\n            toRadians(moveDelta.y * 0.25),\r\n            toRadians(moveDelta.x * 0.25),\r\n            0,\r\n            'XYZ'\r\n          )\r\n        );\r\n\r\n        halpernSphere.quaternion.multiplyQuaternions(\r\n          rotationDeltaQuaternion,\r\n          halpernSphere.quaternion\r\n        );\r\n      }\r\n\r\n      mousePosition.x = event.offsetX;\r\n      mousePosition.y = event.offsetY;\r\n    }\r\n\r\n    return function removeRotationControls() {\r\n      renderer.domElement.removeEventListener('mousedown', onMouseDown);\r\n      renderer.domElement.removeEventListener('mouseup', onMouseUp);\r\n      renderer.domElement.removeEventListener('mousemove', onMouseMove);\r\n    };\r\n  }\r\n\r\n  function addZoomControls() {\r\n    renderer.domElement.addEventListener('wheel', onMouseWheel);\r\n\r\n    function onMouseWheel(event: WheelEvent) {\r\n      if (event.deltaY > 0) {\r\n        camera.position.y = Math.min(\r\n          camera.position.y + 2,\r\n          CAMERA_MAX_DISTANCE\r\n        );\r\n      } else {\r\n        camera.position.y = Math.max(\r\n          camera.position.y - 2,\r\n          CAMERA_MIN_DISTANCE\r\n        );\r\n      }\r\n    }\r\n\r\n    return function removeZoomControls() {\r\n      renderer.domElement.removeEventListener('wheel', onMouseWheel);\r\n    };\r\n  }\r\n\r\n  return {\r\n    animate,\r\n    stop,\r\n    getSphereGeometry,\r\n    getHalpernGeometry\r\n  };\r\n}\r\n\r\nfunction toRadians(angle: number) {\r\n  return (angle * Math.PI) / 180;\r\n}\r\n","import {\r\n  Mesh,\r\n  Points,\r\n  MeshLambertMaterial,\r\n  PointsMaterial,\r\n  SphereGeometry,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  TextureLoader\r\n} from 'three';\r\nimport { pointColor } from './colors';\r\n\r\nexport function createPolygon(): Mesh {\r\n  const geometry = new SphereGeometry(48, 96, 96);\r\n\r\n  const material = new MeshLambertMaterial({\r\n    wireframe: true\r\n  });\r\n\r\n  return new Mesh(geometry, material);\r\n}\r\n\r\nexport function createPoints(polygon: Mesh): Points {\r\n  const sphereGeometry = polygon.geometry as SphereGeometry;\r\n\r\n  const pointGeometry = new SphereGeometry(\r\n    sphereGeometry.parameters.radius,\r\n    sphereGeometry.parameters.widthSegments,\r\n    sphereGeometry.parameters.heightSegments\r\n  );\r\n\r\n  const { vertices } = pointGeometry;\r\n  const positions = new Float32Array(vertices.length * 3);\r\n\r\n  vertices.forEach((vertex, i) => {\r\n    vertex.toArray(positions, i * 3);\r\n  });\r\n\r\n  const geometry = new BufferGeometry();\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n  (geometry.attributes.position as BufferAttribute).dynamic = true;\r\n\r\n  const material = new PointsMaterial({\r\n    size: 0.25,\r\n    map: new TextureLoader().load('assets/images/point.png'),\r\n    alphaTest: 0.5,\r\n    color: pointColor,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, material);\r\n}\r\n","import { PerspectiveCamera } from 'three';\r\n\r\nexport function createCamera() {\r\n  return new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ alpha: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x000000, 0);\r\n\r\n  return renderer;\r\n}\r\n","import React from 'react';\r\nimport { BufferGeometry, BufferAttribute } from 'three';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport sceneManager from './three/sceneManager';\r\nimport './Halpern.scss';\r\n\r\nconst RIPPLE_SPEED = 2;\r\nconst VERTEX_SEGMENT_WEIGHT_COEFFICIENT = 0.1;\r\nconst BASELINE_VERTEX_SCALAR_FACTOR = 1;\r\n\r\nclass Halpern extends React.Component<VisualizationHOC.WrappedProps> {\r\n  private rendererContainer?: HTMLDivElement;\r\n  private originalVertices?: ArrayLike<number>;\r\n  private focusedDataIndex?: number;\r\n  private sphereDataSegments?: number;\r\n  private vertexSegmentLength?: number;\r\n  private getHalpernGeometry?: () => BufferGeometry;\r\n  private onUnmount?: () => void;\r\n\r\n  private focusedData: number[] = [];\r\n  private rendererRef: React.RefObject<HTMLDivElement> = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.rendererContainer = this.rendererRef.current!;\r\n\r\n    const {\r\n      animate,\r\n      stop,\r\n      getSphereGeometry,\r\n      getHalpernGeometry\r\n    } = sceneManager(this.rendererContainer);\r\n\r\n    const { data } = this.props;\r\n\r\n    this.onUnmount = stop;\r\n\r\n    this.sphereDataSegments = Math.floor(\r\n      data.length / getSphereGeometry().parameters.widthSegments\r\n    );\r\n\r\n    // split vertices up into segments belonging to slices of x cross sections,\r\n    // first and last vertices are at top and bottom of sphere\r\n    this.vertexSegmentLength =\r\n      (getSphereGeometry().vertices.length - 2) /\r\n      (getSphereGeometry().parameters.widthSegments - 1);\r\n\r\n    this.getHalpernGeometry = getHalpernGeometry;\r\n\r\n    this.originalVertices = (getHalpernGeometry().attributes.position\r\n      .array as Float32Array).slice(0);\r\n\r\n    this.focusedData = new Array(data.length).fill(128);\r\n\r\n    this.focusedDataIndex = Math.floor(data.length / 2);\r\n\r\n    animate();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updateVertices(this.props.data);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.onUnmount && this.onUnmount();\r\n  }\r\n\r\n  updateVertices = (data: Uint8Array) => {\r\n    if (this.getHalpernGeometry == null || this.originalVertices == null) {\r\n      return;\r\n    }\r\n\r\n    this.focusedData.splice(0, RIPPLE_SPEED);\r\n    this.focusedData = this.focusedData.concat(\r\n      new Array(RIPPLE_SPEED).fill(data[this.focusedDataIndex!])\r\n    );\r\n\r\n    const halpernBufferPositions = this.getHalpernGeometry().getAttribute(\r\n      'position'\r\n    ).array as Float32Array;\r\n\r\n    let i = 0;\r\n    while (i < this.originalVertices.length) {\r\n      // find which segment the current index belongs to\r\n      const vertexSegmentIndex = Math.ceil(\r\n        Math.floor(i / 3) / this.vertexSegmentLength!\r\n      );\r\n\r\n      const dataIndex = vertexSegmentIndex * this.sphereDataSegments!;\r\n      const vertexSegmentWeight = Math.min(\r\n        vertexSegmentIndex,\r\n        this.vertexSegmentLength! - vertexSegmentIndex\r\n      );\r\n\r\n      const dataVariation = Math.abs(this.focusedData[dataIndex] - 128) / 255;\r\n\r\n      const scalar =\r\n        dataVariation *\r\n          vertexSegmentWeight *\r\n          VERTEX_SEGMENT_WEIGHT_COEFFICIENT +\r\n        BASELINE_VERTEX_SCALAR_FACTOR;\r\n\r\n      // update X, Y, and Z vector positions in BufferGeometry\r\n      halpernBufferPositions[i] = this.originalVertices[i] * scalar;\r\n      halpernBufferPositions[i + 1] = this.originalVertices[i + 1] * scalar;\r\n      halpernBufferPositions[i + 2] = this.originalVertices[i + 2] * scalar;\r\n\r\n      i += 3;\r\n    }\r\n\r\n    // inform three.js that vertices should be repositioned,\r\n    // final render is handled in sceneManager animate loop\r\n    (this.getHalpernGeometry().getAttribute(\r\n      'position'\r\n    ) as BufferAttribute).needsUpdate = true;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"visualization halpern\"\r\n        ref={this.rendererRef}\r\n        style={this.props.style}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default VisualizationHOC.wrap(Halpern);\r\n","import React from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport './MobileDisabled.scss';\r\n\r\nconst MobileDisabled: React.FunctionComponent<\r\n  VisualizationHOC.WrappedProps\r\n> = ({ style }) => {\r\n  return (\r\n    <div className=\"visualization mobile-disabled\" style={style}>\r\n      <div className=\"content\">\r\n        <img\r\n          id=\"desktop-icon\"\r\n          src={process.env.PUBLIC_URL + '/assets/images/desktop.png'}\r\n        />\r\n        <div id=\"message\">\r\n          Sorry, this visualization cannot be viewed on a mobile device.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(MobileDisabled);\r\n","import Waveform from './Waveform';\r\nimport Drummer from './Drummer';\r\nimport Halpern from './Halpern';\r\nimport MobileDisabledComponent from './MobileDisabled';\r\nimport { Props } from './VisualizationHOC';\r\nimport { isMobileDevice as isMobileDeviceCheck } from '../../../utils';\r\n\r\nexport const isMobileDevice = isMobileDeviceCheck();\r\n\r\nexport type Options = {\r\n  smoothing?: number;\r\n  mobileDisabled?: boolean;\r\n};\r\n\r\ntype SelectableVisualization = {\r\n  component: React.ComponentType<Props>;\r\n  options?: Options;\r\n};\r\n\r\nconst visualizations: SelectableVisualization[] = [\r\n  { component: Waveform },\r\n  {\r\n    component: Drummer,\r\n    options: { smoothing: 64 }\r\n  },\r\n  {\r\n    component: Halpern,\r\n    options: {\r\n      smoothing: 64\r\n    }\r\n  }\r\n];\r\n\r\nexport default visualizations;\r\n\r\nexport const MobileDisabled: SelectableVisualization = {\r\n  component: MobileDisabledComponent\r\n};\r\n","import React from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport * as VisualizationHOC from './Visualizations/VisualizationHOC';\r\nimport visualizations, {\r\n  isMobileDevice,\r\n  MobileDisabled\r\n} from './Visualizations';\r\nimport { modulo } from '../../utils';\r\nimport * as Actions from '../../../src/store/actions';\r\nimport { StoreState } from '../../../src/store/types';\r\n\r\nexport const TRANSITION_ANIMATION_LENGTH = 500;\r\n\r\ntype Props = {\r\n  data: Uint8Array;\r\n};\r\n\r\ntype DynamicChildProps = VisualizationHOC.Props & { classNames: string };\r\n\r\nconst dynamicChildFactory = (classNames?: string) => (\r\n  child: React.ReactElement<DynamicChildProps>\r\n) => React.cloneElement(child, { classNames });\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  currentIndex: state.currentVisualizationIndex,\r\n  prevIndex: state.prevVisualizationIndex,\r\n  isTransitioning: state.isTransitioning\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  startTransition: () => dispatch(Actions.beginVisualizationTransition()),\r\n  endTransition: () => dispatch(Actions.endVisualizationTransition())\r\n});\r\n\r\nconst VisualizationSelector: React.FunctionComponent<\r\n  Props &\r\n    ReturnType<typeof mapStateToProps> &\r\n    ReturnType<typeof mapDispatchToProps>\r\n> = ({\r\n  data,\r\n  startTransition,\r\n  endTransition,\r\n  isTransitioning,\r\n  prevIndex,\r\n  currentIndex\r\n}) => {\r\n  const transitionClassName =\r\n    prevIndex != null && prevIndex < currentIndex ? 'next' : 'prev';\r\n\r\n  const classNameRoot = transitionClassName\r\n    ? `visualization-${transitionClassName}`\r\n    : undefined;\r\n\r\n  const index = modulo(currentIndex, visualizations.length);\r\n  const intendedVisualization = visualizations[index];\r\n\r\n  const selectedVisualization =\r\n    intendedVisualization.options &&\r\n    intendedVisualization.options.mobileDisabled &&\r\n    isMobileDevice\r\n      ? MobileDisabled\r\n      : intendedVisualization;\r\n\r\n  return (\r\n    <TransitionGroup\r\n      component={null}\r\n      childFactory={dynamicChildFactory(classNameRoot)}\r\n    >\r\n      <CSSTransition\r\n        key={index}\r\n        timeout={TRANSITION_ANIMATION_LENGTH}\r\n        classNames={classNameRoot || ''}\r\n        onExit={startTransition}\r\n        onExited={endTransition}\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        <selectedVisualization.component\r\n          data={data}\r\n          isTransitioning={isTransitioning}\r\n          timeout={TRANSITION_ANIMATION_LENGTH}\r\n          options={selectedVisualization.options}\r\n        />\r\n      </CSSTransition>\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n  null,\r\n  { pure: false }\r\n)(VisualizationSelector);\r\n","import { ActionConstants, ActionUnionType } from './types';\r\n\r\nexport const beginVisualizationTransition = (): ActionUnionType => ({\r\n  type: ActionConstants.BEGIN_VISUALIZATION_TRANSITION\r\n});\r\n\r\nexport const endVisualizationTransition = (): ActionUnionType => ({\r\n  type: ActionConstants.END_VISUALIZATION_TRANSITION\r\n});\r\n\r\nexport const goToNextVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_NEXT_VISUALIZATION\r\n});\r\n\r\nexport const goToPrevVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_PREV_VISUALIZATION\r\n});\r\n","import React, { Component } from 'react';\r\nimport VisualizationSelector from '../Visualizer/VisualizationSelector';\r\n\r\nconst DATA_FFT_SIZE = 256;\r\n\r\ntype Props = {\r\n  context: AudioContext;\r\n  source: MediaElementAudioSourceNode;\r\n};\r\n\r\ntype State = {\r\n  data: Uint8Array;\r\n};\r\n\r\nexport default class Analyser extends Component<Props, State> {\r\n  state = { data: new Uint8Array() };\r\n\r\n  analyser = this.props.context.createAnalyser();\r\n  dataArray = new Uint8Array();\r\n  currentAnimationFrameId?: number;\r\n\r\n  componentDidMount() {\r\n    const { context, source } = this.props;\r\n\r\n    this.analyser.fftSize = DATA_FFT_SIZE;\r\n    this.dataArray = new Uint8Array(DATA_FFT_SIZE);\r\n    this.analyser.smoothingTimeConstant = 1;\r\n\r\n    source.connect(this.analyser);\r\n    this.analyser.connect(context.destination);\r\n    this.currentAnimationFrameId = window.requestAnimationFrame(this.tick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { source } = this.props;\r\n\r\n    this.currentAnimationFrameId != null &&\r\n      window.cancelAnimationFrame(this.currentAnimationFrameId);\r\n    this.analyser != null && this.analyser.disconnect();\r\n    source && source.disconnect();\r\n  }\r\n\r\n  tick = () => {\r\n    this.analyser.getByteTimeDomainData(this.dataArray);\r\n    this.setState({ data: this.dataArray });\r\n    this.currentAnimationFrameId = window.requestAnimationFrame(this.tick);\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    return <VisualizationSelector data={data} />;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './Loading.scss';\r\n\r\ntype Props = {\r\n  show?: boolean;\r\n};\r\n\r\nconst Loading: React.FunctionComponent<Props> = ({ show }) => (\r\n  <div\r\n    className={classNames('loading', { show: show === false ? false : true })}\r\n  >\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React, { Component } from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport Loading from '../Loading';\r\nimport * as Actions from '../../store/actions';\r\nimport './Controls.scss';\r\n\r\nconst CONTROLS_FADE_OUT_DELAY = 1500;\r\nconst TOUCH_WAS_CLICK_THRESHOLD = 250;\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & {\r\n  wantsToPlay: boolean;\r\n  isPlaying: boolean;\r\n  togglePlay: () => void;\r\n};\r\n\r\ntype State = {\r\n  showOverlay: boolean;\r\n  isArrowHovered: boolean;\r\n};\r\n\r\nclass Controls extends Component<Props, State> {\r\n  state: State = { showOverlay: false, isArrowHovered: false };\r\n\r\n  private lastTouchStartTimestamp?: number;\r\n  private hideOverlayTimeoutId?: number;\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.onKeyDown);\r\n    this.showOverlay();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  onMouseDown = (event: React.MouseEvent) => {\r\n    if (event.nativeEvent.which === 1) {\r\n      this.lastTouchStartTimestamp = Date.now();\r\n    }\r\n  };\r\n\r\n  onMouseUp = (event: React.MouseEvent) => {\r\n    if (\r\n      event.nativeEvent.which === 1 &&\r\n      this.lastTouchStartTimestamp &&\r\n      Date.now() - this.lastTouchStartTimestamp < TOUCH_WAS_CLICK_THRESHOLD\r\n    ) {\r\n      this.props.togglePlay();\r\n    }\r\n  };\r\n\r\n  recordTouchTimestamp = (event: React.TouchEvent) => {\r\n    event.preventDefault();\r\n    this.lastTouchStartTimestamp = Date.now();\r\n  };\r\n\r\n  onTouchEnd = (event: React.TouchEvent) => {\r\n    event.preventDefault();\r\n    if (\r\n      this.lastTouchStartTimestamp &&\r\n      Date.now() - this.lastTouchStartTimestamp < TOUCH_WAS_CLICK_THRESHOLD\r\n    ) {\r\n      this.showOverlay();\r\n    }\r\n  };\r\n\r\n  showOverlay = () => {\r\n    window.clearTimeout(this.hideOverlayTimeoutId);\r\n\r\n    this.setState({ showOverlay: true }, () => {\r\n      this.hideOverlayTimeoutId = window.setTimeout(() => {\r\n        if (!this.state.isArrowHovered) {\r\n          this.setState({ showOverlay: false });\r\n        }\r\n      }, CONTROLS_FADE_OUT_DELAY);\r\n    });\r\n  };\r\n\r\n  onPrev = (event: React.MouseEvent | React.TouchEvent) => {\r\n    event.stopPropagation();\r\n    this.props.goToPrevVisualization();\r\n    this.showOverlay();\r\n  };\r\n\r\n  onNext = (event: React.MouseEvent | React.TouchEvent) => {\r\n    event.stopPropagation();\r\n    this.props.goToNextVisualization();\r\n    this.showOverlay();\r\n  };\r\n\r\n  doNothing = (event: React.MouseEvent) => {\r\n    event.stopPropagation();\r\n  };\r\n\r\n  onKeyDown = (event: KeyboardEvent) => {\r\n    switch (event.which) {\r\n      case 37:\r\n      case 38: {\r\n        this.props.goToPrevVisualization();\r\n        break;\r\n      }\r\n      case 39:\r\n      case 40: {\r\n        this.props.goToNextVisualization();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  onToggleArrowHover = (isHovered: boolean) => {\r\n    this.setState({ isArrowHovered: isHovered });\r\n  };\r\n\r\n  render() {\r\n    const { wantsToPlay, isPlaying, togglePlay } = this.props;\r\n    const { showOverlay } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {wantsToPlay && !isPlaying && <Loading />}\r\n        <div\r\n          id=\"overlay\"\r\n          onMouseDown={this.onMouseDown}\r\n          onMouseUp={this.onMouseUp}\r\n          onTouchStart={this.recordTouchTimestamp}\r\n          onTouchEnd={this.onTouchEnd}\r\n          onMouseMove={this.showOverlay}\r\n          className={classNames({ show: showOverlay })}\r\n        >\r\n          <h1 id=\"title\">LTLY</h1>\r\n          {\r\n            <div\r\n              onTouchStart={togglePlay}\r\n              className={classNames({\r\n                play: !wantsToPlay && !isPlaying,\r\n                pause: wantsToPlay && isPlaying\r\n              })}\r\n            />\r\n          }\r\n          <div className=\"navigation\">\r\n            <div\r\n              className=\"arrow-container\"\r\n              onClick={this.onPrev}\r\n              onTouchStart={this.onPrev}\r\n              onMouseUp={this.doNothing}\r\n              onMouseEnter={() => this.onToggleArrowHover(true)}\r\n              onMouseLeave={() => this.onToggleArrowHover(false)}\r\n            >\r\n              <svg\r\n                className=\"arrow\"\r\n                width=\"60px\"\r\n                height=\"80px\"\r\n                viewBox=\"0 0 50 80\"\r\n              >\r\n                <polyline\r\n                  fill=\"none\"\r\n                  stroke=\"#FFF\"\r\n                  strokeWidth=\"3\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  points=\"\r\n              45.63,75.8 0.375,38.087 45.63,0.375 \"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <div\r\n              className=\"arrow-container\"\r\n              onClick={this.onNext}\r\n              onTouchStart={this.onNext}\r\n              onMouseUp={this.doNothing}\r\n              onMouseEnter={() => this.onToggleArrowHover(true)}\r\n              onMouseLeave={() => this.onToggleArrowHover(false)}\r\n            >\r\n              <svg\r\n                className=\"arrow\"\r\n                width=\"60px\"\r\n                height=\"80px\"\r\n                viewBox=\"0 0 50 80\"\r\n              >\r\n                <polyline\r\n                  fill=\"none\"\r\n                  stroke=\"#FFF\"\r\n                  strokeWidth=\"3\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  points=\"\r\n                0.375,0.375 45.63,38.087 0.375,75.8 \"\r\n                />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  goToNextVisualization: () => dispatch(Actions.goToNextVisualization()),\r\n  goToPrevVisualization: () => dispatch(Actions.goToPrevVisualization())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Controls);\r\n","import React, { Component } from 'react';\nimport Analyser from './components/Analyser';\nimport Controls from './components/Controls';\n\nconst AUDIO_SERVER_URL =\n  process.env.NODE_ENV === 'production'\n    ? process.env.REACT_APP_AUDIO_SERVER_URL\n    : 'http://localhost:3002';\n\ntype Props = {};\n\ntype State = {\n  wantsToPlay: boolean;\n  isPlaying: boolean;\n  context?: AudioContext;\n  source?: MediaElementAudioSourceNode;\n};\n\ntype AudioEventListeners = Array<{\n  event: string;\n  listener: () => void;\n}>;\n\nexport default class App extends Component<Props, State> {\n  state: State = {\n    wantsToPlay: false,\n    isPlaying: false,\n    context: undefined,\n    source: undefined\n  };\n\n  private audioRef: React.RefObject<HTMLAudioElement> = React.createRef();\n  private audioEventListeners: AudioEventListeners = [];\n\n  audioElement?: HTMLAudioElement;\n\n  componentWillUnmount() {\n    this.removeAudioEventListeners();\n  }\n\n  initialize = () => {\n    const audioElement = this.audioRef.current!;\n    this.audioElement = audioElement;\n\n    const context = new (window.AudioContext ||\n      (window as any).webkitAudioContext)();\n    const source = context.createMediaElementSource(audioElement);\n\n    this.addAudioEventListeners([\n      { event: 'playing', listener: this.onAudioPlay },\n      { event: 'pause', listener: this.onAudioPause },\n      { event: 'error', listener: this.onAudioError }\n    ]);\n\n    this.setState({ context, source });\n  };\n\n  togglePlay = () => {\n    if (this.audioElement == null) {\n      this.initialize();\n    }\n\n    if (this.audioElement!.paused) {\n      this.setState({ wantsToPlay: true });\n      this.audioElement!.play();\n    } else {\n      this.setState({ wantsToPlay: false });\n      this.audioElement!.pause();\n    }\n  };\n\n  onAudioPlay = () => this.setState({ isPlaying: true });\n\n  onAudioPause = () => this.setState({ isPlaying: false });\n\n  onAudioError = console.error;\n\n  addAudioEventListeners = (eventListeners: AudioEventListeners) => {\n    for (const eventListener of eventListeners) {\n      this.audioEventListeners.push(eventListener);\n      this.audioElement!.addEventListener(\n        eventListener.event,\n        eventListener.listener\n      );\n    }\n  };\n\n  removeAudioEventListeners = () => {\n    for (const eventListener of this.audioEventListeners) {\n      this.audioElement!.removeEventListener(\n        eventListener.event,\n        eventListener.listener\n      );\n    }\n    this.audioEventListeners = [];\n  };\n\n  render() {\n    const { wantsToPlay, isPlaying, context, source } = this.state;\n\n    return (\n      <>\n        <audio\n          ref={this.audioRef}\n          id=\"audioElement\"\n          src={AUDIO_SERVER_URL}\n          preload={'auto'}\n          crossOrigin=\"anonymous\"\n        />\n        {source && context && <Analyser context={context} source={source} />}\n        <Controls\n          wantsToPlay={wantsToPlay}\n          isPlaying={isPlaying}\n          togglePlay={this.togglePlay}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\nimport App from './App';\r\nimport './reset.scss';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}