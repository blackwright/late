{"version":3,"sources":["serviceWorker.js","components/Loading/Loading.tsx","components/Visualizer/Visualizations/Visualization.tsx","utils/index.ts","utils/colors.ts","components/Visualizer/Visualizations/Waveform/Waveform.tsx","components/Visualizer/Visualizations/Drummer/Drummer.tsx","components/Visualizer/Visualizations/Halpern/three/entities/colors.ts","components/Visualizer/Visualizations/Halpern/three/sceneManager.ts","components/Visualizer/Visualizations/Halpern/three/entities/polys.ts","components/Visualizer/Visualizations/Halpern/three/entities/camera.ts","components/Visualizer/Visualizations/Halpern/three/entities/renderer.ts","components/Visualizer/Visualizations/Halpern/Halpern.tsx","components/Visualizer/Visualizations/index.tsx","components/Visualizer/VisualizationSelector.tsx","components/Analyser/Analyser.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Loading","_ref","show","react_default","a","createElement","className","classNames","wrap","WrappedComponent","_class","_temp","options","arguments","length","undefined","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","delayedAfterReflow","inherits","createClass","key","value","_this2","setTimeout","setState","_this$props","props","data","timeout","isTransitioning","renderedData","smoothing","range","map","dataElement","i","dataToAverage","rangeIndex","dataAtRangeIndex","push","numbers","sum","avg","smooth","style","transition","React","Component","defaultProps","Uint8Array","TRANSITION_ANIMATION_LENGTH","colorTriples","colorTriple","id","randomColorTriple","Math","floor","random","getRandomColor","numColors","areUnique","colors","randomTriple","randomColor","includes","getRandomColors","LINE_WIDTH","LINE_X_OFFSET","LINE_Y_OFFSET","Visualization","ref","createRef","canvas","ctx","intervalId","resizeTimeoutId","onResize","clearTimeout","width","innerWidth","height","innerHeight","paint","colorCopy","toConsumableArray","reverse","getRandomColorTriple","lineWidth","lineCap","sliceWidth","forEach","color","strokeStyle","beginPath","x","moveTo","y","lineTo","stroke","fadeOut","fillStyle","fillRect","addEventListener","current","getContext","setInterval","clearInterval","removeEventListener","size","lastColorChangeTimestamp","Date","now","_window","maxSideLength","max","freqMap","freqKey","freqData","ceiling","abs","totalHits","values","reduce","acc","hitCount","newColor","drummers","entries","_ref2","slicedToArray","drummerContainerSize","opacity","hit","backgroundColor","pointColor","Color","DELAY_BEFORE_ROTATING_X","CAMERA_MAX_DISTANCE","CAMERA_MIN_DISTANCE","CAMERA_DRIFT","sceneManager","rendererContainer","currentAnimationFrameId","sceneInitializedTimestamp","t","isMouseDragging","mousePosition","polygon","geometry","SphereGeometry","computeVertexNormals","material","MeshLambertMaterial","wireframe","Mesh","createPolygon","halpernSphere","sphereGeometry","vertices","parameters","radius","widthSegments","heightSegments","positions","Float32Array","vertex","toArray","BufferGeometry","addAttribute","BufferAttribute","PointsMaterial","TextureLoader","load","alphaTest","transparent","Points","createPoints","camera","PerspectiveCamera","position","set","lookAt","Vector3","renderer","devicePixelRatio","WebGLRenderer","alpha","setSize","setPixelRatio","setClearColor","createRenderer","appendChild","domElement","scene","Scene","add","removeRotationControls","onMouseDown","onMouseUp","onMouseMove","event","moveDelta","offsetX","offsetY","rotationDeltaQuaternion","Quaternion","setFromEuler","Euler","toRadians","quaternion","multiplyQuaternions","addRotationControls","removeZoomControls","onMouseWheel","deltaY","min","addZoomControls","aspect","updateProjectionMatrix","render","animate","rotateY","rotateX","PI","translateY","cos","translateX","translateZ","requestAnimationFrame","stop","cancelAnimationFrame","removeChild","remove","getSphereGeometry","getHalpernGeometry","angle","VERTEX_SEGMENT_WEIGHT_COEFFICIENT","BASELINE_VERTEX_SCALAR_FACTOR","Visualizations","originalVertices","onUnmount","rendererRef","updateVertices","dataSegments","vertexSegmentLength","vertexSegmentIndex","ceil","dataIndex","vertexSegmentWeight","copy","multiplyScalarValue","multiplyScalar","fromGeometry","verticesNeedUpdate","_sceneManager","cloneDeep","Waveform","Drummer","VisualizationSelector","prevIndex","currentIndex","onKeyDown","which","goToPrevVisualization","goToNextVisualization","prevState","startTransition","endTransition","document","number2","_this$state","transitionClassName","classNameRoot","visualizationIndex","VisualizationComponent","react_transition_group","component","childFactory","child","cloneElement","onExit","onExited","mountOnEnter","unmountOnExit","Analyser","analyser","context","createAnalyser","dataArray","frequencyBinCount","tick","getByteTimeDomainData","source","fftSize","smoothingTimeConstant","connect","destination","disconnect","VisualizationSelector_VisualizationSelector","App","wantsToPlay","isPlaying","audioRef","audioEventListeners","lastMouseDownTimestamp","audioElement","initialize","AudioContext","webkitAudioContext","createMediaElementSource","addAudioEventListeners","listener","onPlay","onPause","onError","onClick","paused","play","pause","console","error","eventListeners","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","eventListener","err","return","removeAudioEventListeners","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","Fragment","src","process","preload","crossOrigin","Analyser_Analyser","components_Loading_Loading","ReactDOM","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf226f79.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './Loading.scss';\r\n\r\ntype Props = {\r\n  show: boolean;\r\n};\r\n\r\nconst Loading: React.FunctionComponent<Props> = ({ show }) => (\r\n  <div className={classNames('loading', { show })}>\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { TRANSITION_ANIMATION_LENGTH } from '../VisualizationSelector';\r\nimport { smooth } from '../../../utils';\r\nimport './Visualization.scss';\r\n\r\nexport type Props = {\r\n  // array of frequency data with values 0-255\r\n  data: Uint8Array;\r\n  // length of CSS transitions\r\n  timeout: number;\r\n  isTransitioning: boolean;\r\n};\r\n\r\nexport type WrappedProps = {\r\n  data: Uint8Array;\r\n  style: {\r\n    transition: string;\r\n  };\r\n  isTransitioning: boolean;\r\n};\r\n\r\nexport type Options = {\r\n  smoothing?: number;\r\n};\r\n\r\n// all visualization components should be wrapped with this HOC\r\nexport function wrap(WrappedComponent: React.ComponentType<WrappedProps>, options: Options = {}) {\r\n  return class extends React.Component<Props> {\r\n    // bypass initial render because components that trigger\r\n    // reflow in componentDidMount interrupt CSS transitions\r\n    state = { delayedAfterReflow: false };\r\n\r\n    static defaultProps: Props = {\r\n      data: new Uint8Array(),\r\n      timeout: TRANSITION_ANIMATION_LENGTH,\r\n      isTransitioning: false\r\n    };\r\n\r\n    componentDidMount() {\r\n      window.setTimeout(() => {\r\n        this.setState({ delayedAfterReflow: true });\r\n      }, 0);\r\n    }\r\n\r\n    render() {\r\n      const { data, timeout, isTransitioning } = this.props;\r\n      const { delayedAfterReflow } = this.state;\r\n\r\n      const renderedData = options.smoothing ? smooth(data, options.smoothing) : data;\r\n\r\n      return (\r\n        delayedAfterReflow && (\r\n          <WrappedComponent\r\n            data={renderedData}\r\n            style={{ transition: `transform ${timeout}ms linear` }}\r\n            isTransitioning={isTransitioning}\r\n          />\r\n        )\r\n      );\r\n    }\r\n  };\r\n}\r\n","export function modulo(number1: number, number2: number): number {\r\n  return ((number1 % number2) + number2) % number2;\r\n}\r\n\r\nexport function avg(numbers: Uint8Array): number;\r\nexport function avg(numbers: number[]): number;\r\nexport function avg(numbers: Uint8Array | number[]) {\r\n  let sum = 0;\r\n  for (let i = 0; i < numbers.length; i++) {\r\n    sum += numbers[i];\r\n  }\r\n  return sum / numbers.length;\r\n}\r\n\r\nexport function smooth(data: Uint8Array, range: number): Uint8Array {\r\n  return data.map((dataElement, i) => {\r\n    const dataToAverage = [];\r\n\r\n    let rangeIndex = i - range;\r\n\r\n    while (rangeIndex < i + range) {\r\n      const dataAtRangeIndex = data[rangeIndex] || 128;\r\n      dataToAverage.push(dataAtRangeIndex);\r\n      rangeIndex += 1;\r\n    }\r\n\r\n    return avg(dataToAverage);\r\n  });\r\n}\r\n","const colorTriples = [\r\n  ['#0E9AA7', '#F6CD61', '#FE8A71'],\r\n  ['#EE4540', '#801336', '#2D142C'],\r\n  ['#8FB9A8', '#FDFBD4', '#FCD0BA'],\r\n  ['#AC6D83', '#685D79', '#465C7A'],\r\n  ['#F36E38', '#EF4648', '#582841'],\r\n  ['#F1F1F1', '#9BD7D1', '#305D7A'],\r\n  ['#DEA5B6', '#F3CD8C', '#F2E9C2'],\r\n  ['#E27B47', '#EFCA58', '#46B29E'],\r\n  ['#2E7345', '#2E9975', '#2DB3B3'],\r\n  ['#52A3CC', '#7EA1E5', '#AAAAF2'],\r\n  ['#CC5285', '#CC5285', '#F2BCAA'],\r\n  ['#D8E0BB', '#B6CEC7', '#86A3C3']\r\n];\r\n\r\nconst colorTriplesWithIds = colorTriples.map((colorTriple, i) => ({\r\n  id: i,\r\n  colorTriple\r\n}));\r\n\r\nfunction randomColorTriple() {\r\n  return colorTriples[Math.floor(Math.random() * colorTriples.length)];\r\n}\r\n\r\nexport function getRandomColors(numColors: number, areUnique?: boolean): string[] {\r\n  const colors: string[] = [];\r\n\r\n  while (colors.length < numColors) {\r\n    const randomTriple = randomColorTriple();\r\n    const randomColor = randomTriple[Math.floor(Math.random() * randomTriple.length)];\r\n\r\n    if (areUnique && colors.includes(randomColor)) {\r\n      break;\r\n    }\r\n\r\n    colors.push(randomColor);\r\n  }\r\n  return colors;\r\n}\r\n\r\nexport function getRandomColor() {\r\n  return getRandomColors(1)[0];\r\n}\r\n\r\nexport function getRandomColorTriple() {\r\n  const colorCopy = [...randomColorTriple()];\r\n  if (Math.random() <= 0.5) {\r\n    return colorCopy.reverse();\r\n  } else {\r\n    return colorCopy;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport * as Visualization from '../Visualization';\r\nimport { getRandomColorTriple } from '../../../../utils/colors';\r\nimport './Waveform.scss';\r\n\r\nconst LINE_WIDTH = 10;\r\nconst LINE_X_OFFSET = 0;\r\nconst LINE_Y_OFFSET = 5;\r\n\r\nclass Waveform extends React.Component<Visualization.WrappedProps> {\r\n  private ref: React.RefObject<HTMLCanvasElement> = React.createRef();\r\n  private canvas?: HTMLCanvasElement;\r\n  private ctx?: CanvasRenderingContext2D;\r\n  private intervalId?: number;\r\n  private resizeTimeoutId?: number;\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.onResize);\r\n\r\n    this.canvas = this.ref.current!;\r\n    this.canvas.width = window.innerWidth;\r\n    this.canvas.height = window.innerHeight;\r\n\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    this.ctx.fillStyle = '#050505';\r\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n    this.intervalId = window.setInterval(this.fadeOut, 7);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.paint();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.clearInterval(this.intervalId);\r\n    window.removeEventListener('resize', this.onResize);\r\n  }\r\n\r\n  onResize = () => {\r\n    window.clearTimeout(this.resizeTimeoutId);\r\n    const canvas = this.canvas!;\r\n\r\n    this.resizeTimeoutId = window.setTimeout(() => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n    }, 500);\r\n  };\r\n\r\n  paint = () => {\r\n    const { data } = this.props;\r\n    const canvas = this.canvas!;\r\n    const ctx = this.ctx!;\r\n\r\n    const colors = getRandomColorTriple();\r\n\r\n    ctx.lineWidth = LINE_WIDTH;\r\n    ctx.lineCap = 'round';\r\n\r\n    const sliceWidth = canvas.width / data.length;\r\n\r\n    colors.forEach((color, i) => {\r\n      ctx.strokeStyle = color;\r\n      ctx.beginPath();\r\n\r\n      let x = i * LINE_X_OFFSET;\r\n      ctx.moveTo(x, canvas.height / 2);\r\n\r\n      data.forEach(dataElement => {\r\n        const y = (dataElement / 255.0) * canvas.height - (LINE_Y_OFFSET * colors.length) / 2;\r\n        ctx.lineTo(x, y + i * ((LINE_Y_OFFSET * colors.length) / 2));\r\n        x += sliceWidth;\r\n      });\r\n\r\n      ctx.lineTo(x, canvas.height / 2);\r\n      ctx.stroke();\r\n    });\r\n  };\r\n\r\n  fadeOut = () => {\r\n    const ctx = this.ctx!;\r\n    const canvas = this.canvas!;\r\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  };\r\n\r\n  render() {\r\n    const { style } = this.props;\r\n\r\n    return (\r\n      <div className=\"visualization waveform\" style={style}>\r\n        <div className=\"backdrop\" />\r\n        <canvas ref={this.ref} />;\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Visualization.wrap(Waveform, { smoothing: 100 });\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport * as Visualization from '../Visualization';\r\nimport './Drummer.scss';\r\nimport { getRandomColor } from '../../../../utils/colors';\r\n\r\nconst NUM_DRUMMERS = 13;\r\nconst MIN_HIT_COUNT = 40;\r\nconst MIN_FREQUENCY_VARIATION = 10;\r\nconst COLOR_CHANGE_THRESHOLD = 0.3;\r\nconst MIN_DELAY_BETWEEN_COLOR_CHANGE = 200;\r\n\r\nclass Drummer extends React.Component<Visualization.WrappedProps> {\r\n  state = { size: 0 };\r\n\r\n  color = getRandomColor();\r\n  lastColorChangeTimestamp = Date.now();\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.onResize);\r\n    this.onResize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.onResize);\r\n  }\r\n\r\n  onResize = () => {\r\n    const { innerWidth, innerHeight } = window;\r\n    const maxSideLength = Math.max(innerWidth, innerHeight);\r\n    this.setState({ size: maxSideLength * 2 });\r\n  };\r\n\r\n  render() {\r\n    const { data, isTransitioning } = this.props;\r\n    const { size } = this.state;\r\n\r\n    const freqMap: { [key: string]: number } = {};\r\n    const numPerSlice = 256 / NUM_DRUMMERS;\r\n\r\n    let freqKey = 0;\r\n    while (freqKey < NUM_DRUMMERS) {\r\n      freqMap[freqKey] = 0;\r\n      freqKey += 1;\r\n    }\r\n\r\n    data.forEach(freqData => {\r\n      let freqKey = 0;\r\n      while (freqKey < NUM_DRUMMERS) {\r\n        const ceiling = numPerSlice * (freqKey + 1);\r\n        if (Math.abs(freqData - 128) > MIN_FREQUENCY_VARIATION && freqData <= ceiling) {\r\n          freqMap[freqKey] += 1;\r\n          break;\r\n        }\r\n        freqKey += 1;\r\n      }\r\n    });\r\n\r\n    // determine if we should change the background color by\r\n    // comparing total drummer hits against a minimum threshold\r\n    const totalHits = Object.values(freqMap).reduce((acc, hitCount) => {\r\n      return hitCount > MIN_HIT_COUNT ? acc + 1 : acc;\r\n    }, 0);\r\n\r\n    // space out background color changes so they're not jarring\r\n    const now = Date.now();\r\n    if (\r\n      !isTransitioning &&\r\n      totalHits / NUM_DRUMMERS > COLOR_CHANGE_THRESHOLD &&\r\n      now - this.lastColorChangeTimestamp > MIN_DELAY_BETWEEN_COLOR_CHANGE\r\n    ) {\r\n      let newColor;\r\n      do {\r\n        newColor = getRandomColor();\r\n      } while (this.color === newColor);\r\n\r\n      this.color = newColor;\r\n      this.lastColorChangeTimestamp = now;\r\n    }\r\n\r\n    const drummers = Object.entries(freqMap).map(([freqKey, hitCount], i) => {\r\n      const drummerContainerSize = ((1 + +freqKey) * size) / NUM_DRUMMERS;\r\n\r\n      return (\r\n        <div\r\n          key={freqKey}\r\n          className=\"drummer-container\"\r\n          style={{\r\n            width: `${drummerContainerSize}px`,\r\n            height: `${drummerContainerSize}px`,\r\n            opacity: ((NUM_DRUMMERS - i) / NUM_DRUMMERS) * 0.5 * 0.25\r\n          }}\r\n        >\r\n          <div className={classNames('beat', { hit: hitCount > MIN_HIT_COUNT })} />\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"visualization drummer\" style={this.props.style}>\r\n        {drummers}\r\n        <div className=\"overlay\" style={{ backgroundColor: this.color }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Visualization.wrap(Drummer, { smoothing: 200 });\r\n","import { Color } from 'three';\r\n\r\nexport const pointColor = new Color('#666');\r\n","import {\r\n  Scene,\r\n  SphereGeometry,\r\n  Vector3,\r\n  Quaternion,\r\n  Euler,\r\n  BufferGeometry\r\n} from 'three';\r\nimport { createPolygon, createPoints } from './entities/polys';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\n\r\nconst DELAY_BEFORE_ROTATING_X = 1500;\r\nconst CAMERA_MAX_DISTANCE = 200;\r\nconst CAMERA_MIN_DISTANCE = 0;\r\nconst CAMERA_DRIFT = 0.05;\r\n\r\nexport default function sceneManager(rendererContainer: HTMLDivElement) {\r\n  let currentAnimationFrameId: number;\r\n  let sceneInitializedTimestamp = Date.now();\r\n  let t = 0;\r\n  let isMouseDragging = false;\r\n\r\n  const mousePosition = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n\r\n  const polygon = createPolygon();\r\n  const halpernSphere = createPoints(polygon);\r\n\r\n  const camera = createCamera();\r\n  camera.position.set(0, CAMERA_MAX_DISTANCE, 0);\r\n  camera.lookAt(new Vector3(0, 0, 0));\r\n\r\n  const renderer = createRenderer();\r\n\r\n  rendererContainer.appendChild(renderer.domElement);\r\n\r\n  const scene = new Scene();\r\n  scene.add(halpernSphere);\r\n\r\n  const removeRotationControls = addRotationControls();\r\n  const removeZoomControls = addZoomControls();\r\n\r\n  window.addEventListener('resize', onResize);\r\n\r\n  function animate() {\r\n    halpernSphere.rotateY(-0.002);\r\n\r\n    if (Date.now() - sceneInitializedTimestamp > DELAY_BEFORE_ROTATING_X) {\r\n      halpernSphere.rotateX(0.002);\r\n    }\r\n\r\n    t += 0.005;\r\n\r\n    if (t >= Math.PI * 2) {\r\n      t = 0;\r\n    }\r\n\r\n    camera.translateY(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateX(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateZ(Math.cos(t) * CAMERA_DRIFT * 5);\r\n\r\n    renderer.render(scene, camera);\r\n    currentAnimationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function stop() {\r\n    window.cancelAnimationFrame(currentAnimationFrameId);\r\n    window.removeEventListener('resize', onResize);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    removeRotationControls();\r\n    removeZoomControls();\r\n\r\n    scene.remove(halpernSphere);\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function getSphereGeometry() {\r\n    return polygon.geometry as SphereGeometry;\r\n  }\r\n\r\n  function getHalpernGeometry() {\r\n    return halpernSphere.geometry as BufferGeometry;\r\n  }\r\n\r\n  function addRotationControls() {\r\n    renderer.domElement.addEventListener('mousedown', onMouseDown);\r\n    renderer.domElement.addEventListener('mouseup', onMouseUp);\r\n    renderer.domElement.addEventListener('mousemove', onMouseMove);\r\n\r\n    function onMouseDown() {\r\n      isMouseDragging = true;\r\n    }\r\n\r\n    function onMouseUp() {\r\n      isMouseDragging = false;\r\n    }\r\n\r\n    function onMouseMove(event: MouseEvent) {\r\n      const moveDelta = {\r\n        x: event.offsetX - mousePosition.x,\r\n        y: event.offsetY - mousePosition.y\r\n      };\r\n\r\n      if (isMouseDragging) {\r\n        const rotationDeltaQuaternion = new Quaternion().setFromEuler(\r\n          new Euler(\r\n            toRadians(moveDelta.y * 0.25),\r\n            toRadians(moveDelta.x * 0.25),\r\n            0,\r\n            'XYZ'\r\n          )\r\n        );\r\n\r\n        halpernSphere.quaternion.multiplyQuaternions(\r\n          rotationDeltaQuaternion,\r\n          halpernSphere.quaternion\r\n        );\r\n      }\r\n\r\n      mousePosition.x = event.offsetX;\r\n      mousePosition.y = event.offsetY;\r\n    }\r\n\r\n    return function removeRotationControls() {\r\n      renderer.domElement.removeEventListener('mousedown', onMouseDown);\r\n      renderer.domElement.removeEventListener('mouseup', onMouseUp);\r\n      renderer.domElement.removeEventListener('mousemove', onMouseMove);\r\n    };\r\n  }\r\n\r\n  function addZoomControls() {\r\n    renderer.domElement.addEventListener('wheel', onMouseWheel);\r\n\r\n    function onMouseWheel(event: WheelEvent) {\r\n      if (event.deltaY > 0) {\r\n        camera.position.y = Math.min(\r\n          camera.position.y + 2,\r\n          CAMERA_MAX_DISTANCE\r\n        );\r\n      } else {\r\n        camera.position.y = Math.max(\r\n          camera.position.y - 2,\r\n          CAMERA_MIN_DISTANCE\r\n        );\r\n      }\r\n    }\r\n\r\n    return function removeZoomControls() {\r\n      renderer.domElement.removeEventListener('wheel', onMouseWheel);\r\n    };\r\n  }\r\n\r\n  return {\r\n    animate,\r\n    stop,\r\n    getSphereGeometry,\r\n    getHalpernGeometry\r\n  };\r\n}\r\n\r\nfunction toRadians(angle: number) {\r\n  return (angle * Math.PI) / 180;\r\n}\r\n","import {\r\n  Mesh,\r\n  Points,\r\n  MeshLambertMaterial,\r\n  PointsMaterial,\r\n  SphereGeometry,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  TextureLoader\r\n} from 'three';\r\nimport { pointColor } from './colors';\r\n\r\nexport function createPolygon(): Mesh {\r\n  const geometry = new SphereGeometry(40, 100, 100);\r\n  geometry.computeVertexNormals();\r\n\r\n  const material = new MeshLambertMaterial({\r\n    wireframe: true\r\n  });\r\n\r\n  return new Mesh(geometry, material);\r\n}\r\n\r\nexport function createPoints(polygon: Mesh): Points {\r\n  const sphereGeometry = polygon.geometry as SphereGeometry;\r\n\r\n  const pointGeometry = new SphereGeometry(\r\n    sphereGeometry.parameters.radius,\r\n    sphereGeometry.parameters.widthSegments,\r\n    sphereGeometry.parameters.heightSegments\r\n  );\r\n\r\n  const { vertices } = pointGeometry;\r\n  const positions = new Float32Array(vertices.length * 3);\r\n\r\n  vertices.forEach((vertex, i) => {\r\n    vertex.toArray(positions, i * 3);\r\n  });\r\n\r\n  const geometry = new BufferGeometry();\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n\r\n  const material = new PointsMaterial({\r\n    size: 0.2,\r\n    map: new TextureLoader().load('assets/images/point.png'),\r\n    alphaTest: 0.5,\r\n    color: pointColor,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, material);\r\n}\r\n","import { PerspectiveCamera } from 'three';\r\n\r\nexport function createCamera() {\r\n  return new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n\r\n  const renderer = new WebGLRenderer({ alpha: true });\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setPixelRatio(devicePixelRatio);\r\n  renderer.setClearColor(0x000000, 0);\r\n\r\n  return renderer;\r\n}\r\n","import React from 'react';\r\nimport { Vector3, SphereGeometry, BufferGeometry } from 'three';\r\nimport * as Visualization from '../Visualization';\r\nimport sceneManager from './three/sceneManager';\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport './Halpern.scss';\r\n\r\nconst VERTEX_SEGMENT_WEIGHT_COEFFICIENT = 0.01;\r\nconst BASELINE_VERTEX_SCALAR_FACTOR = 1;\r\n\r\nclass Halpern extends React.Component<Visualization.WrappedProps> {\r\n  rendererContainer?: HTMLDivElement;\r\n  currentAnimationFrameId?: number;\r\n  originalVertices?: Vector3[];\r\n  getSphereGeometry?: () => SphereGeometry;\r\n  getHalpernGeometry?: () => BufferGeometry;\r\n  onUnmount?: () => void;\r\n\r\n  private rendererRef: React.RefObject<HTMLDivElement> = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.rendererContainer = this.rendererRef.current!;\r\n    const {\r\n      animate,\r\n      stop,\r\n      getSphereGeometry,\r\n      getHalpernGeometry\r\n    } = sceneManager(this.rendererContainer);\r\n    this.onUnmount = stop;\r\n    this.getSphereGeometry = getSphereGeometry;\r\n    this.getHalpernGeometry = getHalpernGeometry;\r\n    this.originalVertices = cloneDeep(getSphereGeometry().vertices);\r\n    animate();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updateVertices(this.props.data);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.onUnmount && this.onUnmount();\r\n  }\r\n\r\n  updateVertices = (data: Uint8Array) => {\r\n    if (\r\n      this.getSphereGeometry == null ||\r\n      this.getHalpernGeometry == null ||\r\n      this.originalVertices == null\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const geometry = this.getSphereGeometry();\r\n    const dataSegments = Math.floor(\r\n      data.length / geometry.parameters.widthSegments\r\n    );\r\n\r\n    // split vertices up into segments belonging to slices of x cross sections,\r\n    // first and last vertices are at top and bottom of sphere\r\n    const vertexSegmentLength =\r\n      (geometry.vertices.length - 2) / (geometry.parameters.widthSegments - 1);\r\n\r\n    geometry.vertices.forEach((vertex, i) => {\r\n      // find which segment the current index belongs to\r\n      const vertexSegmentIndex = Math.ceil(i / vertexSegmentLength);\r\n\r\n      const dataIndex = vertexSegmentIndex * dataSegments;\r\n      const vertexSegmentWeight = Math.min(\r\n        vertexSegmentIndex,\r\n        vertexSegmentLength - vertexSegmentIndex\r\n      );\r\n\r\n      // multiplyScalar mutates so we must restore starting position\r\n      vertex.copy(this.originalVertices![i]);\r\n      const dataVariation = Math.abs(data[dataIndex] - 128) / 255;\r\n\r\n      const multiplyScalarValue =\r\n        dataVariation *\r\n          vertexSegmentWeight *\r\n          VERTEX_SEGMENT_WEIGHT_COEFFICIENT +\r\n        BASELINE_VERTEX_SCALAR_FACTOR;\r\n\r\n      vertex.multiplyScalar(multiplyScalarValue);\r\n    });\r\n\r\n    const pointGeometry = this.getHalpernGeometry();\r\n    pointGeometry.fromGeometry(geometry);\r\n\r\n    // inform three.js that vertices should be repositioned,\r\n    // final render is handled in sceneManager animate loop\r\n    geometry.verticesNeedUpdate = true;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"visualization halpern\"\r\n        ref={this.rendererRef}\r\n        style={this.props.style}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Visualization.wrap(Halpern, { smoothing: 50 });\r\n","import Waveform from './Waveform/Waveform';\r\nimport Drummer from './Drummer/Drummer';\r\nimport Halpern from './Halpern/Halpern';\r\n\r\nexport default [Halpern, Waveform, Drummer];\r\n","import React from 'react';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport * as Visualization from './Visualizations/Visualization';\r\nimport Visualizations from './Visualizations/index';\r\nimport { modulo } from '../../utils';\r\n\r\nexport const TRANSITION_ANIMATION_LENGTH = 500;\r\n\r\ntype DynamicChildProps = Visualization.Props & { classNames: string };\r\n\r\nconst dynamicChildFactory = (classNames?: string) => (child: React.ReactElement<DynamicChildProps>) =>\r\n  React.cloneElement(child, { classNames });\r\n\r\ntype Props = {\r\n  data: Uint8Array;\r\n};\r\n\r\ntype State = {\r\n  prevIndex: number | null;\r\n  currentIndex: number;\r\n  isTransitioning: boolean;\r\n};\r\n\r\nexport default class VisualizationSelector extends React.Component<Props, State> {\r\n  state = {\r\n    prevIndex: null,\r\n    currentIndex: 0,\r\n    isTransitioning: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  onKeyDown = (event: KeyboardEvent) => {\r\n    switch (event.which) {\r\n      case 37:\r\n      case 38: {\r\n        this.goToPrevVisualization();\r\n        break;\r\n      }\r\n      case 39:\r\n      case 40: {\r\n        this.goToNextVisualization();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  goToPrevVisualization = () => {\r\n    if (!this.state.isTransitioning) {\r\n      this.setState(prevState => ({\r\n        prevIndex: prevState.currentIndex,\r\n        currentIndex: prevState.currentIndex - 1\r\n      }));\r\n    }\r\n  };\r\n\r\n  goToNextVisualization = () => {\r\n    if (!this.state.isTransitioning) {\r\n      this.setState(prevState => ({\r\n        prevIndex: prevState.currentIndex,\r\n        currentIndex: prevState.currentIndex + 1\r\n      }));\r\n    }\r\n  };\r\n\r\n  startTransition = () => this.setState({ isTransitioning: true });\r\n\r\n  endTransition = () => this.setState({ isTransitioning: false });\r\n\r\n  render() {\r\n    const { data } = this.props;\r\n    const { prevIndex, currentIndex, isTransitioning } = this.state;\r\n\r\n    const transitionClassName = prevIndex != null && prevIndex < currentIndex ? 'next' : 'prev';\r\n    const classNameRoot = transitionClassName ? `visualization-${transitionClassName}` : undefined;\r\n\r\n    const visualizationIndex = modulo(currentIndex, Visualizations.length);\r\n    const VisualizationComponent: React.ComponentType<Visualization.Props> = Visualizations[visualizationIndex];\r\n\r\n    return (\r\n      <TransitionGroup component={null} childFactory={dynamicChildFactory(classNameRoot)}>\r\n        <CSSTransition\r\n          key={visualizationIndex}\r\n          timeout={TRANSITION_ANIMATION_LENGTH}\r\n          classNames={classNameRoot || ''}\r\n          onExit={this.startTransition}\r\n          onExited={this.endTransition}\r\n          mountOnEnter\r\n          unmountOnExit\r\n        >\r\n          <VisualizationComponent data={data} timeout={TRANSITION_ANIMATION_LENGTH} isTransitioning={isTransitioning} />\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport VisualizationSelector from '../Visualizer/VisualizationSelector';\r\n\r\ntype Props = {\r\n  context: AudioContext;\r\n  source: MediaElementAudioSourceNode;\r\n};\r\n\r\ntype State = {\r\n  data: Uint8Array;\r\n};\r\n\r\nexport default class Analyser extends Component<Props, State> {\r\n  state = { data: new Uint8Array(0) };\r\n\r\n  analyser = this.props.context.createAnalyser();\r\n  dataArray = new Uint8Array(this.analyser.frequencyBinCount);\r\n  currentAnimationFrameId?: number;\r\n\r\n  componentDidMount() {\r\n    const { context, source } = this.props;\r\n\r\n    this.analyser.fftSize = 1024;\r\n    this.analyser.smoothingTimeConstant = 1;\r\n\r\n    source.connect(this.analyser);\r\n    this.analyser.connect(context.destination);\r\n    this.currentAnimationFrameId = window.requestAnimationFrame(this.tick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { source } = this.props;\r\n\r\n    this.currentAnimationFrameId != null && window.cancelAnimationFrame(this.currentAnimationFrameId);\r\n    this.analyser != null && this.analyser.disconnect();\r\n    source && source.disconnect();\r\n  }\r\n\r\n  tick = () => {\r\n    this.analyser.getByteTimeDomainData(this.dataArray);\r\n    this.setState({ data: this.dataArray });\r\n    this.currentAnimationFrameId = window.requestAnimationFrame(this.tick);\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    return <VisualizationSelector data={data} />;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport Loading from './components/Loading/Loading';\nimport Analyser from './components/Analyser/Analyser';\n\nconst AUDIO_SERVER_URL =\n  process.env.REACT_APP_AUDIO_SERVER_URL || 'http://localhost:3001';\n\ntype Props = {};\n\ntype State = {\n  wantsToPlay: boolean;\n  isPlaying: boolean;\n  context?: AudioContext;\n  source?: MediaElementAudioSourceNode;\n};\n\ntype AudioEventListeners = Array<{\n  event: string;\n  listener: () => void;\n}>;\n\nexport default class App extends Component<Props, State> {\n  state: State = {\n    wantsToPlay: false,\n    isPlaying: false,\n    context: undefined,\n    source: undefined\n  };\n\n  private audioRef: React.RefObject<HTMLAudioElement> = React.createRef();\n  private audioEventListeners: AudioEventListeners = [];\n  private lastMouseDownTimestamp?: number;\n\n  audioElement?: HTMLAudioElement;\n\n  componentDidMount() {\n    window.addEventListener('mousedown', this.onMouseDown);\n    window.addEventListener('mouseup', this.onMouseUp);\n  }\n\n  componentWillUnmount() {\n    this.removeAudioEventListeners();\n\n    window.removeEventListener('mousedown', this.onMouseDown);\n    window.removeEventListener('mouseup', this.onMouseUp);\n  }\n\n  initialize = () => {\n    const audioElement = this.audioRef.current!;\n    this.audioElement = audioElement;\n\n    const context = new (window.AudioContext ||\n      (window as any).webkitAudioContext)();\n    const source = context.createMediaElementSource(audioElement);\n\n    this.addAudioEventListeners([\n      { event: 'playing', listener: this.onPlay },\n      { event: 'pause', listener: this.onPause },\n      { event: 'error', listener: this.onError }\n    ]);\n\n    this.setState({ context, source });\n  };\n\n  onMouseDown = (event: MouseEvent) => {\n    if (event.which === 1) {\n      this.lastMouseDownTimestamp = Date.now();\n    }\n  };\n\n  onMouseUp = () => {\n    if (\n      this.lastMouseDownTimestamp &&\n      Date.now() - this.lastMouseDownTimestamp < 250\n    ) {\n      this.onClick();\n    }\n  };\n\n  onClick = () => {\n    if (this.audioElement == null) {\n      this.initialize();\n    }\n\n    if (this.audioElement!.paused) {\n      this.setState({ wantsToPlay: true });\n      this.audioElement!.play();\n    } else {\n      this.setState({ wantsToPlay: false });\n      this.audioElement!.pause();\n    }\n  };\n\n  onPlay = () => this.setState({ isPlaying: true });\n\n  onPause = () => this.setState({ isPlaying: false });\n\n  onError = console.error;\n\n  addAudioEventListeners = (eventListeners: AudioEventListeners) => {\n    for (const eventListener of eventListeners) {\n      this.audioEventListeners.push(eventListener);\n      this.audioElement!.addEventListener(\n        eventListener.event,\n        eventListener.listener\n      );\n    }\n  };\n\n  removeAudioEventListeners = () => {\n    for (const eventListener of this.audioEventListeners) {\n      this.audioElement!.removeEventListener(\n        eventListener.event,\n        eventListener.listener\n      );\n    }\n    this.audioEventListeners = [];\n  };\n\n  render() {\n    const { wantsToPlay, isPlaying, context, source } = this.state;\n\n    return (\n      <>\n        <audio\n          ref={this.audioRef}\n          id=\"audioElement\"\n          src={AUDIO_SERVER_URL}\n          preload={'auto'}\n          crossOrigin=\"anonymous\"\n        />\n        {source && context && (\n          <>\n            <Analyser context={context} source={source} />\n            {wantsToPlay && <Loading show={!isPlaying} />}\n          </>\n        )}\n        {!wantsToPlay && <div id=\"play\" />}\n      </>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport './reset.scss';\r\nimport './index.scss';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}