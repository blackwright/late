{"version":3,"sources":["serviceWorker.js","store/types.ts","store/reducer.ts","store/index.ts","components/Visualizer/Visualizations/VisualizationHOC.tsx","utils/index.ts","utils/colors.ts","components/Visualizer/Visualizations/Waveform/Waveform.tsx","components/Visualizer/Visualizations/Drummer/Drummer.tsx","components/Visualizer/Visualizations/Halpern/three/entities/colors.ts","components/Visualizer/Visualizations/Halpern/three/sceneManager.ts","components/Visualizer/Visualizations/Halpern/three/entities/polys.ts","components/Visualizer/Visualizations/Halpern/three/entities/camera.ts","components/Visualizer/Visualizations/Halpern/three/entities/renderer.ts","components/Visualizer/Visualizations/Halpern/Halpern.tsx","components/Visualizer/Visualizations/MobileDisabled.tsx","components/Visualizer/Visualizations/index.tsx","components/Visualizer/VisualizationSelector.tsx","store/actions.ts","components/Analyser/Analyser.tsx","components/Loading/Loading.tsx","components/Controls/Controls.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","ActionConstants","initialState","currentVisualizationIndex","prevVisualizationIndex","isTransitioning","store","createStore","state","arguments","length","undefined","type","GO_TO_NEXT_VISUALIZATION","Object","objectSpread","GO_TO_PREV_VISUALIZATION","BEGIN_VISUALIZATION_TRANSITION","END_VISUALIZATION_TRANSITION","__REDUX_DEVTOOLS_EXTENSION__","wrap","WrappedComponent","_class","_temp","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","delayedAfterReflow","inherits","createClass","key","value","_this2","setTimeout","setState","_this$props","props","data","timeout","_this$props$options","options","transitionStyle","transition","renderedData","smoothing","range","map","dataElement","i","dataToAverage","rangeIndex","dataAtRangeIndex","push","numbers","sum","avg","smooth","react_default","a","createElement","style","React","Component","defaultProps","Uint8Array","TRANSITION_ANIMATION_LENGTH","colorTriples","colorTriple","id","randomColorTriple","Math","floor","random","getRandomColor","numColors","areUnique","colors","randomTriple","randomColor","includes","getRandomColors","LINE_WIDTH","LINE_X_OFFSET","LINE_Y_OFFSET","VisualizationHOC","ref","createRef","canvas","ctx","intervalId","resizeTimeoutId","onResize","clearTimeout","width","innerWidth","height","innerHeight","paint","colorCopy","toConsumableArray","reverse","getRandomColorTriple","lineWidth","lineCap","sliceWidth","forEach","color","strokeStyle","beginPath","x","moveTo","y","lineTo","stroke","fadeOut","fillStyle","fillRect","addEventListener","current","getContext","setInterval","clearInterval","removeEventListener","className","size","lastColorChangeTimestamp","Date","now","_window","maxSideLength","max","freqMap","freqKey","freqData","ceiling","abs","totalHits","values","reduce","acc","hitCount","newColor","drummers","entries","_ref","_ref2","slicedToArray","drummerContainerSize","opacity","classNames","hit","backgroundColor","pointColor","Color","DELAY_BEFORE_ROTATING_X","CAMERA_MAX_DISTANCE","CAMERA_MIN_DISTANCE","CAMERA_DRIFT","sceneManager","rendererContainer","currentAnimationFrameId","sceneInitializedTimestamp","t","isMouseDragging","mousePosition","polygon","geometry","SphereGeometry","computeVertexNormals","material","MeshLambertMaterial","wireframe","Mesh","createPolygon","halpernSphere","sphereGeometry","vertices","parameters","radius","widthSegments","heightSegments","positions","Float32Array","vertex","toArray","BufferGeometry","addAttribute","BufferAttribute","PointsMaterial","TextureLoader","load","alphaTest","transparent","Points","createPoints","camera","PerspectiveCamera","position","set","lookAt","Vector3","renderer","WebGLRenderer","alpha","setPixelRatio","devicePixelRatio","setSize","setClearColor","createRenderer","appendChild","domElement","scene","Scene","add","removeRotationControls","onMouseDown","onMouseUp","onMouseMove","event","moveDelta","offsetX","offsetY","rotationDeltaQuaternion","Quaternion","setFromEuler","Euler","toRadians","quaternion","multiplyQuaternions","addRotationControls","removeZoomControls","onMouseWheel","deltaY","min","addZoomControls","aspect","updateProjectionMatrix","render","animate","rotateY","rotateX","PI","translateY","cos","translateX","translateZ","requestAnimationFrame","stop","cancelAnimationFrame","removeChild","dispose","remove","getSphereGeometry","getHalpernGeometry","angle","RIPPLE_SPEED","FOCUSED_DATA_INDEX","VERTEX_SEGMENT_WEIGHT_COEFFICIENT","BASELINE_VERTEX_SCALAR_FACTOR","originalVertices","onUnmount","focusedData","rendererRef","updateVertices","splice","fill","dataSegments","vertexSegmentLength","vertexSegmentIndex","ceil","dataIndex","vertexSegmentWeight","copy","multiplyScalarValue","multiplyScalar","pointGeometry","fromGeometry","attributes","needsUpdate","_sceneManager","cloneDeep","src","process","isMobileDevice","test","navigator","userAgent","visualizations","component","Waveform","Drummer","Halpern","mobileDisabled","MobileDisabled","MobileDisabledComponent","connect","currentIndex","prevIndex","dispatch","startTransition","endTransition","pure","number2","transitionClassName","classNameRoot","index","intendedVisualization","selectedVisualization","react_transition_group","childFactory","child","cloneElement","onExit","onExited","mountOnEnter","unmountOnExit","Analyser","analyser","context","createAnalyser","dataArray","frequencyBinCount","tick","getByteTimeDomainData","source","fftSize","smoothingTimeConstant","destination","disconnect","Visualizer_VisualizationSelector","Loading","show","Controls","showOverlay","isArrowHovered","lastTouchStartTimestamp","hideOverlayTimeoutId","nativeEvent","which","onTogglePlay","onTouchStart","preventDefault","onTouchEnd","onPrev","stopPropagation","goToPrevVisualization","onNext","goToNextVisualization","doNothing","onKeyDown","onToggleArrowHover","isHovered","document","wantsToPlay","isPlaying","Fragment","components_Loading_Loading","onClick","onMouseEnter","onMouseLeave","viewBox","stroke-width","stroke-linecap","stroke-linejoin","points","App","audioRef","audioEventListeners","audioElement","initialize","AudioContext","webkitAudioContext","createMediaElementSource","addAudioEventListeners","listener","onAudioPlay","onAudioPause","onAudioError","paused","play","pause","console","error","eventListeners","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","eventListener","err","return","removeAudioEventListeners","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_this$state","preload","crossOrigin","Analyser_Analyser","components_Controls_Controls","ReactDOM","es","App_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7fa20906.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export type StoreState = {\r\n  currentVisualizationIndex: number;\r\n  prevVisualizationIndex: number;\r\n  isTransitioning: boolean;\r\n};\r\n\r\nexport enum ActionConstants {\r\n  BEGIN_VISUALIZATION_TRANSITION = 'BEGIN_VISUALIZATION_TRANSITION',\r\n  END_VISUALIZATION_TRANSITION = 'END_VISUALIZATION_TRANSITION',\r\n  GO_TO_PREV_VISUALIZATION = 'GO_TO_PREV_VISUALIZATION',\r\n  GO_TO_NEXT_VISUALIZATION = 'GO_TO_NEXT_VISUALIZATION'\r\n}\r\n\r\ninterface BeginVisualizationTransitionAction {\r\n  type: typeof ActionConstants.BEGIN_VISUALIZATION_TRANSITION;\r\n}\r\n\r\ninterface EndVisualizationTransitionAction {\r\n  type: typeof ActionConstants.END_VISUALIZATION_TRANSITION;\r\n}\r\n\r\ninterface GoToNextVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_NEXT_VISUALIZATION;\r\n}\r\n\r\ninterface GoToPrevVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_PREV_VISUALIZATION;\r\n}\r\n\r\nexport type ActionUnionType =\r\n  | BeginVisualizationTransitionAction\r\n  | EndVisualizationTransitionAction\r\n  | GoToNextVisualizationAction\r\n  | GoToPrevVisualizationAction;\r\n","import { StoreState, ActionConstants, ActionUnionType } from './types';\r\n\r\nconst initialState: StoreState = {\r\n  currentVisualizationIndex: 0,\r\n  prevVisualizationIndex: 0,\r\n  isTransitioning: false\r\n};\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: ActionUnionType\r\n): StoreState {\r\n  switch (action.type) {\r\n    case ActionConstants.GO_TO_NEXT_VISUALIZATION:\r\n      if (state.isTransitioning) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex + 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.GO_TO_PREV_VISUALIZATION:\r\n      if (state.isTransitioning) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex - 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.BEGIN_VISUALIZATION_TRANSITION:\r\n      return {\r\n        ...state,\r\n        isTransitioning: true\r\n      };\r\n\r\n    case ActionConstants.END_VISUALIZATION_TRANSITION:\r\n      return {\r\n        ...state,\r\n        isTransitioning: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { TRANSITION_ANIMATION_LENGTH } from '../VisualizationSelector';\r\nimport './Visualization.scss';\r\nimport { Options } from './index';\r\nimport { smooth } from '../../../utils';\r\n\r\nexport type Props = {\r\n  // array of frequency data with values 0-255\r\n  data: Uint8Array;\r\n  // length of CSS transitions\r\n  timeout: number;\r\n  isTransitioning: boolean;\r\n  options?: Options;\r\n};\r\n\r\nexport type WrappedProps = {\r\n  data: Uint8Array;\r\n  style: { transition: string };\r\n  isTransitioning: boolean;\r\n};\r\n\r\n// all visualization components should be wrapped with this HOC\r\nexport function wrap(\r\n  WrappedComponent: React.ComponentType<WrappedProps>\r\n): React.ComponentType<Props> {\r\n  return class extends React.Component<Props> {\r\n    // bypass initial render because components that trigger\r\n    // reflow in componentDidMount interrupt CSS transitions\r\n    state = { delayedAfterReflow: false };\r\n\r\n    static defaultProps: Props = {\r\n      data: new Uint8Array(),\r\n      timeout: TRANSITION_ANIMATION_LENGTH,\r\n      isTransitioning: false,\r\n      options: {}\r\n    };\r\n\r\n    componentDidMount() {\r\n      window.setTimeout(() => {\r\n        this.setState({ delayedAfterReflow: true });\r\n      }, 0);\r\n    }\r\n\r\n    render() {\r\n      const { delayedAfterReflow } = this.state;\r\n\r\n      if (!delayedAfterReflow) {\r\n        return null;\r\n      }\r\n\r\n      const { data, timeout, isTransitioning, options = {} } = this.props;\r\n      const transitionStyle = { transition: `transform ${timeout}ms linear` };\r\n\r\n      const renderedData = options.smoothing\r\n        ? smooth(data, options.smoothing)\r\n        : data;\r\n\r\n      return (\r\n        <WrappedComponent\r\n          data={renderedData}\r\n          style={transitionStyle}\r\n          isTransitioning={isTransitioning}\r\n        />\r\n      );\r\n    }\r\n  };\r\n}\r\n","export function modulo(number1: number, number2: number): number {\r\n  return ((number1 % number2) + number2) % number2;\r\n}\r\n\r\nexport function avg(numbers: Uint8Array): number;\r\nexport function avg(numbers: number[]): number;\r\nexport function avg(numbers: Uint8Array | number[]) {\r\n  let sum = 0;\r\n  for (let i = 0; i < numbers.length; i++) {\r\n    sum += numbers[i];\r\n  }\r\n  return sum / numbers.length;\r\n}\r\n\r\nexport function smooth(data: Uint8Array, range: number): Uint8Array {\r\n  return data.map((dataElement, i) => {\r\n    const dataToAverage = [];\r\n\r\n    let rangeIndex = i - range;\r\n\r\n    while (rangeIndex < i + range) {\r\n      const dataAtRangeIndex = data[rangeIndex] || 128;\r\n      dataToAverage.push(dataAtRangeIndex);\r\n      rangeIndex += 1;\r\n    }\r\n\r\n    return avg(dataToAverage);\r\n  });\r\n}\r\n\r\nexport function isMobileDevice(): boolean {\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n    navigator.userAgent\r\n  );\r\n}\r\n","const colorTriples = [\r\n  ['#0E9AA7', '#F6CD61', '#FE8A71'],\r\n  ['#EE4540', '#801336', '#2D142C'],\r\n  ['#8FB9A8', '#FDFBD4', '#FCD0BA'],\r\n  ['#AC6D83', '#685D79', '#465C7A'],\r\n  ['#F36E38', '#EF4648', '#582841'],\r\n  ['#F1F1F1', '#9BD7D1', '#305D7A'],\r\n  ['#DEA5B6', '#F3CD8C', '#F2E9C2'],\r\n  ['#E27B47', '#EFCA58', '#46B29E'],\r\n  ['#2E7345', '#2E9975', '#2DB3B3'],\r\n  ['#52A3CC', '#7EA1E5', '#AAAAF2'],\r\n  ['#CC5285', '#CC5285', '#F2BCAA'],\r\n  ['#D8E0BB', '#B6CEC7', '#86A3C3']\r\n];\r\n\r\nconst colorTriplesWithIds = colorTriples.map((colorTriple, i) => ({\r\n  id: i,\r\n  colorTriple\r\n}));\r\n\r\nfunction randomColorTriple() {\r\n  return colorTriples[Math.floor(Math.random() * colorTriples.length)];\r\n}\r\n\r\nexport function getRandomColors(numColors: number, areUnique?: boolean): string[] {\r\n  const colors: string[] = [];\r\n\r\n  while (colors.length < numColors) {\r\n    const randomTriple = randomColorTriple();\r\n    const randomColor = randomTriple[Math.floor(Math.random() * randomTriple.length)];\r\n\r\n    if (areUnique && colors.includes(randomColor)) {\r\n      break;\r\n    }\r\n\r\n    colors.push(randomColor);\r\n  }\r\n  return colors;\r\n}\r\n\r\nexport function getRandomColor() {\r\n  return getRandomColors(1)[0];\r\n}\r\n\r\nexport function getRandomColorTriple() {\r\n  const colorCopy = [...randomColorTriple()];\r\n  if (Math.random() <= 0.5) {\r\n    return colorCopy.reverse();\r\n  } else {\r\n    return colorCopy;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { getRandomColorTriple } from '../../../../utils/colors';\r\nimport './Waveform.scss';\r\n\r\nconst LINE_WIDTH = 10;\r\nconst LINE_X_OFFSET = 0;\r\nconst LINE_Y_OFFSET = 5;\r\n\r\nclass Waveform extends React.Component<VisualizationHOC.WrappedProps> {\r\n  private ref: React.RefObject<HTMLCanvasElement> = React.createRef();\r\n  private canvas?: HTMLCanvasElement;\r\n  private ctx?: CanvasRenderingContext2D;\r\n  private intervalId?: number;\r\n  private resizeTimeoutId?: number;\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.onResize);\r\n\r\n    this.canvas = this.ref.current!;\r\n    this.canvas.width = window.innerWidth;\r\n    this.canvas.height = window.innerHeight;\r\n\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    this.ctx.fillStyle = '#050505';\r\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n    this.intervalId = window.setInterval(this.fadeOut, 7);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.paint();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.clearInterval(this.intervalId);\r\n    window.removeEventListener('resize', this.onResize);\r\n  }\r\n\r\n  onResize = () => {\r\n    window.clearTimeout(this.resizeTimeoutId);\r\n    const canvas = this.canvas!;\r\n\r\n    this.resizeTimeoutId = window.setTimeout(() => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n    }, 500);\r\n  };\r\n\r\n  paint = () => {\r\n    const { data } = this.props;\r\n    const canvas = this.canvas!;\r\n    const ctx = this.ctx!;\r\n\r\n    const colors = getRandomColorTriple();\r\n\r\n    ctx.lineWidth = LINE_WIDTH;\r\n    ctx.lineCap = 'round';\r\n\r\n    const sliceWidth = canvas.width / data.length;\r\n\r\n    colors.forEach((color, i) => {\r\n      ctx.strokeStyle = color;\r\n      ctx.beginPath();\r\n\r\n      let x = i * LINE_X_OFFSET;\r\n      ctx.moveTo(x, canvas.height / 2);\r\n\r\n      data.forEach(dataElement => {\r\n        const y =\r\n          (dataElement / 255.0) * canvas.height -\r\n          (LINE_Y_OFFSET * colors.length) / 2;\r\n        ctx.lineTo(x, y + i * ((LINE_Y_OFFSET * colors.length) / 2));\r\n        x += sliceWidth;\r\n      });\r\n\r\n      ctx.lineTo(x, canvas.height / 2);\r\n      ctx.stroke();\r\n    });\r\n  };\r\n\r\n  fadeOut = () => {\r\n    const ctx = this.ctx!;\r\n    const canvas = this.canvas!;\r\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  };\r\n\r\n  render() {\r\n    const { style } = this.props;\r\n\r\n    return (\r\n      <div className=\"visualization waveform\" style={style}>\r\n        <div className=\"backdrop\" />\r\n        <canvas ref={this.ref} />;\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VisualizationHOC.wrap(Waveform);\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport './Drummer.scss';\r\nimport { getRandomColor } from '../../../../utils/colors';\r\n\r\nconst NUM_DRUMMERS = 13;\r\nconst MIN_HIT_COUNT = 40;\r\nconst MIN_FREQUENCY_VARIATION = 10;\r\nconst COLOR_CHANGE_THRESHOLD = 0.3;\r\nconst MIN_DELAY_BETWEEN_COLOR_CHANGE = 200;\r\n\r\nclass Drummer extends React.Component<VisualizationHOC.WrappedProps> {\r\n  state = { size: 0 };\r\n\r\n  color = getRandomColor();\r\n  lastColorChangeTimestamp = Date.now();\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.onResize);\r\n    this.onResize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.onResize);\r\n  }\r\n\r\n  onResize = () => {\r\n    const { innerWidth, innerHeight } = window;\r\n    const maxSideLength = Math.max(innerWidth, innerHeight);\r\n    this.setState({ size: maxSideLength * 2 });\r\n  };\r\n\r\n  render() {\r\n    const { data, isTransitioning } = this.props;\r\n    const { size } = this.state;\r\n\r\n    const freqMap: { [key: string]: number } = {};\r\n    const numPerSlice = 256 / NUM_DRUMMERS;\r\n\r\n    let freqKey = 0;\r\n    while (freqKey < NUM_DRUMMERS) {\r\n      freqMap[freqKey] = 0;\r\n      freqKey += 1;\r\n    }\r\n\r\n    data.forEach(freqData => {\r\n      let freqKey = 0;\r\n      while (freqKey < NUM_DRUMMERS) {\r\n        const ceiling = numPerSlice * (freqKey + 1);\r\n        if (\r\n          Math.abs(freqData - 128) > MIN_FREQUENCY_VARIATION &&\r\n          freqData <= ceiling\r\n        ) {\r\n          freqMap[freqKey] += 1;\r\n          break;\r\n        }\r\n        freqKey += 1;\r\n      }\r\n    });\r\n\r\n    // determine if we should change the background color by\r\n    // comparing total drummer hits against a minimum threshold\r\n    const totalHits = Object.values(freqMap).reduce((acc, hitCount) => {\r\n      return hitCount > MIN_HIT_COUNT ? acc + 1 : acc;\r\n    }, 0);\r\n\r\n    // space out background color changes so they're not jarring\r\n    const now = Date.now();\r\n    if (\r\n      !isTransitioning &&\r\n      totalHits / NUM_DRUMMERS > COLOR_CHANGE_THRESHOLD &&\r\n      now - this.lastColorChangeTimestamp > MIN_DELAY_BETWEEN_COLOR_CHANGE\r\n    ) {\r\n      let newColor;\r\n      do {\r\n        newColor = getRandomColor();\r\n      } while (this.color === newColor);\r\n\r\n      this.color = newColor;\r\n      this.lastColorChangeTimestamp = now;\r\n    }\r\n\r\n    const drummers = Object.entries(freqMap).map(([freqKey, hitCount], i) => {\r\n      const drummerContainerSize = ((1 + +freqKey) * size) / NUM_DRUMMERS;\r\n\r\n      return (\r\n        <div\r\n          key={freqKey}\r\n          className=\"drummer-container\"\r\n          style={{\r\n            width: `${drummerContainerSize}px`,\r\n            height: `${drummerContainerSize}px`,\r\n            opacity: ((NUM_DRUMMERS - i) / NUM_DRUMMERS) * 0.5 * 0.25\r\n          }}\r\n        >\r\n          <div\r\n            className={classNames('beat', { hit: hitCount > MIN_HIT_COUNT })}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"visualization drummer\" style={this.props.style}>\r\n        {drummers}\r\n        <div className=\"overlay\" style={{ backgroundColor: this.color }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VisualizationHOC.wrap(Drummer);\r\n","import { Color } from 'three';\r\n\r\nexport const pointColor = new Color('#666');\r\n","import {\r\n  Scene,\r\n  SphereGeometry,\r\n  Vector3,\r\n  Quaternion,\r\n  Euler,\r\n  BufferGeometry,\r\n  PointsMaterial\r\n} from 'three';\r\nimport { createPolygon, createPoints } from './entities/polys';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\n\r\nconst DELAY_BEFORE_ROTATING_X = 1500;\r\nconst CAMERA_MAX_DISTANCE = 200;\r\nconst CAMERA_MIN_DISTANCE = 0;\r\nconst CAMERA_DRIFT = 0.05;\r\n\r\nexport default function sceneManager(rendererContainer: HTMLDivElement) {\r\n  let currentAnimationFrameId: number;\r\n  let sceneInitializedTimestamp = Date.now();\r\n  let t = 0;\r\n  let isMouseDragging = false;\r\n\r\n  const mousePosition = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n\r\n  const polygon = createPolygon();\r\n  const halpernSphere = createPoints(polygon);\r\n\r\n  const camera = createCamera();\r\n  camera.position.set(0, CAMERA_MAX_DISTANCE, 0);\r\n  camera.lookAt(new Vector3(0, 0, 0));\r\n\r\n  const renderer = createRenderer();\r\n  rendererContainer.appendChild(renderer.domElement);\r\n\r\n  const scene = new Scene();\r\n  scene.add(halpernSphere);\r\n\r\n  const removeRotationControls = addRotationControls();\r\n  const removeZoomControls = addZoomControls();\r\n\r\n  window.addEventListener('resize', onResize, false);\r\n\r\n  function animate() {\r\n    halpernSphere.rotateY(-0.002);\r\n\r\n    if (Date.now() - sceneInitializedTimestamp > DELAY_BEFORE_ROTATING_X) {\r\n      halpernSphere.rotateX(0.002);\r\n    }\r\n\r\n    t += 0.005;\r\n\r\n    if (t >= Math.PI * 2) {\r\n      t = 0;\r\n    }\r\n\r\n    camera.translateY(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateX(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateZ(Math.cos(t) * CAMERA_DRIFT * 5);\r\n\r\n    renderer.render(scene, camera);\r\n    currentAnimationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function stop() {\r\n    window.cancelAnimationFrame(currentAnimationFrameId);\r\n    window.removeEventListener('resize', onResize);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    removeRotationControls();\r\n    removeZoomControls();\r\n\r\n    halpernSphere.geometry.dispose();\r\n    (halpernSphere.material as PointsMaterial).dispose();\r\n    scene.remove(halpernSphere);\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function getSphereGeometry() {\r\n    return polygon.geometry as SphereGeometry;\r\n  }\r\n\r\n  function getHalpernGeometry() {\r\n    return halpernSphere.geometry as BufferGeometry;\r\n  }\r\n\r\n  function addRotationControls() {\r\n    renderer.domElement.addEventListener('mousedown', onMouseDown);\r\n    renderer.domElement.addEventListener('mouseup', onMouseUp);\r\n    renderer.domElement.addEventListener('mousemove', onMouseMove);\r\n\r\n    function onMouseDown() {\r\n      isMouseDragging = true;\r\n    }\r\n\r\n    function onMouseUp() {\r\n      isMouseDragging = false;\r\n    }\r\n\r\n    function onMouseMove(event: MouseEvent) {\r\n      const moveDelta = {\r\n        x: event.offsetX - mousePosition.x,\r\n        y: event.offsetY - mousePosition.y\r\n      };\r\n\r\n      if (isMouseDragging) {\r\n        const rotationDeltaQuaternion = new Quaternion().setFromEuler(\r\n          new Euler(\r\n            toRadians(moveDelta.y * 0.25),\r\n            toRadians(moveDelta.x * 0.25),\r\n            0,\r\n            'XYZ'\r\n          )\r\n        );\r\n\r\n        halpernSphere.quaternion.multiplyQuaternions(\r\n          rotationDeltaQuaternion,\r\n          halpernSphere.quaternion\r\n        );\r\n      }\r\n\r\n      mousePosition.x = event.offsetX;\r\n      mousePosition.y = event.offsetY;\r\n    }\r\n\r\n    return function removeRotationControls() {\r\n      renderer.domElement.removeEventListener('mousedown', onMouseDown);\r\n      renderer.domElement.removeEventListener('mouseup', onMouseUp);\r\n      renderer.domElement.removeEventListener('mousemove', onMouseMove);\r\n    };\r\n  }\r\n\r\n  function addZoomControls() {\r\n    renderer.domElement.addEventListener('wheel', onMouseWheel);\r\n\r\n    function onMouseWheel(event: WheelEvent) {\r\n      if (event.deltaY > 0) {\r\n        camera.position.y = Math.min(\r\n          camera.position.y + 2,\r\n          CAMERA_MAX_DISTANCE\r\n        );\r\n      } else {\r\n        camera.position.y = Math.max(\r\n          camera.position.y - 2,\r\n          CAMERA_MIN_DISTANCE\r\n        );\r\n      }\r\n    }\r\n\r\n    return function removeZoomControls() {\r\n      renderer.domElement.removeEventListener('wheel', onMouseWheel);\r\n    };\r\n  }\r\n\r\n  return {\r\n    animate,\r\n    stop,\r\n    getSphereGeometry,\r\n    getHalpernGeometry\r\n  };\r\n}\r\n\r\nfunction toRadians(angle: number) {\r\n  return (angle * Math.PI) / 180;\r\n}\r\n","import {\r\n  Mesh,\r\n  Points,\r\n  MeshLambertMaterial,\r\n  PointsMaterial,\r\n  SphereGeometry,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  TextureLoader\r\n} from 'three';\r\nimport { pointColor } from './colors';\r\n\r\nexport function createPolygon(): Mesh {\r\n  const geometry = new SphereGeometry(40, 100, 100);\r\n  geometry.computeVertexNormals();\r\n\r\n  const material = new MeshLambertMaterial({\r\n    wireframe: true\r\n  });\r\n\r\n  return new Mesh(geometry, material);\r\n}\r\n\r\nexport function createPoints(polygon: Mesh): Points {\r\n  const sphereGeometry = polygon.geometry as SphereGeometry;\r\n\r\n  const pointGeometry = new SphereGeometry(\r\n    sphereGeometry.parameters.radius,\r\n    sphereGeometry.parameters.widthSegments,\r\n    sphereGeometry.parameters.heightSegments\r\n  );\r\n\r\n  const { vertices } = pointGeometry;\r\n  const positions = new Float32Array(vertices.length * 3);\r\n\r\n  vertices.forEach((vertex, i) => {\r\n    vertex.toArray(positions, i * 3);\r\n  });\r\n\r\n  const geometry = new BufferGeometry();\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n\r\n  const material = new PointsMaterial({\r\n    size: 0.25,\r\n    map: new TextureLoader().load('assets/images/point.png'),\r\n    alphaTest: 0.5,\r\n    color: pointColor,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, material);\r\n}\r\n","import { PerspectiveCamera } from 'three';\r\n\r\nexport function createCamera() {\r\n  return new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ alpha: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x000000, 0);\r\n\r\n  return renderer;\r\n}\r\n","import React from 'react';\r\nimport {\r\n  Vector3,\r\n  SphereGeometry,\r\n  BufferGeometry,\r\n  BufferAttribute\r\n} from 'three';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport sceneManager from './three/sceneManager';\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport './Halpern.scss';\r\n\r\nconst RIPPLE_SPEED = 12;\r\nconst FOCUSED_DATA_INDEX = 512;\r\nconst VERTEX_SEGMENT_WEIGHT_COEFFICIENT = 0.1;\r\nconst BASELINE_VERTEX_SCALAR_FACTOR = 1;\r\n\r\nclass Halpern extends React.Component<VisualizationHOC.WrappedProps> {\r\n  private rendererContainer?: HTMLDivElement;\r\n  private originalVertices?: Vector3[];\r\n  private getSphereGeometry?: () => SphereGeometry;\r\n  private getHalpernGeometry?: () => BufferGeometry;\r\n  private onUnmount?: () => void;\r\n\r\n  private focusedData: number[] = [];\r\n  private rendererRef: React.RefObject<HTMLDivElement> = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.rendererContainer = this.rendererRef.current!;\r\n    const {\r\n      animate,\r\n      stop,\r\n      getSphereGeometry,\r\n      getHalpernGeometry\r\n    } = sceneManager(this.rendererContainer);\r\n    this.onUnmount = stop;\r\n    this.getSphereGeometry = getSphereGeometry;\r\n    this.getHalpernGeometry = getHalpernGeometry;\r\n    this.originalVertices = cloneDeep(getSphereGeometry().vertices);\r\n    this.focusedData = new Array(this.props.data.length).fill(128);\r\n    animate();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updateVertices(this.props.data);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.onUnmount && this.onUnmount();\r\n  }\r\n\r\n  updateVertices = (data: Uint8Array) => {\r\n    if (\r\n      this.getSphereGeometry == null ||\r\n      this.getHalpernGeometry == null ||\r\n      this.originalVertices == null\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.focusedData.splice(0, RIPPLE_SPEED);\r\n    this.focusedData = this.focusedData.concat(\r\n      new Array(RIPPLE_SPEED).fill(data[FOCUSED_DATA_INDEX])\r\n    );\r\n\r\n    const geometry = this.getSphereGeometry();\r\n    const dataSegments = Math.floor(\r\n      data.length / geometry.parameters.widthSegments\r\n    );\r\n\r\n    // split vertices up into segments belonging to slices of x cross sections,\r\n    // first and last vertices are at top and bottom of sphere\r\n    const vertexSegmentLength =\r\n      (geometry.vertices.length - 2) / (geometry.parameters.widthSegments - 1);\r\n\r\n    geometry.vertices.forEach((vertex, i) => {\r\n      // find which segment the current index belongs to\r\n      const vertexSegmentIndex = Math.ceil(i / vertexSegmentLength);\r\n\r\n      const dataIndex = vertexSegmentIndex * dataSegments;\r\n      const vertexSegmentWeight = Math.min(\r\n        vertexSegmentIndex,\r\n        vertexSegmentLength - vertexSegmentIndex\r\n      );\r\n\r\n      // multiplyScalar mutates so we must restore starting position\r\n      vertex.copy(this.originalVertices![i]);\r\n      const dataVariation = Math.abs(this.focusedData[dataIndex] - 128) / 255;\r\n\r\n      const multiplyScalarValue =\r\n        dataVariation *\r\n          vertexSegmentWeight *\r\n          VERTEX_SEGMENT_WEIGHT_COEFFICIENT +\r\n        BASELINE_VERTEX_SCALAR_FACTOR;\r\n\r\n      vertex.multiplyScalar(multiplyScalarValue);\r\n    });\r\n\r\n    const pointGeometry = this.getHalpernGeometry();\r\n    pointGeometry.fromGeometry(geometry);\r\n\r\n    // inform three.js that vertices should be repositioned,\r\n    // final render is handled in sceneManager animate loop\r\n    (pointGeometry.attributes.position as BufferAttribute).needsUpdate = true;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"visualization halpern\"\r\n        ref={this.rendererRef}\r\n        style={this.props.style}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default VisualizationHOC.wrap(Halpern);\r\n","import React from 'react';\r\nimport * as VisualizationHOC from './VisualizationHOC';\r\nimport './MobileDisabled.scss';\r\n\r\nconst MobileDisabled: React.FunctionComponent<\r\n  VisualizationHOC.WrappedProps\r\n> = ({ style }) => {\r\n  return (\r\n    <div className=\"visualization mobile-disabled\" style={style}>\r\n      <div className=\"content\">\r\n        <img\r\n          id=\"desktop-icon\"\r\n          src={process.env.PUBLIC_URL + '/assets/images/desktop.png'}\r\n        />\r\n        <div id=\"message\">\r\n          Sorry, this visualization cannot be viewed on a mobile device.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(MobileDisabled);\r\n","import Waveform from './Waveform/Waveform';\r\nimport Drummer from './Drummer/Drummer';\r\nimport Halpern from './Halpern/Halpern';\r\nimport MobileDisabledComponent from './MobileDisabled';\r\nimport { Props } from './VisualizationHOC';\r\nimport { isMobileDevice as isMobileDeviceCheck } from '../../../utils';\r\n\r\nexport const isMobileDevice = isMobileDeviceCheck();\r\n\r\nexport type Options = {\r\n  smoothing?: number;\r\n  mobileDisabled?: boolean;\r\n};\r\n\r\ntype SelectableVisualization = {\r\n  component: React.ComponentType<Props>;\r\n  options?: Options;\r\n};\r\n\r\nconst visualizations: SelectableVisualization[] = [\r\n  { component: Waveform },\r\n  {\r\n    component: Drummer,\r\n    options: { smoothing: 200 }\r\n  },\r\n  {\r\n    component: Halpern,\r\n    options: {\r\n      smoothing: 128,\r\n      mobileDisabled: true\r\n    }\r\n  }\r\n];\r\n\r\nexport default visualizations;\r\n\r\nexport const MobileDisabled: SelectableVisualization = {\r\n  component: MobileDisabledComponent\r\n};\r\n","import React from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport * as VisualizationHOC from './Visualizations/VisualizationHOC';\r\nimport visualizations, {\r\n  isMobileDevice,\r\n  MobileDisabled\r\n} from './Visualizations';\r\nimport { modulo } from '../../utils';\r\nimport * as Actions from '../../../src/store/actions';\r\nimport { StoreState } from '../../../src/store/types';\r\n\r\nexport const TRANSITION_ANIMATION_LENGTH = 500;\r\n\r\ntype Props = {\r\n  data: Uint8Array;\r\n};\r\n\r\ntype DynamicChildProps = VisualizationHOC.Props & { classNames: string };\r\n\r\nconst dynamicChildFactory = (classNames?: string) => (\r\n  child: React.ReactElement<DynamicChildProps>\r\n) => React.cloneElement(child, { classNames });\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  currentIndex: state.currentVisualizationIndex,\r\n  prevIndex: state.prevVisualizationIndex,\r\n  isTransitioning: state.isTransitioning\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  startTransition: () => dispatch(Actions.beginVisualizationTransition()),\r\n  endTransition: () => dispatch(Actions.endVisualizationTransition())\r\n});\r\n\r\nconst VisualizationSelector: React.FunctionComponent<\r\n  Props &\r\n    ReturnType<typeof mapStateToProps> &\r\n    ReturnType<typeof mapDispatchToProps>\r\n> = ({\r\n  data,\r\n  startTransition,\r\n  endTransition,\r\n  isTransitioning,\r\n  prevIndex,\r\n  currentIndex\r\n}) => {\r\n  const transitionClassName =\r\n    prevIndex != null && prevIndex < currentIndex ? 'next' : 'prev';\r\n\r\n  const classNameRoot = transitionClassName\r\n    ? `visualization-${transitionClassName}`\r\n    : undefined;\r\n\r\n  const index = modulo(currentIndex, visualizations.length);\r\n  const intendedVisualization = visualizations[index];\r\n\r\n  const selectedVisualization =\r\n    intendedVisualization.options &&\r\n    intendedVisualization.options.mobileDisabled &&\r\n    isMobileDevice\r\n      ? MobileDisabled\r\n      : intendedVisualization;\r\n\r\n  return (\r\n    <TransitionGroup\r\n      component={null}\r\n      childFactory={dynamicChildFactory(classNameRoot)}\r\n    >\r\n      <CSSTransition\r\n        key={index}\r\n        timeout={TRANSITION_ANIMATION_LENGTH}\r\n        classNames={classNameRoot || ''}\r\n        onExit={startTransition}\r\n        onExited={endTransition}\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        <selectedVisualization.component\r\n          data={data}\r\n          isTransitioning={isTransitioning}\r\n          timeout={TRANSITION_ANIMATION_LENGTH}\r\n          options={selectedVisualization.options}\r\n        />\r\n      </CSSTransition>\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n  null,\r\n  { pure: false }\r\n)(VisualizationSelector);\r\n","import { ActionConstants, ActionUnionType } from './types';\r\n\r\nexport const beginVisualizationTransition = (): ActionUnionType => ({\r\n  type: ActionConstants.BEGIN_VISUALIZATION_TRANSITION\r\n});\r\n\r\nexport const endVisualizationTransition = (): ActionUnionType => ({\r\n  type: ActionConstants.END_VISUALIZATION_TRANSITION\r\n});\r\n\r\nexport const goToNextVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_NEXT_VISUALIZATION\r\n});\r\n\r\nexport const goToPrevVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_PREV_VISUALIZATION\r\n});\r\n","import React, { Component } from 'react';\r\nimport VisualizationSelector from '../Visualizer/VisualizationSelector';\r\n\r\ntype Props = {\r\n  context: AudioContext;\r\n  source: MediaElementAudioSourceNode;\r\n};\r\n\r\ntype State = {\r\n  data: Uint8Array;\r\n};\r\n\r\nexport default class Analyser extends Component<Props, State> {\r\n  state = { data: new Uint8Array() };\r\n\r\n  analyser = this.props.context.createAnalyser();\r\n  dataArray = new Uint8Array(this.analyser.frequencyBinCount);\r\n  currentAnimationFrameId?: number;\r\n\r\n  componentDidMount() {\r\n    const { context, source } = this.props;\r\n\r\n    this.analyser.fftSize = 1024;\r\n    this.analyser.smoothingTimeConstant = 1;\r\n\r\n    source.connect(this.analyser);\r\n    this.analyser.connect(context.destination);\r\n    this.currentAnimationFrameId = window.requestAnimationFrame(this.tick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { source } = this.props;\r\n\r\n    this.currentAnimationFrameId != null &&\r\n      window.cancelAnimationFrame(this.currentAnimationFrameId);\r\n    this.analyser != null && this.analyser.disconnect();\r\n    source && source.disconnect();\r\n  }\r\n\r\n  tick = () => {\r\n    this.analyser.getByteTimeDomainData(this.dataArray);\r\n    this.setState({ data: this.dataArray });\r\n    this.currentAnimationFrameId = window.requestAnimationFrame(this.tick);\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    return <VisualizationSelector data={data} />;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './Loading.scss';\r\n\r\ntype Props = {\r\n  show?: boolean;\r\n};\r\n\r\nconst Loading: React.FunctionComponent<Props> = ({ show }) => (\r\n  <div\r\n    className={classNames('loading', { show: show === false ? false : true })}\r\n  >\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React, { Component } from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport Loading from '../Loading/Loading';\r\nimport * as Actions from '../../store/actions';\r\nimport './Controls.scss';\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & {\r\n  wantsToPlay: boolean;\r\n  isPlaying: boolean;\r\n  onTogglePlay: () => void;\r\n};\r\n\r\ntype State = {\r\n  showOverlay: boolean;\r\n  isArrowHovered: boolean;\r\n};\r\n\r\nclass Controls extends Component<Props, State> {\r\n  state: State = { showOverlay: false, isArrowHovered: false };\r\n\r\n  private lastTouchStartTimestamp?: number;\r\n  private hideOverlayTimeoutId?: number;\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  onMouseDown = (event: React.MouseEvent) => {\r\n    if (event.nativeEvent.which === 1) {\r\n      this.lastTouchStartTimestamp = Date.now();\r\n    }\r\n  };\r\n\r\n  onMouseUp = (event: React.MouseEvent) => {\r\n    if (\r\n      event.nativeEvent.which === 1 &&\r\n      this.lastTouchStartTimestamp &&\r\n      Date.now() - this.lastTouchStartTimestamp < 250\r\n    ) {\r\n      this.props.onTogglePlay();\r\n    }\r\n  };\r\n\r\n  onTouchStart = (event: React.TouchEvent) => {\r\n    event.preventDefault();\r\n    this.lastTouchStartTimestamp = Date.now();\r\n  };\r\n\r\n  onTouchEnd = (event: React.TouchEvent) => {\r\n    event.preventDefault();\r\n    if (\r\n      this.lastTouchStartTimestamp &&\r\n      Date.now() - this.lastTouchStartTimestamp < 250\r\n    ) {\r\n      this.props.onTogglePlay();\r\n    }\r\n  };\r\n\r\n  onMouseMove = () => {\r\n    window.clearTimeout(this.hideOverlayTimeoutId);\r\n\r\n    this.setState({ showOverlay: true }, () => {\r\n      this.hideOverlayTimeoutId = window.setTimeout(() => {\r\n        if (!this.state.isArrowHovered) {\r\n          this.setState({ showOverlay: false });\r\n        }\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  onPrev = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    event.stopPropagation();\r\n    this.props.goToPrevVisualization();\r\n  };\r\n\r\n  onNext = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    event.stopPropagation();\r\n    this.props.goToNextVisualization();\r\n  };\r\n\r\n  doNothing = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    event.stopPropagation();\r\n  };\r\n\r\n  onKeyDown = (event: KeyboardEvent) => {\r\n    switch (event.which) {\r\n      case 37:\r\n      case 38: {\r\n        this.props.goToPrevVisualization();\r\n        break;\r\n      }\r\n      case 39:\r\n      case 40: {\r\n        this.props.goToNextVisualization();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  onToggleArrowHover = (isHovered: boolean) => {\r\n    this.setState({ isArrowHovered: isHovered });\r\n  };\r\n\r\n  render() {\r\n    const { wantsToPlay, isPlaying } = this.props;\r\n    const { showOverlay } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {!wantsToPlay && <div id=\"play\" />}\r\n        {wantsToPlay && !isPlaying && <Loading />}\r\n        <div\r\n          id=\"overlay\"\r\n          onMouseDown={this.onMouseDown}\r\n          onMouseUp={this.onMouseUp}\r\n          onTouchStart={this.onTouchStart}\r\n          onTouchEnd={this.onTouchEnd}\r\n          onMouseMove={this.onMouseMove}\r\n          className={classNames({ show: showOverlay })}\r\n        >\r\n          <div className=\"navigation\">\r\n            <div\r\n              className=\"arrow-container\"\r\n              onClick={this.onPrev}\r\n              onMouseUp={this.doNothing}\r\n              onMouseEnter={() => this.onToggleArrowHover(true)}\r\n              onMouseLeave={() => this.onToggleArrowHover(false)}\r\n            >\r\n              <svg\r\n                className=\"arrow\"\r\n                width=\"60px\"\r\n                height=\"80px\"\r\n                viewBox=\"0 0 50 80\"\r\n              >\r\n                <polyline\r\n                  fill=\"none\"\r\n                  stroke=\"#FFF\"\r\n                  stroke-width=\"1\"\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\"\r\n                  points=\"\r\n              45.63,75.8 0.375,38.087 45.63,0.375 \"\r\n                />\r\n              </svg>\r\n            </div>\r\n            <div\r\n              className=\"arrow-container\"\r\n              onClick={this.onNext}\r\n              onMouseUp={this.doNothing}\r\n              onMouseEnter={() => this.onToggleArrowHover(true)}\r\n              onMouseLeave={() => this.onToggleArrowHover(false)}\r\n            >\r\n              <svg\r\n                className=\"arrow\"\r\n                width=\"60px\"\r\n                height=\"80px\"\r\n                viewBox=\"0 0 50 80\"\r\n              >\r\n                <polyline\r\n                  fill=\"none\"\r\n                  stroke=\"#FFF\"\r\n                  stroke-width=\"1\"\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\"\r\n                  points=\"\r\n                0.375,0.375 45.63,38.087 0.375,75.8 \"\r\n                />\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  goToNextVisualization: () => dispatch(Actions.goToNextVisualization()),\r\n  goToPrevVisualization: () => dispatch(Actions.goToPrevVisualization())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Controls);\r\n","import React, { Component } from 'react';\nimport Analyser from './components/Analyser/Analyser';\nimport Controls from './components/Controls/Controls';\n\nconst AUDIO_SERVER_URL =\n  process.env.NODE_ENV === 'production'\n    ? process.env.REACT_APP_AUDIO_SERVER_URL\n    : 'http://localhost:3001';\n\ntype Props = {};\n\ntype State = {\n  wantsToPlay: boolean;\n  isPlaying: boolean;\n  context?: AudioContext;\n  source?: MediaElementAudioSourceNode;\n};\n\ntype AudioEventListeners = Array<{\n  event: string;\n  listener: () => void;\n}>;\n\nexport default class App extends Component<Props, State> {\n  state: State = {\n    wantsToPlay: false,\n    isPlaying: false,\n    context: undefined,\n    source: undefined\n  };\n\n  private audioRef: React.RefObject<HTMLAudioElement> = React.createRef();\n  private audioEventListeners: AudioEventListeners = [];\n\n  audioElement?: HTMLAudioElement;\n\n  componentWillUnmount() {\n    this.removeAudioEventListeners();\n  }\n\n  initialize = () => {\n    const audioElement = this.audioRef.current!;\n    this.audioElement = audioElement;\n\n    const context = new (window.AudioContext ||\n      (window as any).webkitAudioContext)();\n    const source = context.createMediaElementSource(audioElement);\n\n    this.addAudioEventListeners([\n      { event: 'playing', listener: this.onAudioPlay },\n      { event: 'pause', listener: this.onAudioPause },\n      { event: 'error', listener: this.onAudioError }\n    ]);\n\n    this.setState({ context, source });\n  };\n\n  onTogglePlay = () => {\n    if (this.audioElement == null) {\n      this.initialize();\n    }\n\n    if (this.audioElement!.paused) {\n      this.setState({ wantsToPlay: true });\n      this.audioElement!.play();\n    } else {\n      this.setState({ wantsToPlay: false });\n      this.audioElement!.pause();\n    }\n  };\n\n  onAudioPlay = () => this.setState({ isPlaying: true });\n\n  onAudioPause = () => this.setState({ isPlaying: false });\n\n  onAudioError = console.error;\n\n  addAudioEventListeners = (eventListeners: AudioEventListeners) => {\n    for (const eventListener of eventListeners) {\n      this.audioEventListeners.push(eventListener);\n      this.audioElement!.addEventListener(\n        eventListener.event,\n        eventListener.listener\n      );\n    }\n  };\n\n  removeAudioEventListeners = () => {\n    for (const eventListener of this.audioEventListeners) {\n      this.audioElement!.removeEventListener(\n        eventListener.event,\n        eventListener.listener\n      );\n    }\n    this.audioEventListeners = [];\n  };\n\n  render() {\n    const { wantsToPlay, isPlaying, context, source } = this.state;\n\n    return (\n      <>\n        <audio\n          ref={this.audioRef}\n          id=\"audioElement\"\n          src={AUDIO_SERVER_URL}\n          preload={'auto'}\n          crossOrigin=\"anonymous\"\n        />\n        {source && context && <Analyser context={context} source={source} />}\n        <Controls\n          wantsToPlay={wantsToPlay}\n          isPlaying={isPlaying}\n          onTogglePlay={this.onTogglePlay}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\nimport App from './App';\r\nimport './reset.scss';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}