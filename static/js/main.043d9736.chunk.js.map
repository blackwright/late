{"version":3,"sources":["serviceWorker.js","store/types.ts","store/reducer.ts","store/index.ts","components/Visualizer/Visualizations/VisualizationHOC.tsx","utils/index.ts","utils/colors.ts","components/Visualizer/Visualizations/Waveform/index.tsx","components/Visualizer/Visualizations/Drummer/index.tsx","config/index.ts","components/Visualizer/Visualizations/Halpern/three/entities/colors.ts","components/Visualizer/Visualizations/Halpern/three/sceneManager.ts","components/Visualizer/Visualizations/Halpern/three/entities/polys.ts","components/Visualizer/Visualizations/Halpern/three/entities/camera.ts","components/Visualizer/Visualizations/Halpern/three/entities/renderer.ts","components/Visualizer/Visualizations/Halpern/index.tsx","components/Visualizer/Visualizations/Stars/three/entities/shaders.ts","components/Visualizer/Visualizations/Stars/three/entities/polys.ts","components/Visualizer/Visualizations/Stars/three/sceneManager.ts","components/Visualizer/Visualizations/Stars/three/entities/camera.ts","components/Visualizer/Visualizations/Stars/three/entities/renderer.ts","components/Visualizer/Visualizations/Stars/index.tsx","components/Visualizer/Visualizations/MobileDisabled/index.tsx","components/Visualizer/Visualizations/index.tsx","components/Visualizer/VisualizationSelector.tsx","store/actions.ts","components/Analyser/index.tsx","components/Loading/index.tsx","components/Controls/index.tsx","components/NoWebAudioApi/index.tsx","App.tsx","utils/hooks.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","ActionConstants","initialState","currentVisualizationIndex","prevVisualizationIndex","isTransitioning","store","createStore","state","arguments","length","undefined","type","GO_TO_NEXT_VISUALIZATION","Object","objectSpread","GO_TO_PREV_VISUALIZATION","BEGIN_VISUALIZATION_TRANSITION","END_VISUALIZATION_TRANSITION","__REDUX_DEVTOOLS_EXTENSION__","defaultProps","data","Uint8Array","timeout","TRANSITION_ANIMATION_LENGTH","options","wrap","WrappedComponent","_ref","_useState","useState","_useState2","slicedToArray","isDelayedAfterReflow","setIsDelayedAfterReflow","useEffect","setTimeout","transitionStyle","transition","concat","renderedData","smoothing","range","map","dataElement","i","dataToAverage","rangeIndex","dataAtRangeIndex","push","numbers","sum","avg","smooth","react_default","a","createElement","style","colorTriples","colorTriple","id","randomColorTriple","Math","floor","random","getRandomColor","numColors","areUnique","colors","randomTriple","randomColor","includes","getRandomColors","VisualizationHOC","canvasEl","useRef","useLayoutEffect","canvas","current","resizeCanvas","_window","innerWidth","innerHeight","width","height","addEventListener","removeEventListener","ctx","getContext","fillStyle","fillRect","intervalId","setInterval","clearInterval","colorCopy","toConsumableArray","reverse","getRandomColorTriple","lineWidth","lineCap","sliceWidth","forEach","color","strokeStyle","beginPath","x","moveTo","y","lineTo","stroke","className","ref","size","setSize","colorRef","value","lastChangedTimestamp","Date","now","onResize","maxSideLength","max","freqMap","freqKey","freqData","ceiling","abs","totalHits","values","reduce","acc","hitCount","FFT_SIZE","newColor","drummers","entries","_ref2","_ref3","drummerContainerSize","key","opacity","classNames","hit","MIN_HIT_COUNT","backgroundColor","pointColor","Color","DELAY_BEFORE_ROTATING_X","CAMERA_MAX_DISTANCE","CAMERA_DRIFT","sceneManager","rendererContainer","animationFrameId","sceneInitializedTimestamp","t","polygon","geometry","SphereGeometry","material","MeshLambertMaterial","wireframe","Mesh","createPolygon","halpernSphere","sphereGeometry","vertices","parameters","radius","widthSegments","heightSegments","positions","Float32Array","vertex","toArray","BufferGeometry","addAttribute","BufferAttribute","attributes","position","dynamic","PointsMaterial","TextureLoader","load","alphaTest","transparent","Points","createPoints","camera","startingY","PerspectiveCamera","set","lookAt","Vector3","createCamera","renderer","WebGLRenderer","alpha","setPixelRatio","devicePixelRatio","setClearColor","createRenderer","appendChild","domElement","scene","Scene","aspect","updateProjectionMatrix","render","add","sphere","halpern","animate","rotateY","rotateX","PI","translateY","cos","translateX","translateZ","requestAnimationFrame","cleanup","cancelAnimationFrame","removeChild","remove","dispose","rendererRef","sphereDataSegmentsRef","originalVerticesRef","focusedDataIndexRef","vertexSegmentLengthRef","halpernGeometryRef","focusedDataRef","Array","fill","_sceneManager","halpernGeometry","array","slice","splice","halpernBufferPositions","getAttribute","vertexSegmentIndex","ceil","dataIndex","vertexSegmentWeight","min","scalar","needsUpdate","starVertexShader","starFragmentShader","STAR_COUNT","z","stars","alphas","count","j","shaderMaterial","ShaderMaterial","uniforms","vertexShader","fragmentShader","createStars","starAlphas","alphaDirection","rotateZ","starsRef","cameraRef","src","process","isMobileDevice","test","navigator","userAgent","visualizations","component","Stars","Waveform","Drummer","Halpern","MobileDisabled","MobileDisabledComponent","connect","currentIndex","prevIndex","dispatch","startTransition","endTransition","number2","transitionClassName","classNameRoot","index","intendedVisualization","selectedVisualization","mobileDisabled","react_transition_group","childFactory","child","React","cloneElement","onExit","onExited","mountOnEnter","unmountOnExit","Analyser","context","source","setData","animationFrameIdRef","analyser","createAnalyser","fftSize","smoothingTimeConstant","destination","tick","dataContainer","getByteTimeDomainData","disconnect","Visualizer_VisualizationSelector","Loading","show","goToNextVisualization","goToPrevVisualization","props","isOverlayShown","setIsOverlayShown","_useState3","_useState4","isArrowHovered","setIsArrowHovered","onKeyDown","event","which","document","timeoutRef","touchTimestampRef","showOverlay","useCallback","clearTimeout","togglePlay","resume","recordTouchTimestamp","preventDefault","onMouseDown","nativeEvent","onMouseUp","onTouchEnd","onPrev","stopPropagation","onNext","doNothing","onToggleArrowHover","isHovered","wantsToPlay","isPlaying","Fragment","components_Loading","onTouchStart","onMouseMove","versionInfo","play","pause","onClick","onMouseEnter","onMouseLeave","viewBox","strokeWidth","strokeLinecap","strokeLinejoin","points","NoWebAudioApi","App","setWantsToPlay","setIsPlaying","_useStateRef","setState","stateRef","useStateRef","_useStateRef2","setContext","contextRef","_useState5","_useState6","setSource","_useState7","_useState8","isContextUnavailable","setIsContextUnavailable","audioRef","AudioContext","err","audioElement","onAudioPlay","onAudioPause","onAudioError","console","error","initializeAudioContext","createMediaElementSource","paused","components_NoWebAudioApi","preload","crossOrigin","components_Analyser","components_Controls","ReactDOM","es","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"ubAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+DCZMC,qRCJZ,IAAMC,EAA2B,CAC/BC,0BAA2B,EAC3BC,uBAAwB,EACxBC,iBAAiB,GCFnB,IAMeC,EANDC,YDKC,WAGD,IAFZC,EAEYC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFJP,EAGR,QADYO,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACGC,MACb,KAAKX,EAAgBY,yBACnB,OAAIL,EAAMH,gBACDG,EAEFM,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEL,0BAA2BK,EAAML,0BAA4B,EAC7DC,uBAAwBI,EAAML,4BAGlC,KAAKF,EAAgBe,yBACnB,OAAIR,EAAMH,gBACDG,EAEFM,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEL,0BAA2BK,EAAML,0BAA4B,EAC7DC,uBAAwBI,EAAML,4BAGlC,KAAKF,EAAgBgB,+BACnB,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEH,iBAAiB,IAGrB,KAAKJ,EAAgBiB,6BACnB,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEH,iBAAiB,IAGrB,QACE,OAAOG,ICzCVX,OAAesB,8BACbtB,OAAesB,qDCepB,IAAMC,EAAsB,CAC1BC,KAAM,IAAIC,WACVC,QAASC,EACTnB,iBAAiB,EACjBoB,QAAS,IAIJ,SAASC,EACdC,GAEA,OAAO,WAKkB,IAAAC,EAAAnB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAdW,EAJTC,EAIuBO,EAJvBP,KACAE,EAGuBK,EAHvBL,QACAlB,EAEuBuB,EAFvBvB,gBACAoB,EACuBG,EADvBH,QACuBI,EACiCC,oBAAS,GAD1CC,EAAAjB,OAAAkB,EAAA,EAAAlB,CAAAe,EAAA,GAChBI,EADgBF,EAAA,GACMG,EADNH,EAAA,GAOvB,GAJAI,oBAAU,WACRtC,OAAOuC,WAAW,kBAAMF,GAAwB,IAAO,IACtD,CAACD,KAECA,EACH,OAAO,KAGT,IAAMI,EAAkB,CAAEC,WAAU,aAAAC,OAAehB,EAAf,cAE9BiB,EACJf,GAAWA,EAAQgB,UCrClB,SAAgBpB,EAAkBqB,GACvC,OAAOrB,EAAKsB,IAAI,SAACC,EAAaC,GAK5B,IAJA,IAAMC,EAAgB,GAElBC,EAAaF,EAAIH,EAEdK,EAAaF,EAAIH,GAAO,CAC7B,IAAMM,EAAmB3B,EAAK0B,IAAe,IAC7CD,EAAcG,KAAKD,GACnBD,GAAc,EAGhB,OApBG,SAAaG,GAElB,IADA,IAAIC,EAAM,EACDN,EAAI,EAAGA,EAAIK,EAAQxC,OAAQmC,IAClCM,GAAOD,EAAQL,GAEjB,OAAOM,EAAMD,EAAQxC,OAeZ0C,CAAIN,KDyBsBO,CAAOhC,EAAMI,EAAQgB,WAAapB,EAEnE,OACEiC,EAAAC,EAAAC,cAAC7B,EAAD,CACEN,KAAMmB,EACNiB,MAAOpB,EACPhC,gBAAiBA,iBEzDnBqD,EAAe,CACnB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,WACvB,CAAC,UAAW,UAAW,YAGGA,EAAaf,IAAI,SAACgB,EAAad,GAAd,MAAqB,CAChEe,GAAIf,EACJc,iBAGF,SAASE,IACP,OAAOH,EAAaI,KAAKC,MAAMD,KAAKE,SAAWN,EAAahD,SAmBvD,SAASuD,IACd,OAjBK,SAAyBC,EAAmBC,GAGjD,IAFA,IAAMC,EAAmB,GAElBA,EAAO1D,OAASwD,GAAW,CAChC,IAAMG,EAAeR,IACfS,EAAcD,EAAaP,KAAKC,MAAMD,KAAKE,SAAWK,EAAa3D,SAEzE,GAAIyD,GAAaC,EAAOG,SAASD,GAC/B,MAGFF,EAAOnB,KAAKqB,GAEd,OAAOF,EAIAI,CAAgB,GAAG,aCmDbC,IAnF0D,SAAA7C,GAGnE,IAFJP,EAEIO,EAFJP,KACAoC,EACI7B,EADJ6B,MAEMiB,EAAWC,iBAA0B,MAuE3C,OArEAC,0BAAgB,WACd,IAAMC,EAASH,EAASI,QAElBC,EAAe,WAAM,IAAAC,EACWnF,OAA5BoF,EADiBD,EACjBC,WAAYC,EADKF,EACLE,YACpBL,EAAOM,MAAQF,EACfJ,EAAOO,OAASF,GAMlB,OAHAH,IAEAlF,OAAOwF,iBAAiB,SAAUN,GAC3B,kBAAMlF,OAAOyF,oBAAoB,SAAUP,KACjD,IAGHH,0BAAgB,WACd,IAAMC,EAASH,EAASI,QAClBS,EAAMV,EAAOW,WAAW,MAE9BD,EAAIE,UAAY,UAChBF,EAAIG,SAAS,EAAG,EAAGb,EAAOM,MAAON,EAAOO,SACvC,IAEHR,0BAAgB,WACd,IAAMC,EAASH,EAASI,QAClBS,EAAMV,EAAOW,WAAW,MAOxBG,EAAa9F,OAAO+F,YALV,WACdL,EAAIE,UAAY,sBAChBF,EAAIG,SAAS,EAAG,EAAGb,EAAOM,MAAON,EAAOO,SAGK,GAC/C,OAAO,kBAAMvF,OAAOgG,cAAcF,KACjC,IAGHf,0BAAgB,WACd,IAAMC,EAASH,EAASI,QAClBS,EAAMV,EAAOW,WAAW,MAExBpB,EDbH,WACL,IAAM0B,EAAShF,OAAAiF,EAAA,EAAAjF,CAAO+C,KACtB,OAAIC,KAAKE,UAAY,GACZ8B,EAAUE,UAEVF,ECQQG,GAEfV,EAAIW,UAtDW,GAuDfX,EAAIY,QAAU,QAEd,IAAMC,EAAavB,EAAOM,MAAQ9D,EAAKX,OAEvC0D,EAAOiC,QAAQ,SAACC,EAAOzD,GACrB0C,EAAIgB,YAAcD,EAClBf,EAAIiB,YAEJ,IAAIC,EA9DY,EA8DR5D,EACR0C,EAAImB,OAAOD,EAAG5B,EAAOO,OAAS,GAE9B/D,EAAKgF,QAAQ,SAAAzD,GACX,IAAM+D,EACH/D,EAAc,IAASiC,EAAOO,OAlEnB,EAmEKhB,EAAO1D,OAAU,EACpC6E,EAAIqB,OAAOH,EAAGE,EAAI9D,GApEJ,EAoE0BuB,EAAO1D,OAAU,IACzD+F,GAAKL,IAGPb,EAAIqB,OAAOH,EAAG5B,EAAOO,OAAS,GAC9BG,EAAIsB,YAEL,CAACxF,IAGFiC,EAAAC,EAAAC,cAAA,OAAKsD,UAAU,yBAAyBrD,MAAOA,GAC7CH,EAAAC,EAAAC,cAAA,OAAKsD,UAAU,aACfxD,EAAAC,EAAAC,cAAA,UAAQuD,IAAKrC,IAFf,uBC8BWD,WAnGyD,SAAA7C,GAIlE,IAHJP,EAGIO,EAHJP,KACAhB,EAEIuB,EAFJvB,gBACAoD,EACI7B,EADJ6B,MACI5B,EACoBC,mBAAS,GAD7BC,EAAAjB,OAAAkB,EAAA,EAAAlB,CAAAe,EAAA,GACGmF,EADHjF,EAAA,GACSkF,EADTlF,EAAA,GAGEmF,EAAWvC,iBAAO,CACtBwC,MAAOlD,IACPmD,qBAAsBC,KAAKC,QAG7B1C,0BAAgB,WACd,IAAM2C,EAAW,WAAM,IAAAvC,EACenF,OAA5BoF,EADaD,EACbC,WAAYC,EADCF,EACDE,YACdsC,EAAgB1D,KAAK2D,IAAIxC,EAAYC,GAC3C+B,EAAwB,EAAhBO,IAMV,OAHAD,IAEA1H,OAAOwF,iBAAiB,SAAUkC,GAC3B,kBAAM1H,OAAOyF,oBAAoB,SAAUiC,KACjD,IAQH,IANA,IAAMjB,EAAQY,EAASpC,QAEjB4C,EAAqC,GAGvCC,EAAU,EACPA,EAxCY,IAyCjBD,EAAQC,GAAW,EACnBA,GAAW,EAGbtG,EAAKgF,QAAQ,SAAAuB,GAEX,IADA,IAAID,EAAU,EACPA,EA/CU,IA+Cc,CAC7B,IAAME,EAXU,IArCD,IAgDgBF,EAAU,GACzC,GACE7D,KAAKgE,IAAIF,EAAW,KAhDI,IAiDxBA,GAAYC,EACZ,CACAH,EAAQC,IAAY,EACpB,MAEFA,GAAW,KAMf,IAAMI,EAAYjH,OAAOkH,OAAON,GAASO,OAAO,SAACC,EAAKC,GACpD,OAAOA,EA9DW,IA8DgBD,EAAM,EAAIA,GAC3C,GAGGZ,EAAMD,KAAKC,MACjB,IACGjH,GACD0H,EAtEiB,GAGU,GCTNK,KD6ErBd,EAAMhB,EAAMc,qBAnEuB,IAoEnC,CACA,IAAIiB,EACJ,GACEA,EAAWpE,UACJqC,EAAMa,QAAUkB,GAEzB/B,EAAMa,MAAQkB,EACd/B,EAAMc,qBAAuBE,EAG/B,IAAMgB,EAAWxH,OAAOyH,QAAQb,GAAS/E,IAAI,SAAA6F,EAAsB3F,GAAM,IAAA4F,EAAA3H,OAAAkB,EAAA,EAAAlB,CAAA0H,EAAA,GAA1Bb,EAA0Bc,EAAA,GAAjBN,EAAiBM,EAAA,GACjEC,IAA8Bf,EAAL,GAAgBX,EAnF9B,GAqFjB,OACE1D,EAAAC,EAAAC,cAAA,OACEmF,IAAKhB,EACLb,UAAU,oBACVrD,MAAO,CACL0B,MAAK,GAAA5C,OAAKmG,EAAL,MACLtD,OAAM,GAAA7C,OAAKmG,EAAL,MACNE,SA5FW,GA4Fe/F,GA5Ff,GA4FoC,GAAM,MAGvDS,EAAAC,EAAAC,cAAA,OAAKsD,UAAW+B,IAAW,OAAQ,CAAEC,IAAKX,EAzF9BY,aA8FlB,OACEzF,EAAAC,EAAAC,cAAA,OAAKsD,UAAU,wBAAwBrD,MAAOA,GAC3C6E,EACDhF,EAAAC,EAAAC,cAAA,OAAKsD,UAAU,UAAUrD,MAAO,CAAEuF,gBAAiB1C,EAAMa,oBE5GxD,IAAM8B,EAAa,IAAIC,IAAM,QCGpC,IAAMC,EAA0B,KAC1BC,EAAsB,IACtBC,EAAe,IAEN,SAASC,EAAaC,GACnC,IAAIC,EACAC,EAA4BpC,KAAKC,MACjCoC,EAAI,EAEFC,ECFD,WACL,IAAMC,EAAW,IAAIC,IAAe,GAAI,GAAI,IAEtCC,EAAW,IAAIC,IAAoB,CACvCC,WAAW,IAGb,OAAO,IAAIC,IAAKL,EAAUE,GDLVI,GACVC,ECOD,SAAsBR,GAC3B,IAAMS,EAAiBT,EAAQC,SAQvBS,EANc,IAAIR,IACxBO,EAAeE,WAAWC,OAC1BH,EAAeE,WAAWE,cAC1BJ,EAAeE,WAAWG,gBAGpBJ,SACFK,EAAY,IAAIC,aAA+B,EAAlBN,EAAS3J,QAE5C2J,EAAShE,QAAQ,SAACuE,EAAQ/H,GACxB+H,EAAOC,QAAQH,EAAe,EAAJ7H,KAG5B,IAAM+G,EAAW,IAAIkB,IACrBlB,EAASmB,aAAa,WAAY,IAAIC,IAAgBN,EAAW,IAChEd,EAASqB,WAAWC,SAA6BC,SAAU,EAE5D,IAAMrB,EAAW,IAAIsB,IAAe,CAClCpE,KAAM,IACNrE,KAAK,IAAI0I,KAAgBC,KAAK,2BAC9BC,UAAW,GACXjF,MAAO2C,EACPuC,aAAa,IAGf,OAAO,IAAIC,IAAO7B,EAAUE,GDnCN4B,CAAa/B,GAC7BgC,EEdD,SAAsBC,GAC3B,IAAMD,EAAS,IAAIE,IACjB,GACAhM,OAAOoF,WAAapF,OAAOqF,YAC3B,GACA,KAMF,OAHAyG,EAAOT,SAASY,IAAI,EAAGF,EAAW,GAClCD,EAAOI,OAAO,IAAIC,IAAQ,EAAG,EAAG,IAEzBL,EFGQM,CAAa7C,GACtB8C,EGfD,WAA0B,IAAAlH,EACKnF,OAA5BoF,EADuBD,EACvBC,WAAYC,EADWF,EACXE,YAEdgH,EAAW,IAAIC,IAAc,CAAEC,OAAO,IAK5C,OAJAF,EAASG,cAAcxM,OAAOyM,kBAC9BJ,EAASjF,QAAQhC,EAAYC,GAC7BgH,EAASK,cAAc,EAAU,GAE1BL,EHOUM,GACjBjD,EAAkBkD,YAAYP,EAASQ,YAEvC,IAAMC,EAAQ,IAAIC,IAuClB,SAASrF,IACPoE,EAAOkB,OAAShN,OAAOoF,WAAapF,OAAOqF,YAC3CyG,EAAOmB,yBAEPZ,EAASjF,QAAQpH,OAAOoF,WAAYpF,OAAOqF,aAC3CgH,EAASa,OAAOJ,EAAOhB,GAGzB,OA9CAgB,EAAMK,IAAI7C,GAEVtK,OAAOwF,iBAAiB,SAAUkC,GAAU,GA4CrC,CACL0F,OAAQtD,EACRuD,QAAS/C,EACTgD,QA7CF,SAASA,IACPhD,EAAciD,SAAS,MAEnB/F,KAAKC,MAAQmC,EAA4BN,GAC3CgB,EAAckD,QAAQ,OAGxB3D,GAAK,OAEc,EAAV5F,KAAKwJ,KACZ5D,EAAI,GAGNiC,EAAO4B,WAAWzJ,KAAK0J,IAAI9D,GAAKL,GAChCsC,EAAO8B,WAAW3J,KAAK0J,IAAI9D,GAAKL,GAChCsC,EAAO+B,WAAW5J,KAAK0J,IAAI9D,GAAKL,EAAe,GAE/C6C,EAASa,OAAOJ,EAAOhB,GACvBnC,EAAmB3J,OAAO8N,sBAAsBR,IA4BhDS,QAzBF,WACE/N,OAAOgO,qBAAqBrE,GAC5B3J,OAAOyF,oBAAoB,SAAUiC,GACrCgC,EAAkBuE,YAAY5B,EAASQ,YAEvCC,EAAMoB,OAAO5D,GAEbA,EAAcP,SAASoE,UACtB7D,EAAcL,SAA4BkE,UAC3CrE,EAAQC,SAASoE,UAChBrE,EAAQG,SAAiCkE,sBIiD/BvJ,IA/FyD,SAAA7C,GAGlE,IAFJP,EAEIO,EAFJP,KACAoC,EACI7B,EADJ6B,MAEMwK,EAActJ,iBAAuB,MACrCuJ,EAAwBvJ,mBACxBwJ,EAAsBxJ,mBACtByJ,EAAsBzJ,iBAAeb,KAAKC,MAAM1C,EAAKX,OAAS,IAC9D2N,EAAyB1J,mBACzB2J,EAAqB3J,mBACrB4J,EAAiB5J,iBAAiB,IAAI6J,MAAMnN,EAAKX,QAAQ+N,KAAK,MAgFpE,OA9EAtM,oBAAU,WACR,IADcuM,EAEgCpF,EADpB2E,EAAYnJ,SAC9BqI,EAFMuB,EAENvB,QAASS,EAFHc,EAEGd,QAASX,EAFZyB,EAEYzB,OAAQC,EAFpBwB,EAEoBxB,QAI5B9C,EAAiB6C,EAAOrD,SACxB+E,EAAkBzB,EAAQtD,SAmBhC,OAjBAsE,EAAsBpJ,QAAUhB,KAAKC,MACnC1C,EAAKX,OAAS0J,EAAeE,WAAWE,eAK1C6D,EAAuBvJ,SACpBsF,EAAeC,SAAS3J,OAAS,IACjC0J,EAAeE,WAAWE,cAAgB,GAE7C8D,EAAmBxJ,QAAU6J,EAE7BR,EAAoBrJ,QAAW6J,EAAgB1D,WAAWC,SACvD0D,MAAuBC,MAAM,GAEhC1B,IAEOS,GACN,IAEHzL,oBAAU,WACRoM,EAAezJ,QAAQgK,OAAO,EA9Cb,GA+CjBP,EAAezJ,QAAUyJ,EAAezJ,QAAQvC,OAC9C,IAAIiM,MAhDW,GAgDSC,KAAKpN,EAAK+M,EAAoBtJ,WAQxD,IALA,IAAMiK,EAAyBT,EAAmBxJ,QAASkK,aACzD,YACAJ,MAEE/L,EAAI,EACDA,EAAIsL,EAAoBrJ,QAASpE,QAAQ,CAE9C,IAAMuO,EAAqBnL,KAAKoL,KAC9BpL,KAAKC,MAAMlB,EAAI,GAAKwL,EAAuBvJ,SAGvCqK,EAAYF,EAAqBf,EAAsBpJ,QACvDsK,EAAsBtL,KAAKuL,IAC/BJ,EACAZ,EAAuBvJ,QAAWmK,GAM9BK,EAFJxL,KAAKgE,IAAIyG,EAAezJ,QAAQqK,GAAa,KAAO,IAIlDC,EAxEgC,GACJ,EA4EhCL,EAAuBlM,GAAKsL,EAAoBrJ,QAASjC,GAAKyM,EAC9DP,EAAuBlM,EAAI,GACzBsL,EAAoBrJ,QAASjC,EAAI,GAAKyM,EACxCP,EAAuBlM,EAAI,GACzBsL,EAAoBrJ,QAASjC,EAAI,GAAKyM,EAExCzM,GAAK,EAKNyL,EAAmBxJ,QAASkK,aAC3B,YACoBO,aAAc,GACnC,CAAClO,IAGFiC,EAAAC,EAAAC,cAAA,OAAKsD,UAAU,wBAAwBC,IAAKkH,EAAaxK,MAAOA,MCrG7D,IAAM+L,EAAgB,8NAYhBC,EAAkB,4GCHzBC,EAAa,ICJJ,SAASpG,EAAaC,GACnC,IAAIC,EAEEmC,ECND,WACL,IAAMA,EAAS,IAAIE,IACjB,GACAhM,OAAOoF,WAAapF,OAAOqF,YAC3B,EACA,KAKF,OAFAyG,EAAOT,SAASyE,GAAK,EAEdhE,EDJQM,GACTC,EEPD,WAA0B,IAAAlH,EACKnF,OAA5BoF,EADuBD,EACvBC,WAAYC,EADWF,EACXE,YAEdgH,EAAW,IAAIC,IAAc,CAAEC,OAAO,IAK5C,OAJAF,EAASG,cAAcxM,OAAOyM,kBAC9BJ,EAASjF,QAAQhC,EAAYC,GAC7BgH,EAASK,cAAc,GAAS,GAEzBL,EFDUM,GACXoD,EDCD,WAML,IALA,IAAMhG,EAAW,IAAIkB,IAEfJ,EAAY,IAAIC,aAA0B,EAAb+E,GAE/B7M,EAAI,EACDA,EAAI6M,GAEThF,EAAU7H,KAAuB,IAAhBiB,KAAKE,SAAiB,GACvC0G,EAAU7H,KAAuB,IAAhBiB,KAAKE,SAAiB,GACvC0G,EAAU7H,KAAuB,IAAhBiB,KAAKE,SAAiB,GAGzC4F,EAASmB,aAAa,WAAY,IAAIC,IAAgBN,EAAW,IAKjE,IAHA,IAAMmF,EAAS,IAAIlF,aAAkD,EAArCf,EAASqB,WAAWC,SAAS4E,OAEzDC,EAAI,EACDA,EAAIF,EAAOnP,QAChBmP,EAAOE,GAAKjM,KAAKE,SACjB+L,GAAK,EAGPnG,EAASmB,aAAa,QAAS,IAAIC,IAAgB6E,EAAQ,IAE3D,IAAMG,EAAiB,IAAIC,IAAe,CACxCC,SAAU,CACR5J,MAAO,CACLa,MAAO,IAAI+B,IAAM,YAGrBiH,aAAcX,EACdY,eAAgBX,EAChBjE,aAAa,IAGf,OAAO,IAAIC,IAAO7B,EAAUoG,GCrCdK,GACd9G,EAAkBkD,YAAYP,EAASQ,YAEvC,IAAMC,EAAQ,IAAIC,IAClBD,EAAMK,IAAI4C,GAMV,IAHA,IAAMU,EAAcV,EAAMhG,SAA4BqB,WAAWmB,MAC3DmE,EAAiB,IAAI5F,aAAa2F,EAAWR,OAE1CjN,EAAI,EAAGA,EAAI0N,EAAe7P,OAAQmC,IACzC0N,EAAe1N,GAAKiB,KAAKE,SAAW,GAAM,GAAK,EAuCjD,MAAO,CACLmJ,QArCF,SAASA,IACPyC,EAAMxC,QAAQ,MACdwC,EAAMvC,QAAQ,MACduC,EAAMY,QAAQ,MAId,IAAK,IAAI3N,EAAI,EAAGA,EAAIyN,EAAWR,MAAOjN,IAChC0N,EAAe1N,GAAK,GACrByN,EAAW1B,MAAuB/L,IAAM,MACpCyN,EAAW1B,MAAuB/L,GAAK,IAC1C0N,EAAe1N,IAAM,KAGtByN,EAAW1B,MAAuB/L,IAAM,KACpCyN,EAAW1B,MAAuB/L,GAAK,KAC1C0N,EAAe1N,GAAK,IAKzByN,EAA+Bf,aAAc,EAE9CrD,EAASa,OAAOJ,EAAOhB,GACvBnC,EAAmB3J,OAAO8N,sBAAsBR,IAchDS,QAXF,WACE/N,OAAOgO,qBAAqBrE,GAE5BmD,EAAMoB,OAAO6B,GAEbA,EAAMhG,SAASoE,UACd4B,EAAM9F,SAA4BkE,WAMnC4B,QACAjE,oBGhCWlH,IA1BuD,SAAA7C,GAGhE,IAFJP,EAEIO,EAFJP,KACAoC,EACI7B,EADJ6B,MAEMwK,EAActJ,iBAAuB,MACrC8L,EAAW9L,mBACX+L,EAAY/L,mBAelB,OAbAxC,oBAAU,WACR,IADcuM,EAE8BpF,EADlB2E,EAAYnJ,SAC9BqI,EAFMuB,EAENvB,QAASS,EAFHc,EAEGd,QAASgC,EAFZlB,EAEYkB,MAAOjE,EAFnB+C,EAEmB/C,OAMjC,OALA8E,EAAS3L,QAAU8K,EACnBc,EAAU5L,QAAU6G,EAEpBwB,IAEOS,GACN,IAEHzL,oBAAU,aAAU,CAACd,IAGnBiC,EAAAC,EAAAC,cAAA,OAAKsD,UAAU,sBAAsBC,IAAKkH,EAAaxK,MAAOA,MCNnDgB,WAhBX,SAAA7C,GAAe,IAAZ6B,EAAY7B,EAAZ6B,MACL,OACEH,EAAAC,EAAAC,cAAA,OAAKsD,UAAU,gCAAgCrD,MAAOA,GACpDH,EAAAC,EAAAC,cAAA,OAAKsD,UAAU,WACbxD,EAAAC,EAAAC,cAAA,OACEI,GAAG,eACH+M,IAAKC,oCAEPtN,EAAAC,EAAAC,cAAA,OAAKI,GAAG,WAAR,uECNKiN,ElBuBJ,iEAAiEC,KACtEC,UAAUC,WkBFCC,EAVmC,CAChD,CAAEC,UAAWC,GACb,CAAED,UAAWE,GACb,CACEF,UAAWG,EACX5P,QAAS,CAAEgB,UAAW,KAExB,CAAEyO,UAAWI,IAKFC,EAA0C,CACrDL,UAAWM,GCpBAhQ,EAA8B,IA6E5BiQ,cAjES,SAACjR,GAAD,MAAwB,CAC9CkR,aAAclR,EAAML,0BACpBwR,UAAWnR,EAAMJ,uBACjBC,gBAAiBG,EAAMH,kBAGE,SAACuR,GAAD,MAAyB,CAClDC,gBAAiB,kBAAMD,EC9B2C,CAClEhR,KAAMX,EAAgBgB,kCD8BtB6Q,cAAe,kBAAMF,EC3B2C,CAChEhR,KAAMX,EAAgBiB,kCDmFTuQ,CAlDX,SAAA7P,GAOE,InB/CkCmQ,EmBqBXlJ,EAoB3BxH,EAMIO,EANJP,KACAwQ,EAKIjQ,EALJiQ,gBACAC,EAIIlQ,EAJJkQ,cACAzR,EAGIuB,EAHJvB,gBACAsR,EAEI/P,EAFJ+P,UACAD,EACI9P,EADJ8P,aAEMM,EACS,MAAbL,GAAqBA,EAAYD,EAAe,OAAS,OAErDO,EAAgBD,EAAmB,iBAAAzP,OACpByP,QACjBrR,EAEEuR,GAAeR,GnBvDiBK,EmBuDHd,EAAevQ,QnBtDpBqR,GAAWA,EmBuDnCI,EAAwBlB,EAAeiB,GAEvCE,EACJD,EAAsB1Q,SACtB0Q,EAAsB1Q,QAAQ4Q,gBAC9BxB,EACIU,EACAY,EAEN,OACE7O,EAAAC,EAAAC,cAAC8O,EAAA,gBAAD,CACEpB,UAAW,KACXqB,cA/CuB1J,EA+CWoJ,EA/Ca,SACnDO,GADmD,OAEhDC,IAAMC,aAAaF,EAAO,CAAE3J,kBA+C3BvF,EAAAC,EAAAC,cAAC8O,EAAA,cAAD,CACE3J,IAAKuJ,EACL3Q,QAASC,EACTqH,WAAYoJ,GAAiB,GAC7BU,OAAQd,EACRe,SAAUd,EACVe,cAAY,EACZC,eAAa,GAEbxP,EAAAC,EAAAC,cAAC4O,EAAsBlB,UAAvB,CACE7P,KAAMA,EACNhB,gBAAiBA,EACjBkB,QAASC,EACTC,QAAS2Q,EAAsB3Q,cEzC1BsR,EAjCkC,SAAAnR,GAAyB,IAAtBoR,EAAsBpR,EAAtBoR,QAASC,EAAarR,EAAbqR,OAAapR,EAChDC,mBAAS,IAAIR,YADmCS,EAAAjB,OAAAkB,EAAA,EAAAlB,CAAAe,EAAA,GACjER,EADiEU,EAAA,GAC3DmR,EAD2DnR,EAAA,GAGlEoR,EAAsBxO,mBA2B5B,OAzBAC,0BAAgB,WACd,IAAMwO,EAAWJ,EAAQK,iBAgBzB,OAfAD,EAASE,QjBhBW,IiBiBpBF,EAASG,sBAAwB,EAEjCN,EAAOxB,QAAQ2B,GACfA,EAAS3B,QAAQuB,EAAQQ,aASzBL,EAAoBrO,QAAUjF,OAAO8N,sBAPxB,SAAP8F,IACJ,IAAMC,EAAgB,IAAIpS,WjBvBR,KiBwBlB8R,EAASO,sBAAsBD,GAC/BR,EAAQQ,GACRP,EAAoBrO,QAAUjF,OAAO8N,sBAAsB8F,KAKtD,WAC0B,MAA/BN,EAAoBrO,SAClBjF,OAAOgO,qBAAqBsF,EAAoBrO,SAClDsO,GAAYA,EAASQ,aACrBX,GAAUA,EAAOW,eAElB,IAEItQ,EAAAC,EAAAC,cAACqQ,EAAD,CAAuBxS,KAAMA,KCrBvByS,SAViC,SAAAlS,GAAA,IAAGmS,EAAHnS,EAAGmS,KAAH,OAC9CzQ,EAAAC,EAAAC,cAAA,OACEsD,UAAW+B,IAAW,UAAW,CAAEkL,MAAe,IAATA,KAEzCzQ,EAAAC,EAAAC,cAAA,QAAMsD,UAAU,gBAChBxD,EAAAC,EAAAC,cAAA,QAAMsD,UAAU,gBAChBxD,EAAAC,EAAAC,cAAA,QAAMsD,UAAU,2BCkML2K,qBACb,KANyB,SAACG,GAAD,MAAyB,CAClDoC,sBAAuB,kBAAMpC,EHlM8B,CAC3DhR,KAAMX,EAAgBY,4BGkMtBoT,sBAAuB,kBAAMrC,EH/L8B,CAC3DhR,KAAMX,EAAgBe,8BGiMTyQ,CA7LkC,SAAAyC,GAAS,IAAArS,EACZC,oBAAS,GADGC,EAAAjB,OAAAkB,EAAA,EAAAlB,CAAAe,EAAA,GACjDsS,EADiDpS,EAAA,GACjCqS,EADiCrS,EAAA,GAAAsS,EAEZvS,oBAAS,GAFGwS,EAAAxT,OAAAkB,EAAA,EAAAlB,CAAAuT,EAAA,GAEjDE,EAFiDD,EAAA,GAEjCE,EAFiCF,EAAA,GAIxDnS,oBAAU,WACR,IAAMsS,EAAY,SAACC,GACjB,OAAQA,EAAMC,OACZ,KAAK,GACL,KAAK,GACHT,EAAMD,wBACN,MAEF,KAAK,GACL,KAAK,GACHC,EAAMF,0BAOZ,OADAY,SAASvP,iBAAiB,UAAWoP,GAC9B,kBAAMG,SAAStP,oBAAoB,UAAWmP,KACpD,IAEH,IAAMI,EAAalQ,mBAEbmQ,EAAoBnQ,mBAEpBoQ,EAAcC,sBAAY,WACR,MAAtBH,EAAW/P,SAAmBjF,OAAOoV,aAAaJ,EAAW/P,SAE7DsP,GAAkB,GAClBS,EAAW/P,QAAUjF,OAAOuC,WAAW,WAChCmS,GACHH,GAAkB,IA5CM,OA+C3B,CAACG,IAEEW,EAAaF,sBAAY,WAC7Bd,EAAMlB,SAAWkB,EAAMlB,QAAQmC,SAC/BjB,EAAMgB,aACNH,KACC,CAACb,EAAMlB,QAASkB,EAAMgB,aAEnBE,EAAuBJ,sBAAY,SAACN,GACxCA,EAAMW,iBACNP,EAAkBhQ,QAAUuC,KAAKC,OAChC,IAEGgO,EAAcN,sBAAY,SAACN,GACC,IAA5BA,EAAMa,YAAYZ,QACpBG,EAAkBhQ,QAAUuC,KAAKC,QAElC,IAEGkO,EAAYR,sBAAY,SAACN,GAEC,IAA5BA,EAAMa,YAAYZ,OAClBG,EAAkBhQ,SAClBuC,KAAKC,MAAQwN,EAAkBhQ,QArEH,KAuE5BoQ,KAED,IAEGO,EAAaT,sBAAY,SAACN,GAC9BA,EAAMW,iBAEJP,EAAkBhQ,SAClBuC,KAAKC,MAAQwN,EAAkBhQ,QA/EH,KAiF5BiQ,KAED,IAEGW,EAASV,sBACb,SAACN,GACCA,EAAMiB,kBACNzB,EAAMD,wBACNc,KAEF,CAACb,EAAMD,wBAGH2B,EAASZ,sBACb,SAACN,GACCA,EAAMiB,kBACNzB,EAAMF,wBACNe,KAEF,CAACb,EAAMF,wBAGH6B,EAAYb,sBAAY,SAACN,GAC7BA,EAAMiB,mBACL,IAEGG,EAAqBd,sBAAY,SAACe,GACtCvB,EAAkBuB,IACjB,IAEKC,EAA2B9B,EAA3B8B,YAAaC,EAAc/B,EAAd+B,UAErB,OACE3S,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2S,SAAA,KACGF,IAAgBC,GAAa3S,EAAAC,EAAAC,cAAC2S,EAAD,MAC9B7S,EAAAC,EAAAC,cAAA,OACEI,GAAG,UACH0R,YAAaA,EACbE,UAAWA,EACXY,aAAchB,EACdK,WAAYA,EACZY,YAAatB,EACbjO,UAAW+B,IAAW,CAAEkL,KAAMI,KAE9B7Q,EAAAC,EAAAC,cAAA,MAAII,GAAG,SAAP,QACAN,EAAAC,EAAAC,cAAA,OAAKI,GAAG,WAAR,SAAyB0S,KAEvBhT,EAAAC,EAAAC,cAAA,OACEiS,WAAYP,EACZpO,UAAW+B,IAAW,CACpB0N,MAAOP,IAAgBC,EACvBO,MAAOR,GAAeC,MAI5B3S,EAAAC,EAAAC,cAAA,OAAKsD,UAAU,cACbxD,EAAAC,EAAAC,cAAA,OACEsD,UAAU,kBACV2P,QAASf,EACTU,aAAcV,EACdF,UAAWK,EACXa,aAAc,kBAAMZ,GAAmB,IACvCa,aAAc,kBAAMb,GAAmB,KAEvCxS,EAAAC,EAAAC,cAAA,OACEsD,UAAU,QACV3B,MAAM,OACNC,OAAO,OACPwR,QAAQ,aAERtT,EAAAC,EAAAC,cAAA,YACEiL,KAAK,OACL5H,OAAO,OACPgQ,YAAY,IACZC,cAAc,QACdC,eAAe,QACfC,OAAO,8CAKb1T,EAAAC,EAAAC,cAAA,OACEsD,UAAU,kBACV2P,QAASb,EACTQ,aAAcR,EACdJ,UAAWK,EACXa,aAAc,kBAAMZ,GAAmB,IACvCa,aAAc,kBAAMb,GAAmB,KAEvCxS,EAAAC,EAAAC,cAAA,OACEsD,UAAU,QACV3B,MAAM,OACNC,OAAO,OACPwR,QAAQ,aAERtT,EAAAC,EAAAC,cAAA,YACEiL,KAAK,OACL5H,OAAO,OACPgQ,YAAY,IACZC,cAAc,QACdC,eAAe,QACfC,OAAO,oDCzLRC,SAJO,kBACpB3T,EAAAC,EAAAC,cAAA,OAAKI,GAAG,gBAAR,oDCEF,IAiGesT,EA1F6B,SAAAhD,GAAS,IAAArS,EACbC,oBAAS,GADIC,EAAAjB,OAAAkB,EAAA,EAAAlB,CAAAe,EAAA,GAC5CmU,EAD4CjU,EAAA,GAC/BoV,EAD+BpV,EAAA,GAAAsS,EAEjBvS,oBAAS,GAFQwS,EAAAxT,OAAAkB,EAAA,EAAAlB,CAAAuT,EAAA,GAE5C4B,EAF4C3B,EAAA,GAEjC8C,EAFiC9C,EAAA,GAAA+C,ECX9C,SACLnX,GACyE,IAAA2B,EAC/CC,mBAAS5B,GADsC6B,EAAAjB,OAAAkB,EAAA,EAAAlB,CAAAe,EAAA,GAClErB,EADkEuB,EAAA,GAC3DuV,EAD2DvV,EAAA,GAEnEwV,EAAW5S,iBAAOnE,GAMxB,OAJA2B,oBAAU,WACRoV,EAASzS,QAAUtE,GAClB,CAACA,IAEG,CAACA,EAAO8W,EAAUC,GDIiBC,MAExC7W,GALiD8W,EAAA3W,OAAAkB,EAAA,EAAAlB,CAAAuW,EAAA,GAG5CrE,EAH4CyE,EAAA,GAGnCC,EAHmCD,EAAA,GAGvBE,EAHuBF,EAAA,GAAAG,EAMvB9V,qBANuB+V,EAAA/W,OAAAkB,EAAA,EAAAlB,CAAA8W,EAAA,GAM5C3E,EAN4C4E,EAAA,GAMpCC,EANoCD,EAAA,GAAAE,EAOKjW,oBAAS,GAPdkW,EAAAlX,OAAAkB,EAAA,EAAAlB,CAAAiX,EAAA,GAO5CE,EAP4CD,EAAA,GAOtBE,EAPsBF,EAAA,GAS7CG,EAAWxT,iBAAyB,MAG1CxC,oBAAU,WACR,IACE,IAAItC,OAAOuY,aACX,MAAOC,GACPH,GAAwB,KAEzB,IAGH/V,oBAAU,WACR,IAAMmW,EAAeH,EAASrT,QAExByT,EAAc,kBAAMnB,GAAa,IACjCoB,EAAe,kBAAMpB,GAAa,IAClCqB,EAAeC,QAAQC,MAM7B,OAJAL,EAAajT,iBAAiB,UAAWkT,GACzCD,EAAajT,iBAAiB,QAASmT,GACvCF,EAAajT,iBAAiB,QAASoT,GAEhC,WACLH,EAAahT,oBAAoB,UAAWiT,GAC5CD,EAAahT,oBAAoB,QAASkT,GAC1CF,EAAahT,oBAAoB,QAASmT,KAE3C,IAEH,IAAMG,EAAyB5D,sBAAY,WACzC,IAAMsD,EAAeH,EAASrT,QACxBkO,EAAU,IAAInT,OAAOuY,aACrBnF,EAASD,EAAQ6F,yBAAyBP,GAEhDZ,EAAW1E,GACX8E,EAAU7E,IACT,CAACkF,EAASrT,UAEPoQ,EAAaF,sBAAY,WAC7B,IAAMsD,EAAeH,EAASrT,QAE1BwT,EAAaQ,QACf3B,GAAe,GACfmB,EAAa/B,OAERoB,EAAW7S,SACd8T,MAGFzB,GAAe,GACfmB,EAAa9B,UAEd,CAAC2B,EAASrT,UAEb,OAAImT,EACK3U,EAAAC,EAAAC,cAACuV,EAAD,MAIPzV,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2S,SAAA,KACE5S,EAAAC,EAAAC,cAAA,SACEuD,IAAKoR,EACLvU,GAAG,eACH+M,IA9EFC,8BA+EEoI,QAAS,OACTC,YAAY,cAGbjG,GAAWC,GAAU3P,EAAAC,EAAAC,cAAC0V,EAAD,CAAUlG,QAASA,EAASC,OAAQA,IAE1D3P,EAAAC,EAAAC,cAAC2V,EAAD,CACEnG,QAASA,EACTgD,YAAaA,EACbC,UAAWA,EACXf,WAAYA,kBExFpBkE,IAASrM,OACPzJ,EAAAC,EAAAC,cAAC6V,EAAA,EAAD,CAAU/Y,MAAOA,GACfgD,EAAAC,EAAAC,cAAC8V,EAAD,OAEF1E,SAAS2E,eAAe,ShCoHpB,kBAAmBxI,WACrBA,UAAUyI,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.043d9736.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export type StoreState = {\r\n  currentVisualizationIndex: number;\r\n  prevVisualizationIndex: number;\r\n  isTransitioning: boolean;\r\n};\r\n\r\nexport enum ActionConstants {\r\n  BEGIN_VISUALIZATION_TRANSITION = 'BEGIN_VISUALIZATION_TRANSITION',\r\n  END_VISUALIZATION_TRANSITION = 'END_VISUALIZATION_TRANSITION',\r\n  GO_TO_PREV_VISUALIZATION = 'GO_TO_PREV_VISUALIZATION',\r\n  GO_TO_NEXT_VISUALIZATION = 'GO_TO_NEXT_VISUALIZATION'\r\n}\r\n\r\ninterface BeginVisualizationTransitionAction {\r\n  type: typeof ActionConstants.BEGIN_VISUALIZATION_TRANSITION;\r\n}\r\n\r\ninterface EndVisualizationTransitionAction {\r\n  type: typeof ActionConstants.END_VISUALIZATION_TRANSITION;\r\n}\r\n\r\ninterface GoToNextVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_NEXT_VISUALIZATION;\r\n}\r\n\r\ninterface GoToPrevVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_PREV_VISUALIZATION;\r\n}\r\n\r\nexport type ActionUnionType =\r\n  | BeginVisualizationTransitionAction\r\n  | EndVisualizationTransitionAction\r\n  | GoToNextVisualizationAction\r\n  | GoToPrevVisualizationAction;\r\n","import { StoreState, ActionConstants, ActionUnionType } from './types';\r\n\r\nconst initialState: StoreState = {\r\n  currentVisualizationIndex: 0,\r\n  prevVisualizationIndex: 0,\r\n  isTransitioning: false\r\n};\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: ActionUnionType\r\n): StoreState {\r\n  switch (action.type) {\r\n    case ActionConstants.GO_TO_NEXT_VISUALIZATION:\r\n      if (state.isTransitioning) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex + 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.GO_TO_PREV_VISUALIZATION:\r\n      if (state.isTransitioning) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex - 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.BEGIN_VISUALIZATION_TRANSITION:\r\n      return {\r\n        ...state,\r\n        isTransitioning: true\r\n      };\r\n\r\n    case ActionConstants.END_VISUALIZATION_TRANSITION:\r\n      return {\r\n        ...state,\r\n        isTransitioning: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TRANSITION_ANIMATION_LENGTH } from '../VisualizationSelector';\r\nimport './Visualization.scss';\r\nimport { Options } from './index';\r\nimport { smooth } from '../../../utils';\r\n\r\nexport type Props = {\r\n  // array of frequency data with values 0-255\r\n  data: Uint8Array;\r\n  // length of CSS transitions\r\n  timeout: number;\r\n  isTransitioning: boolean;\r\n  options?: Options;\r\n};\r\n\r\nexport type WrappedProps = {\r\n  data: Uint8Array;\r\n  style: { transition: string };\r\n  isTransitioning: boolean;\r\n};\r\n\r\nconst defaultProps: Props = {\r\n  data: new Uint8Array(),\r\n  timeout: TRANSITION_ANIMATION_LENGTH,\r\n  isTransitioning: false,\r\n  options: {}\r\n};\r\n\r\n// all visualization components should be wrapped with this HOC\r\nexport function wrap(\r\n  WrappedComponent: React.ComponentType<WrappedProps>\r\n): React.ComponentType<Props> {\r\n  return function({\r\n    data,\r\n    timeout,\r\n    isTransitioning,\r\n    options\r\n  }: Props = defaultProps) {\r\n    const [isDelayedAfterReflow, setIsDelayedAfterReflow] = useState(false);\r\n\r\n    useEffect(() => {\r\n      window.setTimeout(() => setIsDelayedAfterReflow(true), 0);\r\n    }, [isDelayedAfterReflow]);\r\n\r\n    if (!isDelayedAfterReflow) {\r\n      return null;\r\n    }\r\n\r\n    const transitionStyle = { transition: `transform ${timeout}ms linear` };\r\n\r\n    const renderedData =\r\n      options && options.smoothing ? smooth(data, options.smoothing) : data;\r\n\r\n    return (\r\n      <WrappedComponent\r\n        data={renderedData}\r\n        style={transitionStyle}\r\n        isTransitioning={isTransitioning}\r\n      />\r\n    );\r\n  };\r\n}\r\n","export function modulo(number1: number, number2: number): number {\r\n  return ((number1 % number2) + number2) % number2;\r\n}\r\n\r\nexport function avg(numbers: Uint8Array): number;\r\nexport function avg(numbers: number[]): number;\r\nexport function avg(numbers: Uint8Array | number[]) {\r\n  let sum = 0;\r\n  for (let i = 0; i < numbers.length; i++) {\r\n    sum += numbers[i];\r\n  }\r\n  return sum / numbers.length;\r\n}\r\n\r\nexport function smooth(data: Uint8Array, range: number): Uint8Array {\r\n  return data.map((dataElement, i) => {\r\n    const dataToAverage = [];\r\n\r\n    let rangeIndex = i - range;\r\n\r\n    while (rangeIndex < i + range) {\r\n      const dataAtRangeIndex = data[rangeIndex] || 128;\r\n      dataToAverage.push(dataAtRangeIndex);\r\n      rangeIndex += 1;\r\n    }\r\n\r\n    return avg(dataToAverage);\r\n  });\r\n}\r\n\r\nexport function isMobileDevice(): boolean {\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n    navigator.userAgent\r\n  );\r\n}\r\n","const colorTriples = [\r\n  ['#0E9AA7', '#F6CD61', '#FE8A71'],\r\n  ['#EE4540', '#801336', '#2D142C'],\r\n  ['#8FB9A8', '#FDFBD4', '#FCD0BA'],\r\n  ['#AC6D83', '#685D79', '#465C7A'],\r\n  ['#F36E38', '#EF4648', '#582841'],\r\n  ['#F1F1F1', '#9BD7D1', '#305D7A'],\r\n  ['#DEA5B6', '#F3CD8C', '#F2E9C2'],\r\n  ['#E27B47', '#EFCA58', '#46B29E'],\r\n  ['#2E7345', '#2E9975', '#2DB3B3'],\r\n  ['#52A3CC', '#7EA1E5', '#AAAAF2'],\r\n  ['#CC5285', '#CC5285', '#F2BCAA'],\r\n  ['#D8E0BB', '#B6CEC7', '#86A3C3']\r\n];\r\n\r\nconst colorTriplesWithIds = colorTriples.map((colorTriple, i) => ({\r\n  id: i,\r\n  colorTriple\r\n}));\r\n\r\nfunction randomColorTriple() {\r\n  return colorTriples[Math.floor(Math.random() * colorTriples.length)];\r\n}\r\n\r\nexport function getRandomColors(numColors: number, areUnique?: boolean): string[] {\r\n  const colors: string[] = [];\r\n\r\n  while (colors.length < numColors) {\r\n    const randomTriple = randomColorTriple();\r\n    const randomColor = randomTriple[Math.floor(Math.random() * randomTriple.length)];\r\n\r\n    if (areUnique && colors.includes(randomColor)) {\r\n      break;\r\n    }\r\n\r\n    colors.push(randomColor);\r\n  }\r\n  return colors;\r\n}\r\n\r\nexport function getRandomColor() {\r\n  return getRandomColors(1)[0];\r\n}\r\n\r\nexport function getRandomColorTriple() {\r\n  const colorCopy = [...randomColorTriple()];\r\n  if (Math.random() <= 0.5) {\r\n    return colorCopy.reverse();\r\n  } else {\r\n    return colorCopy;\r\n  }\r\n}\r\n","import React, { useLayoutEffect, useRef } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { getRandomColorTriple } from '../../../../utils/colors';\r\nimport './Waveform.scss';\r\n\r\nconst LINE_WIDTH = 10;\r\nconst LINE_X_OFFSET = 0;\r\nconst LINE_Y_OFFSET = 5;\r\n\r\nconst Waveform: React.FunctionComponent<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  style\r\n}) => {\r\n  const canvasEl = useRef<HTMLCanvasElement>(null);\r\n\r\n  useLayoutEffect(() => {\r\n    const canvas = canvasEl.current!;\r\n\r\n    const resizeCanvas = () => {\r\n      const { innerWidth, innerHeight } = window;\r\n      canvas.width = innerWidth;\r\n      canvas.height = innerHeight;\r\n    };\r\n\r\n    resizeCanvas();\r\n\r\n    window.addEventListener('resize', resizeCanvas);\r\n    return () => window.removeEventListener('resize', resizeCanvas);\r\n  }, []);\r\n\r\n  // initial paint to match fade out color from rounding error\r\n  useLayoutEffect(() => {\r\n    const canvas = canvasEl.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n\r\n    ctx.fillStyle = '#101010';\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const canvas = canvasEl.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n\r\n    const fadeOut = () => {\r\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    };\r\n\r\n    const intervalId = window.setInterval(fadeOut, 7);\r\n    return () => window.clearInterval(intervalId);\r\n  }, []);\r\n\r\n  // paint on every data update\r\n  useLayoutEffect(() => {\r\n    const canvas = canvasEl.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n\r\n    const colors = getRandomColorTriple();\r\n\r\n    ctx.lineWidth = LINE_WIDTH;\r\n    ctx.lineCap = 'round';\r\n\r\n    const sliceWidth = canvas.width / data.length;\r\n\r\n    colors.forEach((color, i) => {\r\n      ctx.strokeStyle = color;\r\n      ctx.beginPath();\r\n\r\n      let x = i * LINE_X_OFFSET;\r\n      ctx.moveTo(x, canvas.height / 2);\r\n\r\n      data.forEach(dataElement => {\r\n        const y =\r\n          (dataElement / 255.0) * canvas.height -\r\n          (LINE_Y_OFFSET * colors.length) / 2;\r\n        ctx.lineTo(x, y + i * ((LINE_Y_OFFSET * colors.length) / 2));\r\n        x += sliceWidth;\r\n      });\r\n\r\n      ctx.lineTo(x, canvas.height / 2);\r\n      ctx.stroke();\r\n    });\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"visualization waveform\" style={style}>\r\n      <div className=\"backdrop\" />\r\n      <canvas ref={canvasEl} />;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Waveform);\r\n","import React, { useState, useRef, useLayoutEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport './Drummer.scss';\r\nimport { getRandomColor } from '../../../../utils/colors';\r\nimport { DATA_SIZE } from '../../../../config';\r\n\r\nconst NUM_DRUMMERS = 13;\r\nconst MIN_HIT_COUNT = 0.04;\r\nconst MIN_FREQUENCY_VARIATION = 10;\r\nconst COLOR_CHANGE_THRESHOLD = 70;\r\nconst MIN_DELAY_BETWEEN_COLOR_CHANGE = 200;\r\n\r\nconst minHitCount = MIN_HIT_COUNT * DATA_SIZE;\r\nconst colorChangeThreshold = COLOR_CHANGE_THRESHOLD / DATA_SIZE;\r\n\r\nconst Drummer: React.FunctionComponent<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  isTransitioning,\r\n  style\r\n}) => {\r\n  const [size, setSize] = useState(0);\r\n\r\n  const colorRef = useRef({\r\n    value: getRandomColor(),\r\n    lastChangedTimestamp: Date.now()\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    const onResize = () => {\r\n      const { innerWidth, innerHeight } = window;\r\n      const maxSideLength = Math.max(innerWidth, innerHeight);\r\n      setSize(maxSideLength * 2);\r\n    };\r\n\r\n    onResize();\r\n\r\n    window.addEventListener('resize', onResize);\r\n    return () => window.removeEventListener('resize', onResize);\r\n  }, []);\r\n\r\n  const color = colorRef.current;\r\n\r\n  const freqMap: { [key: string]: number } = {};\r\n  const numPerSlice = 256 / NUM_DRUMMERS;\r\n\r\n  let freqKey = 0;\r\n  while (freqKey < NUM_DRUMMERS) {\r\n    freqMap[freqKey] = 0;\r\n    freqKey += 1;\r\n  }\r\n\r\n  data.forEach(freqData => {\r\n    let freqKey = 0;\r\n    while (freqKey < NUM_DRUMMERS) {\r\n      const ceiling = numPerSlice * (freqKey + 1);\r\n      if (\r\n        Math.abs(freqData - 128) > MIN_FREQUENCY_VARIATION &&\r\n        freqData <= ceiling\r\n      ) {\r\n        freqMap[freqKey] += 1;\r\n        break;\r\n      }\r\n      freqKey += 1;\r\n    }\r\n  });\r\n\r\n  // determine if we should change the background color by\r\n  // comparing total drummer hits against a minimum threshold\r\n  const totalHits = Object.values(freqMap).reduce((acc, hitCount) => {\r\n    return hitCount > MIN_HIT_COUNT ? acc + 1 : acc;\r\n  }, 0);\r\n\r\n  // space out background color changes so they're not jarring\r\n  const now = Date.now();\r\n  if (\r\n    !isTransitioning &&\r\n    totalHits / NUM_DRUMMERS > colorChangeThreshold &&\r\n    now - color.lastChangedTimestamp > MIN_DELAY_BETWEEN_COLOR_CHANGE\r\n  ) {\r\n    let newColor;\r\n    do {\r\n      newColor = getRandomColor();\r\n    } while (color.value === newColor);\r\n\r\n    color.value = newColor;\r\n    color.lastChangedTimestamp = now;\r\n  }\r\n\r\n  const drummers = Object.entries(freqMap).map(([freqKey, hitCount], i) => {\r\n    const drummerContainerSize = ((1 + +freqKey) * size) / NUM_DRUMMERS;\r\n\r\n    return (\r\n      <div\r\n        key={freqKey}\r\n        className=\"drummer-container\"\r\n        style={{\r\n          width: `${drummerContainerSize}px`,\r\n          height: `${drummerContainerSize}px`,\r\n          opacity: ((NUM_DRUMMERS - i) / NUM_DRUMMERS) * 0.5 * 0.25\r\n        }}\r\n      >\r\n        <div className={classNames('beat', { hit: hitCount > minHitCount })} />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"visualization drummer\" style={style}>\r\n      {drummers}\r\n      <div className=\"overlay\" style={{ backgroundColor: color.value }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Drummer);\r\n","export const FFT_SIZE = 512;\r\nexport const DATA_SIZE = FFT_SIZE / 2;\r\n","import { Color } from 'three';\r\n\r\nexport const pointColor = new Color('#666');\r\n","import { Scene, PointsMaterial, MeshLambertMaterial } from 'three';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\nimport { createPolygon, createPoints } from './entities/polys';\r\n\r\nconst DELAY_BEFORE_ROTATING_X = 1500;\r\nconst CAMERA_MAX_DISTANCE = 200;\r\nconst CAMERA_DRIFT = 0.05;\r\n\r\nexport default function sceneManager(rendererContainer: HTMLDivElement) {\r\n  let animationFrameId: number;\r\n  let sceneInitializedTimestamp = Date.now();\r\n  let t = 0;\r\n\r\n  const polygon = createPolygon();\r\n  const halpernSphere = createPoints(polygon);\r\n  const camera = createCamera(CAMERA_MAX_DISTANCE);\r\n  const renderer = createRenderer();\r\n  rendererContainer.appendChild(renderer.domElement);\r\n\r\n  const scene = new Scene();\r\n  scene.add(halpernSphere);\r\n\r\n  window.addEventListener('resize', onResize, false);\r\n\r\n  function animate() {\r\n    halpernSphere.rotateY(-0.002);\r\n\r\n    if (Date.now() - sceneInitializedTimestamp > DELAY_BEFORE_ROTATING_X) {\r\n      halpernSphere.rotateX(0.002);\r\n    }\r\n\r\n    t += 0.005;\r\n\r\n    if (t >= Math.PI * 2) {\r\n      t = 0;\r\n    }\r\n\r\n    camera.translateY(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateX(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateZ(Math.cos(t) * CAMERA_DRIFT * 5);\r\n\r\n    renderer.render(scene, camera);\r\n    animationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function cleanup() {\r\n    window.cancelAnimationFrame(animationFrameId);\r\n    window.removeEventListener('resize', onResize);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    scene.remove(halpernSphere);\r\n\r\n    halpernSphere.geometry.dispose();\r\n    (halpernSphere.material as PointsMaterial).dispose();\r\n    polygon.geometry.dispose();\r\n    (polygon.material as MeshLambertMaterial).dispose();\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  return {\r\n    sphere: polygon,\r\n    halpern: halpernSphere,\r\n    animate,\r\n    cleanup\r\n  };\r\n}\r\n\r\nfunction toRadians(angle: number) {\r\n  return (angle * Math.PI) / 180;\r\n}\r\n","import {\r\n  Mesh,\r\n  Points,\r\n  MeshLambertMaterial,\r\n  PointsMaterial,\r\n  SphereGeometry,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  TextureLoader\r\n} from 'three';\r\nimport { pointColor } from './colors';\r\n\r\nexport function createPolygon(): Mesh {\r\n  const geometry = new SphereGeometry(48, 96, 96);\r\n\r\n  const material = new MeshLambertMaterial({\r\n    wireframe: true\r\n  });\r\n\r\n  return new Mesh(geometry, material);\r\n}\r\n\r\nexport function createPoints(polygon: Mesh): Points {\r\n  const sphereGeometry = polygon.geometry as SphereGeometry;\r\n\r\n  const pointGeometry = new SphereGeometry(\r\n    sphereGeometry.parameters.radius,\r\n    sphereGeometry.parameters.widthSegments,\r\n    sphereGeometry.parameters.heightSegments\r\n  );\r\n\r\n  const { vertices } = pointGeometry;\r\n  const positions = new Float32Array(vertices.length * 3);\r\n\r\n  vertices.forEach((vertex, i) => {\r\n    vertex.toArray(positions, i * 3);\r\n  });\r\n\r\n  const geometry = new BufferGeometry();\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n  (geometry.attributes.position as BufferAttribute).dynamic = true;\r\n\r\n  const material = new PointsMaterial({\r\n    size: 0.25,\r\n    map: new TextureLoader().load('assets/images/point.png'),\r\n    alphaTest: 0.5,\r\n    color: pointColor,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, material);\r\n}\r\n","import { PerspectiveCamera, Vector3 } from 'three';\r\n\r\nexport function createCamera(startingY: number) {\r\n  const camera = new PerspectiveCamera(\r\n    75,\r\n    window.innerWidth / window.innerHeight,\r\n    0.1,\r\n    1000\r\n  );\r\n\r\n  camera.position.set(0, startingY, 0);\r\n  camera.lookAt(new Vector3(0, 0, 0));\r\n\r\n  return camera;\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ alpha: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x000000, 0);\r\n\r\n  return renderer;\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { BufferGeometry, SphereGeometry, BufferAttribute } from 'three';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport sceneManager from './three/sceneManager';\r\nimport './Halpern.scss';\r\n\r\nconst RIPPLE_SPEED = 5;\r\nconst VERTEX_SEGMENT_WEIGHT_COEFFICIENT = 0.1;\r\nconst BASELINE_VERTEX_SCALAR_FACTOR = 1;\r\n\r\nconst Halpern: React.FunctionComponent<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  style\r\n}) => {\r\n  const rendererRef = useRef<HTMLDivElement>(null);\r\n  const sphereDataSegmentsRef = useRef<number>();\r\n  const originalVerticesRef = useRef<ArrayLike<number>>();\r\n  const focusedDataIndexRef = useRef<number>(Math.floor(data.length / 2));\r\n  const vertexSegmentLengthRef = useRef<number>();\r\n  const halpernGeometryRef = useRef<BufferGeometry>();\r\n  const focusedDataRef = useRef<number[]>(new Array(data.length).fill(128));\r\n\r\n  useEffect(() => {\r\n    const rendererContainer = rendererRef.current!;\r\n    const { animate, cleanup, sphere, halpern } = sceneManager(\r\n      rendererContainer\r\n    );\r\n\r\n    const sphereGeometry = sphere.geometry as SphereGeometry;\r\n    const halpernGeometry = halpern.geometry as BufferGeometry;\r\n\r\n    sphereDataSegmentsRef.current = Math.floor(\r\n      data.length / sphereGeometry.parameters.widthSegments\r\n    );\r\n\r\n    // split vertices up into segments belonging to slices of x cross sections,\r\n    // first and last vertices are at top and bottom of sphere\r\n    vertexSegmentLengthRef.current =\r\n      (sphereGeometry.vertices.length - 2) /\r\n      (sphereGeometry.parameters.widthSegments - 1);\r\n\r\n    halpernGeometryRef.current = halpernGeometry;\r\n\r\n    originalVerticesRef.current = (halpernGeometry.attributes.position\r\n      .array as Float32Array).slice(0);\r\n\r\n    animate();\r\n\r\n    return cleanup;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    focusedDataRef.current.splice(0, RIPPLE_SPEED);\r\n    focusedDataRef.current = focusedDataRef.current.concat(\r\n      new Array(RIPPLE_SPEED).fill(data[focusedDataIndexRef.current!])\r\n    );\r\n\r\n    const halpernBufferPositions = halpernGeometryRef.current!.getAttribute(\r\n      'position'\r\n    ).array as Float32Array;\r\n\r\n    let i = 0;\r\n    while (i < originalVerticesRef.current!.length) {\r\n      // find which segment the current index belongs to\r\n      const vertexSegmentIndex = Math.ceil(\r\n        Math.floor(i / 3) / vertexSegmentLengthRef.current!\r\n      );\r\n\r\n      const dataIndex = vertexSegmentIndex * sphereDataSegmentsRef.current!;\r\n      const vertexSegmentWeight = Math.min(\r\n        vertexSegmentIndex,\r\n        vertexSegmentLengthRef.current! - vertexSegmentIndex\r\n      );\r\n\r\n      const dataVariation =\r\n        Math.abs(focusedDataRef.current[dataIndex] - 128) / 255;\r\n\r\n      const scalar =\r\n        dataVariation *\r\n          vertexSegmentWeight *\r\n          VERTEX_SEGMENT_WEIGHT_COEFFICIENT +\r\n        BASELINE_VERTEX_SCALAR_FACTOR;\r\n\r\n      // update X, Y, and Z vector positions in BufferGeometry\r\n      halpernBufferPositions[i] = originalVerticesRef.current![i] * scalar;\r\n      halpernBufferPositions[i + 1] =\r\n        originalVerticesRef.current![i + 1] * scalar;\r\n      halpernBufferPositions[i + 2] =\r\n        originalVerticesRef.current![i + 2] * scalar;\r\n\r\n      i += 3;\r\n    }\r\n\r\n    // inform three.js that vertices should be repositioned,\r\n    // final render is handled in sceneManager animate loop\r\n    (halpernGeometryRef.current!.getAttribute(\r\n      'position'\r\n    ) as BufferAttribute).needsUpdate = true;\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"visualization halpern\" ref={rendererRef} style={style} />\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Halpern);\r\n","export const starVertexShader = `\r\nattribute float alpha;\r\nvarying float vAlpha;\r\n\r\nvoid main() {\r\n  vAlpha = alpha;\r\n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n  gl_PointSize = 2.0;\r\n  gl_Position = projectionMatrix * mvPosition;\r\n}\r\n`;\r\n\r\nexport const starFragmentShader = `\r\nuniform vec3 color;\r\nvarying float vAlpha;\r\n\r\nvoid main() {\r\n  gl_FragColor = vec4(color, vAlpha);\r\n}\r\n`;\r\n","import {\r\n  Points,\r\n  BufferAttribute,\r\n  ShaderMaterial,\r\n  Color,\r\n  BufferGeometry\r\n} from 'three';\r\nimport { starVertexShader, starFragmentShader } from './shaders';\r\n\r\nconst STAR_COUNT = 20000;\r\n\r\nexport function createStars() {\r\n  const geometry = new BufferGeometry();\r\n\r\n  const positions = new Float32Array(STAR_COUNT * 3);\r\n\r\n  let i = 0;\r\n  while (i < STAR_COUNT) {\r\n    // add random x, y, and z vector positions\r\n    positions[i++] = Math.random() * 100 - 50;\r\n    positions[i++] = Math.random() * 100 - 50;\r\n    positions[i++] = Math.random() * 100 - 50;\r\n  }\r\n\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n\r\n  const alphas = new Float32Array(geometry.attributes.position.count * 1);\r\n\r\n  let j = 0;\r\n  while (j < alphas.length) {\r\n    alphas[j] = Math.random();\r\n    j += 1;\r\n  }\r\n\r\n  geometry.addAttribute('alpha', new BufferAttribute(alphas, 1));\r\n\r\n  const shaderMaterial = new ShaderMaterial({\r\n    uniforms: {\r\n      color: {\r\n        value: new Color(0xffffff)\r\n      }\r\n    },\r\n    vertexShader: starVertexShader,\r\n    fragmentShader: starFragmentShader,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, shaderMaterial);\r\n}\r\n","import { Scene, PointsMaterial, BufferGeometry, BufferAttribute } from 'three';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\nimport { createStars } from './entities/polys';\r\n\r\nexport default function sceneManager(rendererContainer: HTMLDivElement) {\r\n  let animationFrameId: number;\r\n\r\n  const camera = createCamera();\r\n  const renderer = createRenderer();\r\n  const stars = createStars();\r\n  rendererContainer.appendChild(renderer.domElement);\r\n\r\n  const scene = new Scene();\r\n  scene.add(stars);\r\n\r\n  // create a fixed array to track which direction to adjust each star alpha\r\n  const starAlphas = (stars.geometry as BufferGeometry).attributes.alpha;\r\n  const alphaDirection = new Float32Array(starAlphas.count);\r\n\r\n  for (let i = 0; i < alphaDirection.length; i++) {\r\n    alphaDirection[i] = Math.random() < 0.5 ? 1 : -1;\r\n  }\r\n\r\n  function animate() {\r\n    stars.rotateY(0.0005);\r\n    stars.rotateX(0.0000005);\r\n    stars.rotateZ(0.0001);\r\n\r\n    // use alphaDirection to maintain alpha adjustment direction until we\r\n    // reach a limit, then switch the direction\r\n    for (let i = 0; i < starAlphas.count; i++) {\r\n      if (alphaDirection[i] > 0) {\r\n        (starAlphas.array as Float32Array)[i] *= 1.007;\r\n        if ((starAlphas.array as Float32Array)[i] > 1) {\r\n          alphaDirection[i] = -1;\r\n        }\r\n      } else {\r\n        (starAlphas.array as Float32Array)[i] *= 0.993;\r\n        if ((starAlphas.array as Float32Array)[i] < 0.3) {\r\n          alphaDirection[i] = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    (starAlphas as BufferAttribute).needsUpdate = true;\r\n\r\n    renderer.render(scene, camera);\r\n    animationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function cleanup() {\r\n    window.cancelAnimationFrame(animationFrameId);\r\n\r\n    scene.remove(stars);\r\n\r\n    stars.geometry.dispose();\r\n    (stars.material as PointsMaterial).dispose();\r\n  }\r\n\r\n  return {\r\n    animate,\r\n    cleanup,\r\n    stars,\r\n    camera\r\n  };\r\n}\r\n","import { PerspectiveCamera } from 'three';\r\n\r\nexport function createCamera() {\r\n  const camera = new PerspectiveCamera(\r\n    75,\r\n    window.innerWidth / window.innerHeight,\r\n    1,\r\n    1000\r\n  );\r\n\r\n  camera.position.z = -5;\r\n\r\n  return camera;\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ alpha: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x0000f, 1);\r\n\r\n  return renderer;\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { Points, Camera } from 'three';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport sceneManager from './three/sceneManager';\r\nimport './Stars.scss';\r\n\r\nconst Stars: React.FunctionComponent<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  style\r\n}) => {\r\n  const rendererRef = useRef<HTMLDivElement>(null);\r\n  const starsRef = useRef<Points>();\r\n  const cameraRef = useRef<Camera>();\r\n\r\n  useEffect(() => {\r\n    const rendererContainer = rendererRef.current!;\r\n    const { animate, cleanup, stars, camera } = sceneManager(rendererContainer);\r\n    starsRef.current = stars;\r\n    cameraRef.current = camera;\r\n\r\n    animate();\r\n\r\n    return cleanup;\r\n  }, []);\r\n\r\n  useEffect(() => {}, [data]);\r\n\r\n  return (\r\n    <div className=\"visualization stars\" ref={rendererRef} style={style} />\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Stars);\r\n","import React from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport './MobileDisabled.scss';\r\n\r\nconst MobileDisabled: React.FunctionComponent<\r\n  VisualizationHOC.WrappedProps\r\n> = ({ style }) => {\r\n  return (\r\n    <div className=\"visualization mobile-disabled\" style={style}>\r\n      <div className=\"content\">\r\n        <img\r\n          id=\"desktop-icon\"\r\n          src={process.env.PUBLIC_URL + '/assets/images/desktop.png'}\r\n        />\r\n        <div id=\"message\">\r\n          Sorry, this visualization cannot be viewed on a mobile device.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(MobileDisabled);\r\n","import Waveform from './Waveform';\r\nimport Drummer from './Drummer';\r\nimport Halpern from './Halpern';\r\nimport Stars from './Stars';\r\nimport MobileDisabledComponent from './MobileDisabled';\r\nimport { Props } from './VisualizationHOC';\r\nimport { isMobileDevice as isMobileDeviceCheck } from '../../../utils';\r\n\r\nexport const isMobileDevice = isMobileDeviceCheck();\r\n\r\nexport type Options = {\r\n  smoothing?: number;\r\n  mobileDisabled?: boolean;\r\n};\r\n\r\ntype SelectableVisualization = {\r\n  component: React.ComponentType<Props>;\r\n  options?: Options;\r\n};\r\n\r\nconst visualizations: SelectableVisualization[] = [\r\n  { component: Stars },\r\n  { component: Waveform },\r\n  {\r\n    component: Drummer,\r\n    options: { smoothing: 64 }\r\n  },\r\n  { component: Halpern }\r\n];\r\n\r\nexport default visualizations;\r\n\r\nexport const MobileDisabled: SelectableVisualization = {\r\n  component: MobileDisabledComponent\r\n};\r\n","import React from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport * as VisualizationHOC from './Visualizations/VisualizationHOC';\r\nimport visualizations, {\r\n  isMobileDevice,\r\n  MobileDisabled\r\n} from './Visualizations';\r\nimport { modulo } from '../../utils';\r\nimport * as Actions from '../../../src/store/actions';\r\nimport { StoreState } from '../../../src/store/types';\r\n\r\nexport const TRANSITION_ANIMATION_LENGTH = 500;\r\n\r\ntype Props = {\r\n  data: Uint8Array;\r\n};\r\n\r\ntype DynamicChildProps = VisualizationHOC.Props & { classNames: string };\r\n\r\nconst dynamicChildFactory = (classNames?: string) => (\r\n  child: React.ReactElement<DynamicChildProps>\r\n) => React.cloneElement(child, { classNames });\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  currentIndex: state.currentVisualizationIndex,\r\n  prevIndex: state.prevVisualizationIndex,\r\n  isTransitioning: state.isTransitioning\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  startTransition: () => dispatch(Actions.beginVisualizationTransition()),\r\n  endTransition: () => dispatch(Actions.endVisualizationTransition())\r\n});\r\n\r\nconst VisualizationSelector: React.FunctionComponent<\r\n  Props &\r\n    ReturnType<typeof mapStateToProps> &\r\n    ReturnType<typeof mapDispatchToProps>\r\n> = ({\r\n  data,\r\n  startTransition,\r\n  endTransition,\r\n  isTransitioning,\r\n  prevIndex,\r\n  currentIndex\r\n}) => {\r\n  const transitionClassName =\r\n    prevIndex != null && prevIndex < currentIndex ? 'next' : 'prev';\r\n\r\n  const classNameRoot = transitionClassName\r\n    ? `visualization-${transitionClassName}`\r\n    : undefined;\r\n\r\n  const index = modulo(currentIndex, visualizations.length);\r\n  const intendedVisualization = visualizations[index];\r\n\r\n  const selectedVisualization =\r\n    intendedVisualization.options &&\r\n    intendedVisualization.options.mobileDisabled &&\r\n    isMobileDevice\r\n      ? MobileDisabled\r\n      : intendedVisualization;\r\n\r\n  return (\r\n    <TransitionGroup\r\n      component={null}\r\n      childFactory={dynamicChildFactory(classNameRoot)}\r\n    >\r\n      <CSSTransition\r\n        key={index}\r\n        timeout={TRANSITION_ANIMATION_LENGTH}\r\n        classNames={classNameRoot || ''}\r\n        onExit={startTransition}\r\n        onExited={endTransition}\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        <selectedVisualization.component\r\n          data={data}\r\n          isTransitioning={isTransitioning}\r\n          timeout={TRANSITION_ANIMATION_LENGTH}\r\n          options={selectedVisualization.options}\r\n        />\r\n      </CSSTransition>\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VisualizationSelector);\r\n","import { ActionConstants, ActionUnionType } from './types';\r\n\r\nexport const beginVisualizationTransition = (): ActionUnionType => ({\r\n  type: ActionConstants.BEGIN_VISUALIZATION_TRANSITION\r\n});\r\n\r\nexport const endVisualizationTransition = (): ActionUnionType => ({\r\n  type: ActionConstants.END_VISUALIZATION_TRANSITION\r\n});\r\n\r\nexport const goToNextVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_NEXT_VISUALIZATION\r\n});\r\n\r\nexport const goToPrevVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_PREV_VISUALIZATION\r\n});\r\n","import React, { useState, useLayoutEffect, useRef } from 'react';\r\nimport VisualizationSelector from '../Visualizer/VisualizationSelector';\r\nimport { FFT_SIZE } from '../../config';\r\n\r\ntype Props = {\r\n  context: AudioContext;\r\n  source: MediaElementAudioSourceNode;\r\n};\r\n\r\nconst Analyser: React.FunctionComponent<Props> = ({ context, source }) => {\r\n  const [data, setData] = useState(new Uint8Array());\r\n\r\n  const animationFrameIdRef = useRef<number>();\r\n\r\n  useLayoutEffect(() => {\r\n    const analyser = context.createAnalyser();\r\n    analyser.fftSize = FFT_SIZE;\r\n    analyser.smoothingTimeConstant = 0;\r\n\r\n    source.connect(analyser);\r\n    analyser.connect(context.destination);\r\n\r\n    const tick = () => {\r\n      const dataContainer = new Uint8Array(FFT_SIZE);\r\n      analyser.getByteTimeDomainData(dataContainer);\r\n      setData(dataContainer);\r\n      animationFrameIdRef.current = window.requestAnimationFrame(tick);\r\n    };\r\n\r\n    animationFrameIdRef.current = window.requestAnimationFrame(tick);\r\n\r\n    return () => {\r\n      animationFrameIdRef.current != null &&\r\n        window.cancelAnimationFrame(animationFrameIdRef.current);\r\n      analyser && analyser.disconnect();\r\n      source && source.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return <VisualizationSelector data={data} />;\r\n};\r\n\r\nexport default Analyser;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './Loading.scss';\r\n\r\ntype Props = {\r\n  show?: boolean;\r\n};\r\n\r\nconst Loading: React.FunctionComponent<Props> = ({ show }) => (\r\n  <div\r\n    className={classNames('loading', { show: show === false ? false : true })}\r\n  >\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport Loading from '../Loading';\r\nimport * as Actions from '../../store/actions';\r\nimport * as versionInfo from '../../metadata/build-version.json';\r\nimport './Controls.scss';\r\n\r\nconst CONTROLS_FADE_OUT_DELAY = 1500;\r\nconst TOUCH_WAS_CLICK_THRESHOLD = 250;\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & {\r\n  context?: AudioContext;\r\n  wantsToPlay: boolean;\r\n  isPlaying: boolean;\r\n  togglePlay: () => void;\r\n};\r\n\r\nconst Controls: React.FunctionComponent<Props> = props => {\r\n  const [isOverlayShown, setIsOverlayShown] = useState(false);\r\n  const [isArrowHovered, setIsArrowHovered] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const onKeyDown = (event: KeyboardEvent) => {\r\n      switch (event.which) {\r\n        case 37:\r\n        case 38: {\r\n          props.goToPrevVisualization();\r\n          break;\r\n        }\r\n        case 39:\r\n        case 40: {\r\n          props.goToNextVisualization();\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', onKeyDown);\r\n    return () => document.removeEventListener('keydown', onKeyDown);\r\n  }, []);\r\n\r\n  const timeoutRef = useRef<number>();\r\n\r\n  const touchTimestampRef = useRef<number>();\r\n\r\n  const showOverlay = useCallback(() => {\r\n    timeoutRef.current != null && window.clearTimeout(timeoutRef.current);\r\n\r\n    setIsOverlayShown(true);\r\n    timeoutRef.current = window.setTimeout(() => {\r\n      if (!isArrowHovered) {\r\n        setIsOverlayShown(false);\r\n      }\r\n    }, CONTROLS_FADE_OUT_DELAY);\r\n  }, [isArrowHovered]);\r\n\r\n  const togglePlay = useCallback(() => {\r\n    props.context && props.context.resume();\r\n    props.togglePlay();\r\n    showOverlay();\r\n  }, [props.context, props.togglePlay]);\r\n\r\n  const recordTouchTimestamp = useCallback((event: React.TouchEvent) => {\r\n    event.preventDefault();\r\n    touchTimestampRef.current = Date.now();\r\n  }, []);\r\n\r\n  const onMouseDown = useCallback((event: React.MouseEvent) => {\r\n    if (event.nativeEvent.which === 1) {\r\n      touchTimestampRef.current = Date.now();\r\n    }\r\n  }, []);\r\n\r\n  const onMouseUp = useCallback((event: React.MouseEvent) => {\r\n    if (\r\n      event.nativeEvent.which === 1 &&\r\n      touchTimestampRef.current &&\r\n      Date.now() - touchTimestampRef.current < TOUCH_WAS_CLICK_THRESHOLD\r\n    ) {\r\n      togglePlay();\r\n    }\r\n  }, []);\r\n\r\n  const onTouchEnd = useCallback((event: React.TouchEvent) => {\r\n    event.preventDefault();\r\n    if (\r\n      touchTimestampRef.current &&\r\n      Date.now() - touchTimestampRef.current < TOUCH_WAS_CLICK_THRESHOLD\r\n    ) {\r\n      showOverlay();\r\n    }\r\n  }, []);\r\n\r\n  const onPrev = useCallback(\r\n    (event: React.MouseEvent | React.TouchEvent) => {\r\n      event.stopPropagation();\r\n      props.goToPrevVisualization();\r\n      showOverlay();\r\n    },\r\n    [props.goToPrevVisualization]\r\n  );\r\n\r\n  const onNext = useCallback(\r\n    (event: React.MouseEvent | React.TouchEvent) => {\r\n      event.stopPropagation();\r\n      props.goToNextVisualization();\r\n      showOverlay();\r\n    },\r\n    [props.goToNextVisualization]\r\n  );\r\n\r\n  const doNothing = useCallback((event: React.MouseEvent) => {\r\n    event.stopPropagation();\r\n  }, []);\r\n\r\n  const onToggleArrowHover = useCallback((isHovered: boolean) => {\r\n    setIsArrowHovered(isHovered);\r\n  }, []);\r\n\r\n  const { wantsToPlay, isPlaying } = props;\r\n\r\n  return (\r\n    <>\r\n      {wantsToPlay && !isPlaying && <Loading />}\r\n      <div\r\n        id=\"overlay\"\r\n        onMouseDown={onMouseDown}\r\n        onMouseUp={onMouseUp}\r\n        onTouchStart={recordTouchTimestamp}\r\n        onTouchEnd={onTouchEnd}\r\n        onMouseMove={showOverlay}\r\n        className={classNames({ show: isOverlayShown })}\r\n      >\r\n        <h1 id=\"title\">LATE</h1>\r\n        <div id=\"version\">build {versionInfo.version}</div>\r\n        {\r\n          <div\r\n            onTouchEnd={togglePlay}\r\n            className={classNames({\r\n              play: !wantsToPlay && !isPlaying,\r\n              pause: wantsToPlay && isPlaying\r\n            })}\r\n          />\r\n        }\r\n        <div className=\"navigation\">\r\n          <div\r\n            className=\"arrow-container\"\r\n            onClick={onPrev}\r\n            onTouchStart={onPrev}\r\n            onMouseUp={doNothing}\r\n            onMouseEnter={() => onToggleArrowHover(true)}\r\n            onMouseLeave={() => onToggleArrowHover(false)}\r\n          >\r\n            <svg\r\n              className=\"arrow\"\r\n              width=\"60px\"\r\n              height=\"80px\"\r\n              viewBox=\"0 0 50 80\"\r\n            >\r\n              <polyline\r\n                fill=\"none\"\r\n                stroke=\"#FFF\"\r\n                strokeWidth=\"3\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                points=\"\r\n            45.63,75.8 0.375,38.087 45.63,0.375 \"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div\r\n            className=\"arrow-container\"\r\n            onClick={onNext}\r\n            onTouchStart={onNext}\r\n            onMouseUp={doNothing}\r\n            onMouseEnter={() => onToggleArrowHover(true)}\r\n            onMouseLeave={() => onToggleArrowHover(false)}\r\n          >\r\n            <svg\r\n              className=\"arrow\"\r\n              width=\"60px\"\r\n              height=\"80px\"\r\n              viewBox=\"0 0 50 80\"\r\n            >\r\n              <polyline\r\n                fill=\"none\"\r\n                stroke=\"#FFF\"\r\n                strokeWidth=\"3\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                points=\"\r\n              0.375,0.375 45.63,38.087 0.375,75.8 \"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  goToNextVisualization: () => dispatch(Actions.goToNextVisualization()),\r\n  goToPrevVisualization: () => dispatch(Actions.goToPrevVisualization())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Controls);\r\n","import React from 'react';\r\nimport './NoWebAudioApi.scss';\r\n\r\nconst NoWebAudioApi = () => (\r\n  <div id=\"no-web-audio\">Your device doesn't support the Web Audio API.</div>\r\n);\r\n\r\nexport default NoWebAudioApi;\r\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport Analyser from './components/Analyser';\nimport Controls from './components/Controls';\nimport NoWebAudioApi from './components/NoWebAudioApi';\nimport { useStateRef } from './utils/hooks';\n\nconst AUDIO_SERVER_URL =\n  process.env.NODE_ENV === 'production'\n    ? process.env.REACT_APP_AUDIO_SERVER_URL\n    : 'http://localhost:3002';\n\ntype Props = {};\n\nconst App: React.FunctionComponent<Props> = props => {\n  const [wantsToPlay, setWantsToPlay] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [context, setContext, contextRef] = useStateRef<\n    AudioContext | undefined\n  >(undefined);\n  const [source, setSource] = useState<MediaElementAudioSourceNode>();\n  const [isContextUnavailable, setIsContextUnavailable] = useState(false);\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n\n  // disable if AudioContext is unavailable\n  useEffect(() => {\n    try {\n      new window.AudioContext();\n    } catch (err) {\n      setIsContextUnavailable(true);\n    }\n  }, []);\n\n  // attach audio event listeners\n  useEffect(() => {\n    const audioElement = audioRef.current!;\n\n    const onAudioPlay = () => setIsPlaying(true);\n    const onAudioPause = () => setIsPlaying(false);\n    const onAudioError = console.error;\n\n    audioElement.addEventListener('playing', onAudioPlay);\n    audioElement.addEventListener('pause', onAudioPause);\n    audioElement.addEventListener('error', onAudioError);\n\n    return () => {\n      audioElement.removeEventListener('playing', onAudioPlay);\n      audioElement.removeEventListener('pause', onAudioPause);\n      audioElement.removeEventListener('error', onAudioError);\n    };\n  }, []);\n\n  const initializeAudioContext = useCallback(() => {\n    const audioElement = audioRef.current!;\n    const context = new window.AudioContext();\n    const source = context.createMediaElementSource(audioElement);\n\n    setContext(context);\n    setSource(source);\n  }, [audioRef.current]);\n\n  const togglePlay = useCallback(() => {\n    const audioElement = audioRef.current!;\n\n    if (audioElement.paused) {\n      setWantsToPlay(true);\n      audioElement.play();\n\n      if (!contextRef.current) {\n        initializeAudioContext();\n      }\n    } else {\n      setWantsToPlay(false);\n      audioElement.pause();\n    }\n  }, [audioRef.current]);\n\n  if (isContextUnavailable) {\n    return <NoWebAudioApi />;\n  }\n\n  return (\n    <>\n      <audio\n        ref={audioRef}\n        id=\"audioElement\"\n        src={AUDIO_SERVER_URL}\n        preload={'auto'}\n        crossOrigin=\"anonymous\"\n      />\n\n      {context && source && <Analyser context={context} source={source} />}\n\n      <Controls\n        context={context}\n        wantsToPlay={wantsToPlay}\n        isPlaying={isPlaying}\n        togglePlay={togglePlay}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nexport function useStateRef<S>(\r\n  initialState: S | (() => S)\r\n): [S, React.Dispatch<React.SetStateAction<S>>, React.MutableRefObject<S>] {\r\n  const [state, setState] = useState(initialState);\r\n  const stateRef = useRef(state);\r\n\r\n  useEffect(() => {\r\n    stateRef.current = state;\r\n  }, [state]);\r\n\r\n  return [state, setState, stateRef];\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\nimport App from './App';\r\nimport './reset.scss';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}