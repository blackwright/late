{"version":3,"sources":["serviceWorker.js","store/types.ts","store/reducer.ts","store/index.ts","components/Visualizer/Visualizations/VisualizationHOC.tsx","utils/colors.ts","utils/index.ts","utils/hooks.ts","components/Visualizer/Visualizations/Waveform/index.tsx","components/Visualizer/Visualizations/Waveform/utils.ts","components/Visualizer/Visualizations/Drummer/index.tsx","components/Visualizer/Visualizations/Halpern/three/sceneManager.ts","components/Visualizer/Visualizations/Halpern/three/entities/polys.ts","components/Visualizer/Visualizations/Halpern/three/entities/camera.ts","components/Visualizer/Visualizations/Halpern/three/entities/renderer.ts","components/Visualizer/Visualizations/Halpern/index.tsx","components/Visualizer/Visualizations/Stars/three/entities/shaders.ts","components/Visualizer/Visualizations/Stars/three/entities/polys.ts","components/Visualizer/Visualizations/Stars/three/entities/light.ts","components/Visualizer/Visualizations/Stars/three/sceneManager.ts","components/Visualizer/Visualizations/Stars/three/entities/renderer.ts","components/Visualizer/Visualizations/Stars/three/entities/camera.ts","components/Visualizer/Visualizations/Stars/index.tsx","components/Visualizer/Visualizations/Rain/renderer.ts","components/Visualizer/Visualizations/Rain/city/building.ts","components/Visualizer/Visualizations/Rain/city/index.ts","components/Visualizer/Visualizations/Rain/rain.ts","components/Visualizer/Visualizations/Rain/home/wall.ts","components/Visualizer/Visualizations/Rain/utils.ts","components/Visualizer/Visualizations/Rain/home/window.ts","components/Visualizer/Visualizations/Rain/home/dresser.ts","components/Visualizer/Visualizations/Rain/home/pictures.ts","components/Visualizer/Visualizations/Rain/home/table.ts","components/Visualizer/Visualizations/Rain/home/clock.ts","components/Visualizer/Visualizations/Rain/home/cat.ts","components/Visualizer/Visualizations/Rain/home/lamp.ts","components/Visualizer/Visualizations/Rain/home/index.ts","components/Visualizer/Visualizations/Rain/index.tsx","components/Visualizer/Visualizations/index.tsx","components/Visualizer/Visualizations/MobileDisabled/index.tsx","components/Visualizer/VisualizationSelector.tsx","components/Analyser/index.tsx","config/index.ts","components/Loading/index.tsx","components/Controls/QualitySelect/index.tsx","store/actions.ts","components/Controls/index.tsx","components/NoWebAudioApi/index.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","ActionConstants","initialState","currentVisualizationIndex","prevVisualizationIndex","quality","store","createStore","state","arguments","length","undefined","action","type","GO_TO_NEXT_VISUALIZATION","Object","objectSpread","GO_TO_PREV_VISUALIZATION","SET_QUALITY","__REDUX_DEVTOOLS_EXTENSION__","defaultProps","data","Uint8Array","lowPassData","options","wrap","WrappedComponent","_ref","rawIntensitiesRef","useRef","lowPassIntensitiesRef","startingTimestampRef","Date","now","totalDifferenceFromRawBaseline","totalDifferenceFromLowBaseline","renderedData","map","rawDataElement","i","Math","abs","lowPassDataElement","smoothing","sum","count","rangeIndex","rawIntensityMax","lowPassIntensitySum","lowPassIntensityCount","lowPassIntensityMax","current","forEach","rawIntensity","lowPassIntensity","currentRawIntensity","recentLowPassAvgIntensity","currentLowPassIntensity","concat","shift","isBeat","react_default","a","createElement","intensity","colorTriples","colorTriple","id","randomColorTriple","floor","random","getRandomColors","numColors","areUnique","colors","randomTriple","randomColor","includes","push","getRandomColor","getRandomColorTriple","colorCopy","toConsumableArray","reverse","modulo","number1","number2","isInteger","number","randomNumberBetween","min","max","decimalPrecision","randomFloat","Number","toPrecision","debounced","fn","msToWait","isImmediate","timeoutId","_len","args","Array","_key","context","this","shouldCallNow","clearTimeout","setTimeout","apply","useDebouncedResize","useEffect","debouncedFn","addEventListener","removeEventListener","VisualizationHOC","canvasRef","_window","innerWidth","innerHeight","_window$devicePixelRa","devicePixelRatio","canvas","width","height","ctx","getContext","fillStyle","fillRect","intervalId","setInterval","clearInterval","lineWidth","lineCap","getColors","sliceWidth","color","strokeStyle","beginPath","x","moveTo","dataElement","y","lineTo","stroke","className","ref","QUALITY","0","NUM_DRUMMERS","1","2","_useState","useState","_useState2","slicedToArray","size","setSize","_useState3","_useState4","colorSize","setColorSize","colorsRef","values","lastChangedTimestamp","maxSideLength","colorDiameter","sqrt","pow","numDrummers","freqMap","numPerSlice","freqKey","freqData","ceiling","newColor","drummers","entries","_ref2","_ref3","hitCount","drummerContainerSize","key","style","opacity","classNames","hit","MIN_HIT_COUNT","smallestDrummerSize","transitions","useTransition","from","item","backgroundColor","scale","enter","leave","config","slow","_ref4","props","_ref5","objectWithoutProperties","web","div","transform","interpolate","s","DELAY_BEFORE_ROTATING_X","CAMERA_MAX_DISTANCE","CAMERA_DRIFT","ROTATE_Y","ROTATE_X","sphereSegments","sceneManager","rendererContainer","animationFrameId","segments","sceneInitializedTimestamp","t","sphereGeometry","SphereGeometry","halpern","vertices","parameters","radius","widthSegments","heightSegments","positions","Float32Array","vertex","toArray","geometry","BufferGeometry","addAttribute","BufferAttribute","attributes","position","dynamic","material","PointsMaterial","TextureLoader","load","alphaTest","transparent","Points","createPoints","camera","startingY","PerspectiveCamera","set","lookAt","Vector3","createCamera","renderer","WebGLRenderer","alpha","setPixelRatio","setClearColor","createRenderer","appendChild","domElement","scene","Scene","add","clock","Clock","debouncedResize","aspect","updateProjectionMatrix","render","onVisibilityChange","document","visibilityState","stop","start","animate","delta","getDelta","rotateY","rotateX","PI","translateY","cos","translateX","translateZ","requestAnimationFrame","cleanup","cancelAnimationFrame","removeChild","remove","dispose","RIPPLE_SPEED","rendererRef","managedSceneRef","originalVerticesRef","sphereDataSegmentsRef","vertexSegmentLengthRef","focusedDataRef","fill","managedScene","halpernGeometry","array","slice","rippleSpeed","focusedDataIndex","splice","halpernBufferPositions","getAttribute","vertexSegmentIndex","ceil","dataIndex","vertexSegmentWeight","scalar","needsUpdate","starVertexShader","starFragmentShader","createCloud","texture","PlaneGeometry","cloudMaterial","MeshLambertMaterial","depthTest","rotateZ","cloud","Mesh","zPosition","createDirectionalLight","DirectionalLight","MAX_STAR_ALPHA","MIN_STAR_ALPHA","STAR_ALPHA_DELTA","STATIC_LIGHT_COLOR","VARIABLE_LIGHT_COLOR","STAR_COUNT","CLOUD_COUNT","lightIntensity","antialias","stars","starCount","alphas","j","shaderMaterial","ShaderMaterial","uniforms","value","Color","vertexShader","fragmentShader","createStars","cloudCover","Group","cloudCount","aLight","AmbientLight","fixedDLight","dLight","starAlphas","alphaDirection","children","lightTimestampRef","currentLightIntensity","newLightIntensity","WINDOW_FRAME_THICKNESS_DIVISOR","Renderer","classCallCheck","canvasWidth","canvasHeight","oneThirdCanvasWidth","oneHalfCanvasHeight","windowFrameThickness","roundedRadius","save","createClass","restore","Building","blueprint","lights","lightHeight","lightPadding","lightsPerFloor","buildingXPadding","buildingTopPadding","gapWidth","lightWidth","isOn","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","light","err","return","City","_Renderer","_this","possibleConstructorReturn","getPrototypeOf","call","layers","generateBuildings","inherits","_this2","_loop","layer","gap","building","leftMostBuilding","xOffset","get","prototype","currentLayer","generateLights","RAINDROPS_HEIGHTWISE","Raindrop","raindropHeight","createdDate","timeDelta","Rainfall","raindrops","nextRaindrops","raindrop","tick","startingX","Wall","linearGradient","createLinearGradient","addColorStop","defaultCornerRadii","tl","tr","br","bl","roundedRect","quadraticCurveTo","closePath","Window","clearRect","muntinWidth","topLeftX","topRightX","topY","leftX","leftTopY","leftBottomY","rect","Dresser","dresserHandleMidpoint","speakerWidth","speakerHeight","speakerX","speakerY","driverRadius","driverCenterX","driverCenterY","arc","dividerWidth","deckX","deckHeight","deckY","deckDetailX","bottomDetailY","knobRadius","knobX","knobY","clip","translate","knobMarkerAngle","knobMarkerStart","sin","knobMarkerEnd","dresser","stereo","wooferRadius","wooferCenterY","Pictures","pictures","_assertThisInitialize","assertThisInitialized","_this$pictures$","gradient1","nodes","nodeSize","point1","point2","currentNode","pop","_i","otherNode","_this$pictures$2","gradient2","randomAngle","planetX","planetY","randomRadius","_this$pictures$3","gradient3","starX","starY","graph","orbits","FRUIT_COLORS","Table","thickness","tableCornerRadii","bowlCenterX","bowlWidth","bowlHeight","fruits","stemAngle","fruit","_i2","stemStart","stemEnd","bowlCornerRadii","bowlBaseHeight","bowlBaseWidth","bowlDecorationY","leg","top","centerpiece","clockSize","clockCoords","angle","end","hours","getHours","minutes","getMinutes","seconds","getSeconds","rotate","face","hands","Cat","isWagging","prevTailAngle","headRadius","bodyHeight","bodyWidth","createdTimestamp","tailWidth","tailY","lineJoin","rightEar","point","leftEar","head","body","tail","nextTailAngle","tailEnd","Lamp","stemX","stemHeight","lampWidth","shadeTopLeft","shadeTopRight","shadeBottomRight","shadeBottomLeft","lightAngle","deltaX","deltaY","atan2","radiansBetween","lightTriangleAdjacentWidth","tan","lightBottomLeftX","lightBottomRightX","stem","lampshade","Home","wall","table","MAX_RAINDROPS_PER_TICK","cityCanvasRef","cityRef","cityCanvas","dpi","city","createCity","rainCanvasRef","rainfallRef","rainCanvas","_window2","rainfall","createRain","homeCanvasRef","homeRef","clockIntervalRef","homeCanvas","_window3","home","createHome","catCanvasRef","catRef","catCanvas","_window4","cat","adoptCat","lampCanvasRef","lampRef","lampCanvas","_window5","lamp","createLamp","newRaindropsAdded","raindropsToAdd","visualizations","src","process","test","navigator","userAgent","component","Rain","Stars","Waveform","Drummer","Halpern","styledVisualizations","vis","rest","assign","connect","currentIndex","prevIndex","visIndex","direction","useCallback","prev","translateXMultiplier","initial","Fragment","Visualization","Analyser","source","rawData","setRawData","setLowPassData","animationFrameIdRef","rawAnalyser","createAnalyser","fftSize","smoothingTimeConstant","destination","filter","createBiquadFilter","lowPassAnalyser","rawDataContainer","getByteTimeDomainData","lowPassDataContainer","disconnect","Visualizer_VisualizationSelector","Loading","isShown","show","qualities","label","dispatch","setQuality","Actions","onHover","onHoverStop","onMouseEnter","onMouseLeave","onChange","e","target","goToNextVisualization","goToPrevVisualization","isOverlayShown","setIsOverlayShown","isControlHovered","setIsControlHovered","timeoutRef","touchTimestampRef","onKeyDown","event","which","showOverlay","togglePlay","resume","recordTouchTimestamp","preventDefault","goToRepo","open","onMouseDown","nativeEvent","onMouseUp","onTouchEnd","onPrev","stopPropagation","onNext","doNothing","wantsToPlay","isPlaying","components_Loading","onTouchStart","onMouseMove","onClick","Controls_QualitySelect","versionInfo","play","pause","viewBox","strokeWidth","strokeLinecap","strokeLinejoin","points","NoWebAudioApi","App","setWantsToPlay","setIsPlaying","_useStateRef","setState","stateRef","useStateRef","_useStateRef2","setContext","contextRef","_useState5","_useState6","setSource","_useState7","_useState8","isContextUnavailable","setIsContextUnavailable","audioRef","AudioContext","audioElement","onAudioPlay","onAudioPause","onAudioError","console","error","initializeAudioContext","createMediaElementSource","paused","components_NoWebAudioApi","preload","crossOrigin","components_Analyser","components_Controls","ReactDOM","es","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4660c671.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export type Quality = 0 | 1 | 2;\r\n\r\nexport type StoreState = {\r\n  currentVisualizationIndex: number;\r\n  prevVisualizationIndex: number;\r\n  quality: Quality;\r\n};\r\n\r\nexport enum ActionConstants {\r\n  BEGIN_VISUALIZATION_TRANSITION = 'BEGIN_VISUALIZATION_TRANSITION',\r\n  END_VISUALIZATION_TRANSITION = 'END_VISUALIZATION_TRANSITION',\r\n  GO_TO_PREV_VISUALIZATION = 'GO_TO_PREV_VISUALIZATION',\r\n  GO_TO_NEXT_VISUALIZATION = 'GO_TO_NEXT_VISUALIZATION',\r\n  SET_QUALITY = 'SET_QUALITY'\r\n}\r\n\r\ninterface GoToNextVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_NEXT_VISUALIZATION;\r\n}\r\n\r\ninterface GoToPrevVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_PREV_VISUALIZATION;\r\n}\r\n\r\ninterface SetQualityAction {\r\n  type: typeof ActionConstants.SET_QUALITY;\r\n  quality: Quality;\r\n}\r\n\r\nexport type ActionUnionType =\r\n  | GoToNextVisualizationAction\r\n  | GoToPrevVisualizationAction\r\n  | SetQualityAction;\r\n","import { StoreState, ActionConstants, ActionUnionType } from './types';\r\n\r\nconst initialState: StoreState = {\r\n  currentVisualizationIndex: 0,\r\n  prevVisualizationIndex: 0,\r\n  quality: 2\r\n};\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: ActionUnionType\r\n): StoreState {\r\n  switch (action.type) {\r\n    case ActionConstants.GO_TO_NEXT_VISUALIZATION:\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex + 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.GO_TO_PREV_VISUALIZATION:\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex - 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.SET_QUALITY:\r\n      return {\r\n        ...state,\r\n        quality: action.quality\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Options } from './index';\r\nimport { Quality } from '../../../store/types';\r\nimport './Visualization.scss';\r\n\r\nexport type Props = {\r\n  // array of frequency data with values 0-255\r\n  data: Uint8Array;\r\n  lowPassData: Uint8Array;\r\n  options?: Options;\r\n  quality: Quality;\r\n};\r\n\r\nexport type WrappedProps = {\r\n  data: Uint8Array;\r\n  lowPassData: Uint8Array;\r\n  isBeat: boolean;\r\n  intensity: number;\r\n  lowPassIntensity: number;\r\n  quality: Quality;\r\n};\r\n\r\nconst defaultProps: Props = {\r\n  data: new Uint8Array(),\r\n  lowPassData: new Uint8Array(),\r\n  options: {},\r\n  quality: 2\r\n};\r\n\r\n// all visualization components should be wrapped with this HOC\r\nexport function wrap(\r\n  WrappedComponent: React.ComponentType<WrappedProps>\r\n): React.ComponentType<Props> {\r\n  return function({\r\n    data,\r\n    lowPassData,\r\n    options,\r\n    quality\r\n  }: Props = defaultProps) {\r\n    const rawIntensitiesRef = useRef<number[]>([]);\r\n    const lowPassIntensitiesRef = useRef<number[]>([]);\r\n    const startingTimestampRef = useRef<number>(Date.now());\r\n\r\n    let totalDifferenceFromRawBaseline = 0;\r\n    let totalDifferenceFromLowBaseline = 0;\r\n\r\n    const renderedData = data.map((rawDataElement, i) => {\r\n      totalDifferenceFromRawBaseline += Math.abs(rawDataElement - 128);\r\n\r\n      const lowPassDataElement = lowPassData[i];\r\n      totalDifferenceFromLowBaseline += Math.abs(lowPassDataElement - 128);\r\n\r\n      if (options == null || !options.smoothing) {\r\n        return rawDataElement;\r\n      } else {\r\n        // smooth out each data value using a range of values around it,\r\n        // the range of this window is the value of options.smoothing\r\n        let sum = 0;\r\n        let count = 0;\r\n\r\n        let rangeIndex = i - options.smoothing;\r\n\r\n        while (rangeIndex < i + options.smoothing) {\r\n          const rawDataAtRangeIndex = data[rangeIndex] || 128;\r\n          sum += rawDataAtRangeIndex;\r\n          count += 1;\r\n          rangeIndex += 1;\r\n        }\r\n\r\n        return sum / count;\r\n      }\r\n    });\r\n\r\n    let rawIntensityMax = 0;\r\n\r\n    let lowPassIntensitySum = 0;\r\n    let lowPassIntensityCount = 0;\r\n    let lowPassIntensityMax = 0;\r\n\r\n    rawIntensitiesRef.current.forEach((rawIntensity, i) => {\r\n      if (rawIntensity > rawIntensityMax) {\r\n        rawIntensityMax = rawIntensity;\r\n      }\r\n\r\n      const lowPassIntensity = lowPassIntensitiesRef.current[i];\r\n      lowPassIntensitySum += lowPassIntensity;\r\n      lowPassIntensityCount += 1;\r\n\r\n      if (lowPassIntensity > lowPassIntensityMax) {\r\n        lowPassIntensityMax = lowPassIntensity;\r\n      }\r\n    });\r\n\r\n    const currentRawIntensity = totalDifferenceFromRawBaseline / data.length;\r\n    const recentLowPassAvgIntensity =\r\n      lowPassIntensitySum / lowPassIntensityCount || 0;\r\n\r\n    const currentLowPassIntensity =\r\n      totalDifferenceFromLowBaseline / lowPassData.length;\r\n\r\n    rawIntensitiesRef.current = rawIntensitiesRef.current.concat(\r\n      currentRawIntensity\r\n    );\r\n    lowPassIntensitiesRef.current = lowPassIntensitiesRef.current.concat(\r\n      currentLowPassIntensity\r\n    );\r\n\r\n    // remove intensities older than 2 seconds\r\n    if (Date.now() - startingTimestampRef.current > 2000) {\r\n      rawIntensitiesRef.current.shift();\r\n      lowPassIntensitiesRef.current.shift();\r\n    }\r\n\r\n    const isBeat = currentLowPassIntensity > recentLowPassAvgIntensity * 1.5;\r\n\r\n    return (\r\n      <WrappedComponent\r\n        data={renderedData}\r\n        lowPassData={lowPassData}\r\n        isBeat={isBeat}\r\n        intensity={currentRawIntensity}\r\n        lowPassIntensity={currentLowPassIntensity}\r\n        quality={quality}\r\n      />\r\n    );\r\n  };\r\n}\r\n","const colorTriples = [\r\n  ['#0E9AA7', '#F6CD61', '#FE8A71'],\r\n  ['#EE4540', '#801336', '#2D142C'],\r\n  ['#8FB9A8', '#FDFBD4', '#FCD0BA'],\r\n  ['#AC6D83', '#685D79', '#465C7A'],\r\n  ['#F36E38', '#EF4648', '#582841'],\r\n  ['#F1F1F1', '#9BD7D1', '#305D7A'],\r\n  ['#DEA5B6', '#F3CD8C', '#F2E9C2'],\r\n  ['#E27B47', '#EFCA58', '#46B29E'],\r\n  ['#2E7345', '#2E9975', '#2DB3B3'],\r\n  ['#52A3CC', '#7EA1E5', '#AAAAF2'],\r\n  ['#CC5285', '#CC5285', '#F2BCAA'],\r\n  ['#D8E0BB', '#B6CEC7', '#86A3C3']\r\n];\r\n\r\nconst colorTriplesWithIds = colorTriples.map((colorTriple, i) => ({\r\n  id: i,\r\n  colorTriple\r\n}));\r\n\r\nfunction randomColorTriple() {\r\n  return colorTriples[Math.floor(Math.random() * colorTriples.length)];\r\n}\r\n\r\nexport function getRandomColors(numColors: number, areUnique?: boolean): string[] {\r\n  const colors: string[] = [];\r\n\r\n  while (colors.length < numColors) {\r\n    const randomTriple = randomColorTriple();\r\n    const randomColor = randomTriple[Math.floor(Math.random() * randomTriple.length)];\r\n\r\n    if (areUnique && colors.includes(randomColor)) {\r\n      break;\r\n    }\r\n\r\n    colors.push(randomColor);\r\n  }\r\n  return colors;\r\n}\r\n\r\nexport function getRandomColor() {\r\n  return getRandomColors(1)[0];\r\n}\r\n\r\nexport function getRandomColorTriple() {\r\n  const colorCopy = [...randomColorTriple()];\r\n  if (Math.random() <= 0.5) {\r\n    return colorCopy.reverse();\r\n  } else {\r\n    return colorCopy;\r\n  }\r\n}\r\n","export function modulo(number1: number, number2: number): number {\r\n  return ((number1 % number2) + number2) % number2;\r\n}\r\n\r\nexport function isMobileDevice(): boolean {\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n    navigator.userAgent\r\n  );\r\n}\r\n\r\nfunction isInteger(number: number) {\r\n  return modulo(number, 1) === 0;\r\n}\r\n\r\nexport function randomNumberBetween(\r\n  min: number,\r\n  max: number,\r\n  decimalPrecision = 1\r\n) {\r\n  if (isInteger(min) && isInteger(max)) {\r\n    return min + Math.floor(Math.random() * (max - min));\r\n  }\r\n\r\n  const randomFloat = min + Math.random() * (max - min);\r\n  return Number(randomFloat.toPrecision(decimalPrecision));\r\n}\r\n\r\nexport function debounced(\r\n  fn: (...args: any[]) => any,\r\n  msToWait: number = 500,\r\n  isImmediate: boolean = false\r\n) {\r\n  let timeoutId: number | null = null;\r\n\r\n  return function(this: any, ...args: any[]): any {\r\n    const context = this;\r\n\r\n    const delayedFunction = function() {\r\n      timeoutId = null;\r\n\r\n      if (!isImmediate) {\r\n        fn.apply(context, args);\r\n      }\r\n    };\r\n\r\n    const shouldCallNow = isImmediate && timeoutId == null;\r\n\r\n    if (timeoutId != null) {\r\n      window.clearTimeout(timeoutId);\r\n    }\r\n\r\n    timeoutId = window.setTimeout(delayedFunction, msToWait);\r\n\r\n    if (shouldCallNow) {\r\n      fn.apply(context, args);\r\n    }\r\n  };\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { debounced } from '../utils';\r\n\r\nexport function useStateRef<S>(\r\n  initialState: S | (() => S)\r\n): [S, React.Dispatch<React.SetStateAction<S>>, React.MutableRefObject<S>] {\r\n  const [state, setState] = useState(initialState);\r\n  const stateRef = useRef(state);\r\n\r\n  useEffect(() => {\r\n    stateRef.current = state;\r\n  }, [state]);\r\n\r\n  return [state, setState, stateRef];\r\n}\r\n\r\nexport function useDebouncedResize(fn: () => void) {\r\n  useEffect(() => {\r\n    fn();\r\n\r\n    const debouncedFn = debounced(fn);\r\n    window.addEventListener('resize', debouncedFn);\r\n    return () => window.removeEventListener('resize', debouncedFn);\r\n  }, []);\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { getColors } from './utils';\r\nimport { useDebouncedResize } from '../../../../utils/hooks';\r\nimport './Waveform.scss';\r\n\r\nconst LINE_WIDTH = 10;\r\nconst LINE_X_OFFSET = 0;\r\nconst LINE_Y_OFFSET = 5;\r\n\r\nconst Waveform: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  quality\r\n}) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useDebouncedResize(() => {\r\n    const { innerWidth, innerHeight, devicePixelRatio = 1 } = window;\r\n\r\n    const canvas = canvasRef.current!;\r\n    canvas.width = innerWidth * devicePixelRatio;\r\n    canvas.height = innerHeight * devicePixelRatio;\r\n\r\n    // initial paint to match fade out color from rounding error\r\n    const ctx = canvas.getContext('2d')!;\r\n    ctx.fillStyle = '#101010';\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  });\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n\r\n    const fadeOut = () => {\r\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    };\r\n\r\n    const intervalId = window.setInterval(fadeOut, 7);\r\n    return () => window.clearInterval(intervalId);\r\n  }, []);\r\n\r\n  // paint on every data update\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n    ctx.lineWidth = LINE_WIDTH;\r\n    ctx.lineCap = 'round';\r\n\r\n    const colors = getColors(quality + 1);\r\n\r\n    const sliceWidth = canvas.width / data.length;\r\n\r\n    colors.forEach((color, i) => {\r\n      ctx.strokeStyle = color;\r\n      ctx.beginPath();\r\n\r\n      let x = i * LINE_X_OFFSET;\r\n      ctx.moveTo(x, canvas.height / 2);\r\n\r\n      data.forEach(dataElement => {\r\n        const y =\r\n          (dataElement / 255.0) * canvas.height -\r\n          (LINE_Y_OFFSET * colors.length) / 2;\r\n        ctx.lineTo(x, y + i * ((LINE_Y_OFFSET * colors.length) / 2));\r\n        x += sliceWidth;\r\n      });\r\n\r\n      ctx.lineTo(x, canvas.height / 2);\r\n      ctx.stroke();\r\n    });\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"waveform\">\r\n      <div className=\"backdrop\" />\r\n      <canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Waveform);\r\n","import {\r\n  getRandomColorTriple,\r\n  getRandomColors,\r\n  getRandomColor\r\n} from '../../../../utils/colors';\r\n\r\nexport function getColors(numColors: number) {\r\n  switch (numColors) {\r\n    case 3:\r\n      return getRandomColorTriple();\r\n    case 2:\r\n      return getRandomColors(2, true);\r\n    case 1:\r\n      return [getRandomColor()];\r\n    default:\r\n      return getRandomColorTriple();\r\n  }\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useTransition, animated, interpolate, config } from 'react-spring';\r\nimport classNames from 'classnames';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { useDebouncedResize } from '../../../../utils/hooks';\r\nimport { getRandomColor } from '../../../../utils/colors';\r\nimport { DATA_SIZE } from '../../../../config';\r\nimport { QualitySettings } from '../index';\r\nimport './Drummer.scss';\r\n\r\nconst MIN_HIT_COUNT = 0.04;\r\nconst MIN_FREQUENCY_VARIATION = 10;\r\nconst MIN_DELAY_BETWEEN_COLOR_CHANGE = 200;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: { NUM_DRUMMERS: 6 },\r\n  1: { NUM_DRUMMERS: 10 },\r\n  2: { NUM_DRUMMERS: 16 }\r\n};\r\n\r\nconst minHitCount = MIN_HIT_COUNT * DATA_SIZE;\r\n\r\nconst Drummer: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  isBeat,\r\n  quality\r\n}) => {\r\n  const [size, setSize] = useState(0);\r\n  const [colorSize, setColorSize] = useState(0);\r\n\r\n  const colorsRef = useRef({\r\n    values: [getRandomColor()],\r\n    lastChangedTimestamp: Date.now()\r\n  });\r\n\r\n  useDebouncedResize(() => {\r\n    const { innerWidth, innerHeight } = window;\r\n    const maxSideLength = Math.max(innerWidth, innerHeight);\r\n    setSize(maxSideLength * 2);\r\n\r\n    const colorDiameter = Math.sqrt(\r\n      Math.pow(innerWidth, 2) + Math.pow(innerHeight, 2)\r\n    );\r\n    setColorSize(colorDiameter);\r\n  });\r\n\r\n  const colors = colorsRef.current;\r\n  const numDrummers = QUALITY[quality].NUM_DRUMMERS;\r\n\r\n  const freqMap: { [key: string]: number } = {};\r\n  const numPerSlice = 256 / numDrummers;\r\n\r\n  let freqKey = 0;\r\n  while (freqKey < numDrummers) {\r\n    freqMap[freqKey] = 0;\r\n    freqKey += 1;\r\n  }\r\n\r\n  data.forEach(freqData => {\r\n    let freqKey = 0;\r\n    while (freqKey < numDrummers) {\r\n      const ceiling = numPerSlice * (freqKey + 1);\r\n      if (\r\n        Math.abs(freqData - 128) > MIN_FREQUENCY_VARIATION &&\r\n        freqData <= ceiling\r\n      ) {\r\n        freqMap[freqKey] += 1;\r\n        break;\r\n      }\r\n      freqKey += 1;\r\n    }\r\n  });\r\n\r\n  // space out background color changes so they're not jarring\r\n  const now = Date.now();\r\n  if (\r\n    isBeat &&\r\n    now - colors.lastChangedTimestamp > MIN_DELAY_BETWEEN_COLOR_CHANGE\r\n  ) {\r\n    let newColor;\r\n    do {\r\n      newColor = getRandomColor();\r\n    } while (colors.values[colors.values.length - 1] === newColor);\r\n\r\n    colors.values.push(newColor);\r\n    if (colors.values.length > 1) {\r\n      colors.values.shift();\r\n    }\r\n    colors.lastChangedTimestamp = now;\r\n  }\r\n\r\n  const drummers = Object.entries(freqMap).map(([freqKey, hitCount], i) => {\r\n    const drummerContainerSize = ((1 + +freqKey) * size) / numDrummers;\r\n\r\n    return (\r\n      <div\r\n        key={freqKey}\r\n        className=\"drummer-container\"\r\n        style={{\r\n          width: `${drummerContainerSize}px`,\r\n          height: `${drummerContainerSize}px`,\r\n          opacity: ((numDrummers - i) / numDrummers) * 0.5 * 0.25\r\n        }}\r\n      >\r\n        <div className={classNames('beat', { hit: hitCount > minHitCount })} />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const smallestDrummerSize = size / (numDrummers * 2);\r\n\r\n  const transitions = useTransition(colors.values, null, {\r\n    from: item => ({\r\n      backgroundColor: item,\r\n      width: smallestDrummerSize,\r\n      height: smallestDrummerSize,\r\n      scale: 1\r\n    }),\r\n    enter: { scale: (colorSize / smallestDrummerSize) * 1.5 },\r\n    leave: { scale: 0 },\r\n    config: config.slow\r\n  });\r\n\r\n  return (\r\n    <div className=\"drummer\">\r\n      {drummers}\r\n      {transitions.map(({ item, props, key }) => {\r\n        const { scale, ...style } = props as any;\r\n\r\n        return (\r\n          <animated.div\r\n            className=\"color-overlay\"\r\n            key={key}\r\n            style={{\r\n              ...style,\r\n              transform: interpolate(\r\n                [scale],\r\n                (s: number) => `translate3d(0, 0, 0) scale(${s})`\r\n              )\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Drummer);\r\n","import { Scene, PointsMaterial, Clock } from 'three';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\nimport { createSphereGeometry, createPoints } from './entities/polys';\r\nimport { QualitySettings } from '../../index';\r\nimport { debounced } from '../../../../../utils';\r\nimport { Quality } from '../../../../../store/types';\r\n\r\nconst DELAY_BEFORE_ROTATING_X = 1500;\r\nconst CAMERA_MAX_DISTANCE = 200;\r\nconst CAMERA_DRIFT = 0.025;\r\nconst ROTATE_Y = -0.3;\r\nconst ROTATE_X = 0.3;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: { sphereSegments: 30 },\r\n  1: { sphereSegments: 48 },\r\n  2: { sphereSegments: 72 }\r\n};\r\n\r\nexport default function sceneManager(\r\n  rendererContainer: HTMLDivElement,\r\n  quality: Quality\r\n) {\r\n  let animationFrameId: number;\r\n  let sceneInitializedTimestamp = Date.now();\r\n  let t = 0;\r\n\r\n  const sphereGeometry = createSphereGeometry(QUALITY[quality].sphereSegments);\r\n  const halpern = createPoints(sphereGeometry);\r\n  const camera = createCamera(CAMERA_MAX_DISTANCE);\r\n  const renderer = createRenderer();\r\n  rendererContainer.appendChild(renderer.domElement);\r\n\r\n  const scene = new Scene();\r\n  scene.add(halpern);\r\n\r\n  // clock is started in Halpern component when the\r\n  // animation loop is started\r\n  const clock = new Clock();\r\n\r\n  const debouncedResize = debounced(onResize);\r\n  window.addEventListener('resize', debouncedResize);\r\n  document.addEventListener('visibilitychange', onVisibilityChange);\r\n\r\n  function animate() {\r\n    const delta = clock.getDelta();\r\n\r\n    halpern.rotateY(ROTATE_Y * delta);\r\n\r\n    if (Date.now() - sceneInitializedTimestamp > DELAY_BEFORE_ROTATING_X) {\r\n      halpern.rotateX(ROTATE_X * delta);\r\n    }\r\n\r\n    t += delta;\r\n\r\n    if (t >= Math.PI * 2) {\r\n      t = 0;\r\n    }\r\n\r\n    camera.translateY(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateX(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateZ(Math.cos(t) * CAMERA_DRIFT * 5);\r\n\r\n    renderer.render(scene, camera);\r\n    animationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function cleanup() {\r\n    window.cancelAnimationFrame(animationFrameId);\r\n    window.removeEventListener('resize', debouncedResize);\r\n    document.removeEventListener('visibilitychange', onVisibilityChange);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    scene.remove(halpern);\r\n\r\n    halpern.geometry.dispose();\r\n    (halpern.material as PointsMaterial).dispose();\r\n    sphereGeometry.dispose();\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function onVisibilityChange() {\r\n    if (document.visibilityState === 'hidden') {\r\n      clock.stop();\r\n    } else {\r\n      clock.start();\r\n    }\r\n  }\r\n\r\n  return {\r\n    clock,\r\n    sphereGeometry,\r\n    halpern,\r\n    animate,\r\n    cleanup\r\n  };\r\n}\r\n","import {\r\n  Points,\r\n  PointsMaterial,\r\n  SphereGeometry,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  TextureLoader\r\n} from 'three';\r\n\r\nexport function createSphereGeometry(segments: number): SphereGeometry {\r\n  return new SphereGeometry(48, segments, segments);\r\n}\r\n\r\nexport function createPoints(sphereGeometry: SphereGeometry): Points {\r\n  const pointGeometry = new SphereGeometry(\r\n    sphereGeometry.parameters.radius,\r\n    sphereGeometry.parameters.widthSegments,\r\n    sphereGeometry.parameters.heightSegments\r\n  );\r\n\r\n  const { vertices } = pointGeometry;\r\n  const positions = new Float32Array(vertices.length * 3);\r\n\r\n  vertices.forEach((vertex, i) => {\r\n    vertex.toArray(positions, i * 3);\r\n  });\r\n\r\n  const geometry = new BufferGeometry();\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n  (geometry.attributes.position as BufferAttribute).dynamic = true;\r\n\r\n  const material = new PointsMaterial({\r\n    size: 0.5,\r\n    map: new TextureLoader().load('assets/images/point.png'),\r\n    alphaTest: 0.5,\r\n    color: 0x666666,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, material);\r\n}\r\n","import { PerspectiveCamera, Vector3 } from 'three';\r\n\r\nexport function createCamera(startingY: number) {\r\n  const camera = new PerspectiveCamera(\r\n    75,\r\n    window.innerWidth / window.innerHeight,\r\n    0.1,\r\n    1000\r\n  );\r\n\r\n  camera.position.set(0, startingY, 0);\r\n  camera.lookAt(new Vector3(0, 0, 0));\r\n\r\n  return camera;\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ alpha: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x000000, 0);\r\n\r\n  return renderer;\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { BufferGeometry, BufferAttribute } from 'three';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport sceneManager from './three/sceneManager';\r\nimport { QualitySettings } from '../index';\r\nimport './Halpern.scss';\r\n\r\nconst VERTEX_SEGMENT_WEIGHT_COEFFICIENT = 0.1;\r\nconst BASELINE_VERTEX_SCALAR_FACTOR = 1;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: { RIPPLE_SPEED: 2 },\r\n  1: { RIPPLE_SPEED: 3 },\r\n  2: { RIPPLE_SPEED: 4 }\r\n};\r\n\r\nconst Halpern: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  quality\r\n}) => {\r\n  const rendererRef = useRef<HTMLDivElement>(null);\r\n  const managedSceneRef = useRef<any>();\r\n  const originalVerticesRef = useRef<ArrayLike<number>>();\r\n  const sphereDataSegmentsRef = useRef<number>();\r\n  const vertexSegmentLengthRef = useRef<number>();\r\n  const focusedDataRef = useRef<number[]>(new Array(data.length).fill(128));\r\n\r\n  useEffect(() => {\r\n    const rendererContainer = rendererRef.current!;\r\n    const managedScene = sceneManager(rendererContainer, quality);\r\n\r\n    managedSceneRef.current = managedScene;\r\n\r\n    const halpernGeometry = managedScene.halpern.geometry as BufferGeometry;\r\n\r\n    sphereDataSegmentsRef.current = Math.floor(\r\n      data.length / managedScene.sphereGeometry.parameters.widthSegments\r\n    );\r\n\r\n    // split vertices up into segments belonging to slices of x cross sections,\r\n    // first and last vertices are at top and bottom of sphere\r\n    vertexSegmentLengthRef.current =\r\n      (managedScene.sphereGeometry.vertices.length - 2) /\r\n      (managedScene.sphereGeometry.parameters.widthSegments - 1);\r\n\r\n    originalVerticesRef.current = (halpernGeometry.attributes.position\r\n      .array as Float32Array).slice(0);\r\n\r\n    managedScene.clock.start();\r\n\r\n    managedScene.animate();\r\n\r\n    return managedScene.cleanup;\r\n  }, [quality]);\r\n\r\n  useEffect(() => {\r\n    const rippleSpeed = QUALITY[quality].RIPPLE_SPEED;\r\n    const focusedDataIndex = Math.floor(data.length / 2);\r\n\r\n    focusedDataRef.current.splice(0, rippleSpeed);\r\n    focusedDataRef.current = focusedDataRef.current.concat(\r\n      new Array(rippleSpeed).fill(data[focusedDataIndex])\r\n    );\r\n\r\n    const halpernGeometry = managedSceneRef.current!.halpern.geometry;\r\n    const halpernBufferPositions = halpernGeometry.getAttribute('position')\r\n      .array as Float32Array;\r\n\r\n    let i = 0;\r\n    while (i < originalVerticesRef.current!.length) {\r\n      // find which segment the current index belongs to\r\n      const vertexSegmentIndex = Math.ceil(\r\n        Math.floor(i / 3) / vertexSegmentLengthRef.current!\r\n      );\r\n\r\n      const dataIndex = vertexSegmentIndex * sphereDataSegmentsRef.current!;\r\n      const vertexSegmentWeight = Math.min(\r\n        vertexSegmentIndex,\r\n        vertexSegmentLengthRef.current! - vertexSegmentIndex\r\n      );\r\n\r\n      const dataVariation =\r\n        Math.abs(focusedDataRef.current[dataIndex] - 128) / 255;\r\n\r\n      const scalar =\r\n        dataVariation *\r\n          vertexSegmentWeight *\r\n          VERTEX_SEGMENT_WEIGHT_COEFFICIENT +\r\n        BASELINE_VERTEX_SCALAR_FACTOR;\r\n\r\n      // update X, Y, and Z vector positions in BufferGeometry\r\n      halpernBufferPositions[i] = originalVerticesRef.current![i] * scalar;\r\n      halpernBufferPositions[i + 1] =\r\n        originalVerticesRef.current![i + 1] * scalar;\r\n      halpernBufferPositions[i + 2] =\r\n        originalVerticesRef.current![i + 2] * scalar;\r\n\r\n      i += 3;\r\n    }\r\n\r\n    // inform three.js that vertices should be repositioned,\r\n    // final render is handled in sceneManager animate loop\r\n    (halpernGeometry.getAttribute(\r\n      'position'\r\n    ) as BufferAttribute).needsUpdate = true;\r\n  }, [data]);\r\n\r\n  return <div className=\"halpern\" ref={rendererRef} />;\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Halpern);\r\n","export const starVertexShader = `\r\nattribute float alpha;\r\nvarying float vAlpha;\r\n\r\nvoid main() {\r\n  vAlpha = alpha;\r\n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n  gl_PointSize = 4.0 * alpha;\r\n  gl_Position = projectionMatrix * mvPosition;\r\n}\r\n`;\r\n\r\nexport const starFragmentShader = `\r\nuniform vec3 color;\r\nvarying float vAlpha;\r\n\r\nvoid main() {\r\n  float r = 0.0;\r\n  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\r\n  r = dot(cxy, cxy);\r\n  if (r > 1.0) {\r\n    discard;\r\n  }\r\n\r\n  gl_FragColor = vec4(color, vAlpha);\r\n}\r\n`;\r\n","import {\r\n  Points,\r\n  BufferAttribute,\r\n  ShaderMaterial,\r\n  Color,\r\n  BufferGeometry,\r\n  TextureLoader,\r\n  MeshLambertMaterial,\r\n  Mesh,\r\n  PlaneGeometry\r\n} from 'three';\r\nimport { starVertexShader, starFragmentShader } from './shaders';\r\n\r\nexport function createStars(starCount: number): Points {\r\n  const geometry = new BufferGeometry();\r\n\r\n  const positions = new Float32Array(starCount * 3);\r\n\r\n  let i = 0;\r\n  while (i < starCount) {\r\n    // add random x, y, and z vector positions\r\n    positions[i++] = Math.random() * 100 - 50;\r\n    positions[i++] = Math.random() * 100 - 50;\r\n    positions[i++] = Math.random() * 100 - 50;\r\n  }\r\n\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n\r\n  const alphas = new Float32Array(geometry.attributes.position.count * 1);\r\n\r\n  let j = 0;\r\n  while (j < alphas.length) {\r\n    alphas[j] = Math.random();\r\n    j += 1;\r\n  }\r\n\r\n  geometry.addAttribute('alpha', new BufferAttribute(alphas, 1));\r\n\r\n  const shaderMaterial = new ShaderMaterial({\r\n    uniforms: {\r\n      color: { type: 'c', value: new Color(0xffffff) }\r\n    },\r\n    vertexShader: starVertexShader,\r\n    fragmentShader: starFragmentShader,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, shaderMaterial);\r\n}\r\n\r\nexport function createCloud(): Mesh {\r\n  const texture = Math.random() < 0.5 ? 'cloud.png' : 'smoke.png';\r\n\r\n  const geometry = new PlaneGeometry(50, 50);\r\n\r\n  const cloudMaterial = new MeshLambertMaterial({\r\n    map: new TextureLoader().load(`assets/images/${texture}`),\r\n    transparent: true,\r\n    opacity: 0.15,\r\n    depthTest: false\r\n  });\r\n\r\n  geometry.rotateZ(Math.random() * 360);\r\n\r\n  const cloud = new Mesh(geometry, cloudMaterial);\r\n\r\n  const zPosition = Math.random() * 15 + 10;\r\n\r\n  cloud.position.set(\r\n    Math.random() * 100 - 50,\r\n    Math.random() * 100 - 50,\r\n    Math.random() < 0.5 ? zPosition : -zPosition\r\n  );\r\n\r\n  return cloud;\r\n}\r\n","import { DirectionalLight, AmbientLight } from 'three';\r\n\r\nexport function createAmbientLight(color: number, intensity: number) {\r\n  return new AmbientLight(color, intensity);\r\n}\r\n\r\nexport function createDirectionalLight(color: number, intensity: number) {\r\n  return new DirectionalLight(color, intensity);\r\n}\r\n","import {\r\n  Scene,\r\n  PointsMaterial,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  Group,\r\n  Mesh,\r\n  ShaderMaterial,\r\n  Clock\r\n} from 'three';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\nimport { createStars, createCloud } from './entities/polys';\r\nimport { createAmbientLight, createDirectionalLight } from './entities/light';\r\nimport { QualitySettings } from '../../index';\r\nimport { debounced } from '../../../../../utils';\r\n\r\nconst MAX_STAR_ALPHA = 1.0;\r\nconst MIN_STAR_ALPHA = 0.2;\r\nconst STAR_ALPHA_DELTA = 0.75;\r\nconst ROTATE_Y = 0.025;\r\nconst ROTATE_X = 0.001;\r\nconst STATIC_LIGHT_COLOR = 0x00c4b6;\r\nconst VARIABLE_LIGHT_COLOR = 0xd10022;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: {\r\n    STAR_COUNT: 5 * 1000,\r\n    CLOUD_COUNT: 20\r\n  },\r\n  1: {\r\n    STAR_COUNT: 10 * 1000,\r\n    CLOUD_COUNT: 40\r\n  },\r\n  2: {\r\n    STAR_COUNT: 20 * 1000,\r\n    CLOUD_COUNT: 65\r\n  }\r\n};\r\n\r\nexport default function sceneManager(\r\n  rendererContainer: HTMLDivElement,\r\n  quality: number,\r\n  lightIntensity: number\r\n) {\r\n  let animationFrameId: number;\r\n\r\n  const renderer = createRenderer();\r\n  rendererContainer.appendChild(renderer.domElement);\r\n  const camera = createCamera();\r\n  const scene = new Scene();\r\n\r\n  const stars = createStars(QUALITY[quality].STAR_COUNT);\r\n  scene.add(stars);\r\n\r\n  const cloudCover = new Group();\r\n\r\n  let cloudCount = 0;\r\n  while (cloudCount <= QUALITY[quality].CLOUD_COUNT) {\r\n    const cloud = createCloud();\r\n    cloudCover.add(cloud);\r\n    cloudCount += 1;\r\n  }\r\n\r\n  scene.add(cloudCover);\r\n\r\n  const aLight = createAmbientLight(0xffffff, lightIntensity);\r\n  scene.add(aLight);\r\n\r\n  const fixedDLight = createDirectionalLight(STATIC_LIGHT_COLOR, 2);\r\n  fixedDLight.position.set(0, 0, 1);\r\n  scene.add(fixedDLight);\r\n\r\n  const dLight = createDirectionalLight(VARIABLE_LIGHT_COLOR, lightIntensity);\r\n  dLight.position.set(0, 0, 1);\r\n  scene.add(dLight);\r\n\r\n  // create a fixed array to track which direction to adjust each star alpha\r\n  const starAlphas = (stars.geometry as BufferGeometry).attributes.alpha;\r\n  const alphaDirection = new Float32Array(starAlphas.count);\r\n\r\n  for (let i = 0; i < alphaDirection.length; i++) {\r\n    // direction of 1 means alpha should increase\r\n    // -1 means alpha should decrease\r\n    alphaDirection[i] = Math.random() < 0.5 ? 1 : -1;\r\n  }\r\n\r\n  // clock is started in Stars component when\r\n  // the animation loop is first triggered\r\n  const clock = new Clock();\r\n\r\n  const debouncedResize = debounced(onResize);\r\n  window.addEventListener('resize', debouncedResize);\r\n  document.addEventListener('visibilitychange', onVisibilityChange);\r\n\r\n  function animate() {\r\n    const delta = clock.getDelta();\r\n\r\n    stars.rotateX(ROTATE_X * delta);\r\n    stars.rotateY(ROTATE_Y * delta);\r\n\r\n    cloudCover.rotateX(ROTATE_X * 24 * delta);\r\n    cloudCover.rotateY(ROTATE_Y * 2 * delta);\r\n    cloudCover.rotateZ(ROTATE_X * 3 * delta);\r\n\r\n    cloudCover.children.forEach(cloud => {\r\n      (cloud as Mesh).lookAt(camera.position);\r\n    });\r\n\r\n    // use alphaDirection to maintain alpha adjustment direction until we\r\n    // reach a limit, then switch the direction\r\n    for (let i = 0; i < starAlphas.count; i++) {\r\n      if (alphaDirection[i] > 0) {\r\n        (starAlphas.array as Float32Array)[i] *= 1 + STAR_ALPHA_DELTA * delta;\r\n        if ((starAlphas.array as Float32Array)[i] > MAX_STAR_ALPHA) {\r\n          alphaDirection[i] = -1;\r\n        }\r\n      } else {\r\n        (starAlphas.array as Float32Array)[i] *= 1 - STAR_ALPHA_DELTA * delta;\r\n        if ((starAlphas.array as Float32Array)[i] < MIN_STAR_ALPHA) {\r\n          alphaDirection[i] = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    (starAlphas as BufferAttribute).needsUpdate = true;\r\n\r\n    renderer.render(scene, camera);\r\n    animationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function cleanup() {\r\n    window.cancelAnimationFrame(animationFrameId);\r\n    window.removeEventListener('resize', debouncedResize);\r\n    document.removeEventListener('visibilitychange', onVisibilityChange);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    scene.remove(stars);\r\n    stars.geometry.dispose();\r\n    (stars.material as PointsMaterial).dispose();\r\n\r\n    scene.remove(cloudCover);\r\n    cloudCover.children.forEach(cloud => {\r\n      (cloud as Mesh).geometry.dispose();\r\n      ((cloud as Mesh).material as ShaderMaterial).dispose();\r\n    });\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function onVisibilityChange() {\r\n    if (document.visibilityState === 'hidden') {\r\n      clock.stop();\r\n    } else {\r\n      clock.start();\r\n    }\r\n  }\r\n\r\n  return {\r\n    clock,\r\n    animate,\r\n    cleanup,\r\n    dLight\r\n  };\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ antialias: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x0000f, 1);\r\n\r\n  return renderer;\r\n}\r\n","import { PerspectiveCamera } from 'three';\r\n\r\nexport function createCamera() {\r\n  const camera = new PerspectiveCamera(\r\n    50,\r\n    window.innerWidth / window.innerHeight,\r\n    1,\r\n    1000\r\n  );\r\n\r\n  return camera;\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport sceneManager from './three/sceneManager';\r\nimport './Stars.scss';\r\n\r\nconst MIN_DELAY_BETWEEN_INTENSITY_CHANGE = 75;\r\nconst MAX_LIGHT_INTENSITY_INCREASE_DELTA = 2.5;\r\nconst MIN_LIGHT_INTENSITY = 1;\r\n\r\nconst Stars: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  intensity,\r\n  quality\r\n}) => {\r\n  const rendererRef = useRef<HTMLDivElement>(null);\r\n  const managedSceneRef = useRef<any>();\r\n  const lightTimestampRef = useRef<number>(Date.now());\r\n\r\n  useEffect(() => {\r\n    const rendererContainer = rendererRef.current!;\r\n    const managedScene = sceneManager(\r\n      rendererContainer,\r\n      quality,\r\n      MIN_LIGHT_INTENSITY\r\n    );\r\n\r\n    managedSceneRef.current = managedScene;\r\n\r\n    managedScene.clock.start();\r\n    managedScene.animate();\r\n\r\n    return managedScene.cleanup;\r\n  }, [quality]);\r\n\r\n  useEffect(() => {\r\n    const now = Date.now();\r\n\r\n    if (now - lightTimestampRef.current <= MIN_DELAY_BETWEEN_INTENSITY_CHANGE) {\r\n      return;\r\n    }\r\n\r\n    const { dLight } = managedSceneRef.current!;\r\n\r\n    const currentLightIntensity = dLight.intensity;\r\n\r\n    let newLightIntensity = intensity / 2 || MIN_LIGHT_INTENSITY;\r\n\r\n    if (\r\n      newLightIntensity - currentLightIntensity >\r\n      MAX_LIGHT_INTENSITY_INCREASE_DELTA\r\n    ) {\r\n      newLightIntensity =\r\n        currentLightIntensity + MAX_LIGHT_INTENSITY_INCREASE_DELTA;\r\n    }\r\n\r\n    dLight.intensity = newLightIntensity;\r\n\r\n    lightTimestampRef.current = now;\r\n  }, [data]);\r\n\r\n  return <div className=\"stars\" ref={rendererRef} />;\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Stars);\r\n","const WINDOW_FRAME_THICKNESS_DIVISOR = 50;\r\n\r\nexport abstract class Renderer {\r\n  protected canvasWidth: number;\r\n  protected canvasHeight: number;\r\n  protected oneThirdCanvasWidth: number;\r\n  protected oneHalfCanvasHeight: number;\r\n  protected windowFrameThickness: number;\r\n  protected roundedRadius: number;\r\n\r\n  constructor(protected ctx: CanvasRenderingContext2D) {\r\n    this.canvasWidth = ctx.canvas.width;\r\n    this.canvasHeight = ctx.canvas.height;\r\n    this.oneThirdCanvasWidth = this.canvasWidth / 3;\r\n    this.oneHalfCanvasHeight = this.canvasHeight / 2;\r\n    this.windowFrameThickness = Math.floor(\r\n      Math.max(this.canvasWidth, this.canvasHeight) /\r\n        WINDOW_FRAME_THICKNESS_DIVISOR\r\n    );\r\n    this.roundedRadius = Math.floor(this.windowFrameThickness / 3);\r\n    ctx.save();\r\n  }\r\n\r\n  // for initial paint - subclasses should call super.render()\r\n  render(): void {\r\n    this.ctx.restore();\r\n  }\r\n\r\n  // for animation\r\n  tick(args: any): void {}\r\n}\r\n","import { randomNumberBetween } from '../../../../../utils';\r\n\r\nconst LIGHT_COLOR = 'rgb(255, 255, 255)';\r\nconst MIN_LIGHT_HEIGHT_RATIO = 0.01;\r\nconst MAX_LIGHT_HEIGHT_RATIO = 0.025;\r\nconst MIN_LIGHTS_PER_FLOOR = 3;\r\nconst MAX_LIGHTS_PER_FLOOR = 10;\r\nconst MIN_GAP_WIDTH_RATIO = 0.01;\r\nconst MAX_GAP_WIDTH_RATIO = 0.05;\r\nconst MIN_LIGHT_PADDING_RATIO = 0.01;\r\nconst MAX_LIGHT_PADDING_RATIO = 0.03;\r\nconst MIN_BUILDING_X_PADDING_RATIO = 0.05;\r\nconst MAX_BUILDING_X_PADDING_RATIO = 0.1;\r\nconst MIN_BUILDING_TOP_PADDING_RATIO = 0.025;\r\nconst MAX_BUILDING_TOP_PADDING_RATIO = 0.1;\r\n\r\nexport type BuildingBlueprint = {\r\n  ctx: CanvasRenderingContext2D;\r\n  canvasHeight: number;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  color: string;\r\n};\r\n\r\ntype Light = {\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  isOn: boolean;\r\n};\r\n\r\nexport class Building {\r\n  private ctx: CanvasRenderingContext2D;\r\n  private canvasHeight: number;\r\n\r\n  public x: number;\r\n  public y: number;\r\n  public width: number;\r\n  public height: number;\r\n  public color: string;\r\n  public lights: Light[] = [];\r\n\r\n  constructor(blueprint: BuildingBlueprint) {\r\n    this.ctx = blueprint.ctx;\r\n    this.canvasHeight = blueprint.canvasHeight;\r\n    this.x = blueprint.x;\r\n    this.y = blueprint.y;\r\n    this.width = blueprint.width;\r\n    this.height = blueprint.height;\r\n    this.color = blueprint.color;\r\n  }\r\n\r\n  // called externally so that buildings may be\r\n  // repositioned before light positions are determined\r\n  generateLights() {\r\n    const { canvasHeight, width, height } = this;\r\n\r\n    const lightHeight =\r\n      randomNumberBetween(MIN_LIGHT_HEIGHT_RATIO, MAX_LIGHT_HEIGHT_RATIO) *\r\n      height;\r\n\r\n    const lightPadding =\r\n      randomNumberBetween(MIN_LIGHT_PADDING_RATIO, MAX_LIGHT_PADDING_RATIO) *\r\n      height;\r\n\r\n    const lightsPerFloor = randomNumberBetween(\r\n      MIN_LIGHTS_PER_FLOOR,\r\n      MAX_LIGHTS_PER_FLOOR\r\n    );\r\n\r\n    const buildingXPadding =\r\n      randomNumberBetween(\r\n        MIN_BUILDING_X_PADDING_RATIO,\r\n        MAX_BUILDING_X_PADDING_RATIO\r\n      ) * width;\r\n\r\n    const buildingTopPadding =\r\n      randomNumberBetween(\r\n        MIN_BUILDING_TOP_PADDING_RATIO,\r\n        MAX_BUILDING_TOP_PADDING_RATIO\r\n      ) * height;\r\n\r\n    const gapWidth =\r\n      randomNumberBetween(MIN_GAP_WIDTH_RATIO, MAX_GAP_WIDTH_RATIO) * width;\r\n\r\n    const lightWidth =\r\n      (this.width - buildingXPadding * 2 - gapWidth * (lightsPerFloor - 1)) /\r\n      lightsPerFloor;\r\n\r\n    const lights: Light[] = [];\r\n    let x = this.x + buildingXPadding;\r\n    let y = this.y + buildingTopPadding;\r\n\r\n    while (y < canvasHeight * 0.98) {\r\n      // each iteration generates a row of lights for the floor\r\n      if (x >= this.x + this.width - buildingXPadding) {\r\n        // start a new floor\r\n        x = this.x + buildingXPadding;\r\n        y += lightHeight + lightPadding;\r\n      } else {\r\n        lights.push({\r\n          x,\r\n          y,\r\n          width: lightWidth,\r\n          height: lightHeight,\r\n          isOn: Math.random() > 0.4\r\n        });\r\n\r\n        x += lightWidth + gapWidth;\r\n      }\r\n    }\r\n\r\n    this.lights = lights;\r\n  }\r\n\r\n  render() {\r\n    const { ctx, x, y, width, height, color } = this;\r\n    ctx.save();\r\n\r\n    // render building\r\n    ctx.fillStyle = color;\r\n    ctx.fillRect(x, y, width, height);\r\n\r\n    // render lights\r\n    ctx.fillStyle = LIGHT_COLOR;\r\n    for (const light of this.lights) {\r\n      if (light.isOn) {\r\n        ctx.fillRect(light.x, light.y, light.width, light.height);\r\n      }\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { Building } from './building';\r\nimport { randomNumberBetween } from '../../../../../utils';\r\nimport { getRandomColor } from '../../../../../utils/colors';\r\n\r\nconst LAYER_OVERLAY_COLOR = 'rgba(65, 35, 66, 0.6)';\r\n\r\nconst MAX_BUILDING_HEIGHT_RATIO = 0.95;\r\nconst MIN_BUILDING_HEIGHT_RATIO = 0.3;\r\nconst MIN_BUILDING_WIDTH_RATIO = 0.08;\r\nconst MAX_BUILDING_WIDTH_RATIO = 0.15;\r\nconst MIN_BUILDING_GAP_RATIO = 0.02;\r\nconst MAX_BUILDING_GAP_RATIO = 0.05;\r\nconst MIN_LAYERS = 4;\r\nconst MAX_LAYERS = 8;\r\n\r\nexport class City extends Renderer {\r\n  private layers: Building[][] = [];\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n    this.generateBuildings();\r\n  }\r\n\r\n  generateBuildings() {\r\n    const { ctx, canvasWidth, canvasHeight } = this;\r\n\r\n    const layers = randomNumberBetween(MIN_LAYERS, MAX_LAYERS);\r\n\r\n    for (let i = 0; i < layers; i++) {\r\n      // buildings per layer\r\n      const layer: Building[] = [];\r\n      let x = 0;\r\n\r\n      while (x < canvasWidth) {\r\n        const width =\r\n          randomNumberBetween(\r\n            MIN_BUILDING_WIDTH_RATIO,\r\n            MAX_BUILDING_WIDTH_RATIO,\r\n            2\r\n          ) * canvasWidth;\r\n\r\n        const height =\r\n          randomNumberBetween(\r\n            MIN_BUILDING_HEIGHT_RATIO,\r\n            MAX_BUILDING_HEIGHT_RATIO,\r\n            2\r\n          ) * canvasHeight;\r\n\r\n        const gap =\r\n          randomNumberBetween(MIN_BUILDING_GAP_RATIO, MAX_BUILDING_GAP_RATIO) *\r\n          canvasWidth;\r\n\r\n        const building = new Building({\r\n          y: canvasHeight - height,\r\n          color: getRandomColor(),\r\n          ctx,\r\n          canvasHeight,\r\n          x,\r\n          width,\r\n          height\r\n        });\r\n\r\n        layer.push(building);\r\n\r\n        x += width + gap;\r\n      }\r\n\r\n      // offset the buildings so the leftmost starts off screen\r\n      const leftMostBuilding = layer[0];\r\n\r\n      const xOffset = randomNumberBetween(\r\n        leftMostBuilding.width * 0.25,\r\n        leftMostBuilding.width * 0.75\r\n      );\r\n\r\n      layer.forEach(building => (building.x -= xOffset));\r\n      this.layers.push(layer);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const { ctx, canvasWidth, canvasHeight, layers } = this;\r\n\r\n    for (let i = 0; i < layers.length; i++) {\r\n      const currentLayer = layers[i];\r\n      currentLayer.forEach(building => building.generateLights());\r\n\r\n      for (const building of currentLayer) {\r\n        building.render();\r\n      }\r\n\r\n      // fade each layer out a bit\r\n      ctx.fillStyle = LAYER_OVERLAY_COLOR;\r\n      ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n    }\r\n  }\r\n}\r\n","const TIME_TO_FALL = 400;\r\nconst RAINDROPS_HEIGHTWISE = 15;\r\nconst RAINDROP_COLOR = '#788';\r\n\r\nclass Raindrop {\r\n  private raindropHeight = 0;\r\n  private createdDate = 0;\r\n\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    private ctx: CanvasRenderingContext2D,\r\n    private canvasHeight: number\r\n  ) {\r\n    this.raindropHeight = Math.floor(this.canvasHeight / RAINDROPS_HEIGHTWISE);\r\n    this.createdDate = Date.now();\r\n  }\r\n\r\n  tick(now: number) {\r\n    const timeDelta = now - this.createdDate;\r\n    this.y = Math.floor((timeDelta / TIME_TO_FALL) * this.canvasHeight);\r\n  }\r\n\r\n  render() {\r\n    const { ctx } = this;\r\n    ctx.fillStyle = RAINDROP_COLOR;\r\n    ctx.fillRect(this.x, this.y, 1, this.raindropHeight);\r\n  }\r\n}\r\n\r\nexport class Rainfall {\r\n  private raindrops: Raindrop[] = [];\r\n  public canvasWidth = 0;\r\n  public canvasHeight = 0;\r\n\r\n  constructor(private ctx: CanvasRenderingContext2D) {\r\n    this.canvasWidth = ctx.canvas.width;\r\n    this.canvasHeight = ctx.canvas.height;\r\n  }\r\n\r\n  tick() {\r\n    const nextRaindrops: Raindrop[] = [];\r\n    const { raindrops, canvasHeight } = this;\r\n    const now = Date.now();\r\n\r\n    raindrops.forEach(raindrop => {\r\n      raindrop.tick(now);\r\n\r\n      if (raindrop.y < canvasHeight) {\r\n        nextRaindrops.push(raindrop);\r\n      }\r\n    });\r\n\r\n    this.raindrops = nextRaindrops;\r\n  }\r\n\r\n  add() {\r\n    const { raindrops, ctx, canvasWidth, canvasHeight } = this;\r\n    const startingX = Math.floor(Math.random() * (canvasWidth - 1) + 1);\r\n    const startingY = -canvasHeight / RAINDROPS_HEIGHTWISE;\r\n\r\n    raindrops.push(new Raindrop(startingX, startingY, ctx, canvasHeight));\r\n  }\r\n\r\n  render() {\r\n    this.raindrops.forEach(raindrop => raindrop.render());\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst WALL_START_COLOR = '#181623';\r\nconst WALL_END_COLOR = '#111019';\r\n\r\nexport class Wall extends Renderer {\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const { ctx, canvasWidth, canvasHeight } = this;\r\n\r\n    const linearGradient = this.ctx.createLinearGradient(0, 0, 0, canvasHeight);\r\n    linearGradient.addColorStop(0, WALL_START_COLOR);\r\n    linearGradient.addColorStop(1, WALL_END_COLOR);\r\n    ctx.fillStyle = linearGradient;\r\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n  }\r\n}\r\n","export type CornerRadii = {\r\n  tl: number;\r\n  tr: number;\r\n  br: number;\r\n  bl: number;\r\n};\r\n\r\nconst defaultCornerRadii = {\r\n  tl: 0,\r\n  tr: 0,\r\n  br: 0,\r\n  bl: 0\r\n};\r\n\r\nexport function roundedRect(\r\n  ctx: CanvasRenderingContext2D,\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number,\r\n  radius: CornerRadii = defaultCornerRadii,\r\n  stroke = false\r\n) {\r\n  ctx.beginPath();\r\n\r\n  ctx.moveTo(x + radius.tl, y);\r\n  ctx.lineTo(x + width - radius.tr, y);\r\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n\r\n  ctx.lineTo(x + width, y + height - radius.br);\r\n  ctx.quadraticCurveTo(\r\n    x + width,\r\n    y + height,\r\n    x + width - radius.br,\r\n    y + height\r\n  );\r\n\r\n  ctx.lineTo(x + radius.bl, y + height);\r\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n\r\n  ctx.lineTo(x, y + radius.tl);\r\n  ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n\r\n  ctx.closePath();\r\n  ctx.fill();\r\n  stroke && ctx.stroke();\r\n}\r\n\r\nexport function distanceBetween(\r\n  point1: { x: number; y: number },\r\n  point2: { x: number; y: number }\r\n) {\r\n  return Math.sqrt(\r\n    Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2)\r\n  );\r\n}\r\n\r\n// where 0 degrees corresponds to positive direction of x-axis\r\nexport function radiansBetween(\r\n  point1: { x: number; y: number },\r\n  point2: { x: number; y: number }\r\n) {\r\n  const deltaX = point2.x - point1.x;\r\n  const deltaY = point2.y - point1.y;\r\n  return Math.atan2(deltaY, deltaX);\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { roundedRect, CornerRadii } from '../utils';\r\n\r\nconst WINDOW_FRAME_COLOR = '#3D1A1E';\r\nconst WINDOW_DECORATION_COLOR = '#682634';\r\n\r\nexport class Window extends Renderer {\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const {\r\n      ctx,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight,\r\n      windowFrameThickness\r\n    } = this;\r\n\r\n    ctx.fillStyle = WINDOW_FRAME_COLOR;\r\n\r\n    // window trim\r\n    ctx.fillRect(\r\n      oneThirdCanvasWidth - windowFrameThickness,\r\n      oneHalfCanvasHeight / 2 - windowFrameThickness,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    // make a hole\r\n    ctx.clearRect(\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight / 2,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight\r\n    );\r\n\r\n    // window muntin\r\n    const muntinWidth = Math.floor(windowFrameThickness / 2);\r\n\r\n    const topLeftX = (oneThirdCanvasWidth * 4) / 3 - (muntinWidth * 2) / 3;\r\n    const topRightX = (oneThirdCanvasWidth * 5) / 3 - muntinWidth / 3;\r\n    const topY = oneHalfCanvasHeight / 2 - windowFrameThickness;\r\n\r\n    const leftX = oneThirdCanvasWidth - windowFrameThickness;\r\n    const leftTopY = (oneHalfCanvasHeight * 5) / 6 - (muntinWidth * 2) / 3;\r\n    const leftBottomY = (oneHalfCanvasHeight * 7) / 6 - muntinWidth / 3;\r\n\r\n    ctx.fillRect(\r\n      topLeftX,\r\n      topY,\r\n      muntinWidth,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    ctx.fillRect(\r\n      topRightX,\r\n      topY,\r\n      muntinWidth,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    ctx.fillRect(\r\n      leftX,\r\n      leftTopY,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      muntinWidth\r\n    );\r\n\r\n    ctx.fillRect(\r\n      leftX,\r\n      leftBottomY,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      muntinWidth\r\n    );\r\n\r\n    ctx.fillStyle = WINDOW_DECORATION_COLOR;\r\n\r\n    // window head\r\n    ctx.fillRect(\r\n      oneThirdCanvasWidth - windowFrameThickness * 2,\r\n      oneHalfCanvasHeight / 2 - windowFrameThickness * 2,\r\n      oneThirdCanvasWidth + windowFrameThickness * 4,\r\n      windowFrameThickness - 1\r\n    );\r\n\r\n    // window stool\r\n    const windowSillCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: 0,\r\n      bl: this.roundedRadius,\r\n      br: this.roundedRadius\r\n    };\r\n\r\n    roundedRect(\r\n      ctx,\r\n      oneThirdCanvasWidth - windowFrameThickness * 2,\r\n      (oneHalfCanvasHeight * 3) / 2 + windowFrameThickness + 1,\r\n      oneThirdCanvasWidth + windowFrameThickness * 4,\r\n      windowFrameThickness,\r\n      windowSillCornerRadii\r\n    );\r\n\r\n    // trim decoration\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = WINDOW_DECORATION_COLOR;\r\n    ctx.rect(\r\n      oneThirdCanvasWidth - (windowFrameThickness * 2) / 3,\r\n      oneHalfCanvasHeight / 2 - (windowFrameThickness * 2) / 3,\r\n      oneThirdCanvasWidth + (windowFrameThickness * 4) / 3,\r\n      oneHalfCanvasHeight + (windowFrameThickness * 4) / 3\r\n    );\r\n    ctx.stroke();\r\n\r\n    ctx.rect(\r\n      oneThirdCanvasWidth - (windowFrameThickness * 5) / 9,\r\n      oneHalfCanvasHeight / 2 - (windowFrameThickness * 5) / 9,\r\n      oneThirdCanvasWidth + (windowFrameThickness * 10) / 9,\r\n      oneHalfCanvasHeight + (windowFrameThickness * 10) / 9\r\n    );\r\n    ctx.stroke();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst WOOD_DECORATION_COLOR = '#091c1b';\r\nconst STEREO_COLOR = '#222';\r\nconst STEREO_DETAIL_COLOR = '#444';\r\nconst STEREO_DARK_COLOR = '#111';\r\n\r\nexport class Dresser extends Renderer {\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  dresser() {\r\n    const { ctx, canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    const x = (canvasWidth * 2) / 3 + windowFrameThickness * 5;\r\n    const y = (canvasHeight * 2) / 3;\r\n\r\n    // dresser body\r\n    ctx.fillStyle = WOOD_COLOR;\r\n    ctx.fillRect(x, y, canvasWidth, canvasHeight);\r\n\r\n    // dresser detail rectangle\r\n    ctx.strokeStyle = WOOD_DECORATION_COLOR;\r\n    ctx.lineWidth = 3;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      x + windowFrameThickness,\r\n      y + windowFrameThickness,\r\n      canvasWidth,\r\n      canvasHeight\r\n    );\r\n    ctx.stroke();\r\n\r\n    // dresser top handle\r\n    const dresserWidth = canvasWidth - (x + windowFrameThickness);\r\n    const dresserHandleMidpoint =\r\n      x + windowFrameThickness + (dresserWidth * 3) / 5;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(dresserHandleMidpoint, y + windowFrameThickness * 2.5);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 2.5);\r\n    ctx.lineWidth = (windowFrameThickness * 2) / 3;\r\n    ctx.stroke();\r\n\r\n    // dresser horizontal detail line\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + windowFrameThickness, y + windowFrameThickness * 6);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 6);\r\n    ctx.lineWidth = 2;\r\n    ctx.stroke();\r\n\r\n    // dresser bottom handle\r\n    ctx.beginPath();\r\n    ctx.moveTo(dresserHandleMidpoint, y + windowFrameThickness * 7.5);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 7.5);\r\n    ctx.lineWidth = (windowFrameThickness * 2) / 3;\r\n    ctx.stroke();\r\n  }\r\n\r\n  stereo() {\r\n    const { ctx, canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    const dresserX = (canvasWidth * 2) / 3 + windowFrameThickness * 5;\r\n    const dresserY = (canvasHeight * 2) / 3;\r\n\r\n    // speaker body\r\n    const speakerWidth = windowFrameThickness * 3.5;\r\n    const speakerHeight = canvasHeight * 0.2;\r\n    const speakerX = dresserX + windowFrameThickness * 4;\r\n    const speakerY = dresserY - speakerHeight;\r\n\r\n    ctx.fillStyle = STEREO_COLOR;\r\n    ctx.fillRect(speakerX, speakerY, speakerWidth, speakerHeight);\r\n\r\n    // mid driver\r\n    const driverRadius = Math.min(speakerWidth, speakerHeight) / 8;\r\n    const driverCenterX = speakerX + speakerWidth / 2;\r\n    const driverCenterY = speakerY + driverRadius * 2;\r\n\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(driverCenterX, driverCenterY, driverRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // dividers\r\n    const dividerWidth = windowFrameThickness / 10;\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n\r\n    ctx.fillRect(\r\n      speakerX - dividerWidth,\r\n      speakerY,\r\n      dividerWidth,\r\n      speakerHeight\r\n    );\r\n\r\n    ctx.fillRect(\r\n      speakerX + speakerWidth,\r\n      speakerY,\r\n      dividerWidth,\r\n      speakerHeight\r\n    );\r\n\r\n    // deck\r\n    const deckX = speakerX + speakerWidth + dividerWidth;\r\n    const deckHeight = speakerHeight * 0.8;\r\n    const deckY = speakerY + speakerHeight - deckHeight;\r\n\r\n    ctx.fillStyle = STEREO_COLOR;\r\n    ctx.fillRect(deckX, deckY, canvasWidth, deckHeight);\r\n\r\n    const deckDetailX = deckX + windowFrameThickness / 2;\r\n\r\n    ctx.fillStyle = STEREO_DETAIL_COLOR;\r\n    ctx.strokeStyle = STEREO_DARK_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 8;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      deckDetailX,\r\n      deckY + windowFrameThickness * 1.5,\r\n      canvasWidth,\r\n      deckHeight * 0.25\r\n    );\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n    ctx.fillRect(\r\n      deckDetailX,\r\n      deckY + windowFrameThickness,\r\n      canvasWidth,\r\n      windowFrameThickness / 4\r\n    );\r\n\r\n    const bottomDetailY = deckY + deckHeight - windowFrameThickness * 0.8;\r\n    ctx.fillRect(\r\n      deckX + windowFrameThickness * 2,\r\n      bottomDetailY,\r\n      canvasWidth,\r\n      windowFrameThickness / 4\r\n    );\r\n\r\n    ctx.fillStyle = STEREO_DETAIL_COLOR;\r\n    const knobRadius = windowFrameThickness / 2;\r\n    const knobX = deckX + windowFrameThickness;\r\n    const knobY = bottomDetailY + windowFrameThickness / 8;\r\n    ctx.beginPath();\r\n    ctx.arc(knobX, knobY, knobRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.clip();\r\n    ctx.save();\r\n\r\n    ctx.translate(knobX, knobY);\r\n    const knobMarkerAngle = Math.PI * 0.75;\r\n    const knobMarkerStart = {\r\n      x: Math.sin(knobMarkerAngle) * (knobRadius - windowFrameThickness / 4),\r\n      y: Math.cos(knobMarkerAngle) * (knobRadius - windowFrameThickness / 4)\r\n    };\r\n    const knobMarkerEnd = {\r\n      x: Math.sin(knobMarkerAngle) * knobRadius * 2,\r\n      y: Math.cos(knobMarkerAngle) * knobRadius * 2\r\n    };\r\n    ctx.lineWidth = windowFrameThickness / 8;\r\n    ctx.lineCap = 'round';\r\n    ctx.beginPath();\r\n    ctx.moveTo(knobMarkerStart.x, knobMarkerStart.y);\r\n    ctx.lineTo(knobMarkerEnd.x, knobMarkerEnd.y);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.dresser();\r\n    this.stereo();\r\n    this.tick();\r\n  }\r\n\r\n  tick(isBeat = false) {\r\n    const { ctx, canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    const dresserX = (canvasWidth * 2) / 3 + windowFrameThickness * 5;\r\n    const dresserY = (canvasHeight * 2) / 3;\r\n\r\n    // speaker body\r\n    const speakerWidth = windowFrameThickness * 3.5;\r\n    const speakerHeight = canvasHeight * 0.2;\r\n    const speakerX = dresserX + windowFrameThickness * 4;\r\n    const speakerY = dresserY - speakerHeight;\r\n\r\n    // mid driver\r\n    const driverRadius = Math.min(speakerWidth, speakerHeight) / 8;\r\n    const driverCenterX = speakerX + speakerWidth / 2;\r\n\r\n    // speaker woofer\r\n    const wooferRadius = Math.min(speakerWidth, speakerHeight) / 2.5;\r\n    const wooferCenterY = Math.max(\r\n      speakerY + wooferRadius + driverRadius * 4,\r\n      speakerY + speakerHeight - (wooferRadius + driverRadius * 2)\r\n    );\r\n\r\n    ctx.strokeStyle = STEREO_DETAIL_COLOR;\r\n    ctx.fillStyle = STEREO_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 8;\r\n    ctx.beginPath();\r\n    ctx.arc(driverCenterX, wooferCenterY, wooferRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      driverCenterX,\r\n      wooferCenterY,\r\n      isBeat ? wooferRadius * 0.63 : wooferRadius * 0.6,\r\n      0,\r\n      Math.PI * 2\r\n    );\r\n    ctx.fill();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { distanceBetween } from '../utils';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\n\r\ntype Picture = {\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\nexport class Pictures extends Renderer {\r\n  pictures: Picture[] = [];\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    const { oneThirdCanvasWidth, windowFrameThickness } = this;\r\n\r\n    // X & Y coords and dimensions for each picture\r\n    this.pictures.push({\r\n      x: (oneThirdCanvasWidth * 3) / 4 - windowFrameThickness * 4,\r\n      y: -windowFrameThickness,\r\n      width: windowFrameThickness * 4,\r\n      height: windowFrameThickness * 5\r\n    });\r\n\r\n    this.pictures.push({\r\n      x: this.pictures[0].x - windowFrameThickness * 7,\r\n      y: windowFrameThickness * 2,\r\n      width: windowFrameThickness * 5,\r\n      height: windowFrameThickness * 4\r\n    });\r\n\r\n    this.pictures.push({\r\n      x: this.pictures[1].x + windowFrameThickness * 2,\r\n      y:\r\n        this.pictures[1].y +\r\n        this.pictures[1].height +\r\n        windowFrameThickness * 1.5,\r\n      width: windowFrameThickness * 6,\r\n      height: windowFrameThickness * 8\r\n    });\r\n  }\r\n\r\n  graph() {\r\n    const { ctx, windowFrameThickness } = this;\r\n    const { x, y, width, height } = this.pictures[0];\r\n\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.clip();\r\n\r\n    const gradient1 = ctx.createLinearGradient(x, y, x, y + height);\r\n    gradient1.addColorStop(0, '#24131f');\r\n    gradient1.addColorStop(1, '#051b1f');\r\n    ctx.fillStyle = gradient1;\r\n    ctx.fill();\r\n\r\n    const nodes: Array<{ x: number; y: number }> = [];\r\n    const nodeSize = windowFrameThickness / 6;\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n      nodes.push({\r\n        x: Math.floor(Math.random() * width + x),\r\n        y: Math.floor(Math.random() * height + y)\r\n      });\r\n    }\r\n\r\n    const nodeColor = '#703c3a';\r\n    ctx.fillStyle = nodeColor;\r\n    ctx.strokeStyle = nodeColor;\r\n    ctx.lineWidth = 1;\r\n\r\n    while (nodes.length) {\r\n      const currentNode = nodes.pop()!;\r\n      ctx.beginPath();\r\n      ctx.arc(currentNode.x, currentNode.y, nodeSize / 2, 0, Math.PI * 2);\r\n      ctx.fill();\r\n\r\n      for (const otherNode of nodes) {\r\n        if (distanceBetween(currentNode, otherNode) < height / 4) {\r\n          ctx.beginPath();\r\n          ctx.moveTo(currentNode.x, currentNode.y);\r\n          ctx.lineTo(otherNode.x, otherNode.y);\r\n          ctx.stroke();\r\n        }\r\n      }\r\n    }\r\n\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 1.5;\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  orbits() {\r\n    const { ctx, windowFrameThickness } = this;\r\n    const { x, y, width, height } = this.pictures[1];\r\n\r\n    ctx.save();\r\n\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.clip();\r\n\r\n    const gradient2 = ctx.createLinearGradient(x, y, x, y + height);\r\n    gradient2.addColorStop(0, '#556e53');\r\n    gradient2.addColorStop(1, '#29435c');\r\n    ctx.fillStyle = gradient2;\r\n    ctx.fill();\r\n\r\n    // sun\r\n    const color = '#879591';\r\n    ctx.fillStyle = color;\r\n    ctx.strokeStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(x + width / 2, y + height / 2, height / 14, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // orbits\r\n    for (\r\n      let radius = Math.floor(height / 6);\r\n      radius <= height / 2;\r\n      radius += windowFrameThickness / 4\r\n    ) {\r\n      ctx.beginPath();\r\n      ctx.arc(x + width / 2, y + height / 2, radius, 0, Math.PI * 2);\r\n      ctx.stroke();\r\n\r\n      const randomAngle = Math.random() * Math.PI * 2;\r\n      const planetX = x + width / 2 + Math.cos(randomAngle) * radius;\r\n      const planetY = y + height / 2 + Math.sin(randomAngle) * radius;\r\n      const randomRadius = Math.random() * (width / 64) + width / 192;\r\n      ctx.beginPath();\r\n      ctx.arc(planetX, planetY, randomRadius, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = '#152a38';\r\n    ctx.lineWidth = windowFrameThickness / 1.2;\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  stars() {\r\n    const { ctx, windowFrameThickness } = this;\r\n    const { x, y, width, height } = this.pictures[2];\r\n\r\n    ctx.save();\r\n\r\n    // background\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.clip();\r\n\r\n    const gradient3 = ctx.createLinearGradient(x, y, x, y + height);\r\n    gradient3.addColorStop(0, '#09325E');\r\n    gradient3.addColorStop(0.75, '#2A2A47');\r\n    ctx.fillStyle = gradient3;\r\n    ctx.fill();\r\n\r\n    // sky\r\n    ctx.fillStyle = '#F5E7F8';\r\n    const starCount = 60;\r\n\r\n    for (let i = 0; i < starCount; i++) {\r\n      const starX = Math.floor(Math.random() * width + x);\r\n      const starY = Math.floor(Math.random() * height + y);\r\n      const radius = Math.floor(Math.random() * 2 + 1);\r\n      ctx.beginPath();\r\n      ctx.arc(starX, starY, radius, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = '#0D0B21';\r\n    ctx.lineWidth = windowFrameThickness / 1.5;\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.graph();\r\n    this.orbits();\r\n    this.stars();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { roundedRect, CornerRadii } from '../utils';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst TABLE_DECORATION_COLOR = '#06151A';\r\nconst BOWL_COLOR = '#3e3e3e';\r\nconst BOWL_BASE_COLOR = '#1e1e1e';\r\nconst FRUIT_COLORS = ['#564837', '#713C3A'];\r\nconst FRUIT_STEM_COLOR = '#04070F';\r\n\r\nexport class Table extends Renderer {\r\n  y: number;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    this.y = this.canvasHeight * 0.7;\r\n  }\r\n\r\n  top() {\r\n    const {\r\n      ctx,\r\n      y,\r\n      windowFrameThickness,\r\n      oneThirdCanvasWidth,\r\n      roundedRadius\r\n    } = this;\r\n\r\n    const width = oneThirdCanvasWidth * 0.7;\r\n    const thickness = windowFrameThickness * 1.35;\r\n\r\n    const tableCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: roundedRadius,\r\n      br: 0,\r\n      bl: 0\r\n    };\r\n\r\n    ctx.fillStyle = WOOD_COLOR;\r\n    roundedRect(ctx, 0, y, width, thickness, tableCornerRadii);\r\n\r\n    ctx.fillStyle = TABLE_DECORATION_COLOR;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      0,\r\n      y + thickness - windowFrameThickness / 4,\r\n      width,\r\n      windowFrameThickness / 4\r\n    );\r\n    ctx.fill();\r\n  }\r\n\r\n  leg() {\r\n    const {\r\n      ctx,\r\n      y,\r\n      windowFrameThickness,\r\n      canvasHeight,\r\n      oneThirdCanvasWidth\r\n    } = this;\r\n\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n    ctx.lineWidth = windowFrameThickness * 1.5;\r\n    ctx.beginPath();\r\n    ctx.moveTo(oneThirdCanvasWidth * 0.5, y);\r\n    ctx.lineTo(oneThirdCanvasWidth * 0.5, canvasHeight);\r\n    ctx.stroke();\r\n  }\r\n\r\n  centerpiece() {\r\n    const {\r\n      ctx,\r\n      y,\r\n      windowFrameThickness,\r\n      canvasWidth,\r\n      oneThirdCanvasWidth\r\n    } = this;\r\n\r\n    const bowlCenterX = oneThirdCanvasWidth * 0.25;\r\n    const bowlWidth = oneThirdCanvasWidth * 0.3;\r\n    const bowlHeight = windowFrameThickness * 2;\r\n\r\n    // fruit\r\n    const fruits = [\r\n      {\r\n        xOffset: (bowlWidth - bowlWidth * 0.4) / 4,\r\n        y: y - bowlHeight,\r\n        radius: bowlWidth * 0.2,\r\n        color: FRUIT_COLORS[0],\r\n        stemAngle: Math.PI * 0.9\r\n      },\r\n      {\r\n        xOffset: -(bowlWidth - bowlWidth * 0.4) / 4,\r\n        y: y - bowlHeight + bowlHeight / 8,\r\n        radius: bowlWidth * 0.2,\r\n        color: FRUIT_COLORS[1],\r\n        stemAngle: Math.PI * 1.1\r\n      }\r\n    ];\r\n\r\n    for (const fruit of fruits) {\r\n      ctx.fillStyle = fruit.color;\r\n      ctx.beginPath();\r\n      ctx.arc(\r\n        bowlCenterX + fruit.xOffset,\r\n        fruit.y,\r\n        fruit.radius,\r\n        0,\r\n        Math.PI * 2\r\n      );\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = FRUIT_STEM_COLOR;\r\n    ctx.lineCap = 'round';\r\n    ctx.lineWidth = 2;\r\n\r\n    for (const fruit of fruits) {\r\n      ctx.save();\r\n      ctx.translate(bowlCenterX + fruit.xOffset, fruit.y);\r\n      const stemStart = {\r\n        x: Math.sin(fruit.stemAngle) * fruits[1].radius * 0.9,\r\n        y: Math.cos(fruit.stemAngle) * fruits[1].radius * 0.9\r\n      };\r\n      const stemEnd = {\r\n        x: Math.sin(fruit.stemAngle) * fruits[1].radius * 1.1,\r\n        y: Math.cos(fruit.stemAngle) * fruits[1].radius * 1.1\r\n      };\r\n      ctx.beginPath();\r\n      ctx.moveTo(stemStart.x, stemStart.y);\r\n      ctx.lineTo(stemEnd.x, stemEnd.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    }\r\n\r\n    // bowl\r\n    const bowlCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: 0,\r\n      br: oneThirdCanvasWidth * 0.1,\r\n      bl: oneThirdCanvasWidth * 0.1\r\n    };\r\n\r\n    const bowlBaseHeight = bowlHeight / 8;\r\n    const bowlBaseWidth = bowlWidth * 0.5;\r\n\r\n    ctx.fillStyle = BOWL_BASE_COLOR;\r\n    ctx.fillRect(\r\n      bowlCenterX - bowlBaseWidth / 2,\r\n      y - bowlHeight - bowlBaseHeight,\r\n      bowlBaseWidth,\r\n      bowlHeight + bowlBaseHeight\r\n    );\r\n\r\n    ctx.fillStyle = BOWL_COLOR;\r\n    roundedRect(\r\n      ctx,\r\n      bowlCenterX - bowlWidth / 2,\r\n      y - bowlHeight - bowlBaseHeight,\r\n      bowlWidth,\r\n      bowlHeight,\r\n      bowlCornerRadii\r\n    );\r\n\r\n    ctx.save();\r\n    ctx.clip();\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = TABLE_DECORATION_COLOR;\r\n    const bowlDecorationY = y - bowlHeight - bowlBaseHeight + bowlHeight / 6;\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, bowlDecorationY);\r\n    ctx.lineTo(canvasWidth, bowlDecorationY);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.leg();\r\n    this.top();\r\n    this.centerpiece();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst CLOCK_INNER_COLOR = '#4B4721';\r\nconst CLOCK_HANDS_COLOR = '#192124';\r\nconst CLOCK_DECORATION_COLOR = '#06151A';\r\n\r\nexport class Clock extends Renderer {\r\n  private clockSize: number;\r\n  private clockCoords: { x: number; y: number };\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n    this.clockSize = this.windowFrameThickness * 5;\r\n    const x = Math.max(\r\n      this.canvasWidth * 0.7,\r\n      (this.canvasWidth * 2) / 3 + this.windowFrameThickness * 8\r\n    );\r\n    const y = this.canvasHeight / 5;\r\n    this.clockCoords = { x, y };\r\n  }\r\n\r\n  face() {\r\n    const { ctx, clockSize, clockCoords } = this;\r\n    const { x, y } = clockCoords;\r\n\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n\r\n    // clock frame\r\n    ctx.lineWidth = this.windowFrameThickness / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 1.75, 0, Math.PI * 2, true);\r\n    ctx.stroke();\r\n\r\n    ctx.strokeStyle = CLOCK_DECORATION_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2, 0, Math.PI * 2, true);\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2, 0, Math.PI * 2, true);\r\n    ctx.fillStyle = CLOCK_INNER_COLOR;\r\n    ctx.fill();\r\n\r\n    // markings\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = CLOCK_HANDS_COLOR;\r\n\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n\r\n    for (let i = 1; i <= 60; i++) {\r\n      const angle = (i * Math.PI) / 30;\r\n\r\n      const start = {\r\n        x: Math.sin(angle) * (clockSize / 2 - clockSize / 20),\r\n        y: Math.cos(angle) * (clockSize / 2 - clockSize / 20)\r\n      };\r\n      const end = {\r\n        x: Math.sin(angle) * (clockSize / 2 - clockSize / 15),\r\n        y: Math.cos(angle) * (clockSize / 2 - clockSize / 15)\r\n      };\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(start.x, start.y);\r\n      ctx.lineTo(end.x, end.y);\r\n      ctx.stroke();\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  hands() {\r\n    const { ctx, clockSize, clockCoords } = this;\r\n    const { x, y } = clockCoords;\r\n\r\n    // fill in hands area so we can redraw them\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2 - clockSize / 15, 0, Math.PI * 2, true);\r\n    ctx.fillStyle = CLOCK_INNER_COLOR;\r\n    ctx.fill();\r\n\r\n    ctx.lineWidth = clockSize / 40;\r\n    ctx.lineCap = 'round';\r\n    ctx.strokeStyle = CLOCK_HANDS_COLOR;\r\n\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n\r\n    const now = new Date();\r\n    const hours = now.getHours();\r\n    const minutes = now.getMinutes();\r\n    const seconds = now.getSeconds();\r\n\r\n    // hour hand\r\n    ctx.save();\r\n    ctx.rotate((Math.PI / 6) * (hours + minutes / 60 + seconds / 3600));\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 4);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    // minute hand\r\n    ctx.save();\r\n    ctx.rotate((Math.PI / 30) * (minutes + seconds / 60));\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 2.75);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    // second hand\r\n    ctx.lineWidth = clockSize / 100;\r\n    ctx.save();\r\n    ctx.rotate((Math.PI / 30) * seconds);\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 2.7);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n    this.face();\r\n    this.hands();\r\n  }\r\n\r\n  tick() {\r\n    this.hands();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst CAT_COLOR = '#000';\r\n\r\nexport class Cat extends Renderer {\r\n  private isWagging = false;\r\n  private prevTailAngle = -Math.PI / 2;\r\n  private headRadius: number;\r\n  private bodyHeight: number;\r\n  private bodyWidth: number;\r\n  private x: number;\r\n  private createdTimestamp: number;\r\n  private tailWidth: number;\r\n  private tailY: number;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    const {\r\n      windowFrameThickness,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight\r\n    } = this;\r\n\r\n    this.x = oneThirdCanvasWidth * 2 - windowFrameThickness * 1.2;\r\n    this.headRadius = windowFrameThickness;\r\n    this.bodyHeight = windowFrameThickness * 3;\r\n    this.bodyWidth = windowFrameThickness * 2.2;\r\n    this.createdTimestamp = Date.now();\r\n    this.tailWidth = windowFrameThickness / 2;\r\n    this.tailY =\r\n      (oneHalfCanvasHeight * 3) / 2 + windowFrameThickness - this.tailWidth / 2;\r\n  }\r\n\r\n  head() {\r\n    const { ctx, oneHalfCanvasHeight, x, headRadius } = this;\r\n    const y = (oneHalfCanvasHeight * 3) / 2 - this.bodyHeight - this.headRadius;\r\n\r\n    ctx.fillStyle = CAT_COLOR;\r\n    ctx.strokeStyle = CAT_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, headRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // ears\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n\r\n    ctx.lineWidth = 5;\r\n    ctx.lineJoin = 'round';\r\n\r\n    const rightEar = {\r\n      start: {\r\n        x: Math.sin(Math.PI * 0.85) * headRadius,\r\n        y: Math.cos(Math.PI * 0.85) * headRadius\r\n      },\r\n      point: {\r\n        x: Math.sin(Math.PI * 0.8) * headRadius * 1.4,\r\n        y: Math.cos(Math.PI * 0.8) * headRadius * 1.4\r\n      },\r\n      end: {\r\n        x: Math.sin(Math.PI * 0.7) * headRadius,\r\n        y: Math.cos(Math.PI * 0.7) * headRadius\r\n      }\r\n    };\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(rightEar.start.x, rightEar.start.y);\r\n    ctx.lineTo(rightEar.point.x, rightEar.point.y);\r\n    ctx.lineTo(rightEar.end.x, rightEar.end.y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    const leftEar = {\r\n      start: {\r\n        x: Math.sin(Math.PI * 1.2) * headRadius,\r\n        y: Math.cos(Math.PI * 1.2) * headRadius\r\n      },\r\n      point: {\r\n        x: Math.sin(Math.PI * 1.22) * headRadius * 1.5,\r\n        y: Math.cos(Math.PI * 1.22) * headRadius * 1.5\r\n      },\r\n      end: {\r\n        x: Math.sin(Math.PI * 1.3) * headRadius,\r\n        y: Math.cos(Math.PI * 1.3) * headRadius\r\n      }\r\n    };\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(leftEar.start.x, leftEar.start.y);\r\n    ctx.lineTo(leftEar.point.x, leftEar.point.y);\r\n    ctx.lineTo(leftEar.end.x, leftEar.end.y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  body() {\r\n    const {\r\n      ctx,\r\n      oneHalfCanvasHeight,\r\n      windowFrameThickness,\r\n      x,\r\n      headRadius,\r\n      bodyWidth,\r\n      bodyHeight\r\n    } = this;\r\n    const y = (oneHalfCanvasHeight * 3) / 2 - bodyHeight;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y - headRadius / 2);\r\n    ctx.quadraticCurveTo(\r\n      x - bodyWidth * 0.75,\r\n      y + bodyHeight / 4,\r\n      x - bodyWidth / 3,\r\n      y + bodyHeight + windowFrameThickness\r\n    );\r\n    ctx.lineTo(x + bodyWidth / 2, y + bodyHeight + windowFrameThickness);\r\n    ctx.quadraticCurveTo(\r\n      x + bodyWidth * 1.2,\r\n      y + bodyHeight + windowFrameThickness,\r\n      x + bodyWidth / 3,\r\n      y - headRadius / 3\r\n    );\r\n    ctx.closePath();\r\n    ctx.fill();\r\n\r\n    // left leg\r\n    ctx.beginPath();\r\n    ctx.moveTo(x - bodyWidth / 4, y + bodyHeight * 0.3);\r\n    ctx.quadraticCurveTo(\r\n      x - bodyWidth,\r\n      y + bodyHeight,\r\n      x - bodyWidth / 3,\r\n      y + bodyHeight + windowFrameThickness\r\n    );\r\n    ctx.lineTo(x + bodyWidth / 2, y + bodyHeight + windowFrameThickness);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n  }\r\n\r\n  tail() {\r\n    const { ctx, tailWidth, x, bodyWidth, tailY } = this;\r\n\r\n    ctx.lineWidth = tailWidth;\r\n    ctx.lineCap = 'round';\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, tailY);\r\n    ctx.lineTo(x - bodyWidth, tailY);\r\n    ctx.stroke();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const { ctx, canvasWidth, canvasHeight } = this;\r\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n    this.head();\r\n    this.body();\r\n    this.tail();\r\n  }\r\n\r\n  tick() {\r\n    const {\r\n      ctx,\r\n      canvasWidth,\r\n      canvasHeight,\r\n      createdTimestamp,\r\n      x,\r\n      bodyWidth,\r\n      tailY\r\n    } = this;\r\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n    this.head();\r\n    this.body();\r\n\r\n    // tail wag\r\n    const timeDelta = Date.now() - createdTimestamp;\r\n\r\n    // oscillate between angles\r\n    let nextTailAngle =\r\n      -Math.PI / 2 + (Math.sin(timeDelta / 200) * -Math.PI) / 20;\r\n\r\n    if (this.prevTailAngle > -Math.PI / 2 && nextTailAngle < -Math.PI / 2) {\r\n      // each oscillation has a chance of producing a tail wag\r\n      this.isWagging = Math.random() < 0.1;\r\n    }\r\n\r\n    this.prevTailAngle = nextTailAngle;\r\n\r\n    if (nextTailAngle > -Math.PI / 2) {\r\n      nextTailAngle = -Math.PI / 2;\r\n    }\r\n\r\n    if (!this.isWagging) {\r\n      this.tail();\r\n      return;\r\n    }\r\n\r\n    ctx.save();\r\n    ctx.translate(x, tailY);\r\n\r\n    const tailEnd = {\r\n      x: Math.sin(nextTailAngle) * bodyWidth,\r\n      y: Math.cos(nextTailAngle) * bodyWidth\r\n    };\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 0);\r\n    ctx.quadraticCurveTo(\r\n      -bodyWidth,\r\n      (-Math.cos(nextTailAngle) * bodyWidth) / 10,\r\n      tailEnd.x,\r\n      tailEnd.y\r\n    );\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { radiansBetween } from '../utils';\r\n\r\nconst STEM_COLOR = '#8e8e8e';\r\nconst LIGHT_COLOR = 'rgba(252, 243, 126, 0.085)';\r\n\r\ntype ShadeCoords = { x: number; y: number };\r\n\r\nexport class Lamp extends Renderer {\r\n  private stemX: number;\r\n  private stemHeight: number;\r\n  private lampWidth: number;\r\n  private shadeTopLeft: ShadeCoords;\r\n  private shadeTopRight: ShadeCoords;\r\n  private shadeBottomRight: ShadeCoords;\r\n  private shadeBottomLeft: ShadeCoords;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    const { canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    this.stemX = (canvasWidth * 7) / 11;\r\n    this.stemHeight = canvasHeight / 5;\r\n    this.lampWidth = windowFrameThickness * 3.5;\r\n\r\n    this.shadeTopLeft = {\r\n      x: this.stemX - windowFrameThickness / 5,\r\n      y: this.stemHeight + windowFrameThickness\r\n    };\r\n    this.shadeTopRight = {\r\n      x: this.stemX + windowFrameThickness / 5,\r\n      y: this.stemHeight + windowFrameThickness\r\n    };\r\n    this.shadeBottomRight = {\r\n      x: this.stemX + this.lampWidth / 2,\r\n      y: this.stemHeight + windowFrameThickness * 3\r\n    };\r\n    this.shadeBottomLeft = {\r\n      x: this.stemX - this.lampWidth / 2,\r\n      y: this.stemHeight + windowFrameThickness * 3\r\n    };\r\n  }\r\n\r\n  stem() {\r\n    const { ctx, windowFrameThickness, stemX, stemHeight } = this;\r\n\r\n    ctx.strokeStyle = STEM_COLOR;\r\n    ctx.fillStyle = STEM_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 5;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(stemX, 0);\r\n    ctx.lineTo(stemX, stemHeight);\r\n    ctx.stroke();\r\n\r\n    ctx.lineWidth = 1;\r\n    ctx.fillRect(\r\n      stemX - windowFrameThickness / 5,\r\n      stemHeight - 1,\r\n      (windowFrameThickness * 2) / 5,\r\n      windowFrameThickness\r\n    );\r\n    ctx.stroke();\r\n  }\r\n\r\n  lampshade() {\r\n    const {\r\n      ctx,\r\n      shadeTopLeft,\r\n      shadeTopRight,\r\n      shadeBottomRight,\r\n      shadeBottomLeft\r\n    } = this;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(shadeTopLeft.x, shadeTopLeft.y);\r\n    ctx.lineTo(shadeTopRight.x, shadeTopRight.y);\r\n    ctx.lineTo(shadeBottomRight.x, shadeBottomRight.y);\r\n    ctx.lineTo(shadeBottomLeft.x, shadeBottomLeft.y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n  }\r\n\r\n  light() {\r\n    const {\r\n      ctx,\r\n      canvasHeight,\r\n      windowFrameThickness,\r\n      stemX,\r\n      stemHeight,\r\n      lampWidth,\r\n      shadeTopLeft,\r\n      shadeBottomRight,\r\n      shadeBottomLeft\r\n    } = this;\r\n\r\n    // thin line of bright light color at bottom\r\n    ctx.fillStyle = '#ff7';\r\n    ctx.fillRect(\r\n      shadeBottomLeft.x,\r\n      shadeBottomLeft.y,\r\n      shadeBottomRight.x - shadeBottomLeft.x,\r\n      2\r\n    );\r\n\r\n    ctx.fillStyle = LIGHT_COLOR;\r\n    const lightHeight = canvasHeight - shadeBottomLeft.y;\r\n    // compensate for inverted canvas y-coords when\r\n    // getting angle between lampshade corners\r\n    const lightAngle = radiansBetween(shadeBottomLeft, {\r\n      x: shadeTopLeft.x,\r\n      y: shadeBottomLeft.y + shadeBottomLeft.y - shadeTopLeft.y\r\n    });\r\n\r\n    // light makes a right triangle with bottom of canvas so\r\n    // we can calculate its adjacent width using height and\r\n    // the angle of the lampshade\r\n    // tan θ = opposite (height) / adjacent (width)\r\n    const lightTriangleAdjacentWidth = lightHeight / Math.tan(lightAngle);\r\n\r\n    const lightBottomLeftX = shadeBottomLeft.x - lightTriangleAdjacentWidth;\r\n    const lightBottomRightX = shadeBottomRight.x + lightTriangleAdjacentWidth;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(stemX - lampWidth / 2, stemHeight + windowFrameThickness * 3);\r\n    ctx.lineTo(stemX + lampWidth / 2, stemHeight + windowFrameThickness * 3);\r\n    ctx.lineTo(lightBottomRightX, canvasHeight);\r\n    ctx.lineTo(lightBottomLeftX, canvasHeight);\r\n    ctx.fill();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.stem();\r\n    this.lampshade();\r\n    this.tick();\r\n  }\r\n\r\n  tick() {\r\n    const {\r\n      ctx,\r\n      canvasWidth,\r\n      canvasHeight,\r\n      windowFrameThickness,\r\n      stemHeight\r\n    } = this;\r\n\r\n    ctx.clearRect(\r\n      0,\r\n      stemHeight + windowFrameThickness * 3,\r\n      canvasWidth,\r\n      canvasHeight\r\n    );\r\n\r\n    this.light();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { Wall } from './wall';\r\nimport { Window } from './window';\r\nimport { Dresser } from './dresser';\r\nimport { Pictures } from './pictures';\r\nimport { Table } from './table';\r\nimport { Clock } from './clock';\r\n\r\nexport { Cat } from './cat';\r\nexport { Lamp } from './lamp';\r\n\r\nexport class Home extends Renderer {\r\n  wall: Wall;\r\n  window: Window;\r\n  dresser: Dresser;\r\n  pictures: Pictures;\r\n  table: Table;\r\n  clock: Clock;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    this.wall = new Wall(ctx);\r\n    this.window = new Window(ctx);\r\n    this.dresser = new Dresser(ctx);\r\n    this.pictures = new Pictures(ctx);\r\n    this.table = new Table(ctx);\r\n    this.clock = new Clock(ctx);\r\n  }\r\n\r\n  render() {\r\n    this.wall.render();\r\n    this.window.render();\r\n    this.dresser.render();\r\n    this.pictures.render();\r\n    this.table.render();\r\n    this.clock.render();\r\n  }\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { QualitySettings } from '../index';\r\nimport { City } from './city';\r\nimport { Rainfall } from './rain';\r\nimport { Home, Cat, Lamp } from './home';\r\nimport { useDebouncedResize } from '../../../../utils/hooks';\r\nimport './Rain.scss';\r\n\r\nconst MIN_RAINDROPS_PER_TICK = 1;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: { MAX_RAINDROPS_PER_TICK: 10 },\r\n  1: { MAX_RAINDROPS_PER_TICK: 33 },\r\n  2: { MAX_RAINDROPS_PER_TICK: 100 }\r\n};\r\n\r\nconst Rain: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  isBeat,\r\n  lowPassIntensity,\r\n  quality\r\n}) => {\r\n  // city\r\n  const cityCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const cityRef = useRef<City>();\r\n\r\n  useDebouncedResize(() => {\r\n    const cityCanvas = cityCanvasRef.current!;\r\n\r\n    const createCity = (width: number, height: number, dpi: number) => {\r\n      cityCanvas.width = width * dpi;\r\n      cityCanvas.height = height * dpi;\r\n\r\n      const ctx = cityCanvas.getContext('2d')!;\r\n      const city = new City(ctx);\r\n      cityRef.current = city;\r\n      city.render();\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createCity(innerWidth, innerHeight, devicePixelRatio);\r\n  });\r\n\r\n  // rain\r\n  const rainCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const rainfallRef = useRef<Rainfall>();\r\n\r\n  useDebouncedResize(() => {\r\n    const rainCanvas = rainCanvasRef.current!;\r\n\r\n    const createRain = (width: number, height: number, dpi: number) => {\r\n      rainCanvas.width = width * dpi;\r\n      rainCanvas.height = height * dpi;\r\n\r\n      const ctx = rainCanvas.getContext('2d')!;\r\n      let rainfall = rainfallRef.current;\r\n      if (rainfall == null) {\r\n        rainfallRef.current = new Rainfall(ctx);\r\n      } else {\r\n        rainfall = rainfallRef.current!;\r\n        rainfall.canvasWidth = width;\r\n        rainfall.canvasHeight = height;\r\n      }\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createRain(innerWidth, innerHeight, devicePixelRatio);\r\n  });\r\n\r\n  const homeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const homeRef = useRef<Home>();\r\n  const clockIntervalRef = useRef<number>();\r\n\r\n  // home\r\n  useDebouncedResize(() => {\r\n    const homeCanvas = homeCanvasRef.current!;\r\n\r\n    const createHome = (width: number, height: number, dpi: number) => {\r\n      homeCanvas.width = width * dpi;\r\n      homeCanvas.height = height * dpi;\r\n\r\n      const ctx = homeCanvas.getContext('2d')!;\r\n\r\n      const home = new Home(ctx);\r\n      homeRef.current = home;\r\n      home.render();\r\n\r\n      clockIntervalRef.current && window.clearTimeout(clockIntervalRef.current);\r\n      clockIntervalRef.current = window.setInterval(\r\n        () => home.clock.tick(),\r\n        1000\r\n      );\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createHome(innerWidth, innerHeight, devicePixelRatio);\r\n  });\r\n\r\n  // cat\r\n  const catCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const catRef = useRef<Cat>();\r\n\r\n  useDebouncedResize(() => {\r\n    const catCanvas = catCanvasRef.current!;\r\n\r\n    const adoptCat = (width: number, height: number, dpi: number) => {\r\n      catCanvas.width = width * dpi;\r\n      catCanvas.height = height * dpi;\r\n\r\n      const ctx = catCanvas.getContext('2d')!;\r\n\r\n      const cat = new Cat(ctx);\r\n      catRef.current = cat;\r\n      cat.render();\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    adoptCat(innerWidth, innerHeight, devicePixelRatio);\r\n  });\r\n\r\n  // lamp\r\n  const lampCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const lampRef = useRef<Lamp>();\r\n\r\n  useDebouncedResize(() => {\r\n    const lampCanvas = lampCanvasRef.current!;\r\n\r\n    const createLamp = (width: number, height: number, dpi: number) => {\r\n      lampCanvas.width = width * dpi;\r\n      lampCanvas.height = height * dpi;\r\n\r\n      const ctx = lampCanvas.getContext('2d')!;\r\n\r\n      const lamp = new Lamp(ctx);\r\n      lampRef.current = lamp;\r\n      lamp.render();\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createLamp(innerWidth, innerHeight, devicePixelRatio);\r\n  });\r\n\r\n  // call animating effects on each data and isBeat change\r\n  useEffect(() => {\r\n    const home = homeRef.current!;\r\n    const rainfall = rainfallRef.current!;\r\n    const cat = catRef.current!;\r\n    const lamp = lampRef.current!;\r\n\r\n    let newRaindropsAdded = 0;\r\n    let raindropsToAdd = Math.floor(\r\n      lowPassIntensity / Math.max(1, 4 - quality)\r\n    );\r\n\r\n    if (raindropsToAdd < MIN_RAINDROPS_PER_TICK) {\r\n      raindropsToAdd = MIN_RAINDROPS_PER_TICK;\r\n    } else if (raindropsToAdd > QUALITY[quality].MAX_RAINDROPS_PER_TICK) {\r\n      raindropsToAdd = QUALITY[quality].MAX_RAINDROPS_PER_TICK;\r\n    }\r\n\r\n    while (newRaindropsAdded < raindropsToAdd) {\r\n      rainfall.add();\r\n      newRaindropsAdded += 1;\r\n    }\r\n\r\n    rainfall.tick();\r\n    home.dresser.tick(isBeat);\r\n    // re-render lamp light since the dresser stereo\r\n    // may have been repainted by changing isBeat\r\n    lamp.tick();\r\n    cat.tick();\r\n\r\n    const rainCanvas = rainCanvasRef.current!;\r\n    const rainCtx = rainCanvas.getContext('2d')!;\r\n\r\n    rainCtx.clearRect(0, 0, rainCanvas.width, rainCanvas.height);\r\n\r\n    rainfall.render();\r\n  }, [data, isBeat]);\r\n\r\n  return (\r\n    <div className=\"rain\">\r\n      <div className=\"backdrop\" />\r\n      <canvas ref={cityCanvasRef} />\r\n      <canvas ref={rainCanvasRef} />\r\n      <canvas ref={homeCanvasRef} />\r\n      <canvas ref={catCanvasRef} />\r\n      <canvas ref={lampCanvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Rain);\r\n","import Waveform from './Waveform';\r\nimport Drummer from './Drummer';\r\nimport Halpern from './Halpern';\r\nimport Stars from './Stars';\r\nimport Rain from './Rain';\r\nimport MobileDisabledComponent from './MobileDisabled';\r\nimport { Props } from './VisualizationHOC';\r\nimport { isMobileDevice as isMobileDeviceCheck } from '../../../utils';\r\n\r\nexport const isMobileDevice = isMobileDeviceCheck();\r\n\r\nexport type QualitySettings = {\r\n  [quality: number]: { [setting: string]: any };\r\n};\r\n\r\nexport type Options = {\r\n  smoothing?: number;\r\n  mobileDisabled?: boolean;\r\n};\r\n\r\nexport type SelectableVisualization = {\r\n  component: React.ComponentType<Props>;\r\n  options?: Options;\r\n};\r\n\r\nconst visualizations: SelectableVisualization[] = [\r\n  {\r\n    component: Rain\r\n  },\r\n  {\r\n    component: Stars,\r\n    options: { smoothing: 128 }\r\n  },\r\n  {\r\n    component: Waveform\r\n  },\r\n  {\r\n    component: Drummer,\r\n    options: { smoothing: 64 }\r\n  },\r\n  {\r\n    component: Halpern\r\n  }\r\n];\r\n\r\nexport default visualizations;\r\n\r\nexport const MobileDisabled: SelectableVisualization = {\r\n  component: MobileDisabledComponent\r\n};\r\n","import React from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport './MobileDisabled.scss';\r\n\r\nconst MobileDisabled: React.FC<VisualizationHOC.WrappedProps> = () => {\r\n  return (\r\n    <div className=\"mobile-disabled\">\r\n      <div className=\"content\">\r\n        <img\r\n          id=\"desktop-icon\"\r\n          src={process.env.PUBLIC_URL + '/assets/images/desktop.png'}\r\n        />\r\n        <div id=\"message\">\r\n          Sorry, this visualization cannot be viewed on a mobile device.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(MobileDisabled);\r\n","import React, { useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useTransition, animated } from 'react-spring';\r\nimport * as VisualizationHOC from './Visualizations/VisualizationHOC';\r\nimport visualizations from './Visualizations';\r\nimport { modulo } from '../../utils';\r\nimport { StoreState } from '../../../src/store/types';\r\n\r\ntype Props = Pick<VisualizationHOC.Props, 'data' | 'lowPassData'>;\r\n\r\ntype StyledProps = Props &\r\n  Pick<StoreState, 'quality'> & {\r\n    style: React.CSSProperties;\r\n  };\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  currentIndex: state.currentVisualizationIndex,\r\n  prevIndex: state.prevVisualizationIndex,\r\n  quality: state.quality\r\n});\r\n\r\nconst styledVisualizations = visualizations.map(vis => {\r\n  return (props: StyledProps) => {\r\n    const { style, ...rest } = props;\r\n    return (\r\n      <animated.div className=\"visualization\" style={props.style}>\r\n        <vis.component {...rest} options={vis.options} />\r\n      </animated.div>\r\n    );\r\n  };\r\n});\r\n\r\nconst VisualizationSelector: React.FC<\r\n  Props & ReturnType<typeof mapStateToProps>\r\n> = ({ data, lowPassData, prevIndex, currentIndex, quality }) => {\r\n  const visIndex = modulo(currentIndex, visualizations.length);\r\n\r\n  const direction = useCallback((current?, prev?) => {\r\n    let translateXMultiplier = 0;\r\n    if (current < prev) {\r\n      translateXMultiplier = 1;\r\n    } else if (prev < current) {\r\n      translateXMultiplier = -1;\r\n    }\r\n    return `translate3d(${100 * translateXMultiplier}%, 0, 0)`;\r\n  }, []);\r\n\r\n  const transitions = useTransition(visIndex, null, {\r\n    from: { transform: direction(currentIndex, prevIndex) },\r\n    enter: { transform: direction() },\r\n    leave: { transform: direction(prevIndex, currentIndex) },\r\n    initial: { transform: direction(0, -1) }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {transitions.map(({ item, props, key }) => {\r\n        const Visualization = styledVisualizations[item];\r\n        return (\r\n          <Visualization\r\n            key={key}\r\n            data={data}\r\n            lowPassData={lowPassData}\r\n            quality={quality}\r\n            style={props}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(VisualizationSelector);\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport VisualizationSelector from '../Visualizer/VisualizationSelector';\r\nimport { FFT_SIZE } from '../../config';\r\n\r\ntype Props = {\r\n  context: AudioContext;\r\n  source: MediaElementAudioSourceNode;\r\n};\r\n\r\nconst Analyser: React.FC<Props> = ({ context, source }) => {\r\n  const [rawData, setRawData] = useState(new Uint8Array());\r\n  const [lowPassData, setLowPassData] = useState(new Uint8Array());\r\n\r\n  const animationFrameIdRef = useRef<number>();\r\n\r\n  useEffect(() => {\r\n    const rawAnalyser = context.createAnalyser();\r\n    rawAnalyser.fftSize = FFT_SIZE;\r\n    rawAnalyser.smoothingTimeConstant = 0;\r\n    source.connect(rawAnalyser);\r\n    rawAnalyser.connect(context.destination);\r\n\r\n    const filter = context.createBiquadFilter();\r\n    filter.type = 'lowpass';\r\n    const lowPassAnalyser = context.createAnalyser();\r\n    lowPassAnalyser.fftSize = FFT_SIZE;\r\n    lowPassAnalyser.smoothingTimeConstant = 0;\r\n    source.connect(filter);\r\n    filter.connect(lowPassAnalyser);\r\n\r\n    const tick = () => {\r\n      const rawDataContainer = new Uint8Array(FFT_SIZE);\r\n      rawAnalyser.getByteTimeDomainData(rawDataContainer);\r\n      setRawData(rawDataContainer);\r\n\r\n      const lowPassDataContainer = new Uint8Array(FFT_SIZE);\r\n      lowPassAnalyser.getByteTimeDomainData(lowPassDataContainer);\r\n      setLowPassData(lowPassDataContainer);\r\n\r\n      animationFrameIdRef.current = window.requestAnimationFrame(tick);\r\n    };\r\n\r\n    animationFrameIdRef.current = window.requestAnimationFrame(tick);\r\n\r\n    return () => {\r\n      animationFrameIdRef.current != null &&\r\n        window.cancelAnimationFrame(animationFrameIdRef.current);\r\n      rawAnalyser && rawAnalyser.disconnect();\r\n      lowPassAnalyser && lowPassAnalyser.disconnect();\r\n      source && source.disconnect();\r\n    };\r\n  }, [context, source]);\r\n\r\n  return <VisualizationSelector data={rawData} lowPassData={lowPassData} />;\r\n};\r\n\r\nexport default Analyser;\r\n","export const FFT_SIZE = 512;\r\nexport const DATA_SIZE = FFT_SIZE / 2;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './Loading.scss';\r\n\r\ntype Props = {\r\n  isShown?: boolean;\r\n};\r\n\r\nconst Loading: React.FC<Props> = ({ isShown }) => (\r\n  <div className={classNames('loading', { show: isShown })}>\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport * as Actions from '../../../store/actions';\r\nimport { StoreState, Quality } from '../../../store/types';\r\nimport './Quality.scss';\r\n\r\ntype Props = {\r\n  onHover: () => void;\r\n  onHoverStop: () => void;\r\n} & ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps>;\r\n\r\nconst qualities = [\r\n  { label: 'low', value: 0 },\r\n  { label: 'medium', value: 1 },\r\n  { label: 'high', value: 2 }\r\n];\r\n\r\nconst QualitySelect: React.FC<Props> = ({\r\n  quality,\r\n  setQuality,\r\n  onHover,\r\n  onHoverStop\r\n}) => {\r\n  return (\r\n    <div id=\"quality\" onMouseEnter={onHover} onMouseLeave={onHoverStop}>\r\n      <select\r\n        value={quality}\r\n        onChange={e => setQuality(+e.target.value as Quality)}\r\n      >\r\n        {qualities.map(quality => (\r\n          <option key={quality.label} value={quality.value}>\r\n            {quality.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  quality: state.quality\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  setQuality: (quality: Quality) => dispatch(Actions.setQuality(quality))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(QualitySelect);\r\n","import { ActionConstants, ActionUnionType, Quality } from './types';\r\n\r\nexport const goToNextVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_NEXT_VISUALIZATION\r\n});\r\n\r\nexport const goToPrevVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_PREV_VISUALIZATION\r\n});\r\n\r\nexport const setQuality = (quality: Quality): ActionUnionType => ({\r\n  type: ActionConstants.SET_QUALITY,\r\n  quality\r\n});\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport Loading from '../Loading';\r\nimport * as Actions from '../../store/actions';\r\nimport * as versionInfo from '../../metadata/build-version.json';\r\nimport QualitySelect from './QualitySelect';\r\nimport './Controls.scss';\r\n\r\nconst CONTROLS_FADE_OUT_DELAY = 1500;\r\nconst TOUCH_WAS_CLICK_THRESHOLD = 250;\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & {\r\n  context?: AudioContext;\r\n  wantsToPlay: boolean;\r\n  isPlaying: boolean;\r\n  togglePlay: () => void;\r\n};\r\n\r\nconst Controls: React.FC<Props> = props => {\r\n  const [isOverlayShown, setIsOverlayShown] = useState(false);\r\n  const [isControlHovered, setIsControlHovered] = useState(false);\r\n\r\n  const timeoutRef = useRef<number>();\r\n  const touchTimestampRef = useRef<number>();\r\n\r\n  useEffect(() => {\r\n    const onKeyDown = (event: KeyboardEvent) => {\r\n      switch (event.which) {\r\n        case 37:\r\n        case 38: {\r\n          props.goToPrevVisualization();\r\n          break;\r\n        }\r\n        case 39:\r\n        case 40: {\r\n          props.goToNextVisualization();\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', onKeyDown);\r\n    return () => document.removeEventListener('keydown', onKeyDown);\r\n  }, []);\r\n\r\n  const showOverlay = useCallback(() => {\r\n    timeoutRef.current != null && window.clearTimeout(timeoutRef.current);\r\n\r\n    setIsOverlayShown(true);\r\n    timeoutRef.current = window.setTimeout(() => {\r\n      if (!isControlHovered) {\r\n        setIsOverlayShown(false);\r\n      }\r\n    }, CONTROLS_FADE_OUT_DELAY);\r\n  }, [isControlHovered]);\r\n\r\n  const togglePlay = useCallback(() => {\r\n    props.context && props.context.resume();\r\n    props.togglePlay();\r\n    showOverlay();\r\n  }, [props.context, props.togglePlay]);\r\n\r\n  const recordTouchTimestamp = useCallback((event: React.TouchEvent) => {\r\n    event.preventDefault();\r\n    touchTimestampRef.current = Date.now();\r\n  }, []);\r\n\r\n  const goToRepo = () => window.open('https://github.com/blackwright/late');\r\n\r\n  const onMouseDown = useCallback((event: React.MouseEvent) => {\r\n    if (event.nativeEvent.which === 1) {\r\n      touchTimestampRef.current = Date.now();\r\n    }\r\n  }, []);\r\n\r\n  const onMouseUp = useCallback((event: React.MouseEvent) => {\r\n    if (\r\n      event.nativeEvent.which === 1 &&\r\n      touchTimestampRef.current &&\r\n      Date.now() - touchTimestampRef.current < TOUCH_WAS_CLICK_THRESHOLD\r\n    ) {\r\n      togglePlay();\r\n    }\r\n  }, []);\r\n\r\n  const onTouchEnd = useCallback(\r\n    (event: React.TouchEvent) => {\r\n      event.preventDefault();\r\n      if (\r\n        touchTimestampRef.current &&\r\n        Date.now() - touchTimestampRef.current < TOUCH_WAS_CLICK_THRESHOLD\r\n      ) {\r\n        showOverlay();\r\n      }\r\n    },\r\n    [isControlHovered]\r\n  );\r\n\r\n  const onPrev = useCallback(\r\n    (event: React.MouseEvent | React.TouchEvent) => {\r\n      event.stopPropagation();\r\n      props.goToPrevVisualization();\r\n      showOverlay();\r\n    },\r\n    [isControlHovered]\r\n  );\r\n\r\n  const onNext = useCallback(\r\n    (event: React.MouseEvent | React.TouchEvent) => {\r\n      event.stopPropagation();\r\n      props.goToNextVisualization();\r\n      showOverlay();\r\n    },\r\n    [isControlHovered]\r\n  );\r\n\r\n  const doNothing = useCallback((event: React.MouseEvent) => {\r\n    event.stopPropagation();\r\n  }, []);\r\n\r\n  const onHover = useCallback(() => setIsControlHovered(true), []);\r\n\r\n  const onHoverStop = useCallback(() => setIsControlHovered(false), []);\r\n\r\n  const { wantsToPlay, isPlaying } = props;\r\n\r\n  return (\r\n    <>\r\n      {wantsToPlay && !isPlaying && <Loading />}\r\n      <div\r\n        id=\"overlay\"\r\n        onTouchStart={recordTouchTimestamp}\r\n        onTouchEnd={onTouchEnd}\r\n        onMouseMove={showOverlay}\r\n        className={classNames({ show: isOverlayShown })}\r\n      >\r\n        <h1\r\n          id=\"title\"\r\n          onClick={goToRepo}\r\n          onTouchEnd={goToRepo}\r\n          onMouseEnter={onHover}\r\n          onMouseLeave={onHoverStop}\r\n        >\r\n          LATE\r\n        </h1>\r\n        <QualitySelect onHover={onHover} onHoverStop={onHoverStop} />\r\n        <div id=\"version\">build {versionInfo.version}</div>\r\n        {\r\n          <div\r\n            onMouseDown={onMouseDown}\r\n            onMouseUp={onMouseUp}\r\n            onTouchEnd={togglePlay}\r\n            onMouseEnter={onHover}\r\n            onMouseLeave={onHoverStop}\r\n            className={classNames({\r\n              play: !wantsToPlay && !isPlaying,\r\n              pause: wantsToPlay && isPlaying\r\n            })}\r\n          />\r\n        }\r\n        <div className=\"navigation\">\r\n          <div\r\n            className=\"arrow-container\"\r\n            onClick={onPrev}\r\n            onTouchStart={onPrev}\r\n            onMouseUp={doNothing}\r\n            onMouseEnter={onHover}\r\n            onMouseLeave={onHoverStop}\r\n          >\r\n            <svg\r\n              className=\"arrow\"\r\n              width=\"60px\"\r\n              height=\"80px\"\r\n              viewBox=\"0 0 50 80\"\r\n            >\r\n              <polyline\r\n                fill=\"none\"\r\n                stroke=\"#FFF\"\r\n                strokeWidth=\"3\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                points=\"45.63,75.8 0.375,38.087 45.63,0.375\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div\r\n            className=\"arrow-container\"\r\n            onClick={onNext}\r\n            onTouchStart={onNext}\r\n            onMouseUp={doNothing}\r\n            onMouseEnter={onHover}\r\n            onMouseLeave={onHoverStop}\r\n          >\r\n            <svg\r\n              className=\"arrow\"\r\n              width=\"60px\"\r\n              height=\"80px\"\r\n              viewBox=\"0 0 50 80\"\r\n            >\r\n              <polyline\r\n                fill=\"none\"\r\n                stroke=\"#FFF\"\r\n                strokeWidth=\"3\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                points=\"0.375,0.375 45.63,38.087 0.375,75.8\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  goToNextVisualization: () => dispatch(Actions.goToNextVisualization()),\r\n  goToPrevVisualization: () => dispatch(Actions.goToPrevVisualization())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Controls);\r\n","import React from 'react';\r\nimport './NoWebAudioApi.scss';\r\n\r\nconst NoWebAudioApi = () => (\r\n  <div id=\"no-web-audio\">\r\n    <p>Your device doesn't fully support the Web Audio API.</p>\r\n    <p>This site should be viewed on a non-mobile or Android device.</p>\r\n  </div>\r\n);\r\n\r\nexport default NoWebAudioApi;\r\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport Analyser from './components/Analyser';\nimport Controls from './components/Controls';\nimport NoWebAudioApi from './components/NoWebAudioApi';\nimport { useStateRef } from './utils/hooks';\n\nconst AUDIO_SERVER_URL =\n  process.env.NODE_ENV === 'production'\n    ? process.env.REACT_APP_AUDIO_SERVER_URL\n    : 'http://localhost:3002';\n\ntype Props = {};\n\nconst App: React.FC<Props> = props => {\n  const [wantsToPlay, setWantsToPlay] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [context, setContext, contextRef] = useStateRef<\n    AudioContext | undefined\n  >(undefined);\n  const [source, setSource] = useState<MediaElementAudioSourceNode>();\n  const [isContextUnavailable, setIsContextUnavailable] = useState(false);\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n\n  // disable if AudioContext is unavailable\n  useEffect(() => {\n    try {\n      new window.AudioContext();\n    } catch (err) {\n      setIsContextUnavailable(true);\n    }\n  }, []);\n\n  // attach audio event listeners\n  useEffect(() => {\n    const audioElement = audioRef.current!;\n\n    const onAudioPlay = () => setIsPlaying(true);\n    const onAudioPause = () => setIsPlaying(false);\n    const onAudioError = console.error;\n\n    audioElement.addEventListener('playing', onAudioPlay);\n    audioElement.addEventListener('pause', onAudioPause);\n    audioElement.addEventListener('error', onAudioError);\n\n    return () => {\n      audioElement.removeEventListener('playing', onAudioPlay);\n      audioElement.removeEventListener('pause', onAudioPause);\n      audioElement.removeEventListener('error', onAudioError);\n    };\n  }, []);\n\n  const initializeAudioContext = useCallback(() => {\n    const audioElement = audioRef.current!;\n    const context = new window.AudioContext();\n    const source = context.createMediaElementSource(audioElement);\n\n    setContext(context);\n    setSource(source);\n  }, [audioRef.current]);\n\n  const togglePlay = useCallback(() => {\n    const audioElement = audioRef.current!;\n\n    if (audioElement.paused) {\n      setWantsToPlay(true);\n      audioElement.play();\n\n      if (!contextRef.current) {\n        initializeAudioContext();\n      }\n    } else {\n      setWantsToPlay(false);\n      audioElement.pause();\n    }\n  }, [audioRef.current]);\n\n  if (isContextUnavailable) {\n    return <NoWebAudioApi />;\n  }\n\n  return (\n    <>\n      <audio\n        ref={audioRef}\n        id=\"audioElement\"\n        src={AUDIO_SERVER_URL}\n        preload={'auto'}\n        crossOrigin=\"anonymous\"\n      />\n\n      {context && source && <Analyser context={context} source={source} />}\n\n      <Controls\n        context={context}\n        wantsToPlay={wantsToPlay}\n        isPlaying={isPlaying}\n        togglePlay={togglePlay}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\nimport App from './App';\r\nimport './reset.scss';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}