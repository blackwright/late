{"version":3,"sources":["serviceWorker.js","store/types.ts","store/reducer.ts","store/index.ts","components/Visualizer/Visualizations/VisualizationHOC.tsx","utils/colors.ts","components/Visualizer/Visualizations/Waveform/index.tsx","components/Visualizer/Visualizations/Waveform/utils.ts","components/Visualizer/Visualizations/Drummer/index.tsx","components/Visualizer/Visualizations/Halpern/three/sceneManager.ts","components/Visualizer/Visualizations/Halpern/three/entities/polys.ts","components/Visualizer/Visualizations/Halpern/three/entities/camera.ts","components/Visualizer/Visualizations/Halpern/three/entities/renderer.ts","components/Visualizer/Visualizations/Halpern/index.tsx","components/Visualizer/Visualizations/Stars/three/entities/shaders.ts","components/Visualizer/Visualizations/Stars/three/entities/polys.ts","components/Visualizer/Visualizations/Stars/three/entities/light.ts","components/Visualizer/Visualizations/Stars/three/sceneManager.ts","components/Visualizer/Visualizations/Stars/three/entities/renderer.ts","components/Visualizer/Visualizations/Stars/three/entities/camera.ts","components/Visualizer/Visualizations/Stars/index.tsx","components/Visualizer/Visualizations/Rain/rain.ts","components/Visualizer/Visualizations/Rain/utils.ts","components/Visualizer/Visualizations/Rain/home.ts","components/Visualizer/Visualizations/Rain/index.tsx","components/Visualizer/Visualizations/MobileDisabled/index.tsx","utils/index.ts","components/Visualizer/Visualizations/index.tsx","components/Visualizer/VisualizationSelector.tsx","components/Analyser/index.tsx","config/index.ts","components/Loading/index.tsx","components/Controls/QualitySelect/index.tsx","store/actions.ts","components/Controls/index.tsx","components/NoWebAudioApi/index.tsx","App.tsx","utils/hooks.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","ActionConstants","initialState","currentVisualizationIndex","prevVisualizationIndex","quality","store","createStore","state","arguments","length","undefined","action","type","GO_TO_NEXT_VISUALIZATION","Object","objectSpread","GO_TO_PREV_VISUALIZATION","SET_QUALITY","__REDUX_DEVTOOLS_EXTENSION__","defaultProps","data","Uint8Array","lowPassData","options","wrap","WrappedComponent","_ref","_useState","useState","_useState2","slicedToArray","isDelayedAfterReflow","setIsDelayedAfterReflow","useEffect","setTimeout","rawIntensitiesRef","useRef","lowPassIntensitiesRef","startingTimestampRef","Date","now","totalDifferenceFromRawBaseline","totalDifferenceFromLowBaseline","renderedData","map","rawDataElement","i","Math","abs","lowPassDataElement","smoothing","sum","count","rangeIndex","rawIntensityMax","lowPassIntensitySum","lowPassIntensityCount","lowPassIntensityMax","current","forEach","rawIntensity","lowPassIntensity","currentRawIntensity","recentLowPassAvgIntensity","currentLowPassIntensity","concat","shift","isBeat","react_default","a","createElement","intensity","colorTriples","colorTriple","id","randomColorTriple","floor","random","getRandomColors","numColors","areUnique","colors","randomTriple","randomColor","includes","push","getRandomColor","getRandomColorTriple","colorCopy","toConsumableArray","reverse","VisualizationHOC","canvasRef","canvas","resizeCanvas","_window","innerWidth","innerHeight","_window$devicePixelRa","devicePixelRatio","width","height","ctx","getContext","fillStyle","fillRect","addEventListener","removeEventListener","intervalId","setInterval","clearInterval","lineWidth","lineCap","getColors","sliceWidth","color","strokeStyle","beginPath","x","moveTo","dataElement","y","lineTo","stroke","className","ref","QUALITY","0","NUM_DRUMMERS","1","2","size","setSize","_useState3","_useState4","colorSize","setColorSize","colorsRef","values","lastChangedTimestamp","onResize","maxSideLength","max","colorDiameter","sqrt","pow","numDrummers","freqMap","numPerSlice","freqKey","freqData","ceiling","newColor","drummers","entries","_ref2","_ref3","hitCount","drummerContainerSize","key","style","opacity","classNames","hit","MIN_HIT_COUNT","smallestDrummerSize","transitions","useTransition","from","item","backgroundColor","scale","enter","leave","config","slow","_ref4","props","_ref5","objectWithoutProperties","web","div","transform","interpolate","s","DELAY_BEFORE_ROTATING_X","CAMERA_MAX_DISTANCE","CAMERA_DRIFT","ROTATE_Y","ROTATE_X","sphereSegments","sceneManager","rendererContainer","animationFrameId","segments","sceneInitializedTimestamp","t","sphereGeometry","SphereGeometry","halpern","vertices","parameters","radius","widthSegments","heightSegments","positions","Float32Array","vertex","toArray","geometry","BufferGeometry","addAttribute","BufferAttribute","attributes","position","dynamic","material","PointsMaterial","TextureLoader","load","alphaTest","transparent","Points","createPoints","camera","startingY","PerspectiveCamera","set","lookAt","Vector3","createCamera","renderer","WebGLRenderer","alpha","setPixelRatio","setClearColor","createRenderer","appendChild","domElement","scene","Scene","add","clock","Clock","aspect","updateProjectionMatrix","render","onVisibilityChange","document","visibilityState","stop","start","animate","delta","getDelta","rotateY","rotateX","PI","translateY","cos","translateX","translateZ","requestAnimationFrame","cleanup","cancelAnimationFrame","removeChild","remove","dispose","RIPPLE_SPEED","rendererRef","sphereDataSegmentsRef","originalVerticesRef","focusedDataIndexRef","vertexSegmentLengthRef","halpernGeometryRef","focusedDataRef","Array","fill","_sceneManager","halpernGeometry","array","slice","rippleSpeed","splice","halpernBufferPositions","getAttribute","vertexSegmentIndex","ceil","dataIndex","vertexSegmentWeight","min","scalar","needsUpdate","starVertexShader","starFragmentShader","createCloud","texture","PlaneGeometry","cloudMaterial","MeshLambertMaterial","depthTest","rotateZ","cloud","Mesh","zPosition","createDirectionalLight","DirectionalLight","MAX_STAR_ALPHA","MIN_STAR_ALPHA","STAR_ALPHA_DELTA","STATIC_LIGHT_COLOR","VARIABLE_LIGHT_COLOR","STAR_COUNT","CLOUD_COUNT","lightIntensity","antialias","stars","starCount","alphas","j","shaderMaterial","ShaderMaterial","uniforms","value","Color","vertexShader","fragmentShader","createStars","cloudCover","Group","cloudCount","aLight","AmbientLight","fixedDLight","dLight","starAlphas","alphaDirection","children","dLightRef","lightTimestampRef","currentLightIntensity","newLightIntensity","TICKS_TO_FALL","RAINDROPS_HEIGHTWISE","Raindrop","canvasHeight","classCallCheck","this","heightPerTick","raindropHeight","Rainfall","raindrops","canvasWidth","createClass","nextRaindrops","raindrop","tick","startingX","defaultCornerRadii","tl","tr","br","bl","roundedRect","quadraticCurveTo","closePath","WINDOW_FRAME_THICKNESS_DIVISOR","Home","oneThirdCanvasWidth","oneHalfCanvasHeight","windowFrameThickness","roundedRadius","clockSize","clockCoords","save","linearGradient","createLinearGradient","addColorStop","clearRect","hole","muntinWidth","topLeftX","topRightX","topY","leftX","leftTopY","leftBottomY","arc","hours","getHours","minutes","getMinutes","seconds","getSeconds","translate","rotate","restore","rect","dresserHandleMidpoint","x1","y1","width1","height1","gradient1","x2","y2","width2","height2","gradient2","x3","y3","width3","height3","gradient3","tableCornerRadii","wall","clockFrame","clockFace","dresser","pictureFrames","table","rainCanvasRef","rainfallRef","homeCanvasRef","homeRef","clockInterval","rainCanvas","homeCanvas","createHome","home","clearTimeout","rainfall","newRaindropsAdded","raindropsToAdd","src","process","test","navigator","userAgent","visualizations","component","Rain","Stars","Waveform","Drummer","Halpern","styledVisualizations","vis","rest","assign","connect","currentIndex","prevIndex","number1","number2","visIndex","direction","useCallback","prev","translateXMultiplier","initial","Fragment","Visualization","Analyser","context","source","rawData","setRawData","setLowPassData","animationFrameIdRef","rawAnalyser","createAnalyser","fftSize","smoothingTimeConstant","destination","filter","createBiquadFilter","lowPassAnalyser","rawDataContainer","getByteTimeDomainData","lowPassDataContainer","disconnect","Visualizer_VisualizationSelector","Loading","show","qualities","label","dispatch","setQuality","Actions","onHover","onHoverStop","onMouseEnter","onMouseLeave","onChange","e","target","goToNextVisualization","goToPrevVisualization","isOverlayShown","setIsOverlayShown","isControlHovered","setIsControlHovered","timeoutRef","touchTimestampRef","onKeyDown","event","which","showOverlay","togglePlay","resume","recordTouchTimestamp","preventDefault","goToRepo","open","onMouseDown","nativeEvent","onMouseUp","onTouchEnd","onPrev","stopPropagation","onNext","doNothing","wantsToPlay","isPlaying","components_Loading","onTouchStart","onMouseMove","onClick","Controls_QualitySelect","versionInfo","play","pause","viewBox","strokeWidth","strokeLinecap","strokeLinejoin","points","NoWebAudioApi","App","setWantsToPlay","setIsPlaying","_useStateRef","setState","stateRef","useStateRef","_useStateRef2","setContext","contextRef","_useState5","_useState6","setSource","_useState7","_useState8","isContextUnavailable","setIsContextUnavailable","audioRef","AudioContext","err","audioElement","onAudioPlay","onAudioPause","onAudioError","console","error","initializeAudioContext","createMediaElementSource","paused","components_NoWebAudioApi","preload","crossOrigin","components_Analyser","components_Controls","ReactDOM","es","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.033aaf82.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export type Quality = 0 | 1 | 2;\r\n\r\nexport type StoreState = {\r\n  currentVisualizationIndex: number;\r\n  prevVisualizationIndex: number;\r\n  quality: Quality;\r\n};\r\n\r\nexport enum ActionConstants {\r\n  BEGIN_VISUALIZATION_TRANSITION = 'BEGIN_VISUALIZATION_TRANSITION',\r\n  END_VISUALIZATION_TRANSITION = 'END_VISUALIZATION_TRANSITION',\r\n  GO_TO_PREV_VISUALIZATION = 'GO_TO_PREV_VISUALIZATION',\r\n  GO_TO_NEXT_VISUALIZATION = 'GO_TO_NEXT_VISUALIZATION',\r\n  SET_QUALITY = 'SET_QUALITY'\r\n}\r\n\r\ninterface GoToNextVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_NEXT_VISUALIZATION;\r\n}\r\n\r\ninterface GoToPrevVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_PREV_VISUALIZATION;\r\n}\r\n\r\ninterface SetQualityAction {\r\n  type: typeof ActionConstants.SET_QUALITY;\r\n  quality: Quality;\r\n}\r\n\r\nexport type ActionUnionType =\r\n  | GoToNextVisualizationAction\r\n  | GoToPrevVisualizationAction\r\n  | SetQualityAction;\r\n","import { StoreState, ActionConstants, ActionUnionType } from './types';\r\n\r\nconst initialState: StoreState = {\r\n  currentVisualizationIndex: 0,\r\n  prevVisualizationIndex: 0,\r\n  quality: 2\r\n};\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: ActionUnionType\r\n): StoreState {\r\n  switch (action.type) {\r\n    case ActionConstants.GO_TO_NEXT_VISUALIZATION:\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex + 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.GO_TO_PREV_VISUALIZATION:\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex - 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.SET_QUALITY:\r\n      return {\r\n        ...state,\r\n        quality: action.quality\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Options } from './index';\r\nimport { Quality } from '../../../store/types';\r\nimport './Visualization.scss';\r\n\r\nexport type Props = {\r\n  // array of frequency data with values 0-255\r\n  data: Uint8Array;\r\n  lowPassData: Uint8Array;\r\n  options?: Options;\r\n  quality: Quality;\r\n};\r\n\r\nexport type WrappedProps = {\r\n  data: Uint8Array;\r\n  lowPassData: Uint8Array;\r\n  isBeat: boolean;\r\n  intensity: number;\r\n  lowPassIntensity: number;\r\n  quality: Quality;\r\n};\r\n\r\nconst defaultProps: Props = {\r\n  data: new Uint8Array(),\r\n  lowPassData: new Uint8Array(),\r\n  options: {},\r\n  quality: 2\r\n};\r\n\r\n// all visualization components should be wrapped with this HOC\r\nexport function wrap(\r\n  WrappedComponent: React.ComponentType<WrappedProps>\r\n): React.ComponentType<Props> {\r\n  return function({\r\n    data,\r\n    lowPassData,\r\n    options,\r\n    quality\r\n  }: Props = defaultProps) {\r\n    const [isDelayedAfterReflow, setIsDelayedAfterReflow] = useState(false);\r\n\r\n    useEffect(() => {\r\n      window.setTimeout(() => setIsDelayedAfterReflow(true), 0);\r\n    }, [isDelayedAfterReflow]);\r\n\r\n    const rawIntensitiesRef = useRef<number[]>([]);\r\n    const lowPassIntensitiesRef = useRef<number[]>([]);\r\n    const startingTimestampRef = useRef<number>(Date.now());\r\n\r\n    if (!isDelayedAfterReflow) {\r\n      return null;\r\n    }\r\n\r\n    let totalDifferenceFromRawBaseline = 0;\r\n    let totalDifferenceFromLowBaseline = 0;\r\n\r\n    const renderedData = data.map((rawDataElement, i) => {\r\n      totalDifferenceFromRawBaseline += Math.abs(rawDataElement - 128);\r\n\r\n      const lowPassDataElement = lowPassData[i];\r\n      totalDifferenceFromLowBaseline += Math.abs(lowPassDataElement - 128);\r\n\r\n      if (options == null || !options.smoothing) {\r\n        return rawDataElement;\r\n      } else {\r\n        // smooth out each data value using a range of values around it,\r\n        // the range of this window is the value of options.smoothing\r\n        let sum = 0;\r\n        let count = 0;\r\n\r\n        let rangeIndex = i - options.smoothing;\r\n\r\n        while (rangeIndex < i + options.smoothing) {\r\n          const rawDataAtRangeIndex = data[rangeIndex] || 128;\r\n          sum += rawDataAtRangeIndex;\r\n          count += 1;\r\n          rangeIndex += 1;\r\n        }\r\n\r\n        return sum / count;\r\n      }\r\n    });\r\n\r\n    let rawIntensityMax = 0;\r\n\r\n    let lowPassIntensitySum = 0;\r\n    let lowPassIntensityCount = 0;\r\n    let lowPassIntensityMax = 0;\r\n\r\n    rawIntensitiesRef.current.forEach((rawIntensity, i) => {\r\n      if (rawIntensity > rawIntensityMax) {\r\n        rawIntensityMax = rawIntensity;\r\n      }\r\n\r\n      const lowPassIntensity = lowPassIntensitiesRef.current[i];\r\n      lowPassIntensitySum += lowPassIntensity;\r\n      lowPassIntensityCount += 1;\r\n\r\n      if (lowPassIntensity > lowPassIntensityMax) {\r\n        lowPassIntensityMax = lowPassIntensity;\r\n      }\r\n    });\r\n\r\n    const currentRawIntensity = totalDifferenceFromRawBaseline / data.length;\r\n    const recentLowPassAvgIntensity =\r\n      lowPassIntensitySum / lowPassIntensityCount || 0;\r\n\r\n    const currentLowPassIntensity =\r\n      totalDifferenceFromLowBaseline / lowPassData.length;\r\n\r\n    rawIntensitiesRef.current = rawIntensitiesRef.current.concat(\r\n      currentRawIntensity\r\n    );\r\n    lowPassIntensitiesRef.current = lowPassIntensitiesRef.current.concat(\r\n      currentLowPassIntensity\r\n    );\r\n\r\n    // remove intensities older than 2 seconds\r\n    if (Date.now() - startingTimestampRef.current > 2000) {\r\n      rawIntensitiesRef.current.shift();\r\n      lowPassIntensitiesRef.current.shift();\r\n    }\r\n\r\n    const isBeat = currentLowPassIntensity > recentLowPassAvgIntensity * 1.5;\r\n\r\n    return (\r\n      <WrappedComponent\r\n        data={renderedData}\r\n        lowPassData={lowPassData}\r\n        isBeat={isBeat}\r\n        intensity={currentRawIntensity}\r\n        lowPassIntensity={currentLowPassIntensity}\r\n        quality={quality}\r\n      />\r\n    );\r\n  };\r\n}\r\n","const colorTriples = [\r\n  ['#0E9AA7', '#F6CD61', '#FE8A71'],\r\n  ['#EE4540', '#801336', '#2D142C'],\r\n  ['#8FB9A8', '#FDFBD4', '#FCD0BA'],\r\n  ['#AC6D83', '#685D79', '#465C7A'],\r\n  ['#F36E38', '#EF4648', '#582841'],\r\n  ['#F1F1F1', '#9BD7D1', '#305D7A'],\r\n  ['#DEA5B6', '#F3CD8C', '#F2E9C2'],\r\n  ['#E27B47', '#EFCA58', '#46B29E'],\r\n  ['#2E7345', '#2E9975', '#2DB3B3'],\r\n  ['#52A3CC', '#7EA1E5', '#AAAAF2'],\r\n  ['#CC5285', '#CC5285', '#F2BCAA'],\r\n  ['#D8E0BB', '#B6CEC7', '#86A3C3']\r\n];\r\n\r\nconst colorTriplesWithIds = colorTriples.map((colorTriple, i) => ({\r\n  id: i,\r\n  colorTriple\r\n}));\r\n\r\nfunction randomColorTriple() {\r\n  return colorTriples[Math.floor(Math.random() * colorTriples.length)];\r\n}\r\n\r\nexport function getRandomColors(numColors: number, areUnique?: boolean): string[] {\r\n  const colors: string[] = [];\r\n\r\n  while (colors.length < numColors) {\r\n    const randomTriple = randomColorTriple();\r\n    const randomColor = randomTriple[Math.floor(Math.random() * randomTriple.length)];\r\n\r\n    if (areUnique && colors.includes(randomColor)) {\r\n      break;\r\n    }\r\n\r\n    colors.push(randomColor);\r\n  }\r\n  return colors;\r\n}\r\n\r\nexport function getRandomColor() {\r\n  return getRandomColors(1)[0];\r\n}\r\n\r\nexport function getRandomColorTriple() {\r\n  const colorCopy = [...randomColorTriple()];\r\n  if (Math.random() <= 0.5) {\r\n    return colorCopy.reverse();\r\n  } else {\r\n    return colorCopy;\r\n  }\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { getColors } from './utils';\r\nimport './Waveform.scss';\r\n\r\nconst LINE_WIDTH = 10;\r\nconst LINE_X_OFFSET = 0;\r\nconst LINE_Y_OFFSET = 5;\r\n\r\nconst Waveform: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  quality\r\n}) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!;\r\n\r\n    const resizeCanvas = () => {\r\n      const { innerWidth, innerHeight, devicePixelRatio = 1 } = window;\r\n\r\n      canvas.width = innerWidth * devicePixelRatio;\r\n      canvas.height = innerHeight * devicePixelRatio;\r\n\r\n      // initial paint to match fade out color from rounding error\r\n      const ctx = canvas.getContext('2d')!;\r\n      ctx.fillStyle = '#101010';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    };\r\n\r\n    resizeCanvas();\r\n\r\n    window.addEventListener('resize', resizeCanvas);\r\n    return () => window.removeEventListener('resize', resizeCanvas);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n\r\n    const fadeOut = () => {\r\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    };\r\n\r\n    const intervalId = window.setInterval(fadeOut, 7);\r\n    return () => window.clearInterval(intervalId);\r\n  }, []);\r\n\r\n  // paint on every data update\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n    ctx.lineWidth = LINE_WIDTH;\r\n    ctx.lineCap = 'round';\r\n\r\n    const colors = getColors(quality + 1);\r\n\r\n    const sliceWidth = canvas.width / data.length;\r\n\r\n    colors.forEach((color, i) => {\r\n      ctx.strokeStyle = color;\r\n      ctx.beginPath();\r\n\r\n      let x = i * LINE_X_OFFSET;\r\n      ctx.moveTo(x, canvas.height / 2);\r\n\r\n      data.forEach(dataElement => {\r\n        const y =\r\n          (dataElement / 255.0) * canvas.height -\r\n          (LINE_Y_OFFSET * colors.length) / 2;\r\n        ctx.lineTo(x, y + i * ((LINE_Y_OFFSET * colors.length) / 2));\r\n        x += sliceWidth;\r\n      });\r\n\r\n      ctx.lineTo(x, canvas.height / 2);\r\n      ctx.stroke();\r\n    });\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"waveform\">\r\n      <div className=\"backdrop\" />\r\n      <canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Waveform);\r\n","import {\r\n  getRandomColorTriple,\r\n  getRandomColors,\r\n  getRandomColor\r\n} from '../../../../utils/colors';\r\n\r\nexport function getColors(numColors: number) {\r\n  switch (numColors) {\r\n    case 3:\r\n      return getRandomColorTriple();\r\n    case 2:\r\n      return getRandomColors(2, true);\r\n    case 1:\r\n      return [getRandomColor()];\r\n    default:\r\n      return getRandomColorTriple();\r\n  }\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useTransition, animated, interpolate, config } from 'react-spring';\r\nimport classNames from 'classnames';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport './Drummer.scss';\r\nimport { getRandomColor } from '../../../../utils/colors';\r\nimport { DATA_SIZE } from '../../../../config';\r\nimport { QualitySettings } from '../index';\r\n\r\nconst MIN_HIT_COUNT = 0.04;\r\nconst MIN_FREQUENCY_VARIATION = 10;\r\nconst MIN_DELAY_BETWEEN_COLOR_CHANGE = 200;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: { NUM_DRUMMERS: 6 },\r\n  1: { NUM_DRUMMERS: 10 },\r\n  2: { NUM_DRUMMERS: 16 }\r\n};\r\n\r\nconst minHitCount = MIN_HIT_COUNT * DATA_SIZE;\r\n\r\nconst Drummer: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  isBeat,\r\n  quality\r\n}) => {\r\n  const [size, setSize] = useState(0);\r\n  const [colorSize, setColorSize] = useState(0);\r\n\r\n  const colorsRef = useRef({\r\n    values: [getRandomColor()],\r\n    lastChangedTimestamp: Date.now()\r\n  });\r\n\r\n  useEffect(() => {\r\n    const onResize = () => {\r\n      const { innerWidth, innerHeight } = window;\r\n      const maxSideLength = Math.max(innerWidth, innerHeight);\r\n      setSize(maxSideLength * 2);\r\n\r\n      const colorDiameter = Math.sqrt(\r\n        Math.pow(innerWidth, 2) + Math.pow(innerHeight, 2)\r\n      );\r\n      setColorSize(colorDiameter);\r\n    };\r\n\r\n    onResize();\r\n\r\n    window.addEventListener('resize', onResize);\r\n    return () => window.removeEventListener('resize', onResize);\r\n  }, []);\r\n\r\n  const colors = colorsRef.current;\r\n  const numDrummers = QUALITY[quality].NUM_DRUMMERS;\r\n\r\n  const freqMap: { [key: string]: number } = {};\r\n  const numPerSlice = 256 / numDrummers;\r\n\r\n  let freqKey = 0;\r\n  while (freqKey < numDrummers) {\r\n    freqMap[freqKey] = 0;\r\n    freqKey += 1;\r\n  }\r\n\r\n  data.forEach(freqData => {\r\n    let freqKey = 0;\r\n    while (freqKey < numDrummers) {\r\n      const ceiling = numPerSlice * (freqKey + 1);\r\n      if (\r\n        Math.abs(freqData - 128) > MIN_FREQUENCY_VARIATION &&\r\n        freqData <= ceiling\r\n      ) {\r\n        freqMap[freqKey] += 1;\r\n        break;\r\n      }\r\n      freqKey += 1;\r\n    }\r\n  });\r\n\r\n  // space out background color changes so they're not jarring\r\n  const now = Date.now();\r\n  if (\r\n    isBeat &&\r\n    now - colors.lastChangedTimestamp > MIN_DELAY_BETWEEN_COLOR_CHANGE\r\n  ) {\r\n    let newColor;\r\n    do {\r\n      newColor = getRandomColor();\r\n    } while (colors.values[colors.values.length - 1] === newColor);\r\n\r\n    colors.values.push(newColor);\r\n    if (colors.values.length > 1) {\r\n      colors.values.shift();\r\n    }\r\n    colors.lastChangedTimestamp = now;\r\n  }\r\n\r\n  const drummers = Object.entries(freqMap).map(([freqKey, hitCount], i) => {\r\n    const drummerContainerSize = ((1 + +freqKey) * size) / numDrummers;\r\n\r\n    return (\r\n      <div\r\n        key={freqKey}\r\n        className=\"drummer-container\"\r\n        style={{\r\n          width: `${drummerContainerSize}px`,\r\n          height: `${drummerContainerSize}px`,\r\n          opacity: ((numDrummers - i) / numDrummers) * 0.5 * 0.25\r\n        }}\r\n      >\r\n        <div className={classNames('beat', { hit: hitCount > minHitCount })} />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const smallestDrummerSize = size / (numDrummers * 2);\r\n\r\n  const transitions = useTransition(colors.values, null, {\r\n    from: item => ({\r\n      backgroundColor: item,\r\n      width: smallestDrummerSize,\r\n      height: smallestDrummerSize,\r\n      scale: 1\r\n    }),\r\n    enter: { scale: colorSize / smallestDrummerSize },\r\n    leave: { scale: 0 },\r\n    config: config.slow\r\n  });\r\n\r\n  return (\r\n    <div className=\"drummer\">\r\n      {drummers}\r\n      {transitions.map(({ item, props, key }) => {\r\n        const { scale, ...style } = props as any;\r\n\r\n        return (\r\n          <animated.div\r\n            className=\"color-overlay\"\r\n            key={key}\r\n            style={{\r\n              ...style,\r\n              transform: interpolate(\r\n                [scale],\r\n                (s: number) => `translate3d(0, 0, 0) scale(${s})`\r\n              )\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Drummer);\r\n","import { Scene, PointsMaterial, Clock } from 'three';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\nimport { createSphereGeometry, createPoints } from './entities/polys';\r\nimport { Quality } from '../../../../../store/types';\r\nimport { QualitySettings } from '../../index';\r\n\r\nconst DELAY_BEFORE_ROTATING_X = 1500;\r\nconst CAMERA_MAX_DISTANCE = 200;\r\nconst CAMERA_DRIFT = 0.025;\r\nconst ROTATE_Y = -0.3;\r\nconst ROTATE_X = 0.3;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: { sphereSegments: 30 },\r\n  1: { sphereSegments: 48 },\r\n  2: { sphereSegments: 72 }\r\n};\r\n\r\nexport default function sceneManager(\r\n  rendererContainer: HTMLDivElement,\r\n  quality: Quality\r\n) {\r\n  let animationFrameId: number;\r\n  let sceneInitializedTimestamp = Date.now();\r\n  let t = 0;\r\n\r\n  const sphereGeometry = createSphereGeometry(QUALITY[quality].sphereSegments);\r\n  const halpern = createPoints(sphereGeometry);\r\n  const camera = createCamera(CAMERA_MAX_DISTANCE);\r\n  const renderer = createRenderer();\r\n  rendererContainer.appendChild(renderer.domElement);\r\n\r\n  const scene = new Scene();\r\n  scene.add(halpern);\r\n\r\n  // clock is started in Halpern component when the\r\n  // animation loop is started\r\n  const clock = new Clock();\r\n\r\n  window.addEventListener('resize', onResize);\r\n  document.addEventListener('visibilitychange', onVisibilityChange);\r\n\r\n  function animate() {\r\n    const delta = clock.getDelta();\r\n\r\n    halpern.rotateY(ROTATE_Y * delta);\r\n\r\n    if (Date.now() - sceneInitializedTimestamp > DELAY_BEFORE_ROTATING_X) {\r\n      halpern.rotateX(ROTATE_X * delta);\r\n    }\r\n\r\n    t += delta;\r\n\r\n    if (t >= Math.PI * 2) {\r\n      t = 0;\r\n    }\r\n\r\n    camera.translateY(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateX(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateZ(Math.cos(t) * CAMERA_DRIFT * 5);\r\n\r\n    renderer.render(scene, camera);\r\n    animationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function cleanup() {\r\n    window.cancelAnimationFrame(animationFrameId);\r\n    window.removeEventListener('resize', onResize);\r\n    document.removeEventListener('visibilitychange', onVisibilityChange);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    scene.remove(halpern);\r\n\r\n    halpern.geometry.dispose();\r\n    (halpern.material as PointsMaterial).dispose();\r\n    sphereGeometry.dispose();\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function onVisibilityChange() {\r\n    if (document.visibilityState === 'hidden') {\r\n      clock.stop();\r\n    } else {\r\n      clock.start();\r\n    }\r\n  }\r\n\r\n  return {\r\n    clock,\r\n    sphereGeometry,\r\n    halpern,\r\n    animate,\r\n    cleanup\r\n  };\r\n}\r\n","import {\r\n  Points,\r\n  PointsMaterial,\r\n  SphereGeometry,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  TextureLoader\r\n} from 'three';\r\n\r\nexport function createSphereGeometry(segments: number): SphereGeometry {\r\n  return new SphereGeometry(48, segments, segments);\r\n}\r\n\r\nexport function createPoints(sphereGeometry: SphereGeometry): Points {\r\n  const pointGeometry = new SphereGeometry(\r\n    sphereGeometry.parameters.radius,\r\n    sphereGeometry.parameters.widthSegments,\r\n    sphereGeometry.parameters.heightSegments\r\n  );\r\n\r\n  const { vertices } = pointGeometry;\r\n  const positions = new Float32Array(vertices.length * 3);\r\n\r\n  vertices.forEach((vertex, i) => {\r\n    vertex.toArray(positions, i * 3);\r\n  });\r\n\r\n  const geometry = new BufferGeometry();\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n  (geometry.attributes.position as BufferAttribute).dynamic = true;\r\n\r\n  const material = new PointsMaterial({\r\n    size: 0.5,\r\n    map: new TextureLoader().load('assets/images/point.png'),\r\n    alphaTest: 0.5,\r\n    color: 0x666666,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, material);\r\n}\r\n","import { PerspectiveCamera, Vector3 } from 'three';\r\n\r\nexport function createCamera(startingY: number) {\r\n  const camera = new PerspectiveCamera(\r\n    75,\r\n    window.innerWidth / window.innerHeight,\r\n    0.1,\r\n    1000\r\n  );\r\n\r\n  camera.position.set(0, startingY, 0);\r\n  camera.lookAt(new Vector3(0, 0, 0));\r\n\r\n  return camera;\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ alpha: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x000000, 0);\r\n\r\n  return renderer;\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { BufferGeometry, BufferAttribute } from 'three';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport sceneManager from './three/sceneManager';\r\nimport { QualitySettings } from '../index';\r\nimport './Halpern.scss';\r\n\r\nconst VERTEX_SEGMENT_WEIGHT_COEFFICIENT = 0.1;\r\nconst BASELINE_VERTEX_SCALAR_FACTOR = 1;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: { RIPPLE_SPEED: 2 },\r\n  1: { RIPPLE_SPEED: 3 },\r\n  2: { RIPPLE_SPEED: 4 }\r\n};\r\n\r\nconst Halpern: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  quality\r\n}) => {\r\n  const rendererRef = useRef<HTMLDivElement>(null);\r\n  const sphereDataSegmentsRef = useRef<number>();\r\n  const originalVerticesRef = useRef<ArrayLike<number>>();\r\n  const focusedDataIndexRef = useRef<number>(Math.floor(data.length / 2));\r\n  const vertexSegmentLengthRef = useRef<number>();\r\n  const halpernGeometryRef = useRef<BufferGeometry>();\r\n  const focusedDataRef = useRef<number[]>(new Array(data.length).fill(128));\r\n\r\n  useEffect(() => {\r\n    const rendererContainer = rendererRef.current!;\r\n    const { clock, animate, cleanup, sphereGeometry, halpern } = sceneManager(\r\n      rendererContainer,\r\n      quality\r\n    );\r\n\r\n    const halpernGeometry = halpern.geometry as BufferGeometry;\r\n\r\n    sphereDataSegmentsRef.current = Math.floor(\r\n      data.length / sphereGeometry.parameters.widthSegments\r\n    );\r\n\r\n    // split vertices up into segments belonging to slices of x cross sections,\r\n    // first and last vertices are at top and bottom of sphere\r\n    vertexSegmentLengthRef.current =\r\n      (sphereGeometry.vertices.length - 2) /\r\n      (sphereGeometry.parameters.widthSegments - 1);\r\n\r\n    halpernGeometryRef.current = halpernGeometry;\r\n\r\n    originalVerticesRef.current = (halpernGeometry.attributes.position\r\n      .array as Float32Array).slice(0);\r\n\r\n    clock.start();\r\n\r\n    animate();\r\n\r\n    return cleanup;\r\n  }, [quality]);\r\n\r\n  useEffect(() => {\r\n    const rippleSpeed = QUALITY[quality].RIPPLE_SPEED;\r\n\r\n    focusedDataRef.current.splice(0, rippleSpeed);\r\n    focusedDataRef.current = focusedDataRef.current.concat(\r\n      new Array(rippleSpeed).fill(data[focusedDataIndexRef.current!])\r\n    );\r\n\r\n    const halpernBufferPositions = halpernGeometryRef.current!.getAttribute(\r\n      'position'\r\n    ).array as Float32Array;\r\n\r\n    let i = 0;\r\n    while (i < originalVerticesRef.current!.length) {\r\n      // find which segment the current index belongs to\r\n      const vertexSegmentIndex = Math.ceil(\r\n        Math.floor(i / 3) / vertexSegmentLengthRef.current!\r\n      );\r\n\r\n      const dataIndex = vertexSegmentIndex * sphereDataSegmentsRef.current!;\r\n      const vertexSegmentWeight = Math.min(\r\n        vertexSegmentIndex,\r\n        vertexSegmentLengthRef.current! - vertexSegmentIndex\r\n      );\r\n\r\n      const dataVariation =\r\n        Math.abs(focusedDataRef.current[dataIndex] - 128) / 255;\r\n\r\n      const scalar =\r\n        dataVariation *\r\n          vertexSegmentWeight *\r\n          VERTEX_SEGMENT_WEIGHT_COEFFICIENT +\r\n        BASELINE_VERTEX_SCALAR_FACTOR;\r\n\r\n      // update X, Y, and Z vector positions in BufferGeometry\r\n      halpernBufferPositions[i] = originalVerticesRef.current![i] * scalar;\r\n      halpernBufferPositions[i + 1] =\r\n        originalVerticesRef.current![i + 1] * scalar;\r\n      halpernBufferPositions[i + 2] =\r\n        originalVerticesRef.current![i + 2] * scalar;\r\n\r\n      i += 3;\r\n    }\r\n\r\n    // inform three.js that vertices should be repositioned,\r\n    // final render is handled in sceneManager animate loop\r\n    (halpernGeometryRef.current!.getAttribute(\r\n      'position'\r\n    ) as BufferAttribute).needsUpdate = true;\r\n  }, [data]);\r\n\r\n  return <div className=\"halpern\" ref={rendererRef} />;\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Halpern);\r\n","export const starVertexShader = `\r\nattribute float alpha;\r\nvarying float vAlpha;\r\n\r\nvoid main() {\r\n  vAlpha = alpha;\r\n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n  gl_PointSize = 4.0 * alpha;\r\n  gl_Position = projectionMatrix * mvPosition;\r\n}\r\n`;\r\n\r\nexport const starFragmentShader = `\r\nuniform vec3 color;\r\nvarying float vAlpha;\r\n\r\nvoid main() {\r\n  float r = 0.0;\r\n  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\r\n  r = dot(cxy, cxy);\r\n  if (r > 1.0) {\r\n    discard;\r\n  }\r\n\r\n  gl_FragColor = vec4(color, vAlpha);\r\n}\r\n`;\r\n","import {\r\n  Points,\r\n  BufferAttribute,\r\n  ShaderMaterial,\r\n  Color,\r\n  BufferGeometry,\r\n  TextureLoader,\r\n  MeshLambertMaterial,\r\n  Mesh,\r\n  PlaneGeometry\r\n} from 'three';\r\nimport { starVertexShader, starFragmentShader } from './shaders';\r\n\r\nexport function createStars(starCount: number): Points {\r\n  const geometry = new BufferGeometry();\r\n\r\n  const positions = new Float32Array(starCount * 3);\r\n\r\n  let i = 0;\r\n  while (i < starCount) {\r\n    // add random x, y, and z vector positions\r\n    positions[i++] = Math.random() * 100 - 50;\r\n    positions[i++] = Math.random() * 100 - 50;\r\n    positions[i++] = Math.random() * 100 - 50;\r\n  }\r\n\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n\r\n  const alphas = new Float32Array(geometry.attributes.position.count * 1);\r\n\r\n  let j = 0;\r\n  while (j < alphas.length) {\r\n    alphas[j] = Math.random();\r\n    j += 1;\r\n  }\r\n\r\n  geometry.addAttribute('alpha', new BufferAttribute(alphas, 1));\r\n\r\n  const shaderMaterial = new ShaderMaterial({\r\n    uniforms: {\r\n      color: { type: 'c', value: new Color(0xffffff) }\r\n    },\r\n    vertexShader: starVertexShader,\r\n    fragmentShader: starFragmentShader,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, shaderMaterial);\r\n}\r\n\r\nexport function createCloud(): Mesh {\r\n  const texture = Math.random() < 0.5 ? 'cloud.png' : 'smoke.png';\r\n\r\n  const geometry = new PlaneGeometry(50, 50);\r\n\r\n  const cloudMaterial = new MeshLambertMaterial({\r\n    map: new TextureLoader().load(`assets/images/${texture}`),\r\n    transparent: true,\r\n    opacity: 0.15,\r\n    depthTest: false\r\n  });\r\n\r\n  geometry.rotateZ(Math.random() * 360);\r\n\r\n  const cloud = new Mesh(geometry, cloudMaterial);\r\n\r\n  const zPosition = Math.random() * 15 + 10;\r\n\r\n  cloud.position.set(\r\n    Math.random() * 100 - 50,\r\n    Math.random() * 100 - 50,\r\n    Math.random() < 0.5 ? zPosition : -zPosition\r\n  );\r\n\r\n  return cloud;\r\n}\r\n","import { DirectionalLight, AmbientLight } from 'three';\r\n\r\nexport function createAmbientLight(color: number, intensity: number) {\r\n  return new AmbientLight(color, intensity);\r\n}\r\n\r\nexport function createDirectionalLight(color: number, intensity: number) {\r\n  return new DirectionalLight(color, intensity);\r\n}\r\n","import {\r\n  Scene,\r\n  PointsMaterial,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  Group,\r\n  Mesh,\r\n  ShaderMaterial,\r\n  Clock\r\n} from 'three';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\nimport { createStars, createCloud } from './entities/polys';\r\nimport { createAmbientLight, createDirectionalLight } from './entities/light';\r\nimport { QualitySettings } from '../../index';\r\n\r\nconst MAX_STAR_ALPHA = 1.0;\r\nconst MIN_STAR_ALPHA = 0.2;\r\nconst STAR_ALPHA_DELTA = 0.75;\r\nconst ROTATE_Y = 0.025;\r\nconst ROTATE_X = 0.001;\r\nconst STATIC_LIGHT_COLOR = 0x00c4b6;\r\nconst VARIABLE_LIGHT_COLOR = 0xd10022;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: {\r\n    STAR_COUNT: 5 * 1000,\r\n    CLOUD_COUNT: 20\r\n  },\r\n  1: {\r\n    STAR_COUNT: 10 * 1000,\r\n    CLOUD_COUNT: 40\r\n  },\r\n  2: {\r\n    STAR_COUNT: 20 * 1000,\r\n    CLOUD_COUNT: 65\r\n  }\r\n};\r\n\r\nexport default function sceneManager(\r\n  rendererContainer: HTMLDivElement,\r\n  quality: number,\r\n  lightIntensity: number\r\n) {\r\n  let animationFrameId: number;\r\n\r\n  const renderer = createRenderer();\r\n  rendererContainer.appendChild(renderer.domElement);\r\n  const camera = createCamera();\r\n  const scene = new Scene();\r\n\r\n  const stars = createStars(QUALITY[quality].STAR_COUNT);\r\n  scene.add(stars);\r\n\r\n  const cloudCover = new Group();\r\n\r\n  let cloudCount = 0;\r\n  while (cloudCount <= QUALITY[quality].CLOUD_COUNT) {\r\n    const cloud = createCloud();\r\n    cloudCover.add(cloud);\r\n    cloudCount += 1;\r\n  }\r\n\r\n  scene.add(cloudCover);\r\n\r\n  const aLight = createAmbientLight(0xffffff, lightIntensity);\r\n  scene.add(aLight);\r\n\r\n  const fixedDLight = createDirectionalLight(STATIC_LIGHT_COLOR, 2);\r\n  fixedDLight.position.set(0, 0, 1);\r\n  scene.add(fixedDLight);\r\n\r\n  const dLight = createDirectionalLight(VARIABLE_LIGHT_COLOR, lightIntensity);\r\n  dLight.position.set(0, 0, 1);\r\n  scene.add(dLight);\r\n\r\n  // create a fixed array to track which direction to adjust each star alpha\r\n  const starAlphas = (stars.geometry as BufferGeometry).attributes.alpha;\r\n  const alphaDirection = new Float32Array(starAlphas.count);\r\n\r\n  for (let i = 0; i < alphaDirection.length; i++) {\r\n    // direction of 1 means alpha should increase\r\n    // -1 means alpha should decrease\r\n    alphaDirection[i] = Math.random() < 0.5 ? 1 : -1;\r\n  }\r\n\r\n  // clock is started in Stars component when\r\n  // the animation loop is first triggered\r\n  const clock = new Clock();\r\n\r\n  window.addEventListener('resize', onResize);\r\n  document.addEventListener('visibilitychange', onVisibilityChange);\r\n\r\n  function animate() {\r\n    const delta = clock.getDelta();\r\n\r\n    stars.rotateX(ROTATE_X * delta);\r\n    stars.rotateY(ROTATE_Y * delta);\r\n\r\n    cloudCover.rotateX(ROTATE_X * 24 * delta);\r\n    cloudCover.rotateY(ROTATE_Y * 2 * delta);\r\n    cloudCover.rotateZ(ROTATE_X * 3 * delta);\r\n\r\n    cloudCover.children.forEach(cloud => {\r\n      (cloud as Mesh).lookAt(camera.position);\r\n    });\r\n\r\n    // use alphaDirection to maintain alpha adjustment direction until we\r\n    // reach a limit, then switch the direction\r\n    for (let i = 0; i < starAlphas.count; i++) {\r\n      if (alphaDirection[i] > 0) {\r\n        (starAlphas.array as Float32Array)[i] *= 1 + STAR_ALPHA_DELTA * delta;\r\n        if ((starAlphas.array as Float32Array)[i] > MAX_STAR_ALPHA) {\r\n          alphaDirection[i] = -1;\r\n        }\r\n      } else {\r\n        (starAlphas.array as Float32Array)[i] *= 1 - STAR_ALPHA_DELTA * delta;\r\n        if ((starAlphas.array as Float32Array)[i] < MIN_STAR_ALPHA) {\r\n          alphaDirection[i] = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    (starAlphas as BufferAttribute).needsUpdate = true;\r\n\r\n    renderer.render(scene, camera);\r\n    animationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function cleanup() {\r\n    window.cancelAnimationFrame(animationFrameId);\r\n    window.removeEventListener('resize', onResize);\r\n    document.removeEventListener('visibilitychange', onVisibilityChange);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    scene.remove(stars);\r\n    stars.geometry.dispose();\r\n    (stars.material as PointsMaterial).dispose();\r\n\r\n    scene.remove(cloudCover);\r\n    cloudCover.children.forEach(cloud => {\r\n      (cloud as Mesh).geometry.dispose();\r\n      ((cloud as Mesh).material as ShaderMaterial).dispose();\r\n    });\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function onVisibilityChange() {\r\n    if (document.visibilityState === 'hidden') {\r\n      clock.stop();\r\n    } else {\r\n      clock.start();\r\n    }\r\n  }\r\n\r\n  return {\r\n    clock,\r\n    animate,\r\n    cleanup,\r\n    dLight\r\n  };\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ antialias: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x0000f, 1);\r\n\r\n  return renderer;\r\n}\r\n","import { PerspectiveCamera } from 'three';\r\n\r\nexport function createCamera() {\r\n  const camera = new PerspectiveCamera(\r\n    50,\r\n    window.innerWidth / window.innerHeight,\r\n    1,\r\n    1000\r\n  );\r\n\r\n  return camera;\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { DirectionalLight } from 'three';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport sceneManager from './three/sceneManager';\r\nimport './Stars.scss';\r\n\r\nconst MIN_DELAY_BETWEEN_INTENSITY_CHANGE = 75;\r\nconst MAX_LIGHT_INTENSITY_INCREASE_DELTA = 2.5;\r\nconst MIN_LIGHT_INTENSITY = 1;\r\n\r\nconst Stars: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  intensity,\r\n  quality\r\n}) => {\r\n  const rendererRef = useRef<HTMLDivElement>(null);\r\n  const dLightRef = useRef<DirectionalLight>();\r\n  const lightTimestampRef = useRef<number>(Date.now());\r\n\r\n  useEffect(() => {\r\n    const rendererContainer = rendererRef.current!;\r\n    const { clock, animate, cleanup, dLight } = sceneManager(\r\n      rendererContainer,\r\n      quality,\r\n      MIN_LIGHT_INTENSITY\r\n    );\r\n\r\n    dLightRef.current = dLight;\r\n\r\n    clock.start();\r\n    animate();\r\n\r\n    return cleanup;\r\n  }, [quality]);\r\n\r\n  useEffect(() => {\r\n    const now = Date.now();\r\n\r\n    if (now - lightTimestampRef.current <= MIN_DELAY_BETWEEN_INTENSITY_CHANGE) {\r\n      return;\r\n    }\r\n\r\n    const currentLightIntensity = dLightRef.current!.intensity;\r\n\r\n    let newLightIntensity = intensity / 2 || MIN_LIGHT_INTENSITY;\r\n\r\n    if (\r\n      newLightIntensity - currentLightIntensity >\r\n      MAX_LIGHT_INTENSITY_INCREASE_DELTA\r\n    ) {\r\n      newLightIntensity =\r\n        currentLightIntensity + MAX_LIGHT_INTENSITY_INCREASE_DELTA;\r\n    }\r\n\r\n    dLightRef.current!.intensity = newLightIntensity;\r\n\r\n    lightTimestampRef.current = now;\r\n  }, [data]);\r\n\r\n  return <div className=\"stars\" ref={rendererRef} />;\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Stars);\r\n","const TICKS_TO_FALL = 100;\r\nconst RAINDROPS_HEIGHTWISE = 15;\r\nconst RAINDROP_COLOR = '#c6f1ff';\r\n\r\nclass Raindrop {\r\n  private heightPerTick = 0;\r\n  private raindropHeight = 0;\r\n\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    private ctx: CanvasRenderingContext2D,\r\n    private canvasHeight: number\r\n  ) {\r\n    this.heightPerTick = Math.floor(this.canvasHeight / TICKS_TO_FALL);\r\n    this.raindropHeight = Math.floor(this.canvasHeight / RAINDROPS_HEIGHTWISE);\r\n  }\r\n\r\n  tick() {\r\n    this.y += Math.floor(this.heightPerTick);\r\n  }\r\n\r\n  render() {\r\n    const { ctx } = this;\r\n    ctx.fillStyle = RAINDROP_COLOR;\r\n    ctx.fillRect(this.x, this.y, 1, this.raindropHeight);\r\n  }\r\n}\r\n\r\nexport class Rainfall {\r\n  private raindrops: Raindrop[] = [];\r\n  private canvasWidth = 0;\r\n  private canvasHeight = 0;\r\n\r\n  constructor(private ctx: CanvasRenderingContext2D) {\r\n    this.canvasWidth = ctx.canvas.width;\r\n    this.canvasHeight = ctx.canvas.height;\r\n  }\r\n\r\n  tick() {\r\n    const nextRaindrops: Raindrop[] = [];\r\n    const { raindrops, canvasWidth, canvasHeight } = this;\r\n\r\n    raindrops.forEach(raindrop => {\r\n      raindrop.tick();\r\n\r\n      if (raindrop.x < canvasWidth && raindrop.y < canvasHeight) {\r\n        nextRaindrops.push(raindrop);\r\n      }\r\n    });\r\n\r\n    this.raindrops = nextRaindrops;\r\n  }\r\n\r\n  add() {\r\n    const { raindrops, ctx, canvasWidth, canvasHeight } = this;\r\n    const startingX = Math.floor(Math.random() * (canvasWidth - 1) + 1);\r\n    const startingY = -canvasHeight / RAINDROPS_HEIGHTWISE;\r\n\r\n    raindrops.push(new Raindrop(startingX, startingY, ctx, canvasHeight));\r\n  }\r\n\r\n  render() {\r\n    this.raindrops.forEach(raindrop => raindrop.render());\r\n  }\r\n}\r\n","export type CornerRadii = {\r\n  tl: number;\r\n  tr: number;\r\n  br: number;\r\n  bl: number;\r\n};\r\n\r\nconst defaultCornerRadii = {\r\n  tl: 0,\r\n  tr: 0,\r\n  br: 0,\r\n  bl: 0\r\n};\r\n\r\nexport function roundedRect(\r\n  ctx: CanvasRenderingContext2D,\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number,\r\n  radius: CornerRadii = defaultCornerRadii,\r\n  stroke = false\r\n) {\r\n  ctx.beginPath();\r\n\r\n  ctx.moveTo(x + radius.tl, y);\r\n  ctx.lineTo(x + width - radius.tr, y);\r\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n\r\n  ctx.lineTo(x + width, y + height - radius.br);\r\n  ctx.quadraticCurveTo(\r\n    x + width,\r\n    y + height,\r\n    x + width - radius.br,\r\n    y + height\r\n  );\r\n\r\n  ctx.lineTo(x + radius.bl, y + height);\r\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n\r\n  ctx.lineTo(x, y + radius.tl);\r\n  ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n\r\n  ctx.closePath();\r\n  ctx.fill();\r\n  stroke && ctx.stroke();\r\n}\r\n","import { roundedRect, CornerRadii } from './utils';\r\n\r\nconst WALL_START_COLOR = '#FFA265';\r\nconst WALL_END_COLOR = '#CE6A39';\r\nconst WOOD_COLOR = '#6F5966';\r\nconst WOOD_DECORATION_COLOR = '#FEEFAC';\r\nconst WINDOW_FRAME_COLOR = '#8B3536';\r\nconst WINDOW_DECORATION_COLOR = '#682634';\r\nconst WINDOW_FRAME_THICKNESS_DIVISOR = 50;\r\nconst CLOCK_INNER_COLOR = '#AAA';\r\nconst CLOCK_HANDS_COLOR = '#793147';\r\nconst CLOCK_OUTER_COLOR = WOOD_COLOR;\r\n\r\nexport class Home {\r\n  private canvasWidth = 0;\r\n  private canvasHeight = 0;\r\n  private oneThirdCanvasWidth = 0;\r\n  private oneHalfCanvasHeight = 0;\r\n  private windowFrameThickness = 0;\r\n  private roundedRadius = 0;\r\n  private clockSize = 0;\r\n  private clockCoords: { x: number; y: number } = { x: 0, y: 0 };\r\n\r\n  constructor(private ctx: CanvasRenderingContext2D) {\r\n    this.canvasWidth = ctx.canvas.width;\r\n    this.canvasHeight = ctx.canvas.height;\r\n    this.oneThirdCanvasWidth = this.canvasWidth / 3;\r\n    this.oneHalfCanvasHeight = this.canvasHeight / 2;\r\n    this.windowFrameThickness = Math.floor(\r\n      Math.max(this.canvasWidth, this.canvasHeight) /\r\n        WINDOW_FRAME_THICKNESS_DIVISOR\r\n    );\r\n    this.roundedRadius = Math.floor(this.windowFrameThickness / 3);\r\n    this.clockSize = this.windowFrameThickness * 7;\r\n    ctx.save();\r\n  }\r\n\r\n  wall() {\r\n    const { ctx, canvasWidth, canvasHeight } = this;\r\n\r\n    const linearGradient = this.ctx.createLinearGradient(0, 0, 0, canvasHeight);\r\n    linearGradient.addColorStop(0, WALL_START_COLOR);\r\n    linearGradient.addColorStop(1, WALL_END_COLOR);\r\n    ctx.fillStyle = linearGradient;\r\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n  }\r\n\r\n  hole() {\r\n    const { ctx, oneThirdCanvasWidth, oneHalfCanvasHeight } = this;\r\n\r\n    ctx.clearRect(\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight / 2,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight\r\n    );\r\n  }\r\n\r\n  window() {\r\n    const {\r\n      ctx,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight,\r\n      windowFrameThickness\r\n    } = this;\r\n\r\n    ctx.fillStyle = WINDOW_FRAME_COLOR;\r\n\r\n    // window trim\r\n    ctx.fillRect(\r\n      oneThirdCanvasWidth - windowFrameThickness,\r\n      oneHalfCanvasHeight / 2 - windowFrameThickness * 2,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      oneHalfCanvasHeight + windowFrameThickness * 4\r\n    );\r\n\r\n    this.hole();\r\n\r\n    // window muntin\r\n    const muntinWidth = Math.floor(windowFrameThickness / 2);\r\n\r\n    const topLeftX = (oneThirdCanvasWidth * 4) / 3 - (muntinWidth * 2) / 3;\r\n    const topRightX = (oneThirdCanvasWidth * 5) / 3 - muntinWidth / 3;\r\n    const topY = oneHalfCanvasHeight / 2 - windowFrameThickness;\r\n\r\n    const leftX = oneThirdCanvasWidth - windowFrameThickness;\r\n    const leftTopY = (oneHalfCanvasHeight * 5) / 6 - (muntinWidth * 2) / 3;\r\n    const leftBottomY = (oneHalfCanvasHeight * 7) / 6 - muntinWidth / 3;\r\n\r\n    ctx.fillRect(\r\n      topLeftX,\r\n      topY,\r\n      muntinWidth,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    ctx.fillRect(\r\n      topRightX,\r\n      topY,\r\n      muntinWidth,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    ctx.fillRect(\r\n      leftX,\r\n      leftTopY,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      muntinWidth\r\n    );\r\n\r\n    ctx.fillRect(\r\n      leftX,\r\n      leftBottomY,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      muntinWidth\r\n    );\r\n\r\n    ctx.fillStyle = WINDOW_DECORATION_COLOR;\r\n\r\n    // window head\r\n    ctx.fillRect(\r\n      oneThirdCanvasWidth - windowFrameThickness * 2,\r\n      oneHalfCanvasHeight / 2 - windowFrameThickness * 2,\r\n      oneThirdCanvasWidth + windowFrameThickness * 4,\r\n      windowFrameThickness\r\n    );\r\n\r\n    // window stool\r\n    const windowSillCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: 0,\r\n      bl: this.roundedRadius,\r\n      br: this.roundedRadius\r\n    };\r\n\r\n    roundedRect(\r\n      ctx,\r\n      oneThirdCanvasWidth - windowFrameThickness * 2,\r\n      (oneHalfCanvasHeight * 3) / 2 + windowFrameThickness,\r\n      oneThirdCanvasWidth + windowFrameThickness * 4,\r\n      windowFrameThickness,\r\n      windowSillCornerRadii\r\n    );\r\n  }\r\n\r\n  clockFrame() {\r\n    const { ctx, clockSize } = this;\r\n\r\n    const x = (this.canvasWidth * 2) / 3 + this.windowFrameThickness * 10;\r\n    const y = this.canvasHeight / 5;\r\n    this.clockCoords = { x, y };\r\n    ctx.strokeStyle = CLOCK_OUTER_COLOR;\r\n\r\n    // clock frame\r\n    ctx.lineWidth = this.windowFrameThickness / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 1.75, 0, Math.PI * 2, true);\r\n    ctx.stroke();\r\n\r\n    ctx.strokeStyle = '#594651';\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2, 0, Math.PI * 2, true);\r\n    ctx.stroke();\r\n  }\r\n\r\n  clockFace() {\r\n    const { ctx, clockSize, clockCoords } = this;\r\n    const { x, y } = clockCoords;\r\n    ctx.save();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2, 0, Math.PI * 2, true);\r\n    ctx.fillStyle = CLOCK_INNER_COLOR;\r\n    ctx.fill();\r\n\r\n    // clock hands\r\n    const now = new Date();\r\n    const hours = now.getHours();\r\n    const minutes = now.getMinutes();\r\n    const seconds = now.getSeconds();\r\n\r\n    ctx.lineWidth = 10;\r\n    ctx.lineCap = 'round';\r\n    ctx.strokeStyle = CLOCK_HANDS_COLOR;\r\n    ctx.translate(x, y);\r\n    ctx.save();\r\n\r\n    // hour hand\r\n    ctx.rotate((Math.PI / 6) * (hours + minutes / 60 + seconds / 3600));\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 3);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n    ctx.save();\r\n\r\n    // minute hand\r\n    ctx.rotate((Math.PI / 30) * (minutes + seconds / 60));\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 2.5);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n    ctx.save();\r\n\r\n    // second hand\r\n    ctx.lineWidth = 5;\r\n    ctx.rotate((Math.PI / 30) * seconds);\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 2.5);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  dresser() {\r\n    const { ctx, canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    const x = (canvasWidth * 2) / 3 + windowFrameThickness * 5;\r\n    const y = (canvasHeight * 2) / 3;\r\n\r\n    // dresser body\r\n    ctx.fillStyle = WOOD_COLOR;\r\n    ctx.fillRect(x, y, canvasWidth, canvasHeight);\r\n\r\n    // dresser detail rectangle\r\n    ctx.strokeStyle = WOOD_DECORATION_COLOR;\r\n    ctx.lineWidth = 3;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      x + windowFrameThickness,\r\n      y + windowFrameThickness,\r\n      canvasWidth,\r\n      canvasHeight\r\n    );\r\n    ctx.stroke();\r\n\r\n    // dresser top handle\r\n    const dresserWidth = canvasWidth - (x + windowFrameThickness);\r\n    const dresserHandleMidpoint =\r\n      x + windowFrameThickness + (dresserWidth * 3) / 5;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(dresserHandleMidpoint, y + windowFrameThickness * 2.5);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 2.5);\r\n    ctx.lineWidth = (windowFrameThickness * 2) / 3;\r\n    ctx.stroke();\r\n\r\n    // dresser horizontal detail line\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + windowFrameThickness, y + windowFrameThickness * 6);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 6);\r\n    ctx.lineWidth = 2;\r\n    ctx.stroke();\r\n\r\n    // dresser bottom handle\r\n    ctx.beginPath();\r\n    ctx.moveTo(dresserHandleMidpoint, y + windowFrameThickness * 7.5);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 7.5);\r\n    ctx.lineWidth = (windowFrameThickness * 2) / 3;\r\n    ctx.stroke();\r\n  }\r\n\r\n  pictureFrames() {\r\n    const { ctx, oneThirdCanvasWidth, windowFrameThickness } = this;\r\n\r\n    const x1 = (oneThirdCanvasWidth * 3) / 4 - windowFrameThickness * 4;\r\n    const y1 = -windowFrameThickness;\r\n    const width1 = windowFrameThickness * 4;\r\n    const height1 = windowFrameThickness * 5;\r\n\r\n    ctx.beginPath();\r\n    ctx.rect(x1, y1, width1, height1);\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n    const gradient1 = ctx.createLinearGradient(x1, y1, x1, y1 + height1);\r\n    gradient1.addColorStop(0, '#52A3CC');\r\n    gradient1.addColorStop(1, '#7EA1E5');\r\n    ctx.fillStyle = gradient1;\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    const x2 = x1 - windowFrameThickness * 7;\r\n    const y2 = windowFrameThickness * 2;\r\n    const width2 = windowFrameThickness * 5;\r\n    const height2 = windowFrameThickness * 4;\r\n\r\n    ctx.beginPath();\r\n    ctx.rect(x2, y2, width2, height2);\r\n    const gradient2 = ctx.createLinearGradient(x2, y2, x2 + width2, y2);\r\n    gradient2.addColorStop(0, '#F2E9C2');\r\n    gradient2.addColorStop(1, '#EFCA58');\r\n    ctx.fillStyle = gradient2;\r\n    ctx.strokeStyle = '#465C7A';\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    const x3 = x2 + windowFrameThickness * 2;\r\n    const y3 = y2 + height2 + windowFrameThickness * 1.5;\r\n    const width3 = windowFrameThickness * 6;\r\n    const height3 = windowFrameThickness * 10;\r\n\r\n    ctx.beginPath();\r\n    ctx.rect(x3, y3, width3, height3);\r\n    const gradient3 = ctx.createLinearGradient(x3, y3, x3, y3 + height3);\r\n    gradient3.addColorStop(0, '#F2BCAA');\r\n    gradient3.addColorStop(1, '#CC5285');\r\n    ctx.fillStyle = gradient3;\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n    ctx.fill();\r\n    ctx.stroke();\r\n  }\r\n\r\n  table() {\r\n    const {\r\n      ctx,\r\n      windowFrameThickness,\r\n      canvasHeight,\r\n      oneThirdCanvasWidth,\r\n      roundedRadius\r\n    } = this;\r\n\r\n    // table top\r\n    const y = (canvasHeight * 5) / 6;\r\n\r\n    const tableCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: roundedRadius,\r\n      br: 0,\r\n      bl: 0\r\n    };\r\n\r\n    ctx.fillStyle = WOOD_COLOR;\r\n    roundedRect(\r\n      ctx,\r\n      0,\r\n      y,\r\n      oneThirdCanvasWidth * 1.1,\r\n      windowFrameThickness * 1.35,\r\n      tableCornerRadii\r\n    );\r\n\r\n    // table leg\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n    ctx.lineWidth = windowFrameThickness * 2;\r\n    ctx.beginPath();\r\n    ctx.moveTo((oneThirdCanvasWidth * 2) / 3, y);\r\n    ctx.lineTo((oneThirdCanvasWidth * 2) / 3, canvasHeight);\r\n    ctx.stroke();\r\n  }\r\n\r\n  render() {\r\n    this.wall();\r\n    this.window();\r\n    this.clockFrame();\r\n    this.clockFace();\r\n    this.dresser();\r\n    this.pictureFrames();\r\n    this.table();\r\n  }\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { Rainfall } from './rain';\r\nimport { Home } from './home';\r\nimport './Rain.scss';\r\n\r\nconst MIN_RAINDROPS_PER_TICK = 1;\r\nconst MAX_RAINDROPS_PER_TICK = 50;\r\n\r\nconst Rain: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  lowPassIntensity\r\n}) => {\r\n  const rainCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const rainfallRef = useRef<Rainfall>();\r\n\r\n  const homeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const homeRef = useRef<Home>();\r\n\r\n  useEffect(() => {\r\n    const rainCanvas = rainCanvasRef.current!;\r\n    const homeCanvas = homeCanvasRef.current!;\r\n\r\n    let clockInterval: number;\r\n\r\n    const createHome = () => {\r\n      const { innerWidth, innerHeight, devicePixelRatio = 1 } = window;\r\n\r\n      const width = innerWidth * devicePixelRatio;\r\n      const height = innerHeight * devicePixelRatio;\r\n\r\n      rainCanvas.width = width;\r\n      rainCanvas.height = height;\r\n\r\n      homeCanvas.width = width;\r\n      homeCanvas.height = height;\r\n\r\n      const ctx = homeCanvas.getContext('2d')!;\r\n\r\n      const home = new Home(ctx);\r\n      homeRef.current = home;\r\n      home.render();\r\n\r\n      clockInterval && window.clearTimeout(clockInterval);\r\n      clockInterval = window.setInterval(() => home.clockFace(), 1000);\r\n    };\r\n\r\n    createHome();\r\n\r\n    window.addEventListener('resize', createHome);\r\n    return () => window.removeEventListener('resize', createHome);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const canvas = rainCanvasRef.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n\r\n    rainfallRef.current = new Rainfall(ctx);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const rainfall = rainfallRef.current!;\r\n\r\n    let newRaindropsAdded = 0;\r\n    let raindropsToAdd = Math.floor(lowPassIntensity);\r\n\r\n    if (raindropsToAdd < MIN_RAINDROPS_PER_TICK) {\r\n      raindropsToAdd = MIN_RAINDROPS_PER_TICK;\r\n    } else if (raindropsToAdd > MAX_RAINDROPS_PER_TICK) {\r\n      raindropsToAdd = MAX_RAINDROPS_PER_TICK;\r\n    }\r\n\r\n    while (newRaindropsAdded < raindropsToAdd) {\r\n      rainfall.add();\r\n      newRaindropsAdded += 1;\r\n    }\r\n\r\n    rainfall.tick();\r\n\r\n    const canvas = rainCanvasRef.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    rainfall.render();\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"rain\">\r\n      <div className=\"backdrop\" />\r\n      <canvas ref={rainCanvasRef} />\r\n      <canvas ref={homeCanvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Rain);\r\n","import React from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport './MobileDisabled.scss';\r\n\r\nconst MobileDisabled: React.FC<VisualizationHOC.WrappedProps> = () => {\r\n  return (\r\n    <div className=\"mobile-disabled\">\r\n      <div className=\"content\">\r\n        <img\r\n          id=\"desktop-icon\"\r\n          src={process.env.PUBLIC_URL + '/assets/images/desktop.png'}\r\n        />\r\n        <div id=\"message\">\r\n          Sorry, this visualization cannot be viewed on a mobile device.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(MobileDisabled);\r\n","export function modulo(number1: number, number2: number): number {\r\n  return ((number1 % number2) + number2) % number2;\r\n}\r\n\r\nexport function isMobileDevice(): boolean {\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n    navigator.userAgent\r\n  );\r\n}\r\n\r\nexport function toRadians(angle: number) {\r\n  return (angle * Math.PI) / 180;\r\n}\r\n","import Waveform from './Waveform';\r\nimport Drummer from './Drummer';\r\nimport Halpern from './Halpern';\r\nimport Stars from './Stars';\r\nimport Rain from './Rain';\r\nimport MobileDisabledComponent from './MobileDisabled';\r\nimport { Props } from './VisualizationHOC';\r\nimport { isMobileDevice as isMobileDeviceCheck } from '../../../utils';\r\n\r\nexport const isMobileDevice = isMobileDeviceCheck();\r\n\r\nexport type QualitySettings = {\r\n  [quality: number]: { [setting: string]: any };\r\n};\r\n\r\nexport type Options = {\r\n  smoothing?: number;\r\n  mobileDisabled?: boolean;\r\n};\r\n\r\nexport type SelectableVisualization = {\r\n  component: React.ComponentType<Props>;\r\n  options?: Options;\r\n};\r\n\r\nconst visualizations: SelectableVisualization[] = [\r\n  {\r\n    component: Rain\r\n  },\r\n  {\r\n    component: Stars,\r\n    options: { smoothing: 128 }\r\n  },\r\n  {\r\n    component: Waveform\r\n  },\r\n  {\r\n    component: Drummer,\r\n    options: { smoothing: 64 }\r\n  },\r\n  {\r\n    component: Halpern\r\n  }\r\n];\r\n\r\nexport default visualizations;\r\n\r\nexport const MobileDisabled: SelectableVisualization = {\r\n  component: MobileDisabledComponent\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useTransition, animated } from 'react-spring';\r\nimport * as VisualizationHOC from './Visualizations/VisualizationHOC';\r\nimport visualizations from './Visualizations';\r\nimport { modulo } from '../../utils';\r\nimport { StoreState } from '../../../src/store/types';\r\n\r\ntype Props = Pick<VisualizationHOC.Props, 'data' | 'lowPassData'>;\r\n\r\ntype StyledProps = Props &\r\n  Pick<StoreState, 'quality'> & {\r\n    style: React.CSSProperties;\r\n  };\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  currentIndex: state.currentVisualizationIndex,\r\n  prevIndex: state.prevVisualizationIndex,\r\n  quality: state.quality\r\n});\r\n\r\nconst styledVisualizations = visualizations.map(vis => {\r\n  return (props: StyledProps) => {\r\n    const { style, ...rest } = props;\r\n    return (\r\n      <animated.div className=\"visualization\" style={props.style}>\r\n        <vis.component {...rest} options={vis.options} />\r\n      </animated.div>\r\n    );\r\n  };\r\n});\r\n\r\nconst VisualizationSelector: React.FC<\r\n  Props & ReturnType<typeof mapStateToProps>\r\n> = ({ data, lowPassData, prevIndex, currentIndex, quality }) => {\r\n  const visIndex = modulo(currentIndex, visualizations.length);\r\n\r\n  const direction = useCallback((current?, prev?) => {\r\n    let translateXMultiplier = 0;\r\n    if (current < prev) {\r\n      translateXMultiplier = 1;\r\n    } else if (prev < current) {\r\n      translateXMultiplier = -1;\r\n    }\r\n    return `translate3d(${100 * translateXMultiplier}%, 0, 0)`;\r\n  }, []);\r\n\r\n  const transitions = useTransition(visIndex, null, {\r\n    from: { transform: direction(currentIndex, prevIndex) },\r\n    enter: { transform: direction() },\r\n    leave: { transform: direction(prevIndex, currentIndex) },\r\n    initial: { transform: direction(0, -1) }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {transitions.map(({ item, props, key }) => {\r\n        const Visualization = styledVisualizations[item];\r\n        return (\r\n          <Visualization\r\n            key={key}\r\n            data={data}\r\n            lowPassData={lowPassData}\r\n            quality={quality}\r\n            style={props}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(VisualizationSelector);\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport VisualizationSelector from '../Visualizer/VisualizationSelector';\r\nimport { FFT_SIZE } from '../../config';\r\n\r\ntype Props = {\r\n  context: AudioContext;\r\n  source: MediaElementAudioSourceNode;\r\n};\r\n\r\nconst Analyser: React.FC<Props> = ({ context, source }) => {\r\n  const [rawData, setRawData] = useState(new Uint8Array());\r\n  const [lowPassData, setLowPassData] = useState(new Uint8Array());\r\n\r\n  const animationFrameIdRef = useRef<number>();\r\n\r\n  useEffect(() => {\r\n    const rawAnalyser = context.createAnalyser();\r\n    rawAnalyser.fftSize = FFT_SIZE;\r\n    rawAnalyser.smoothingTimeConstant = 0;\r\n    source.connect(rawAnalyser);\r\n    rawAnalyser.connect(context.destination);\r\n\r\n    const filter = context.createBiquadFilter();\r\n    filter.type = 'lowpass';\r\n    const lowPassAnalyser = context.createAnalyser();\r\n    lowPassAnalyser.fftSize = FFT_SIZE;\r\n    lowPassAnalyser.smoothingTimeConstant = 0;\r\n    source.connect(filter);\r\n    filter.connect(lowPassAnalyser);\r\n\r\n    const tick = () => {\r\n      const rawDataContainer = new Uint8Array(FFT_SIZE);\r\n      rawAnalyser.getByteTimeDomainData(rawDataContainer);\r\n      setRawData(rawDataContainer);\r\n\r\n      const lowPassDataContainer = new Uint8Array(FFT_SIZE);\r\n      lowPassAnalyser.getByteTimeDomainData(lowPassDataContainer);\r\n      setLowPassData(lowPassDataContainer);\r\n\r\n      animationFrameIdRef.current = window.requestAnimationFrame(tick);\r\n    };\r\n\r\n    animationFrameIdRef.current = window.requestAnimationFrame(tick);\r\n\r\n    return () => {\r\n      animationFrameIdRef.current != null &&\r\n        window.cancelAnimationFrame(animationFrameIdRef.current);\r\n      rawAnalyser && rawAnalyser.disconnect();\r\n      lowPassAnalyser && lowPassAnalyser.disconnect();\r\n      source && source.disconnect();\r\n    };\r\n  }, [context, source]);\r\n\r\n  return <VisualizationSelector data={rawData} lowPassData={lowPassData} />;\r\n};\r\n\r\nexport default Analyser;\r\n","export const FFT_SIZE = 512;\r\nexport const DATA_SIZE = FFT_SIZE / 2;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './Loading.scss';\r\n\r\ntype Props = {\r\n  show?: boolean;\r\n};\r\n\r\nconst Loading: React.FC<Props> = ({ show }) => (\r\n  <div\r\n    className={classNames('loading', { show: show === false ? false : true })}\r\n  >\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport * as Actions from '../../../store/actions';\r\nimport { StoreState, Quality } from '../../../store/types';\r\nimport './Quality.scss';\r\n\r\ntype Props = {\r\n  onHover: () => void;\r\n  onHoverStop: () => void;\r\n} & ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps>;\r\n\r\nconst qualities = [\r\n  { label: 'low', value: 0 },\r\n  { label: 'medium', value: 1 },\r\n  { label: 'high', value: 2 }\r\n];\r\n\r\nconst QualitySelect: React.FC<Props> = ({\r\n  quality,\r\n  setQuality,\r\n  onHover,\r\n  onHoverStop\r\n}) => {\r\n  return (\r\n    <div id=\"quality\" onMouseEnter={onHover} onMouseLeave={onHoverStop}>\r\n      <select\r\n        value={quality}\r\n        onChange={e => setQuality(+e.target.value as Quality)}\r\n      >\r\n        {qualities.map(quality => (\r\n          <option key={quality.label} value={quality.value}>\r\n            {quality.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  quality: state.quality\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  setQuality: (quality: Quality) => dispatch(Actions.setQuality(quality))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(QualitySelect);\r\n","import { ActionConstants, ActionUnionType, Quality } from './types';\r\n\r\nexport const goToNextVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_NEXT_VISUALIZATION\r\n});\r\n\r\nexport const goToPrevVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_PREV_VISUALIZATION\r\n});\r\n\r\nexport const setQuality = (quality: Quality): ActionUnionType => ({\r\n  type: ActionConstants.SET_QUALITY,\r\n  quality\r\n});\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport Loading from '../Loading';\r\nimport * as Actions from '../../store/actions';\r\nimport * as versionInfo from '../../metadata/build-version.json';\r\nimport QualitySelect from './QualitySelect';\r\nimport './Controls.scss';\r\n\r\nconst CONTROLS_FADE_OUT_DELAY = 1500;\r\nconst TOUCH_WAS_CLICK_THRESHOLD = 250;\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & {\r\n  context?: AudioContext;\r\n  wantsToPlay: boolean;\r\n  isPlaying: boolean;\r\n  togglePlay: () => void;\r\n};\r\n\r\nconst Controls: React.FC<Props> = props => {\r\n  const [isOverlayShown, setIsOverlayShown] = useState(false);\r\n  const [isControlHovered, setIsControlHovered] = useState(false);\r\n\r\n  const timeoutRef = useRef<number>();\r\n  const touchTimestampRef = useRef<number>();\r\n\r\n  useEffect(() => {\r\n    const onKeyDown = (event: KeyboardEvent) => {\r\n      switch (event.which) {\r\n        case 37:\r\n        case 38: {\r\n          props.goToPrevVisualization();\r\n          break;\r\n        }\r\n        case 39:\r\n        case 40: {\r\n          props.goToNextVisualization();\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', onKeyDown);\r\n    return () => document.removeEventListener('keydown', onKeyDown);\r\n  }, []);\r\n\r\n  const showOverlay = useCallback(() => {\r\n    timeoutRef.current != null && window.clearTimeout(timeoutRef.current);\r\n\r\n    setIsOverlayShown(true);\r\n    timeoutRef.current = window.setTimeout(() => {\r\n      if (!isControlHovered) {\r\n        setIsOverlayShown(false);\r\n      }\r\n    }, CONTROLS_FADE_OUT_DELAY);\r\n  }, [isControlHovered]);\r\n\r\n  const togglePlay = useCallback(() => {\r\n    props.context && props.context.resume();\r\n    props.togglePlay();\r\n    showOverlay();\r\n  }, [props.context, props.togglePlay]);\r\n\r\n  const recordTouchTimestamp = useCallback((event: React.TouchEvent) => {\r\n    event.preventDefault();\r\n    touchTimestampRef.current = Date.now();\r\n  }, []);\r\n\r\n  const goToRepo = () => window.open('https://github.com/blackwright/late');\r\n\r\n  const onMouseDown = useCallback((event: React.MouseEvent) => {\r\n    if (event.nativeEvent.which === 1) {\r\n      touchTimestampRef.current = Date.now();\r\n    }\r\n  }, []);\r\n\r\n  const onMouseUp = useCallback((event: React.MouseEvent) => {\r\n    if (\r\n      event.nativeEvent.which === 1 &&\r\n      touchTimestampRef.current &&\r\n      Date.now() - touchTimestampRef.current < TOUCH_WAS_CLICK_THRESHOLD\r\n    ) {\r\n      togglePlay();\r\n    }\r\n  }, []);\r\n\r\n  const onTouchEnd = useCallback(\r\n    (event: React.TouchEvent) => {\r\n      event.preventDefault();\r\n      if (\r\n        touchTimestampRef.current &&\r\n        Date.now() - touchTimestampRef.current < TOUCH_WAS_CLICK_THRESHOLD\r\n      ) {\r\n        showOverlay();\r\n      }\r\n    },\r\n    [isControlHovered]\r\n  );\r\n\r\n  const onPrev = useCallback(\r\n    (event: React.MouseEvent | React.TouchEvent) => {\r\n      event.stopPropagation();\r\n      props.goToPrevVisualization();\r\n      showOverlay();\r\n    },\r\n    [isControlHovered]\r\n  );\r\n\r\n  const onNext = useCallback(\r\n    (event: React.MouseEvent | React.TouchEvent) => {\r\n      event.stopPropagation();\r\n      props.goToNextVisualization();\r\n      showOverlay();\r\n    },\r\n    [isControlHovered]\r\n  );\r\n\r\n  const doNothing = useCallback((event: React.MouseEvent) => {\r\n    event.stopPropagation();\r\n  }, []);\r\n\r\n  const onHover = useCallback(() => setIsControlHovered(true), []);\r\n\r\n  const onHoverStop = useCallback(() => setIsControlHovered(false), []);\r\n\r\n  const { wantsToPlay, isPlaying } = props;\r\n\r\n  return (\r\n    <>\r\n      {wantsToPlay && !isPlaying && <Loading />}\r\n      <div\r\n        id=\"overlay\"\r\n        onTouchStart={recordTouchTimestamp}\r\n        onTouchEnd={onTouchEnd}\r\n        onMouseMove={showOverlay}\r\n        className={classNames({ show: isOverlayShown })}\r\n      >\r\n        <h1 id=\"title\" onClick={goToRepo} onTouchEnd={goToRepo}>\r\n          LATE\r\n        </h1>\r\n        <QualitySelect onHover={onHover} onHoverStop={onHoverStop} />\r\n        <div id=\"version\">build {versionInfo.version}</div>\r\n        {\r\n          <div\r\n            onMouseDown={onMouseDown}\r\n            onMouseUp={onMouseUp}\r\n            onTouchEnd={togglePlay}\r\n            onMouseEnter={onHover}\r\n            onMouseLeave={onHoverStop}\r\n            className={classNames({\r\n              play: !wantsToPlay && !isPlaying,\r\n              pause: wantsToPlay && isPlaying\r\n            })}\r\n          />\r\n        }\r\n        <div className=\"navigation\">\r\n          <div\r\n            className=\"arrow-container\"\r\n            onClick={onPrev}\r\n            onTouchStart={onPrev}\r\n            onMouseUp={doNothing}\r\n            onMouseEnter={onHover}\r\n            onMouseLeave={onHoverStop}\r\n          >\r\n            <svg\r\n              className=\"arrow\"\r\n              width=\"60px\"\r\n              height=\"80px\"\r\n              viewBox=\"0 0 50 80\"\r\n            >\r\n              <polyline\r\n                fill=\"none\"\r\n                stroke=\"#FFF\"\r\n                strokeWidth=\"3\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                points=\"\r\n            45.63,75.8 0.375,38.087 45.63,0.375 \"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div\r\n            className=\"arrow-container\"\r\n            onClick={onNext}\r\n            onTouchStart={onNext}\r\n            onMouseUp={doNothing}\r\n            onMouseEnter={onHover}\r\n            onMouseLeave={onHoverStop}\r\n          >\r\n            <svg\r\n              className=\"arrow\"\r\n              width=\"60px\"\r\n              height=\"80px\"\r\n              viewBox=\"0 0 50 80\"\r\n            >\r\n              <polyline\r\n                fill=\"none\"\r\n                stroke=\"#FFF\"\r\n                strokeWidth=\"3\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                points=\"\r\n              0.375,0.375 45.63,38.087 0.375,75.8 \"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  goToNextVisualization: () => dispatch(Actions.goToNextVisualization()),\r\n  goToPrevVisualization: () => dispatch(Actions.goToPrevVisualization())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Controls);\r\n","import React from 'react';\r\nimport './NoWebAudioApi.scss';\r\n\r\nconst NoWebAudioApi = () => (\r\n  <div id=\"no-web-audio\">\r\n    <p>Your device doesn't fully support the Web Audio API.</p>\r\n    <p>This site should be viewed on a non-mobile or Android device.</p>\r\n  </div>\r\n);\r\n\r\nexport default NoWebAudioApi;\r\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport Analyser from './components/Analyser';\nimport Controls from './components/Controls';\nimport NoWebAudioApi from './components/NoWebAudioApi';\nimport { useStateRef } from './utils/hooks';\n\nconst AUDIO_SERVER_URL =\n  process.env.NODE_ENV === 'production'\n    ? process.env.REACT_APP_AUDIO_SERVER_URL\n    : 'http://localhost:3002';\n\ntype Props = {};\n\nconst App: React.FC<Props> = props => {\n  const [wantsToPlay, setWantsToPlay] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [context, setContext, contextRef] = useStateRef<\n    AudioContext | undefined\n  >(undefined);\n  const [source, setSource] = useState<MediaElementAudioSourceNode>();\n  const [isContextUnavailable, setIsContextUnavailable] = useState(false);\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n\n  // disable if AudioContext is unavailable\n  useEffect(() => {\n    try {\n      new window.AudioContext();\n    } catch (err) {\n      setIsContextUnavailable(true);\n    }\n  }, []);\n\n  // attach audio event listeners\n  useEffect(() => {\n    const audioElement = audioRef.current!;\n\n    const onAudioPlay = () => setIsPlaying(true);\n    const onAudioPause = () => setIsPlaying(false);\n    const onAudioError = console.error;\n\n    audioElement.addEventListener('playing', onAudioPlay);\n    audioElement.addEventListener('pause', onAudioPause);\n    audioElement.addEventListener('error', onAudioError);\n\n    return () => {\n      audioElement.removeEventListener('playing', onAudioPlay);\n      audioElement.removeEventListener('pause', onAudioPause);\n      audioElement.removeEventListener('error', onAudioError);\n    };\n  }, []);\n\n  const initializeAudioContext = useCallback(() => {\n    const audioElement = audioRef.current!;\n    const context = new window.AudioContext();\n    const source = context.createMediaElementSource(audioElement);\n\n    setContext(context);\n    setSource(source);\n  }, [audioRef.current]);\n\n  const togglePlay = useCallback(() => {\n    const audioElement = audioRef.current!;\n\n    if (audioElement.paused) {\n      setWantsToPlay(true);\n      audioElement.play();\n\n      if (!contextRef.current) {\n        initializeAudioContext();\n      }\n    } else {\n      setWantsToPlay(false);\n      audioElement.pause();\n    }\n  }, [audioRef.current]);\n\n  if (isContextUnavailable) {\n    return <NoWebAudioApi />;\n  }\n\n  return (\n    <>\n      <audio\n        ref={audioRef}\n        id=\"audioElement\"\n        src={AUDIO_SERVER_URL}\n        preload={'auto'}\n        crossOrigin=\"anonymous\"\n      />\n\n      {context && source && <Analyser context={context} source={source} />}\n\n      <Controls\n        context={context}\n        wantsToPlay={wantsToPlay}\n        isPlaying={isPlaying}\n        togglePlay={togglePlay}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nexport function useStateRef<S>(\r\n  initialState: S | (() => S)\r\n): [S, React.Dispatch<React.SetStateAction<S>>, React.MutableRefObject<S>] {\r\n  const [state, setState] = useState(initialState);\r\n  const stateRef = useRef(state);\r\n\r\n  useEffect(() => {\r\n    stateRef.current = state;\r\n  }, [state]);\r\n\r\n  return [state, setState, stateRef];\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\nimport App from './App';\r\nimport './reset.scss';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}