{"version":3,"sources":["serviceWorker.js","store/types.ts","store/reducer.ts","store/index.ts","components/Visualizer/Visualizations/Visualization.tsx","utils/index.ts","utils/colors.ts","components/Visualizer/Visualizations/Waveform/Waveform.tsx","components/Visualizer/Visualizations/Drummer/Drummer.tsx","components/Visualizer/Visualizations/Halpern/three/entities/colors.ts","components/Visualizer/Visualizations/Halpern/three/sceneManager.ts","components/Visualizer/Visualizations/Halpern/three/entities/polys.ts","components/Visualizer/Visualizations/Halpern/three/entities/camera.ts","components/Visualizer/Visualizations/Halpern/three/entities/renderer.ts","components/Visualizer/Visualizations/Halpern/Halpern.tsx","components/Visualizer/Visualizations/index.tsx","components/Visualizer/VisualizationSelector.tsx","store/actions.ts","components/Analyser/Analyser.tsx","components/Loading/Loading.tsx","components/Controls/Controls.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","ActionConstants","initialState","currentVisualizationIndex","prevVisualizationIndex","isTransitioning","store","createStore","state","arguments","length","undefined","type","GO_TO_NEXT_VISUALIZATION","Object","objectSpread","GO_TO_PREV_VISUALIZATION","BEGIN_VISUALIZATION_TRANSITION","END_VISUALIZATION_TRANSITION","__REDUX_DEVTOOLS_EXTENSION__","wrap","WrappedComponent","_class","_temp","options","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","delayedAfterReflow","inherits","createClass","key","value","_this2","setTimeout","setState","_this$props","props","data","timeout","renderedData","smoothing","range","map","dataElement","i","dataToAverage","rangeIndex","dataAtRangeIndex","push","numbers","sum","avg","smooth","react_default","a","createElement","style","transition","React","Component","defaultProps","Uint8Array","TRANSITION_ANIMATION_LENGTH","colorTriples","colorTriple","id","randomColorTriple","Math","floor","random","getRandomColor","numColors","areUnique","colors","randomTriple","randomColor","includes","getRandomColors","LINE_WIDTH","LINE_X_OFFSET","LINE_Y_OFFSET","Visualization","ref","createRef","canvas","ctx","intervalId","resizeTimeoutId","onResize","clearTimeout","width","innerWidth","height","innerHeight","paint","colorCopy","toConsumableArray","reverse","getRandomColorTriple","lineWidth","lineCap","sliceWidth","forEach","color","strokeStyle","beginPath","x","moveTo","y","lineTo","stroke","fadeOut","fillStyle","fillRect","addEventListener","current","getContext","setInterval","clearInterval","removeEventListener","className","size","lastColorChangeTimestamp","Date","now","_window","maxSideLength","max","freqMap","freqKey","freqData","ceiling","abs","totalHits","values","reduce","acc","hitCount","newColor","drummers","entries","_ref","_ref2","slicedToArray","drummerContainerSize","opacity","classNames","hit","backgroundColor","pointColor","Color","DELAY_BEFORE_ROTATING_X","CAMERA_MAX_DISTANCE","CAMERA_MIN_DISTANCE","CAMERA_DRIFT","sceneManager","rendererContainer","currentAnimationFrameId","sceneInitializedTimestamp","t","isMouseDragging","mousePosition","polygon","geometry","SphereGeometry","computeVertexNormals","material","MeshLambertMaterial","wireframe","Mesh","createPolygon","halpernSphere","sphereGeometry","vertices","parameters","radius","widthSegments","heightSegments","positions","Float32Array","vertex","toArray","BufferGeometry","addAttribute","BufferAttribute","PointsMaterial","TextureLoader","load","alphaTest","transparent","Points","createPoints","camera","PerspectiveCamera","position","set","lookAt","Vector3","renderer","WebGLRenderer","alpha","setSize","setClearColor","createRenderer","appendChild","domElement","scene","Scene","add","removeRotationControls","onMouseDown","onMouseUp","onMouseMove","event","moveDelta","offsetX","offsetY","rotationDeltaQuaternion","Quaternion","setFromEuler","Euler","toRadians","quaternion","multiplyQuaternions","addRotationControls","removeZoomControls","onMouseWheel","deltaY","min","addZoomControls","aspect","updateProjectionMatrix","render","animate","rotateY","rotateX","PI","translateY","cos","translateX","translateZ","requestAnimationFrame","stop","cancelAnimationFrame","removeChild","dispose","remove","getSphereGeometry","getHalpernGeometry","angle","RIPPLE_SPEED","FOCUSED_DATA_INDEX","VERTEX_SEGMENT_WEIGHT_COEFFICIENT","BASELINE_VERTEX_SCALAR_FACTOR","Visualizations","originalVertices","onUnmount","focusedData","rendererRef","updateVertices","splice","fill","dataSegments","vertexSegmentLength","vertexSegmentIndex","ceil","dataIndex","vertexSegmentWeight","copy","multiplyScalarValue","multiplyScalar","fromGeometry","verticesNeedUpdate","_sceneManager","cloneDeep","Waveform","Drummer","connect","currentIndex","prevIndex","dispatch","startTransition","endTransition","pure","number2","transitionClassName","classNameRoot","visualizationIndex","VisualizationComponent","react_transition_group","component","childFactory","child","cloneElement","onExit","onExited","mountOnEnter","unmountOnExit","Analyser","analyser","context","createAnalyser","dataArray","frequencyBinCount","tick","getByteTimeDomainData","source","fftSize","smoothingTimeConstant","destination","disconnect","Visualizer_VisualizationSelector","Loading","show","Controls","showOverlay","isArrowHovered","lastTouchStartTimestamp","hideOverlayTimeoutId","nativeEvent","which","onTogglePlay","onTouchStart","preventDefault","onTouchEnd","onPrev","stopPropagation","goToPrevVisualization","onNext","goToNextVisualization","doNothing","onKeyDown","onToggleArrowHover","isHovered","document","wantsToPlay","isPlaying","Fragment","components_Loading_Loading","onClick","onMouseEnter","onMouseLeave","App","audioRef","audioEventListeners","audioElement","initialize","AudioContext","webkitAudioContext","createMediaElementSource","addAudioEventListeners","listener","onAudioPlay","onAudioPause","onAudioError","paused","play","pause","console","error","eventListeners","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","eventListener","err","return","removeAudioEventListeners","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_this$state","src","process","preload","crossOrigin","Analyser_Analyser","components_Controls_Controls","ReactDOM","es","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7cd09028.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export type StoreState = {\r\n  currentVisualizationIndex: number;\r\n  prevVisualizationIndex: number;\r\n  isTransitioning: boolean;\r\n};\r\n\r\nexport enum ActionConstants {\r\n  BEGIN_VISUALIZATION_TRANSITION = 'BEGIN_VISUALIZATION_TRANSITION',\r\n  END_VISUALIZATION_TRANSITION = 'END_VISUALIZATION_TRANSITION',\r\n  GO_TO_PREV_VISUALIZATION = 'GO_TO_PREV_VISUALIZATION',\r\n  GO_TO_NEXT_VISUALIZATION = 'GO_TO_NEXT_VISUALIZATION'\r\n}\r\n\r\ninterface BeginVisualizationTransitionAction {\r\n  type: typeof ActionConstants.BEGIN_VISUALIZATION_TRANSITION;\r\n}\r\n\r\ninterface EndVisualizationTransitionAction {\r\n  type: typeof ActionConstants.END_VISUALIZATION_TRANSITION;\r\n}\r\n\r\ninterface GoToNextVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_NEXT_VISUALIZATION;\r\n}\r\n\r\ninterface GoToPrevVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_PREV_VISUALIZATION;\r\n}\r\n\r\nexport type ActionUnionType =\r\n  | BeginVisualizationTransitionAction\r\n  | EndVisualizationTransitionAction\r\n  | GoToNextVisualizationAction\r\n  | GoToPrevVisualizationAction;\r\n","import { StoreState, ActionConstants, ActionUnionType } from './types';\r\n\r\nconst initialState: StoreState = {\r\n  currentVisualizationIndex: 0,\r\n  prevVisualizationIndex: 0,\r\n  isTransitioning: false\r\n};\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: ActionUnionType\r\n): StoreState {\r\n  switch (action.type) {\r\n    case ActionConstants.GO_TO_NEXT_VISUALIZATION:\r\n      if (state.isTransitioning) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex + 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.GO_TO_PREV_VISUALIZATION:\r\n      if (state.isTransitioning) {\r\n        return state;\r\n      }\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex - 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.BEGIN_VISUALIZATION_TRANSITION:\r\n      return {\r\n        ...state,\r\n        isTransitioning: true\r\n      };\r\n\r\n    case ActionConstants.END_VISUALIZATION_TRANSITION:\r\n      return {\r\n        ...state,\r\n        isTransitioning: false\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { TRANSITION_ANIMATION_LENGTH } from '../VisualizationSelector';\r\nimport { smooth } from '../../../utils';\r\nimport './Visualization.scss';\r\n\r\nexport type Props = {\r\n  // array of frequency data with values 0-255\r\n  data: Uint8Array;\r\n  // length of CSS transitions\r\n  timeout: number;\r\n  isTransitioning: boolean;\r\n};\r\n\r\nexport type WrappedProps = {\r\n  data: Uint8Array;\r\n  style: { transition: string };\r\n  isTransitioning: boolean;\r\n};\r\n\r\nexport type Options = {\r\n  smoothing?: number;\r\n};\r\n\r\n// all visualization components should be wrapped with this HOC\r\nexport function wrap(\r\n  WrappedComponent: React.ComponentType<WrappedProps>,\r\n  options: Options = {}\r\n) {\r\n  return class extends React.Component<Props> {\r\n    // bypass initial render because components that trigger\r\n    // reflow in componentDidMount interrupt CSS transitions\r\n    state = { delayedAfterReflow: false };\r\n\r\n    static defaultProps: Props = {\r\n      data: new Uint8Array(),\r\n      timeout: TRANSITION_ANIMATION_LENGTH,\r\n      isTransitioning: false\r\n    };\r\n\r\n    componentDidMount() {\r\n      window.setTimeout(() => {\r\n        this.setState({ delayedAfterReflow: true });\r\n      }, 0);\r\n    }\r\n\r\n    render() {\r\n      const { data, timeout, isTransitioning } = this.props;\r\n      const { delayedAfterReflow } = this.state;\r\n\r\n      const renderedData = options.smoothing\r\n        ? smooth(data, options.smoothing)\r\n        : data;\r\n\r\n      return (\r\n        delayedAfterReflow && (\r\n          <WrappedComponent\r\n            data={renderedData}\r\n            style={{ transition: `transform ${timeout}ms linear` }}\r\n            isTransitioning={isTransitioning}\r\n          />\r\n        )\r\n      );\r\n    }\r\n  };\r\n}\r\n","export function modulo(number1: number, number2: number): number {\r\n  return ((number1 % number2) + number2) % number2;\r\n}\r\n\r\nexport function avg(numbers: Uint8Array): number;\r\nexport function avg(numbers: number[]): number;\r\nexport function avg(numbers: Uint8Array | number[]) {\r\n  let sum = 0;\r\n  for (let i = 0; i < numbers.length; i++) {\r\n    sum += numbers[i];\r\n  }\r\n  return sum / numbers.length;\r\n}\r\n\r\nexport function smooth(data: Uint8Array, range: number): Uint8Array {\r\n  return data.map((dataElement, i) => {\r\n    const dataToAverage = [];\r\n\r\n    let rangeIndex = i - range;\r\n\r\n    while (rangeIndex < i + range) {\r\n      const dataAtRangeIndex = data[rangeIndex] || 128;\r\n      dataToAverage.push(dataAtRangeIndex);\r\n      rangeIndex += 1;\r\n    }\r\n\r\n    return avg(dataToAverage);\r\n  });\r\n}\r\n","const colorTriples = [\r\n  ['#0E9AA7', '#F6CD61', '#FE8A71'],\r\n  ['#EE4540', '#801336', '#2D142C'],\r\n  ['#8FB9A8', '#FDFBD4', '#FCD0BA'],\r\n  ['#AC6D83', '#685D79', '#465C7A'],\r\n  ['#F36E38', '#EF4648', '#582841'],\r\n  ['#F1F1F1', '#9BD7D1', '#305D7A'],\r\n  ['#DEA5B6', '#F3CD8C', '#F2E9C2'],\r\n  ['#E27B47', '#EFCA58', '#46B29E'],\r\n  ['#2E7345', '#2E9975', '#2DB3B3'],\r\n  ['#52A3CC', '#7EA1E5', '#AAAAF2'],\r\n  ['#CC5285', '#CC5285', '#F2BCAA'],\r\n  ['#D8E0BB', '#B6CEC7', '#86A3C3']\r\n];\r\n\r\nconst colorTriplesWithIds = colorTriples.map((colorTriple, i) => ({\r\n  id: i,\r\n  colorTriple\r\n}));\r\n\r\nfunction randomColorTriple() {\r\n  return colorTriples[Math.floor(Math.random() * colorTriples.length)];\r\n}\r\n\r\nexport function getRandomColors(numColors: number, areUnique?: boolean): string[] {\r\n  const colors: string[] = [];\r\n\r\n  while (colors.length < numColors) {\r\n    const randomTriple = randomColorTriple();\r\n    const randomColor = randomTriple[Math.floor(Math.random() * randomTriple.length)];\r\n\r\n    if (areUnique && colors.includes(randomColor)) {\r\n      break;\r\n    }\r\n\r\n    colors.push(randomColor);\r\n  }\r\n  return colors;\r\n}\r\n\r\nexport function getRandomColor() {\r\n  return getRandomColors(1)[0];\r\n}\r\n\r\nexport function getRandomColorTriple() {\r\n  const colorCopy = [...randomColorTriple()];\r\n  if (Math.random() <= 0.5) {\r\n    return colorCopy.reverse();\r\n  } else {\r\n    return colorCopy;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport * as Visualization from '../Visualization';\r\nimport { getRandomColorTriple } from '../../../../utils/colors';\r\nimport './Waveform.scss';\r\n\r\nconst LINE_WIDTH = 10;\r\nconst LINE_X_OFFSET = 0;\r\nconst LINE_Y_OFFSET = 5;\r\n\r\nclass Waveform extends React.Component<Visualization.WrappedProps> {\r\n  private ref: React.RefObject<HTMLCanvasElement> = React.createRef();\r\n  private canvas?: HTMLCanvasElement;\r\n  private ctx?: CanvasRenderingContext2D;\r\n  private intervalId?: number;\r\n  private resizeTimeoutId?: number;\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.onResize);\r\n\r\n    this.canvas = this.ref.current!;\r\n    this.canvas.width = window.innerWidth;\r\n    this.canvas.height = window.innerHeight;\r\n\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    this.ctx.fillStyle = '#050505';\r\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n    this.intervalId = window.setInterval(this.fadeOut, 7);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.paint();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.clearInterval(this.intervalId);\r\n    window.removeEventListener('resize', this.onResize);\r\n  }\r\n\r\n  onResize = () => {\r\n    window.clearTimeout(this.resizeTimeoutId);\r\n    const canvas = this.canvas!;\r\n\r\n    this.resizeTimeoutId = window.setTimeout(() => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n    }, 500);\r\n  };\r\n\r\n  paint = () => {\r\n    const { data } = this.props;\r\n    const canvas = this.canvas!;\r\n    const ctx = this.ctx!;\r\n\r\n    const colors = getRandomColorTriple();\r\n\r\n    ctx.lineWidth = LINE_WIDTH;\r\n    ctx.lineCap = 'round';\r\n\r\n    const sliceWidth = canvas.width / data.length;\r\n\r\n    colors.forEach((color, i) => {\r\n      ctx.strokeStyle = color;\r\n      ctx.beginPath();\r\n\r\n      let x = i * LINE_X_OFFSET;\r\n      ctx.moveTo(x, canvas.height / 2);\r\n\r\n      data.forEach(dataElement => {\r\n        const y = (dataElement / 255.0) * canvas.height - (LINE_Y_OFFSET * colors.length) / 2;\r\n        ctx.lineTo(x, y + i * ((LINE_Y_OFFSET * colors.length) / 2));\r\n        x += sliceWidth;\r\n      });\r\n\r\n      ctx.lineTo(x, canvas.height / 2);\r\n      ctx.stroke();\r\n    });\r\n  };\r\n\r\n  fadeOut = () => {\r\n    const ctx = this.ctx!;\r\n    const canvas = this.canvas!;\r\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  };\r\n\r\n  render() {\r\n    const { style } = this.props;\r\n\r\n    return (\r\n      <div className=\"visualization waveform\" style={style}>\r\n        <div className=\"backdrop\" />\r\n        <canvas ref={this.ref} />;\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Visualization.wrap(Waveform, { smoothing: 100 });\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport * as Visualization from '../Visualization';\r\nimport './Drummer.scss';\r\nimport { getRandomColor } from '../../../../utils/colors';\r\n\r\nconst NUM_DRUMMERS = 13;\r\nconst MIN_HIT_COUNT = 40;\r\nconst MIN_FREQUENCY_VARIATION = 10;\r\nconst COLOR_CHANGE_THRESHOLD = 0.3;\r\nconst MIN_DELAY_BETWEEN_COLOR_CHANGE = 200;\r\n\r\nclass Drummer extends React.Component<Visualization.WrappedProps> {\r\n  state = { size: 0 };\r\n\r\n  color = getRandomColor();\r\n  lastColorChangeTimestamp = Date.now();\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.onResize);\r\n    this.onResize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.onResize);\r\n  }\r\n\r\n  onResize = () => {\r\n    const { innerWidth, innerHeight } = window;\r\n    const maxSideLength = Math.max(innerWidth, innerHeight);\r\n    this.setState({ size: maxSideLength * 2 });\r\n  };\r\n\r\n  render() {\r\n    const { data, isTransitioning } = this.props;\r\n    const { size } = this.state;\r\n\r\n    const freqMap: { [key: string]: number } = {};\r\n    const numPerSlice = 256 / NUM_DRUMMERS;\r\n\r\n    let freqKey = 0;\r\n    while (freqKey < NUM_DRUMMERS) {\r\n      freqMap[freqKey] = 0;\r\n      freqKey += 1;\r\n    }\r\n\r\n    data.forEach(freqData => {\r\n      let freqKey = 0;\r\n      while (freqKey < NUM_DRUMMERS) {\r\n        const ceiling = numPerSlice * (freqKey + 1);\r\n        if (Math.abs(freqData - 128) > MIN_FREQUENCY_VARIATION && freqData <= ceiling) {\r\n          freqMap[freqKey] += 1;\r\n          break;\r\n        }\r\n        freqKey += 1;\r\n      }\r\n    });\r\n\r\n    // determine if we should change the background color by\r\n    // comparing total drummer hits against a minimum threshold\r\n    const totalHits = Object.values(freqMap).reduce((acc, hitCount) => {\r\n      return hitCount > MIN_HIT_COUNT ? acc + 1 : acc;\r\n    }, 0);\r\n\r\n    // space out background color changes so they're not jarring\r\n    const now = Date.now();\r\n    if (\r\n      !isTransitioning &&\r\n      totalHits / NUM_DRUMMERS > COLOR_CHANGE_THRESHOLD &&\r\n      now - this.lastColorChangeTimestamp > MIN_DELAY_BETWEEN_COLOR_CHANGE\r\n    ) {\r\n      let newColor;\r\n      do {\r\n        newColor = getRandomColor();\r\n      } while (this.color === newColor);\r\n\r\n      this.color = newColor;\r\n      this.lastColorChangeTimestamp = now;\r\n    }\r\n\r\n    const drummers = Object.entries(freqMap).map(([freqKey, hitCount], i) => {\r\n      const drummerContainerSize = ((1 + +freqKey) * size) / NUM_DRUMMERS;\r\n\r\n      return (\r\n        <div\r\n          key={freqKey}\r\n          className=\"drummer-container\"\r\n          style={{\r\n            width: `${drummerContainerSize}px`,\r\n            height: `${drummerContainerSize}px`,\r\n            opacity: ((NUM_DRUMMERS - i) / NUM_DRUMMERS) * 0.5 * 0.25\r\n          }}\r\n        >\r\n          <div className={classNames('beat', { hit: hitCount > MIN_HIT_COUNT })} />\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"visualization drummer\" style={this.props.style}>\r\n        {drummers}\r\n        <div className=\"overlay\" style={{ backgroundColor: this.color }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Visualization.wrap(Drummer, { smoothing: 200 });\r\n","import { Color } from 'three';\r\n\r\nexport const pointColor = new Color('#666');\r\n","import {\r\n  Scene,\r\n  SphereGeometry,\r\n  Vector3,\r\n  Quaternion,\r\n  Euler,\r\n  BufferGeometry,\r\n  PointsMaterial\r\n} from 'three';\r\nimport { createPolygon, createPoints } from './entities/polys';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\n\r\nconst DELAY_BEFORE_ROTATING_X = 1500;\r\nconst CAMERA_MAX_DISTANCE = 200;\r\nconst CAMERA_MIN_DISTANCE = 0;\r\nconst CAMERA_DRIFT = 0.05;\r\n\r\nexport default function sceneManager(rendererContainer: HTMLDivElement) {\r\n  let currentAnimationFrameId: number;\r\n  let sceneInitializedTimestamp = Date.now();\r\n  let t = 0;\r\n  let isMouseDragging = false;\r\n\r\n  const mousePosition = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n\r\n  const polygon = createPolygon();\r\n  const halpernSphere = createPoints(polygon);\r\n\r\n  const camera = createCamera();\r\n  camera.position.set(0, CAMERA_MAX_DISTANCE, 0);\r\n  camera.lookAt(new Vector3(0, 0, 0));\r\n\r\n  const renderer = createRenderer();\r\n\r\n  rendererContainer.appendChild(renderer.domElement);\r\n\r\n  const scene = new Scene();\r\n  scene.add(halpernSphere);\r\n\r\n  const removeRotationControls = addRotationControls();\r\n  const removeZoomControls = addZoomControls();\r\n\r\n  window.addEventListener('resize', onResize);\r\n\r\n  function animate() {\r\n    halpernSphere.rotateY(-0.002);\r\n\r\n    if (Date.now() - sceneInitializedTimestamp > DELAY_BEFORE_ROTATING_X) {\r\n      halpernSphere.rotateX(0.002);\r\n    }\r\n\r\n    t += 0.005;\r\n\r\n    if (t >= Math.PI * 2) {\r\n      t = 0;\r\n    }\r\n\r\n    camera.translateY(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateX(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateZ(Math.cos(t) * CAMERA_DRIFT * 5);\r\n\r\n    renderer.render(scene, camera);\r\n    currentAnimationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function stop() {\r\n    window.cancelAnimationFrame(currentAnimationFrameId);\r\n    window.removeEventListener('resize', onResize);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    removeRotationControls();\r\n    removeZoomControls();\r\n\r\n    halpernSphere.geometry.dispose();\r\n    (halpernSphere.material as PointsMaterial).dispose();\r\n    scene.remove(halpernSphere);\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function getSphereGeometry() {\r\n    return polygon.geometry as SphereGeometry;\r\n  }\r\n\r\n  function getHalpernGeometry() {\r\n    return halpernSphere.geometry as BufferGeometry;\r\n  }\r\n\r\n  function addRotationControls() {\r\n    renderer.domElement.addEventListener('mousedown', onMouseDown);\r\n    renderer.domElement.addEventListener('mouseup', onMouseUp);\r\n    renderer.domElement.addEventListener('mousemove', onMouseMove);\r\n\r\n    function onMouseDown() {\r\n      isMouseDragging = true;\r\n    }\r\n\r\n    function onMouseUp() {\r\n      isMouseDragging = false;\r\n    }\r\n\r\n    function onMouseMove(event: MouseEvent) {\r\n      const moveDelta = {\r\n        x: event.offsetX - mousePosition.x,\r\n        y: event.offsetY - mousePosition.y\r\n      };\r\n\r\n      if (isMouseDragging) {\r\n        const rotationDeltaQuaternion = new Quaternion().setFromEuler(\r\n          new Euler(\r\n            toRadians(moveDelta.y * 0.25),\r\n            toRadians(moveDelta.x * 0.25),\r\n            0,\r\n            'XYZ'\r\n          )\r\n        );\r\n\r\n        halpernSphere.quaternion.multiplyQuaternions(\r\n          rotationDeltaQuaternion,\r\n          halpernSphere.quaternion\r\n        );\r\n      }\r\n\r\n      mousePosition.x = event.offsetX;\r\n      mousePosition.y = event.offsetY;\r\n    }\r\n\r\n    return function removeRotationControls() {\r\n      renderer.domElement.removeEventListener('mousedown', onMouseDown);\r\n      renderer.domElement.removeEventListener('mouseup', onMouseUp);\r\n      renderer.domElement.removeEventListener('mousemove', onMouseMove);\r\n    };\r\n  }\r\n\r\n  function addZoomControls() {\r\n    renderer.domElement.addEventListener('wheel', onMouseWheel);\r\n\r\n    function onMouseWheel(event: WheelEvent) {\r\n      if (event.deltaY > 0) {\r\n        camera.position.y = Math.min(\r\n          camera.position.y + 2,\r\n          CAMERA_MAX_DISTANCE\r\n        );\r\n      } else {\r\n        camera.position.y = Math.max(\r\n          camera.position.y - 2,\r\n          CAMERA_MIN_DISTANCE\r\n        );\r\n      }\r\n    }\r\n\r\n    return function removeZoomControls() {\r\n      renderer.domElement.removeEventListener('wheel', onMouseWheel);\r\n    };\r\n  }\r\n\r\n  return {\r\n    animate,\r\n    stop,\r\n    getSphereGeometry,\r\n    getHalpernGeometry\r\n  };\r\n}\r\n\r\nfunction toRadians(angle: number) {\r\n  return (angle * Math.PI) / 180;\r\n}\r\n","import {\r\n  Mesh,\r\n  Points,\r\n  MeshLambertMaterial,\r\n  PointsMaterial,\r\n  SphereGeometry,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  TextureLoader\r\n} from 'three';\r\nimport { pointColor } from './colors';\r\n\r\nexport function createPolygon(): Mesh {\r\n  const geometry = new SphereGeometry(40, 100, 100);\r\n  geometry.computeVertexNormals();\r\n\r\n  const material = new MeshLambertMaterial({\r\n    wireframe: true\r\n  });\r\n\r\n  return new Mesh(geometry, material);\r\n}\r\n\r\nexport function createPoints(polygon: Mesh): Points {\r\n  const sphereGeometry = polygon.geometry as SphereGeometry;\r\n\r\n  const pointGeometry = new SphereGeometry(\r\n    sphereGeometry.parameters.radius,\r\n    sphereGeometry.parameters.widthSegments,\r\n    sphereGeometry.parameters.heightSegments\r\n  );\r\n\r\n  const { vertices } = pointGeometry;\r\n  const positions = new Float32Array(vertices.length * 3);\r\n\r\n  vertices.forEach((vertex, i) => {\r\n    vertex.toArray(positions, i * 3);\r\n  });\r\n\r\n  const geometry = new BufferGeometry();\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n\r\n  const material = new PointsMaterial({\r\n    size: 0.25,\r\n    map: new TextureLoader().load('assets/images/point.png'),\r\n    alphaTest: 0.5,\r\n    color: pointColor,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, material);\r\n}\r\n","import { PerspectiveCamera } from 'three';\r\n\r\nexport function createCamera() {\r\n  return new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ alpha: true });\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x000000, 0);\r\n\r\n  return renderer;\r\n}\r\n","import React from 'react';\r\nimport { Vector3, SphereGeometry, BufferGeometry } from 'three';\r\nimport * as Visualization from '../Visualization';\r\nimport sceneManager from './three/sceneManager';\r\nimport cloneDeep from 'lodash.clonedeep';\r\nimport './Halpern.scss';\r\n\r\nconst RIPPLE_SPEED = 12;\r\nconst FOCUSED_DATA_INDEX = 512;\r\nconst VERTEX_SEGMENT_WEIGHT_COEFFICIENT = 0.1;\r\nconst BASELINE_VERTEX_SCALAR_FACTOR = 1;\r\n\r\nclass Halpern extends React.Component<Visualization.WrappedProps> {\r\n  private rendererContainer?: HTMLDivElement;\r\n  private originalVertices?: Vector3[];\r\n  private getSphereGeometry?: () => SphereGeometry;\r\n  private getHalpernGeometry?: () => BufferGeometry;\r\n  private onUnmount?: () => void;\r\n\r\n  private focusedData: number[] = [];\r\n  private rendererRef: React.RefObject<HTMLDivElement> = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.rendererContainer = this.rendererRef.current!;\r\n    const {\r\n      animate,\r\n      stop,\r\n      getSphereGeometry,\r\n      getHalpernGeometry\r\n    } = sceneManager(this.rendererContainer);\r\n    this.onUnmount = stop;\r\n    this.getSphereGeometry = getSphereGeometry;\r\n    this.getHalpernGeometry = getHalpernGeometry;\r\n    this.originalVertices = cloneDeep(getSphereGeometry().vertices);\r\n    this.focusedData = new Array(this.props.data.length).fill(128);\r\n    animate();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updateVertices(this.props.data);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.onUnmount && this.onUnmount();\r\n  }\r\n\r\n  updateVertices = (data: Uint8Array) => {\r\n    if (\r\n      this.getSphereGeometry == null ||\r\n      this.getHalpernGeometry == null ||\r\n      this.originalVertices == null\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.focusedData.splice(0, RIPPLE_SPEED);\r\n    this.focusedData = this.focusedData.concat(\r\n      new Array(RIPPLE_SPEED).fill(data[FOCUSED_DATA_INDEX])\r\n    );\r\n\r\n    const geometry = this.getSphereGeometry();\r\n    const dataSegments = Math.floor(\r\n      data.length / geometry.parameters.widthSegments\r\n    );\r\n\r\n    // split vertices up into segments belonging to slices of x cross sections,\r\n    // first and last vertices are at top and bottom of sphere\r\n    const vertexSegmentLength =\r\n      (geometry.vertices.length - 2) / (geometry.parameters.widthSegments - 1);\r\n\r\n    geometry.vertices.forEach((vertex, i) => {\r\n      // find which segment the current index belongs to\r\n      const vertexSegmentIndex = Math.ceil(i / vertexSegmentLength);\r\n\r\n      const dataIndex = vertexSegmentIndex * dataSegments;\r\n      const vertexSegmentWeight = Math.min(\r\n        vertexSegmentIndex,\r\n        vertexSegmentLength - vertexSegmentIndex\r\n      );\r\n\r\n      // multiplyScalar mutates so we must restore starting position\r\n      vertex.copy(this.originalVertices![i]);\r\n      const dataVariation = Math.abs(this.focusedData[dataIndex] - 128) / 255;\r\n\r\n      const multiplyScalarValue =\r\n        dataVariation *\r\n          vertexSegmentWeight *\r\n          VERTEX_SEGMENT_WEIGHT_COEFFICIENT +\r\n        BASELINE_VERTEX_SCALAR_FACTOR;\r\n\r\n      vertex.multiplyScalar(multiplyScalarValue);\r\n    });\r\n\r\n    const pointGeometry = this.getHalpernGeometry();\r\n    pointGeometry.fromGeometry(geometry);\r\n\r\n    // inform three.js that vertices should be repositioned,\r\n    // final render is handled in sceneManager animate loop\r\n    geometry.verticesNeedUpdate = true;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"visualization halpern\"\r\n        ref={this.rendererRef}\r\n        style={this.props.style}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Visualization.wrap(Halpern, { smoothing: 128 });\r\n","import Waveform from './Waveform/Waveform';\r\nimport Drummer from './Drummer/Drummer';\r\nimport Halpern from './Halpern/Halpern';\r\n\r\nexport default [Halpern, Waveform, Drummer];\r\n","import React from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport * as Visualization from './Visualizations/Visualization';\r\nimport Visualizations from './Visualizations';\r\nimport { modulo } from '../../utils';\r\nimport * as Actions from '../../../src/store/actions';\r\nimport { StoreState } from '../../../src/store/types';\r\n\r\nexport const TRANSITION_ANIMATION_LENGTH = 500;\r\n\r\ntype Props = {\r\n  data: Uint8Array;\r\n};\r\n\r\ntype DynamicChildProps = Visualization.Props & { classNames: string };\r\n\r\nconst dynamicChildFactory = (classNames?: string) => (\r\n  child: React.ReactElement<DynamicChildProps>\r\n) => React.cloneElement(child, { classNames });\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  currentIndex: state.currentVisualizationIndex,\r\n  prevIndex: state.prevVisualizationIndex,\r\n  isTransitioning: state.isTransitioning\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  startTransition: () => dispatch(Actions.beginVisualizationTransition()),\r\n  endTransition: () => dispatch(Actions.endVisualizationTransition())\r\n});\r\n\r\nconst VisualizationSelector: React.FunctionComponent<\r\n  Props &\r\n    ReturnType<typeof mapStateToProps> &\r\n    ReturnType<typeof mapDispatchToProps>\r\n> = ({\r\n  data,\r\n  startTransition,\r\n  endTransition,\r\n  isTransitioning,\r\n  prevIndex,\r\n  currentIndex\r\n}) => {\r\n  const transitionClassName =\r\n    prevIndex != null && prevIndex < currentIndex ? 'next' : 'prev';\r\n\r\n  const classNameRoot = transitionClassName\r\n    ? `visualization-${transitionClassName}`\r\n    : undefined;\r\n\r\n  const visualizationIndex = modulo(currentIndex, Visualizations.length);\r\n\r\n  const VisualizationComponent: React.ComponentType<Visualization.Props> =\r\n    Visualizations[visualizationIndex];\r\n\r\n  return (\r\n    <TransitionGroup\r\n      component={null}\r\n      childFactory={dynamicChildFactory(classNameRoot)}\r\n    >\r\n      <CSSTransition\r\n        key={visualizationIndex}\r\n        timeout={TRANSITION_ANIMATION_LENGTH}\r\n        classNames={classNameRoot || ''}\r\n        onExit={startTransition}\r\n        onExited={endTransition}\r\n        mountOnEnter\r\n        unmountOnExit\r\n      >\r\n        <VisualizationComponent\r\n          data={data}\r\n          isTransitioning={isTransitioning}\r\n          timeout={TRANSITION_ANIMATION_LENGTH}\r\n        />\r\n      </CSSTransition>\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n  null,\r\n  { pure: false }\r\n)(VisualizationSelector);\r\n","import { ActionConstants, ActionUnionType } from './types';\r\n\r\nexport const beginVisualizationTransition = (): ActionUnionType => ({\r\n  type: ActionConstants.BEGIN_VISUALIZATION_TRANSITION\r\n});\r\n\r\nexport const endVisualizationTransition = (): ActionUnionType => ({\r\n  type: ActionConstants.END_VISUALIZATION_TRANSITION\r\n});\r\n\r\nexport const goToNextVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_NEXT_VISUALIZATION\r\n});\r\n\r\nexport const goToPrevVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_PREV_VISUALIZATION\r\n});\r\n","import React, { Component } from 'react';\r\nimport VisualizationSelector from '../Visualizer/VisualizationSelector';\r\n\r\ntype Props = {\r\n  context: AudioContext;\r\n  source: MediaElementAudioSourceNode;\r\n};\r\n\r\ntype State = {\r\n  data: Uint8Array;\r\n};\r\n\r\nexport default class Analyser extends Component<Props, State> {\r\n  state = { data: new Uint8Array() };\r\n\r\n  analyser = this.props.context.createAnalyser();\r\n  dataArray = new Uint8Array(this.analyser.frequencyBinCount);\r\n  currentAnimationFrameId?: number;\r\n\r\n  componentDidMount() {\r\n    const { context, source } = this.props;\r\n\r\n    this.analyser.fftSize = 1024;\r\n    this.analyser.smoothingTimeConstant = 1;\r\n\r\n    source.connect(this.analyser);\r\n    this.analyser.connect(context.destination);\r\n    this.currentAnimationFrameId = window.requestAnimationFrame(this.tick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { source } = this.props;\r\n\r\n    this.currentAnimationFrameId != null &&\r\n      window.cancelAnimationFrame(this.currentAnimationFrameId);\r\n    this.analyser != null && this.analyser.disconnect();\r\n    source && source.disconnect();\r\n  }\r\n\r\n  tick = () => {\r\n    this.analyser.getByteTimeDomainData(this.dataArray);\r\n    this.setState({ data: this.dataArray });\r\n    this.currentAnimationFrameId = window.requestAnimationFrame(this.tick);\r\n  };\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    return <VisualizationSelector data={data} />;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './Loading.scss';\r\n\r\ntype Props = {\r\n  show?: boolean;\r\n};\r\n\r\nconst Loading: React.FunctionComponent<Props> = ({ show }) => (\r\n  <div\r\n    className={classNames('loading', { show: show === false ? false : true })}\r\n  >\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React, { Component } from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport Loading from '../Loading/Loading';\r\nimport * as Actions from '../../store/actions';\r\nimport './Controls.scss';\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & {\r\n  wantsToPlay: boolean;\r\n  isPlaying: boolean;\r\n  onTogglePlay: () => void;\r\n};\r\n\r\ntype State = {\r\n  showOverlay: boolean;\r\n  isArrowHovered: boolean;\r\n};\r\n\r\nclass Controls extends Component<Props, State> {\r\n  state: State = { showOverlay: false, isArrowHovered: false };\r\n\r\n  private lastTouchStartTimestamp?: number;\r\n  private hideOverlayTimeoutId?: number;\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.onKeyDown);\r\n  }\r\n\r\n  onMouseDown = (event: React.MouseEvent) => {\r\n    if (event.nativeEvent.which === 1) {\r\n      this.lastTouchStartTimestamp = Date.now();\r\n    }\r\n  };\r\n\r\n  onMouseUp = (event: React.MouseEvent) => {\r\n    if (\r\n      event.nativeEvent.which === 1 &&\r\n      this.lastTouchStartTimestamp &&\r\n      Date.now() - this.lastTouchStartTimestamp < 250\r\n    ) {\r\n      this.props.onTogglePlay();\r\n    }\r\n  };\r\n\r\n  onTouchStart = (event: React.TouchEvent) => {\r\n    event.preventDefault();\r\n    this.lastTouchStartTimestamp = Date.now();\r\n  };\r\n\r\n  onTouchEnd = (event: React.TouchEvent) => {\r\n    event.preventDefault();\r\n    if (\r\n      this.lastTouchStartTimestamp &&\r\n      Date.now() - this.lastTouchStartTimestamp < 250\r\n    ) {\r\n      this.props.onTogglePlay();\r\n    }\r\n  };\r\n\r\n  onMouseMove = () => {\r\n    window.clearTimeout(this.hideOverlayTimeoutId);\r\n\r\n    this.setState({ showOverlay: true }, () => {\r\n      this.hideOverlayTimeoutId = window.setTimeout(() => {\r\n        if (!this.state.isArrowHovered) {\r\n          this.setState({ showOverlay: false });\r\n        }\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  onPrev = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    event.stopPropagation();\r\n    this.props.goToPrevVisualization();\r\n  };\r\n\r\n  onNext = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    event.stopPropagation();\r\n    this.props.goToNextVisualization();\r\n  };\r\n\r\n  doNothing = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    event.stopPropagation();\r\n  };\r\n\r\n  onKeyDown = (event: KeyboardEvent) => {\r\n    switch (event.which) {\r\n      case 37:\r\n      case 38: {\r\n        this.props.goToPrevVisualization();\r\n        break;\r\n      }\r\n      case 39:\r\n      case 40: {\r\n        this.props.goToNextVisualization();\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  onToggleArrowHover = (isHovered: boolean) => {\r\n    this.setState({ isArrowHovered: isHovered });\r\n  };\r\n\r\n  render() {\r\n    const { wantsToPlay, isPlaying } = this.props;\r\n    const { showOverlay } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {!wantsToPlay && <div id=\"play\" />}\r\n        {wantsToPlay && !isPlaying && <Loading />}\r\n        <div\r\n          id=\"overlay\"\r\n          onMouseDown={this.onMouseDown}\r\n          onMouseUp={this.onMouseUp}\r\n          onTouchStart={this.onTouchStart}\r\n          onTouchEnd={this.onTouchEnd}\r\n          onMouseMove={this.onMouseMove}\r\n          className={classNames({ show: showOverlay })}\r\n        >\r\n          <div className=\"navigation\">\r\n            <div\r\n              className=\"arrow-container\"\r\n              onClick={this.onPrev}\r\n              onMouseUp={this.doNothing}\r\n              onMouseEnter={() => this.onToggleArrowHover(true)}\r\n              onMouseLeave={() => this.onToggleArrowHover(false)}\r\n            >\r\n              <div id=\"prev\" className=\"arrow\" />\r\n            </div>\r\n            <div\r\n              className=\"arrow-container\"\r\n              onClick={this.onNext}\r\n              onMouseUp={this.doNothing}\r\n              onMouseEnter={() => this.onToggleArrowHover(true)}\r\n              onMouseLeave={() => this.onToggleArrowHover(false)}\r\n            >\r\n              <div id=\"next\" className=\"arrow\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  goToNextVisualization: () => dispatch(Actions.goToNextVisualization()),\r\n  goToPrevVisualization: () => dispatch(Actions.goToPrevVisualization())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Controls);\r\n","import React, { Component } from 'react';\nimport Analyser from './components/Analyser/Analyser';\nimport Controls from './components/Controls/Controls';\n\nconst AUDIO_SERVER_URL =\n  process.env.NODE_ENV === 'production'\n    ? process.env.REACT_APP_AUDIO_SERVER_URL\n    : 'http://localhost:3001';\n\ntype Props = {};\n\ntype State = {\n  wantsToPlay: boolean;\n  isPlaying: boolean;\n  context?: AudioContext;\n  source?: MediaElementAudioSourceNode;\n};\n\ntype AudioEventListeners = Array<{\n  event: string;\n  listener: () => void;\n}>;\n\nexport default class App extends Component<Props, State> {\n  state: State = {\n    wantsToPlay: false,\n    isPlaying: false,\n    context: undefined,\n    source: undefined\n  };\n\n  private audioRef: React.RefObject<HTMLAudioElement> = React.createRef();\n  private audioEventListeners: AudioEventListeners = [];\n\n  audioElement?: HTMLAudioElement;\n\n  componentWillUnmount() {\n    this.removeAudioEventListeners();\n  }\n\n  initialize = () => {\n    const audioElement = this.audioRef.current!;\n    this.audioElement = audioElement;\n\n    const context = new (window.AudioContext ||\n      (window as any).webkitAudioContext)();\n    const source = context.createMediaElementSource(audioElement);\n\n    this.addAudioEventListeners([\n      { event: 'playing', listener: this.onAudioPlay },\n      { event: 'pause', listener: this.onAudioPause },\n      { event: 'error', listener: this.onAudioError }\n    ]);\n\n    this.setState({ context, source });\n  };\n\n  onTogglePlay = () => {\n    if (this.audioElement == null) {\n      this.initialize();\n    }\n\n    if (this.audioElement!.paused) {\n      this.setState({ wantsToPlay: true });\n      this.audioElement!.play();\n    } else {\n      this.setState({ wantsToPlay: false });\n      this.audioElement!.pause();\n    }\n  };\n\n  onAudioPlay = () => this.setState({ isPlaying: true });\n\n  onAudioPause = () => this.setState({ isPlaying: false });\n\n  onAudioError = console.error;\n\n  addAudioEventListeners = (eventListeners: AudioEventListeners) => {\n    for (const eventListener of eventListeners) {\n      this.audioEventListeners.push(eventListener);\n      this.audioElement!.addEventListener(\n        eventListener.event,\n        eventListener.listener\n      );\n    }\n  };\n\n  removeAudioEventListeners = () => {\n    for (const eventListener of this.audioEventListeners) {\n      this.audioElement!.removeEventListener(\n        eventListener.event,\n        eventListener.listener\n      );\n    }\n    this.audioEventListeners = [];\n  };\n\n  render() {\n    const { wantsToPlay, isPlaying, context, source } = this.state;\n\n    return (\n      <>\n        <audio\n          ref={this.audioRef}\n          id=\"audioElement\"\n          src={AUDIO_SERVER_URL}\n          preload={'auto'}\n          crossOrigin=\"anonymous\"\n        />\n        {source && context && <Analyser context={context} source={source} />}\n        <Controls\n          wantsToPlay={wantsToPlay}\n          isPlaying={isPlaying}\n          onTogglePlay={this.onTogglePlay}\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\nimport App from './App';\r\nimport './reset.scss';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}