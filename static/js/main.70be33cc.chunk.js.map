{"version":3,"sources":["serviceWorker.js","store/types.ts","store/reducer.ts","store/index.ts","components/Visualizer/Visualizations/VisualizationHOC.tsx","utils/colors.ts","components/Visualizer/Visualizations/Waveform/index.tsx","components/Visualizer/Visualizations/Waveform/utils.ts","components/Visualizer/Visualizations/Drummer/index.tsx","components/Visualizer/Visualizations/Halpern/three/sceneManager.ts","components/Visualizer/Visualizations/Halpern/three/entities/polys.ts","components/Visualizer/Visualizations/Halpern/three/entities/camera.ts","components/Visualizer/Visualizations/Halpern/three/entities/renderer.ts","components/Visualizer/Visualizations/Halpern/index.tsx","components/Visualizer/Visualizations/Stars/three/entities/shaders.ts","components/Visualizer/Visualizations/Stars/three/entities/polys.ts","components/Visualizer/Visualizations/Stars/three/entities/light.ts","components/Visualizer/Visualizations/Stars/three/sceneManager.ts","components/Visualizer/Visualizations/Stars/three/entities/renderer.ts","components/Visualizer/Visualizations/Stars/three/entities/camera.ts","components/Visualizer/Visualizations/Stars/index.tsx","components/Visualizer/Visualizations/Rain/rain.ts","components/Visualizer/Visualizations/Rain/home/renderer.ts","components/Visualizer/Visualizations/Rain/home/wall.ts","components/Visualizer/Visualizations/Rain/utils.ts","components/Visualizer/Visualizations/Rain/home/window.ts","components/Visualizer/Visualizations/Rain/home/dresser.ts","components/Visualizer/Visualizations/Rain/home/pictures.ts","components/Visualizer/Visualizations/Rain/home/table.ts","components/Visualizer/Visualizations/Rain/home/clock.ts","components/Visualizer/Visualizations/Rain/home/lamp.ts","components/Visualizer/Visualizations/Rain/home/index.ts","components/Visualizer/Visualizations/Rain/index.tsx","components/Visualizer/Visualizations/MobileDisabled/index.tsx","utils/index.ts","components/Visualizer/Visualizations/index.tsx","components/Visualizer/VisualizationSelector.tsx","components/Analyser/index.tsx","config/index.ts","components/Loading/index.tsx","components/Controls/QualitySelect/index.tsx","store/actions.ts","components/Controls/index.tsx","components/NoWebAudioApi/index.tsx","App.tsx","utils/hooks.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","ActionConstants","initialState","currentVisualizationIndex","prevVisualizationIndex","quality","store","createStore","state","arguments","length","undefined","action","type","GO_TO_NEXT_VISUALIZATION","Object","objectSpread","GO_TO_PREV_VISUALIZATION","SET_QUALITY","__REDUX_DEVTOOLS_EXTENSION__","defaultProps","data","Uint8Array","lowPassData","options","wrap","WrappedComponent","_ref","rawIntensitiesRef","useRef","lowPassIntensitiesRef","startingTimestampRef","Date","now","totalDifferenceFromRawBaseline","totalDifferenceFromLowBaseline","renderedData","map","rawDataElement","i","Math","abs","lowPassDataElement","smoothing","sum","count","rangeIndex","rawIntensityMax","lowPassIntensitySum","lowPassIntensityCount","lowPassIntensityMax","current","forEach","rawIntensity","lowPassIntensity","currentRawIntensity","recentLowPassAvgIntensity","currentLowPassIntensity","concat","shift","isBeat","react_default","a","createElement","intensity","colorTriples","colorTriple","id","randomColorTriple","floor","random","getRandomColors","numColors","areUnique","colors","randomTriple","randomColor","includes","push","getRandomColor","getRandomColorTriple","colorCopy","toConsumableArray","reverse","VisualizationHOC","canvasRef","useEffect","canvas","resizeCanvas","_window","innerWidth","innerHeight","_window$devicePixelRa","devicePixelRatio","width","height","ctx","getContext","fillStyle","fillRect","addEventListener","removeEventListener","intervalId","setInterval","clearInterval","lineWidth","lineCap","getColors","sliceWidth","color","strokeStyle","beginPath","x","moveTo","dataElement","y","lineTo","stroke","className","ref","QUALITY","0","NUM_DRUMMERS","1","2","_useState","useState","_useState2","slicedToArray","size","setSize","_useState3","_useState4","colorSize","setColorSize","colorsRef","values","lastChangedTimestamp","onResize","maxSideLength","max","colorDiameter","sqrt","pow","numDrummers","freqMap","numPerSlice","freqKey","freqData","ceiling","newColor","drummers","entries","_ref2","_ref3","hitCount","drummerContainerSize","key","style","opacity","classNames","hit","MIN_HIT_COUNT","smallestDrummerSize","transitions","useTransition","from","item","backgroundColor","scale","enter","leave","config","slow","_ref4","props","_ref5","objectWithoutProperties","web","div","transform","interpolate","s","DELAY_BEFORE_ROTATING_X","CAMERA_MAX_DISTANCE","CAMERA_DRIFT","ROTATE_Y","ROTATE_X","sphereSegments","sceneManager","rendererContainer","animationFrameId","segments","sceneInitializedTimestamp","t","sphereGeometry","SphereGeometry","halpern","vertices","parameters","radius","widthSegments","heightSegments","positions","Float32Array","vertex","toArray","geometry","BufferGeometry","addAttribute","BufferAttribute","attributes","position","dynamic","material","PointsMaterial","TextureLoader","load","alphaTest","transparent","Points","createPoints","camera","startingY","PerspectiveCamera","set","lookAt","Vector3","createCamera","renderer","WebGLRenderer","alpha","setPixelRatio","setClearColor","createRenderer","appendChild","domElement","scene","Scene","add","clock","Clock","aspect","updateProjectionMatrix","render","onVisibilityChange","document","visibilityState","stop","start","animate","delta","getDelta","rotateY","rotateX","PI","translateY","cos","translateX","translateZ","requestAnimationFrame","cleanup","cancelAnimationFrame","removeChild","remove","dispose","RIPPLE_SPEED","rendererRef","managedSceneRef","originalVerticesRef","sphereDataSegmentsRef","vertexSegmentLengthRef","focusedDataRef","Array","fill","managedScene","halpernGeometry","array","slice","rippleSpeed","focusedDataIndex","splice","halpernBufferPositions","getAttribute","vertexSegmentIndex","ceil","dataIndex","vertexSegmentWeight","min","scalar","needsUpdate","starVertexShader","starFragmentShader","createCloud","texture","PlaneGeometry","cloudMaterial","MeshLambertMaterial","depthTest","rotateZ","cloud","Mesh","zPosition","createDirectionalLight","DirectionalLight","MAX_STAR_ALPHA","MIN_STAR_ALPHA","STAR_ALPHA_DELTA","STATIC_LIGHT_COLOR","VARIABLE_LIGHT_COLOR","STAR_COUNT","CLOUD_COUNT","lightIntensity","antialias","stars","starCount","alphas","j","shaderMaterial","ShaderMaterial","uniforms","value","Color","vertexShader","fragmentShader","createStars","cloudCover","Group","cloudCount","aLight","AmbientLight","fixedDLight","dLight","starAlphas","alphaDirection","children","lightTimestampRef","currentLightIntensity","newLightIntensity","TICKS_TO_FALL","RAINDROPS_HEIGHTWISE","Raindrop","canvasHeight","classCallCheck","this","heightPerTick","raindropHeight","Rainfall","raindrops","canvasWidth","createClass","nextRaindrops","raindrop","tick","startingX","WINDOW_FRAME_THICKNESS_DIVISOR","Renderer","oneThirdCanvasWidth","oneHalfCanvasHeight","windowFrameThickness","roundedRadius","save","restore","Wall","_Renderer","possibleConstructorReturn","getPrototypeOf","call","inherits","get","prototype","linearGradient","createLinearGradient","addColorStop","defaultCornerRadii","tl","tr","br","bl","roundedRect","quadraticCurveTo","closePath","Window","clearRect","muntinWidth","topLeftX","topRightX","topY","leftX","leftTopY","leftBottomY","rect","Dresser","dresserHandleMidpoint","Pictures","_this","pictures","_assertThisInitialize","assertThisInitialized","_this$pictures$","gradient1","clip","nodes","nodeSize","point1","point2","currentNode","pop","arc","_i","otherNode","_this$pictures$2","gradient2","randomAngle","planetX","planetY","sin","randomRadius","_this$pictures$3","gradient3","starX","starY","graph","orbits","FRUIT_COLORS","Table","thickness","tableCornerRadii","bowlCenterX","bowlWidth","bowlHeight","fruits","xOffset","stemAngle","fruit","_i2","translate","stemStart","stemEnd","bowlCornerRadii","bowlDecorationY","leg","top","centerpiece","clockSize","clockCoords","angle","end","hours","getHours","minutes","getMinutes","seconds","getSeconds","rotate","face","hands","Lamp","lampWidth","stemX","stemHeight","shadeTopLeft","shadeTopRight","shadeBottomRight","shadeBottomLeft","lightHeight","lightAngle","deltaX","deltaY","atan2","radiansBetween","lightTriangleAdjacentWidth","tan","lightBottomLeftX","lightBottomRightX","Home","wall","dresser","table","lamp","rainCanvasRef","rainfallRef","homeCanvasRef","homeRef","clockInterval","rainCanvas","homeCanvas","resizeScene","dpi","home","clearTimeout","createHome","rainfall","createRain","newRaindropsAdded","raindropsToAdd","src","process","test","navigator","userAgent","visualizations","component","Rain","Stars","Waveform","Drummer","Halpern","styledVisualizations","vis","rest","assign","connect","currentIndex","prevIndex","number1","number2","visIndex","direction","useCallback","prev","translateXMultiplier","initial","Fragment","Visualization","Analyser","context","source","rawData","setRawData","setLowPassData","animationFrameIdRef","rawAnalyser","createAnalyser","fftSize","smoothingTimeConstant","destination","filter","createBiquadFilter","lowPassAnalyser","rawDataContainer","getByteTimeDomainData","lowPassDataContainer","disconnect","Visualizer_VisualizationSelector","Loading","show","qualities","label","dispatch","setQuality","Actions","onHover","onHoverStop","onMouseEnter","onMouseLeave","onChange","e","target","goToNextVisualization","goToPrevVisualization","isOverlayShown","setIsOverlayShown","isControlHovered","setIsControlHovered","timeoutRef","touchTimestampRef","onKeyDown","event","which","showOverlay","setTimeout","togglePlay","resume","recordTouchTimestamp","preventDefault","goToRepo","open","onMouseDown","nativeEvent","onMouseUp","onTouchEnd","onPrev","stopPropagation","onNext","doNothing","wantsToPlay","isPlaying","components_Loading","onTouchStart","onMouseMove","onClick","Controls_QualitySelect","versionInfo","play","pause","viewBox","strokeWidth","strokeLinecap","strokeLinejoin","points","NoWebAudioApi","App","setWantsToPlay","setIsPlaying","_useStateRef","setState","stateRef","useStateRef","_useStateRef2","setContext","contextRef","_useState5","_useState6","setSource","_useState7","_useState8","isContextUnavailable","setIsContextUnavailable","audioRef","AudioContext","err","audioElement","onAudioPlay","onAudioPause","onAudioError","console","error","initializeAudioContext","createMediaElementSource","paused","components_NoWebAudioApi","preload","crossOrigin","components_Analyser","components_Controls","ReactDOM","es","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70be33cc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export type Quality = 0 | 1 | 2;\r\n\r\nexport type StoreState = {\r\n  currentVisualizationIndex: number;\r\n  prevVisualizationIndex: number;\r\n  quality: Quality;\r\n};\r\n\r\nexport enum ActionConstants {\r\n  BEGIN_VISUALIZATION_TRANSITION = 'BEGIN_VISUALIZATION_TRANSITION',\r\n  END_VISUALIZATION_TRANSITION = 'END_VISUALIZATION_TRANSITION',\r\n  GO_TO_PREV_VISUALIZATION = 'GO_TO_PREV_VISUALIZATION',\r\n  GO_TO_NEXT_VISUALIZATION = 'GO_TO_NEXT_VISUALIZATION',\r\n  SET_QUALITY = 'SET_QUALITY'\r\n}\r\n\r\ninterface GoToNextVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_NEXT_VISUALIZATION;\r\n}\r\n\r\ninterface GoToPrevVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_PREV_VISUALIZATION;\r\n}\r\n\r\ninterface SetQualityAction {\r\n  type: typeof ActionConstants.SET_QUALITY;\r\n  quality: Quality;\r\n}\r\n\r\nexport type ActionUnionType =\r\n  | GoToNextVisualizationAction\r\n  | GoToPrevVisualizationAction\r\n  | SetQualityAction;\r\n","import { StoreState, ActionConstants, ActionUnionType } from './types';\r\n\r\nconst initialState: StoreState = {\r\n  currentVisualizationIndex: 0,\r\n  prevVisualizationIndex: 0,\r\n  quality: 2\r\n};\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: ActionUnionType\r\n): StoreState {\r\n  switch (action.type) {\r\n    case ActionConstants.GO_TO_NEXT_VISUALIZATION:\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex + 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.GO_TO_PREV_VISUALIZATION:\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex - 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.SET_QUALITY:\r\n      return {\r\n        ...state,\r\n        quality: action.quality\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Options } from './index';\r\nimport { Quality } from '../../../store/types';\r\nimport './Visualization.scss';\r\n\r\nexport type Props = {\r\n  // array of frequency data with values 0-255\r\n  data: Uint8Array;\r\n  lowPassData: Uint8Array;\r\n  options?: Options;\r\n  quality: Quality;\r\n};\r\n\r\nexport type WrappedProps = {\r\n  data: Uint8Array;\r\n  lowPassData: Uint8Array;\r\n  isBeat: boolean;\r\n  intensity: number;\r\n  lowPassIntensity: number;\r\n  quality: Quality;\r\n};\r\n\r\nconst defaultProps: Props = {\r\n  data: new Uint8Array(),\r\n  lowPassData: new Uint8Array(),\r\n  options: {},\r\n  quality: 2\r\n};\r\n\r\n// all visualization components should be wrapped with this HOC\r\nexport function wrap(\r\n  WrappedComponent: React.ComponentType<WrappedProps>\r\n): React.ComponentType<Props> {\r\n  return function({\r\n    data,\r\n    lowPassData,\r\n    options,\r\n    quality\r\n  }: Props = defaultProps) {\r\n    const rawIntensitiesRef = useRef<number[]>([]);\r\n    const lowPassIntensitiesRef = useRef<number[]>([]);\r\n    const startingTimestampRef = useRef<number>(Date.now());\r\n\r\n    let totalDifferenceFromRawBaseline = 0;\r\n    let totalDifferenceFromLowBaseline = 0;\r\n\r\n    const renderedData = data.map((rawDataElement, i) => {\r\n      totalDifferenceFromRawBaseline += Math.abs(rawDataElement - 128);\r\n\r\n      const lowPassDataElement = lowPassData[i];\r\n      totalDifferenceFromLowBaseline += Math.abs(lowPassDataElement - 128);\r\n\r\n      if (options == null || !options.smoothing) {\r\n        return rawDataElement;\r\n      } else {\r\n        // smooth out each data value using a range of values around it,\r\n        // the range of this window is the value of options.smoothing\r\n        let sum = 0;\r\n        let count = 0;\r\n\r\n        let rangeIndex = i - options.smoothing;\r\n\r\n        while (rangeIndex < i + options.smoothing) {\r\n          const rawDataAtRangeIndex = data[rangeIndex] || 128;\r\n          sum += rawDataAtRangeIndex;\r\n          count += 1;\r\n          rangeIndex += 1;\r\n        }\r\n\r\n        return sum / count;\r\n      }\r\n    });\r\n\r\n    let rawIntensityMax = 0;\r\n\r\n    let lowPassIntensitySum = 0;\r\n    let lowPassIntensityCount = 0;\r\n    let lowPassIntensityMax = 0;\r\n\r\n    rawIntensitiesRef.current.forEach((rawIntensity, i) => {\r\n      if (rawIntensity > rawIntensityMax) {\r\n        rawIntensityMax = rawIntensity;\r\n      }\r\n\r\n      const lowPassIntensity = lowPassIntensitiesRef.current[i];\r\n      lowPassIntensitySum += lowPassIntensity;\r\n      lowPassIntensityCount += 1;\r\n\r\n      if (lowPassIntensity > lowPassIntensityMax) {\r\n        lowPassIntensityMax = lowPassIntensity;\r\n      }\r\n    });\r\n\r\n    const currentRawIntensity = totalDifferenceFromRawBaseline / data.length;\r\n    const recentLowPassAvgIntensity =\r\n      lowPassIntensitySum / lowPassIntensityCount || 0;\r\n\r\n    const currentLowPassIntensity =\r\n      totalDifferenceFromLowBaseline / lowPassData.length;\r\n\r\n    rawIntensitiesRef.current = rawIntensitiesRef.current.concat(\r\n      currentRawIntensity\r\n    );\r\n    lowPassIntensitiesRef.current = lowPassIntensitiesRef.current.concat(\r\n      currentLowPassIntensity\r\n    );\r\n\r\n    // remove intensities older than 2 seconds\r\n    if (Date.now() - startingTimestampRef.current > 2000) {\r\n      rawIntensitiesRef.current.shift();\r\n      lowPassIntensitiesRef.current.shift();\r\n    }\r\n\r\n    const isBeat = currentLowPassIntensity > recentLowPassAvgIntensity * 1.5;\r\n\r\n    return (\r\n      <WrappedComponent\r\n        data={renderedData}\r\n        lowPassData={lowPassData}\r\n        isBeat={isBeat}\r\n        intensity={currentRawIntensity}\r\n        lowPassIntensity={currentLowPassIntensity}\r\n        quality={quality}\r\n      />\r\n    );\r\n  };\r\n}\r\n","const colorTriples = [\r\n  ['#0E9AA7', '#F6CD61', '#FE8A71'],\r\n  ['#EE4540', '#801336', '#2D142C'],\r\n  ['#8FB9A8', '#FDFBD4', '#FCD0BA'],\r\n  ['#AC6D83', '#685D79', '#465C7A'],\r\n  ['#F36E38', '#EF4648', '#582841'],\r\n  ['#F1F1F1', '#9BD7D1', '#305D7A'],\r\n  ['#DEA5B6', '#F3CD8C', '#F2E9C2'],\r\n  ['#E27B47', '#EFCA58', '#46B29E'],\r\n  ['#2E7345', '#2E9975', '#2DB3B3'],\r\n  ['#52A3CC', '#7EA1E5', '#AAAAF2'],\r\n  ['#CC5285', '#CC5285', '#F2BCAA'],\r\n  ['#D8E0BB', '#B6CEC7', '#86A3C3']\r\n];\r\n\r\nconst colorTriplesWithIds = colorTriples.map((colorTriple, i) => ({\r\n  id: i,\r\n  colorTriple\r\n}));\r\n\r\nfunction randomColorTriple() {\r\n  return colorTriples[Math.floor(Math.random() * colorTriples.length)];\r\n}\r\n\r\nexport function getRandomColors(numColors: number, areUnique?: boolean): string[] {\r\n  const colors: string[] = [];\r\n\r\n  while (colors.length < numColors) {\r\n    const randomTriple = randomColorTriple();\r\n    const randomColor = randomTriple[Math.floor(Math.random() * randomTriple.length)];\r\n\r\n    if (areUnique && colors.includes(randomColor)) {\r\n      break;\r\n    }\r\n\r\n    colors.push(randomColor);\r\n  }\r\n  return colors;\r\n}\r\n\r\nexport function getRandomColor() {\r\n  return getRandomColors(1)[0];\r\n}\r\n\r\nexport function getRandomColorTriple() {\r\n  const colorCopy = [...randomColorTriple()];\r\n  if (Math.random() <= 0.5) {\r\n    return colorCopy.reverse();\r\n  } else {\r\n    return colorCopy;\r\n  }\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { getColors } from './utils';\r\nimport './Waveform.scss';\r\n\r\nconst LINE_WIDTH = 10;\r\nconst LINE_X_OFFSET = 0;\r\nconst LINE_Y_OFFSET = 5;\r\n\r\nconst Waveform: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  quality\r\n}) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!;\r\n\r\n    const resizeCanvas = () => {\r\n      const { innerWidth, innerHeight, devicePixelRatio = 1 } = window;\r\n\r\n      canvas.width = innerWidth * devicePixelRatio;\r\n      canvas.height = innerHeight * devicePixelRatio;\r\n\r\n      // initial paint to match fade out color from rounding error\r\n      const ctx = canvas.getContext('2d')!;\r\n      ctx.fillStyle = '#101010';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    };\r\n\r\n    resizeCanvas();\r\n\r\n    window.addEventListener('resize', resizeCanvas);\r\n    return () => window.removeEventListener('resize', resizeCanvas);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n\r\n    const fadeOut = () => {\r\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    };\r\n\r\n    const intervalId = window.setInterval(fadeOut, 7);\r\n    return () => window.clearInterval(intervalId);\r\n  }, []);\r\n\r\n  // paint on every data update\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n    ctx.lineWidth = LINE_WIDTH;\r\n    ctx.lineCap = 'round';\r\n\r\n    const colors = getColors(quality + 1);\r\n\r\n    const sliceWidth = canvas.width / data.length;\r\n\r\n    colors.forEach((color, i) => {\r\n      ctx.strokeStyle = color;\r\n      ctx.beginPath();\r\n\r\n      let x = i * LINE_X_OFFSET;\r\n      ctx.moveTo(x, canvas.height / 2);\r\n\r\n      data.forEach(dataElement => {\r\n        const y =\r\n          (dataElement / 255.0) * canvas.height -\r\n          (LINE_Y_OFFSET * colors.length) / 2;\r\n        ctx.lineTo(x, y + i * ((LINE_Y_OFFSET * colors.length) / 2));\r\n        x += sliceWidth;\r\n      });\r\n\r\n      ctx.lineTo(x, canvas.height / 2);\r\n      ctx.stroke();\r\n    });\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"waveform\">\r\n      <div className=\"backdrop\" />\r\n      <canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Waveform);\r\n","import {\r\n  getRandomColorTriple,\r\n  getRandomColors,\r\n  getRandomColor\r\n} from '../../../../utils/colors';\r\n\r\nexport function getColors(numColors: number) {\r\n  switch (numColors) {\r\n    case 3:\r\n      return getRandomColorTriple();\r\n    case 2:\r\n      return getRandomColors(2, true);\r\n    case 1:\r\n      return [getRandomColor()];\r\n    default:\r\n      return getRandomColorTriple();\r\n  }\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useTransition, animated, interpolate, config } from 'react-spring';\r\nimport classNames from 'classnames';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport './Drummer.scss';\r\nimport { getRandomColor } from '../../../../utils/colors';\r\nimport { DATA_SIZE } from '../../../../config';\r\nimport { QualitySettings } from '../index';\r\n\r\nconst MIN_HIT_COUNT = 0.04;\r\nconst MIN_FREQUENCY_VARIATION = 10;\r\nconst MIN_DELAY_BETWEEN_COLOR_CHANGE = 200;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: { NUM_DRUMMERS: 6 },\r\n  1: { NUM_DRUMMERS: 10 },\r\n  2: { NUM_DRUMMERS: 16 }\r\n};\r\n\r\nconst minHitCount = MIN_HIT_COUNT * DATA_SIZE;\r\n\r\nconst Drummer: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  isBeat,\r\n  quality\r\n}) => {\r\n  const [size, setSize] = useState(0);\r\n  const [colorSize, setColorSize] = useState(0);\r\n\r\n  const colorsRef = useRef({\r\n    values: [getRandomColor()],\r\n    lastChangedTimestamp: Date.now()\r\n  });\r\n\r\n  useEffect(() => {\r\n    const onResize = () => {\r\n      const { innerWidth, innerHeight } = window;\r\n      const maxSideLength = Math.max(innerWidth, innerHeight);\r\n      setSize(maxSideLength * 2);\r\n\r\n      const colorDiameter = Math.sqrt(\r\n        Math.pow(innerWidth, 2) + Math.pow(innerHeight, 2)\r\n      );\r\n      setColorSize(colorDiameter);\r\n    };\r\n\r\n    onResize();\r\n\r\n    window.addEventListener('resize', onResize);\r\n    return () => window.removeEventListener('resize', onResize);\r\n  }, []);\r\n\r\n  const colors = colorsRef.current;\r\n  const numDrummers = QUALITY[quality].NUM_DRUMMERS;\r\n\r\n  const freqMap: { [key: string]: number } = {};\r\n  const numPerSlice = 256 / numDrummers;\r\n\r\n  let freqKey = 0;\r\n  while (freqKey < numDrummers) {\r\n    freqMap[freqKey] = 0;\r\n    freqKey += 1;\r\n  }\r\n\r\n  data.forEach(freqData => {\r\n    let freqKey = 0;\r\n    while (freqKey < numDrummers) {\r\n      const ceiling = numPerSlice * (freqKey + 1);\r\n      if (\r\n        Math.abs(freqData - 128) > MIN_FREQUENCY_VARIATION &&\r\n        freqData <= ceiling\r\n      ) {\r\n        freqMap[freqKey] += 1;\r\n        break;\r\n      }\r\n      freqKey += 1;\r\n    }\r\n  });\r\n\r\n  // space out background color changes so they're not jarring\r\n  const now = Date.now();\r\n  if (\r\n    isBeat &&\r\n    now - colors.lastChangedTimestamp > MIN_DELAY_BETWEEN_COLOR_CHANGE\r\n  ) {\r\n    let newColor;\r\n    do {\r\n      newColor = getRandomColor();\r\n    } while (colors.values[colors.values.length - 1] === newColor);\r\n\r\n    colors.values.push(newColor);\r\n    if (colors.values.length > 1) {\r\n      colors.values.shift();\r\n    }\r\n    colors.lastChangedTimestamp = now;\r\n  }\r\n\r\n  const drummers = Object.entries(freqMap).map(([freqKey, hitCount], i) => {\r\n    const drummerContainerSize = ((1 + +freqKey) * size) / numDrummers;\r\n\r\n    return (\r\n      <div\r\n        key={freqKey}\r\n        className=\"drummer-container\"\r\n        style={{\r\n          width: `${drummerContainerSize}px`,\r\n          height: `${drummerContainerSize}px`,\r\n          opacity: ((numDrummers - i) / numDrummers) * 0.5 * 0.25\r\n        }}\r\n      >\r\n        <div className={classNames('beat', { hit: hitCount > minHitCount })} />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const smallestDrummerSize = size / (numDrummers * 2);\r\n\r\n  const transitions = useTransition(colors.values, null, {\r\n    from: item => ({\r\n      backgroundColor: item,\r\n      width: smallestDrummerSize,\r\n      height: smallestDrummerSize,\r\n      scale: 1\r\n    }),\r\n    enter: { scale: (colorSize / smallestDrummerSize) * 1.5 },\r\n    leave: { scale: 0 },\r\n    config: config.slow\r\n  });\r\n\r\n  return (\r\n    <div className=\"drummer\">\r\n      {drummers}\r\n      {transitions.map(({ item, props, key }) => {\r\n        const { scale, ...style } = props as any;\r\n\r\n        return (\r\n          <animated.div\r\n            className=\"color-overlay\"\r\n            key={key}\r\n            style={{\r\n              ...style,\r\n              transform: interpolate(\r\n                [scale],\r\n                (s: number) => `translate3d(0, 0, 0) scale(${s})`\r\n              )\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Drummer);\r\n","import { Scene, PointsMaterial, Clock } from 'three';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\nimport { createSphereGeometry, createPoints } from './entities/polys';\r\nimport { Quality } from '../../../../../store/types';\r\nimport { QualitySettings } from '../../index';\r\n\r\nconst DELAY_BEFORE_ROTATING_X = 1500;\r\nconst CAMERA_MAX_DISTANCE = 200;\r\nconst CAMERA_DRIFT = 0.025;\r\nconst ROTATE_Y = -0.3;\r\nconst ROTATE_X = 0.3;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: { sphereSegments: 30 },\r\n  1: { sphereSegments: 48 },\r\n  2: { sphereSegments: 72 }\r\n};\r\n\r\nexport default function sceneManager(\r\n  rendererContainer: HTMLDivElement,\r\n  quality: Quality\r\n) {\r\n  let animationFrameId: number;\r\n  let sceneInitializedTimestamp = Date.now();\r\n  let t = 0;\r\n\r\n  const sphereGeometry = createSphereGeometry(QUALITY[quality].sphereSegments);\r\n  const halpern = createPoints(sphereGeometry);\r\n  const camera = createCamera(CAMERA_MAX_DISTANCE);\r\n  const renderer = createRenderer();\r\n  rendererContainer.appendChild(renderer.domElement);\r\n\r\n  const scene = new Scene();\r\n  scene.add(halpern);\r\n\r\n  // clock is started in Halpern component when the\r\n  // animation loop is started\r\n  const clock = new Clock();\r\n\r\n  window.addEventListener('resize', onResize);\r\n  document.addEventListener('visibilitychange', onVisibilityChange);\r\n\r\n  function animate() {\r\n    const delta = clock.getDelta();\r\n\r\n    halpern.rotateY(ROTATE_Y * delta);\r\n\r\n    if (Date.now() - sceneInitializedTimestamp > DELAY_BEFORE_ROTATING_X) {\r\n      halpern.rotateX(ROTATE_X * delta);\r\n    }\r\n\r\n    t += delta;\r\n\r\n    if (t >= Math.PI * 2) {\r\n      t = 0;\r\n    }\r\n\r\n    camera.translateY(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateX(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateZ(Math.cos(t) * CAMERA_DRIFT * 5);\r\n\r\n    renderer.render(scene, camera);\r\n    animationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function cleanup() {\r\n    window.cancelAnimationFrame(animationFrameId);\r\n    window.removeEventListener('resize', onResize);\r\n    document.removeEventListener('visibilitychange', onVisibilityChange);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    scene.remove(halpern);\r\n\r\n    halpern.geometry.dispose();\r\n    (halpern.material as PointsMaterial).dispose();\r\n    sphereGeometry.dispose();\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function onVisibilityChange() {\r\n    if (document.visibilityState === 'hidden') {\r\n      clock.stop();\r\n    } else {\r\n      clock.start();\r\n    }\r\n  }\r\n\r\n  return {\r\n    clock,\r\n    sphereGeometry,\r\n    halpern,\r\n    animate,\r\n    cleanup\r\n  };\r\n}\r\n","import {\r\n  Points,\r\n  PointsMaterial,\r\n  SphereGeometry,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  TextureLoader\r\n} from 'three';\r\n\r\nexport function createSphereGeometry(segments: number): SphereGeometry {\r\n  return new SphereGeometry(48, segments, segments);\r\n}\r\n\r\nexport function createPoints(sphereGeometry: SphereGeometry): Points {\r\n  const pointGeometry = new SphereGeometry(\r\n    sphereGeometry.parameters.radius,\r\n    sphereGeometry.parameters.widthSegments,\r\n    sphereGeometry.parameters.heightSegments\r\n  );\r\n\r\n  const { vertices } = pointGeometry;\r\n  const positions = new Float32Array(vertices.length * 3);\r\n\r\n  vertices.forEach((vertex, i) => {\r\n    vertex.toArray(positions, i * 3);\r\n  });\r\n\r\n  const geometry = new BufferGeometry();\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n  (geometry.attributes.position as BufferAttribute).dynamic = true;\r\n\r\n  const material = new PointsMaterial({\r\n    size: 0.5,\r\n    map: new TextureLoader().load('assets/images/point.png'),\r\n    alphaTest: 0.5,\r\n    color: 0x666666,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, material);\r\n}\r\n","import { PerspectiveCamera, Vector3 } from 'three';\r\n\r\nexport function createCamera(startingY: number) {\r\n  const camera = new PerspectiveCamera(\r\n    75,\r\n    window.innerWidth / window.innerHeight,\r\n    0.1,\r\n    1000\r\n  );\r\n\r\n  camera.position.set(0, startingY, 0);\r\n  camera.lookAt(new Vector3(0, 0, 0));\r\n\r\n  return camera;\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ alpha: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x000000, 0);\r\n\r\n  return renderer;\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { BufferGeometry, BufferAttribute } from 'three';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport sceneManager from './three/sceneManager';\r\nimport { QualitySettings } from '../index';\r\nimport './Halpern.scss';\r\n\r\nconst VERTEX_SEGMENT_WEIGHT_COEFFICIENT = 0.1;\r\nconst BASELINE_VERTEX_SCALAR_FACTOR = 1;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: { RIPPLE_SPEED: 2 },\r\n  1: { RIPPLE_SPEED: 3 },\r\n  2: { RIPPLE_SPEED: 4 }\r\n};\r\n\r\nconst Halpern: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  quality\r\n}) => {\r\n  const rendererRef = useRef<HTMLDivElement>(null);\r\n  const managedSceneRef = useRef<any>();\r\n  const originalVerticesRef = useRef<ArrayLike<number>>();\r\n  const sphereDataSegmentsRef = useRef<number>();\r\n  const vertexSegmentLengthRef = useRef<number>();\r\n  const focusedDataRef = useRef<number[]>(new Array(data.length).fill(128));\r\n\r\n  useEffect(() => {\r\n    const rendererContainer = rendererRef.current!;\r\n    const managedScene = sceneManager(rendererContainer, quality);\r\n\r\n    managedSceneRef.current = managedScene;\r\n\r\n    const halpernGeometry = managedScene.halpern.geometry as BufferGeometry;\r\n\r\n    sphereDataSegmentsRef.current = Math.floor(\r\n      data.length / managedScene.sphereGeometry.parameters.widthSegments\r\n    );\r\n\r\n    // split vertices up into segments belonging to slices of x cross sections,\r\n    // first and last vertices are at top and bottom of sphere\r\n    vertexSegmentLengthRef.current =\r\n      (managedScene.sphereGeometry.vertices.length - 2) /\r\n      (managedScene.sphereGeometry.parameters.widthSegments - 1);\r\n\r\n    originalVerticesRef.current = (halpernGeometry.attributes.position\r\n      .array as Float32Array).slice(0);\r\n\r\n    managedScene.clock.start();\r\n\r\n    managedScene.animate();\r\n\r\n    return managedScene.cleanup;\r\n  }, [quality]);\r\n\r\n  useEffect(() => {\r\n    const rippleSpeed = QUALITY[quality].RIPPLE_SPEED;\r\n    const focusedDataIndex = Math.floor(data.length / 2);\r\n\r\n    focusedDataRef.current.splice(0, rippleSpeed);\r\n    focusedDataRef.current = focusedDataRef.current.concat(\r\n      new Array(rippleSpeed).fill(data[focusedDataIndex])\r\n    );\r\n\r\n    const halpernGeometry = managedSceneRef.current!.halpern.geometry;\r\n    const halpernBufferPositions = halpernGeometry.getAttribute('position')\r\n      .array as Float32Array;\r\n\r\n    let i = 0;\r\n    while (i < originalVerticesRef.current!.length) {\r\n      // find which segment the current index belongs to\r\n      const vertexSegmentIndex = Math.ceil(\r\n        Math.floor(i / 3) / vertexSegmentLengthRef.current!\r\n      );\r\n\r\n      const dataIndex = vertexSegmentIndex * sphereDataSegmentsRef.current!;\r\n      const vertexSegmentWeight = Math.min(\r\n        vertexSegmentIndex,\r\n        vertexSegmentLengthRef.current! - vertexSegmentIndex\r\n      );\r\n\r\n      const dataVariation =\r\n        Math.abs(focusedDataRef.current[dataIndex] - 128) / 255;\r\n\r\n      const scalar =\r\n        dataVariation *\r\n          vertexSegmentWeight *\r\n          VERTEX_SEGMENT_WEIGHT_COEFFICIENT +\r\n        BASELINE_VERTEX_SCALAR_FACTOR;\r\n\r\n      // update X, Y, and Z vector positions in BufferGeometry\r\n      halpernBufferPositions[i] = originalVerticesRef.current![i] * scalar;\r\n      halpernBufferPositions[i + 1] =\r\n        originalVerticesRef.current![i + 1] * scalar;\r\n      halpernBufferPositions[i + 2] =\r\n        originalVerticesRef.current![i + 2] * scalar;\r\n\r\n      i += 3;\r\n    }\r\n\r\n    // inform three.js that vertices should be repositioned,\r\n    // final render is handled in sceneManager animate loop\r\n    (halpernGeometry.getAttribute(\r\n      'position'\r\n    ) as BufferAttribute).needsUpdate = true;\r\n  }, [data]);\r\n\r\n  return <div className=\"halpern\" ref={rendererRef} />;\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Halpern);\r\n","export const starVertexShader = `\r\nattribute float alpha;\r\nvarying float vAlpha;\r\n\r\nvoid main() {\r\n  vAlpha = alpha;\r\n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n  gl_PointSize = 4.0 * alpha;\r\n  gl_Position = projectionMatrix * mvPosition;\r\n}\r\n`;\r\n\r\nexport const starFragmentShader = `\r\nuniform vec3 color;\r\nvarying float vAlpha;\r\n\r\nvoid main() {\r\n  float r = 0.0;\r\n  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\r\n  r = dot(cxy, cxy);\r\n  if (r > 1.0) {\r\n    discard;\r\n  }\r\n\r\n  gl_FragColor = vec4(color, vAlpha);\r\n}\r\n`;\r\n","import {\r\n  Points,\r\n  BufferAttribute,\r\n  ShaderMaterial,\r\n  Color,\r\n  BufferGeometry,\r\n  TextureLoader,\r\n  MeshLambertMaterial,\r\n  Mesh,\r\n  PlaneGeometry\r\n} from 'three';\r\nimport { starVertexShader, starFragmentShader } from './shaders';\r\n\r\nexport function createStars(starCount: number): Points {\r\n  const geometry = new BufferGeometry();\r\n\r\n  const positions = new Float32Array(starCount * 3);\r\n\r\n  let i = 0;\r\n  while (i < starCount) {\r\n    // add random x, y, and z vector positions\r\n    positions[i++] = Math.random() * 100 - 50;\r\n    positions[i++] = Math.random() * 100 - 50;\r\n    positions[i++] = Math.random() * 100 - 50;\r\n  }\r\n\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n\r\n  const alphas = new Float32Array(geometry.attributes.position.count * 1);\r\n\r\n  let j = 0;\r\n  while (j < alphas.length) {\r\n    alphas[j] = Math.random();\r\n    j += 1;\r\n  }\r\n\r\n  geometry.addAttribute('alpha', new BufferAttribute(alphas, 1));\r\n\r\n  const shaderMaterial = new ShaderMaterial({\r\n    uniforms: {\r\n      color: { type: 'c', value: new Color(0xffffff) }\r\n    },\r\n    vertexShader: starVertexShader,\r\n    fragmentShader: starFragmentShader,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, shaderMaterial);\r\n}\r\n\r\nexport function createCloud(): Mesh {\r\n  const texture = Math.random() < 0.5 ? 'cloud.png' : 'smoke.png';\r\n\r\n  const geometry = new PlaneGeometry(50, 50);\r\n\r\n  const cloudMaterial = new MeshLambertMaterial({\r\n    map: new TextureLoader().load(`assets/images/${texture}`),\r\n    transparent: true,\r\n    opacity: 0.15,\r\n    depthTest: false\r\n  });\r\n\r\n  geometry.rotateZ(Math.random() * 360);\r\n\r\n  const cloud = new Mesh(geometry, cloudMaterial);\r\n\r\n  const zPosition = Math.random() * 15 + 10;\r\n\r\n  cloud.position.set(\r\n    Math.random() * 100 - 50,\r\n    Math.random() * 100 - 50,\r\n    Math.random() < 0.5 ? zPosition : -zPosition\r\n  );\r\n\r\n  return cloud;\r\n}\r\n","import { DirectionalLight, AmbientLight } from 'three';\r\n\r\nexport function createAmbientLight(color: number, intensity: number) {\r\n  return new AmbientLight(color, intensity);\r\n}\r\n\r\nexport function createDirectionalLight(color: number, intensity: number) {\r\n  return new DirectionalLight(color, intensity);\r\n}\r\n","import {\r\n  Scene,\r\n  PointsMaterial,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  Group,\r\n  Mesh,\r\n  ShaderMaterial,\r\n  Clock\r\n} from 'three';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\nimport { createStars, createCloud } from './entities/polys';\r\nimport { createAmbientLight, createDirectionalLight } from './entities/light';\r\nimport { QualitySettings } from '../../index';\r\n\r\nconst MAX_STAR_ALPHA = 1.0;\r\nconst MIN_STAR_ALPHA = 0.2;\r\nconst STAR_ALPHA_DELTA = 0.75;\r\nconst ROTATE_Y = 0.025;\r\nconst ROTATE_X = 0.001;\r\nconst STATIC_LIGHT_COLOR = 0x00c4b6;\r\nconst VARIABLE_LIGHT_COLOR = 0xd10022;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: {\r\n    STAR_COUNT: 5 * 1000,\r\n    CLOUD_COUNT: 20\r\n  },\r\n  1: {\r\n    STAR_COUNT: 10 * 1000,\r\n    CLOUD_COUNT: 40\r\n  },\r\n  2: {\r\n    STAR_COUNT: 20 * 1000,\r\n    CLOUD_COUNT: 65\r\n  }\r\n};\r\n\r\nexport default function sceneManager(\r\n  rendererContainer: HTMLDivElement,\r\n  quality: number,\r\n  lightIntensity: number\r\n) {\r\n  let animationFrameId: number;\r\n\r\n  const renderer = createRenderer();\r\n  rendererContainer.appendChild(renderer.domElement);\r\n  const camera = createCamera();\r\n  const scene = new Scene();\r\n\r\n  const stars = createStars(QUALITY[quality].STAR_COUNT);\r\n  scene.add(stars);\r\n\r\n  const cloudCover = new Group();\r\n\r\n  let cloudCount = 0;\r\n  while (cloudCount <= QUALITY[quality].CLOUD_COUNT) {\r\n    const cloud = createCloud();\r\n    cloudCover.add(cloud);\r\n    cloudCount += 1;\r\n  }\r\n\r\n  scene.add(cloudCover);\r\n\r\n  const aLight = createAmbientLight(0xffffff, lightIntensity);\r\n  scene.add(aLight);\r\n\r\n  const fixedDLight = createDirectionalLight(STATIC_LIGHT_COLOR, 2);\r\n  fixedDLight.position.set(0, 0, 1);\r\n  scene.add(fixedDLight);\r\n\r\n  const dLight = createDirectionalLight(VARIABLE_LIGHT_COLOR, lightIntensity);\r\n  dLight.position.set(0, 0, 1);\r\n  scene.add(dLight);\r\n\r\n  // create a fixed array to track which direction to adjust each star alpha\r\n  const starAlphas = (stars.geometry as BufferGeometry).attributes.alpha;\r\n  const alphaDirection = new Float32Array(starAlphas.count);\r\n\r\n  for (let i = 0; i < alphaDirection.length; i++) {\r\n    // direction of 1 means alpha should increase\r\n    // -1 means alpha should decrease\r\n    alphaDirection[i] = Math.random() < 0.5 ? 1 : -1;\r\n  }\r\n\r\n  // clock is started in Stars component when\r\n  // the animation loop is first triggered\r\n  const clock = new Clock();\r\n\r\n  window.addEventListener('resize', onResize);\r\n  document.addEventListener('visibilitychange', onVisibilityChange);\r\n\r\n  function animate() {\r\n    const delta = clock.getDelta();\r\n\r\n    stars.rotateX(ROTATE_X * delta);\r\n    stars.rotateY(ROTATE_Y * delta);\r\n\r\n    cloudCover.rotateX(ROTATE_X * 24 * delta);\r\n    cloudCover.rotateY(ROTATE_Y * 2 * delta);\r\n    cloudCover.rotateZ(ROTATE_X * 3 * delta);\r\n\r\n    cloudCover.children.forEach(cloud => {\r\n      (cloud as Mesh).lookAt(camera.position);\r\n    });\r\n\r\n    // use alphaDirection to maintain alpha adjustment direction until we\r\n    // reach a limit, then switch the direction\r\n    for (let i = 0; i < starAlphas.count; i++) {\r\n      if (alphaDirection[i] > 0) {\r\n        (starAlphas.array as Float32Array)[i] *= 1 + STAR_ALPHA_DELTA * delta;\r\n        if ((starAlphas.array as Float32Array)[i] > MAX_STAR_ALPHA) {\r\n          alphaDirection[i] = -1;\r\n        }\r\n      } else {\r\n        (starAlphas.array as Float32Array)[i] *= 1 - STAR_ALPHA_DELTA * delta;\r\n        if ((starAlphas.array as Float32Array)[i] < MIN_STAR_ALPHA) {\r\n          alphaDirection[i] = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    (starAlphas as BufferAttribute).needsUpdate = true;\r\n\r\n    renderer.render(scene, camera);\r\n    animationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function cleanup() {\r\n    window.cancelAnimationFrame(animationFrameId);\r\n    window.removeEventListener('resize', onResize);\r\n    document.removeEventListener('visibilitychange', onVisibilityChange);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    scene.remove(stars);\r\n    stars.geometry.dispose();\r\n    (stars.material as PointsMaterial).dispose();\r\n\r\n    scene.remove(cloudCover);\r\n    cloudCover.children.forEach(cloud => {\r\n      (cloud as Mesh).geometry.dispose();\r\n      ((cloud as Mesh).material as ShaderMaterial).dispose();\r\n    });\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function onVisibilityChange() {\r\n    if (document.visibilityState === 'hidden') {\r\n      clock.stop();\r\n    } else {\r\n      clock.start();\r\n    }\r\n  }\r\n\r\n  return {\r\n    clock,\r\n    animate,\r\n    cleanup,\r\n    dLight\r\n  };\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ antialias: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x0000f, 1);\r\n\r\n  return renderer;\r\n}\r\n","import { PerspectiveCamera } from 'three';\r\n\r\nexport function createCamera() {\r\n  const camera = new PerspectiveCamera(\r\n    50,\r\n    window.innerWidth / window.innerHeight,\r\n    1,\r\n    1000\r\n  );\r\n\r\n  return camera;\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport sceneManager from './three/sceneManager';\r\nimport './Stars.scss';\r\n\r\nconst MIN_DELAY_BETWEEN_INTENSITY_CHANGE = 75;\r\nconst MAX_LIGHT_INTENSITY_INCREASE_DELTA = 2.5;\r\nconst MIN_LIGHT_INTENSITY = 1;\r\n\r\nconst Stars: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  intensity,\r\n  quality\r\n}) => {\r\n  const rendererRef = useRef<HTMLDivElement>(null);\r\n  const managedSceneRef = useRef<any>();\r\n  const lightTimestampRef = useRef<number>(Date.now());\r\n\r\n  useEffect(() => {\r\n    const rendererContainer = rendererRef.current!;\r\n    const managedScene = sceneManager(\r\n      rendererContainer,\r\n      quality,\r\n      MIN_LIGHT_INTENSITY\r\n    );\r\n\r\n    managedSceneRef.current = managedScene;\r\n\r\n    managedScene.clock.start();\r\n    managedScene.animate();\r\n\r\n    return managedScene.cleanup;\r\n  }, [quality]);\r\n\r\n  useEffect(() => {\r\n    const now = Date.now();\r\n\r\n    if (now - lightTimestampRef.current <= MIN_DELAY_BETWEEN_INTENSITY_CHANGE) {\r\n      return;\r\n    }\r\n\r\n    const { dLight } = managedSceneRef.current!;\r\n\r\n    const currentLightIntensity = dLight.intensity;\r\n\r\n    let newLightIntensity = intensity / 2 || MIN_LIGHT_INTENSITY;\r\n\r\n    if (\r\n      newLightIntensity - currentLightIntensity >\r\n      MAX_LIGHT_INTENSITY_INCREASE_DELTA\r\n    ) {\r\n      newLightIntensity =\r\n        currentLightIntensity + MAX_LIGHT_INTENSITY_INCREASE_DELTA;\r\n    }\r\n\r\n    dLight.intensity = newLightIntensity;\r\n\r\n    lightTimestampRef.current = now;\r\n  }, [data]);\r\n\r\n  return <div className=\"stars\" ref={rendererRef} />;\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Stars);\r\n","const TICKS_TO_FALL = 100;\r\nconst RAINDROPS_HEIGHTWISE = 15;\r\nconst RAINDROP_COLOR = '#161B1D';\r\n\r\nclass Raindrop {\r\n  private heightPerTick = 0;\r\n  private raindropHeight = 0;\r\n\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    private ctx: CanvasRenderingContext2D,\r\n    private canvasHeight: number\r\n  ) {\r\n    this.heightPerTick = Math.floor(this.canvasHeight / TICKS_TO_FALL);\r\n    this.raindropHeight = Math.floor(this.canvasHeight / RAINDROPS_HEIGHTWISE);\r\n  }\r\n\r\n  tick() {\r\n    // TODO: should reposition based on clock delta\r\n    this.y += Math.floor(this.heightPerTick);\r\n  }\r\n\r\n  render() {\r\n    const { ctx } = this;\r\n    ctx.fillStyle = RAINDROP_COLOR;\r\n    ctx.fillRect(this.x, this.y, 1, this.raindropHeight);\r\n  }\r\n}\r\n\r\nexport class Rainfall {\r\n  private raindrops: Raindrop[] = [];\r\n  public canvasWidth = 0;\r\n  public canvasHeight = 0;\r\n\r\n  constructor(private ctx: CanvasRenderingContext2D) {\r\n    this.canvasWidth = ctx.canvas.width;\r\n    this.canvasHeight = ctx.canvas.height;\r\n  }\r\n\r\n  tick() {\r\n    const nextRaindrops: Raindrop[] = [];\r\n    const { raindrops, canvasWidth, canvasHeight } = this;\r\n\r\n    raindrops.forEach(raindrop => {\r\n      raindrop.tick();\r\n\r\n      if (raindrop.x < canvasWidth && raindrop.y < canvasHeight) {\r\n        nextRaindrops.push(raindrop);\r\n      }\r\n    });\r\n\r\n    this.raindrops = nextRaindrops;\r\n  }\r\n\r\n  add() {\r\n    const { raindrops, ctx, canvasWidth, canvasHeight } = this;\r\n    const startingX = Math.floor(Math.random() * (canvasWidth - 1) + 1);\r\n    const startingY = -canvasHeight / RAINDROPS_HEIGHTWISE;\r\n\r\n    raindrops.push(new Raindrop(startingX, startingY, ctx, canvasHeight));\r\n  }\r\n\r\n  render() {\r\n    this.raindrops.forEach(raindrop => raindrop.render());\r\n  }\r\n}\r\n","const WINDOW_FRAME_THICKNESS_DIVISOR = 50;\r\n\r\nexport abstract class Renderer {\r\n  protected canvasWidth: number;\r\n  protected canvasHeight: number;\r\n  protected oneThirdCanvasWidth: number;\r\n  protected oneHalfCanvasHeight: number;\r\n  protected windowFrameThickness: number;\r\n  protected roundedRadius: number;\r\n\r\n  constructor(protected ctx: CanvasRenderingContext2D) {\r\n    this.canvasWidth = ctx.canvas.width;\r\n    this.canvasHeight = ctx.canvas.height;\r\n    this.oneThirdCanvasWidth = this.canvasWidth / 3;\r\n    this.oneHalfCanvasHeight = this.canvasHeight / 2;\r\n    this.windowFrameThickness = Math.floor(\r\n      Math.max(this.canvasWidth, this.canvasHeight) /\r\n        WINDOW_FRAME_THICKNESS_DIVISOR\r\n    );\r\n    this.roundedRadius = Math.floor(this.windowFrameThickness / 3);\r\n    ctx.save();\r\n  }\r\n\r\n  // for initial paint - subclasses should call super.render()\r\n  render(): void {\r\n    this.ctx.restore();\r\n  }\r\n\r\n  // for animation\r\n  tick(): void {}\r\n}\r\n","import { Renderer } from './renderer';\r\n\r\nconst WALL_START_COLOR = '#181623';\r\nconst WALL_END_COLOR = '#111019';\r\n\r\nexport class Wall extends Renderer {\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const { ctx, canvasWidth, canvasHeight } = this;\r\n\r\n    const linearGradient = this.ctx.createLinearGradient(0, 0, 0, canvasHeight);\r\n    linearGradient.addColorStop(0, WALL_START_COLOR);\r\n    linearGradient.addColorStop(1, WALL_END_COLOR);\r\n    ctx.fillStyle = linearGradient;\r\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n  }\r\n}\r\n","export type CornerRadii = {\r\n  tl: number;\r\n  tr: number;\r\n  br: number;\r\n  bl: number;\r\n};\r\n\r\nconst defaultCornerRadii = {\r\n  tl: 0,\r\n  tr: 0,\r\n  br: 0,\r\n  bl: 0\r\n};\r\n\r\nexport function roundedRect(\r\n  ctx: CanvasRenderingContext2D,\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number,\r\n  radius: CornerRadii = defaultCornerRadii,\r\n  stroke = false\r\n) {\r\n  ctx.beginPath();\r\n\r\n  ctx.moveTo(x + radius.tl, y);\r\n  ctx.lineTo(x + width - radius.tr, y);\r\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n\r\n  ctx.lineTo(x + width, y + height - radius.br);\r\n  ctx.quadraticCurveTo(\r\n    x + width,\r\n    y + height,\r\n    x + width - radius.br,\r\n    y + height\r\n  );\r\n\r\n  ctx.lineTo(x + radius.bl, y + height);\r\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n\r\n  ctx.lineTo(x, y + radius.tl);\r\n  ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n\r\n  ctx.closePath();\r\n  ctx.fill();\r\n  stroke && ctx.stroke();\r\n}\r\n\r\nexport function distanceBetween(\r\n  point1: { x: number; y: number },\r\n  point2: { x: number; y: number }\r\n) {\r\n  return Math.sqrt(\r\n    Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2)\r\n  );\r\n}\r\n\r\n// where 0 degrees corresponds to positive direction of x-axis\r\nexport function radiansBetween(\r\n  point1: { x: number; y: number },\r\n  point2: { x: number; y: number }\r\n) {\r\n  const deltaX = point2.x - point1.x;\r\n  const deltaY = point2.y - point1.y;\r\n  return Math.atan2(deltaY, deltaX);\r\n}\r\n","import { Renderer } from './renderer';\r\nimport { roundedRect, CornerRadii } from '../utils';\r\n\r\nconst WINDOW_FRAME_COLOR = '#3D1A1E';\r\nconst WINDOW_DECORATION_COLOR = '#682634';\r\n\r\nexport class Window extends Renderer {\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const {\r\n      ctx,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight,\r\n      windowFrameThickness\r\n    } = this;\r\n\r\n    ctx.fillStyle = WINDOW_FRAME_COLOR;\r\n\r\n    // window trim\r\n    ctx.fillRect(\r\n      oneThirdCanvasWidth - windowFrameThickness,\r\n      oneHalfCanvasHeight / 2 - windowFrameThickness,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    // make a hole\r\n    ctx.clearRect(\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight / 2,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight\r\n    );\r\n\r\n    // window muntin\r\n    const muntinWidth = Math.floor(windowFrameThickness / 2);\r\n\r\n    const topLeftX = (oneThirdCanvasWidth * 4) / 3 - (muntinWidth * 2) / 3;\r\n    const topRightX = (oneThirdCanvasWidth * 5) / 3 - muntinWidth / 3;\r\n    const topY = oneHalfCanvasHeight / 2 - windowFrameThickness;\r\n\r\n    const leftX = oneThirdCanvasWidth - windowFrameThickness;\r\n    const leftTopY = (oneHalfCanvasHeight * 5) / 6 - (muntinWidth * 2) / 3;\r\n    const leftBottomY = (oneHalfCanvasHeight * 7) / 6 - muntinWidth / 3;\r\n\r\n    ctx.fillRect(\r\n      topLeftX,\r\n      topY,\r\n      muntinWidth,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    ctx.fillRect(\r\n      topRightX,\r\n      topY,\r\n      muntinWidth,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    ctx.fillRect(\r\n      leftX,\r\n      leftTopY,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      muntinWidth\r\n    );\r\n\r\n    ctx.fillRect(\r\n      leftX,\r\n      leftBottomY,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      muntinWidth\r\n    );\r\n\r\n    ctx.fillStyle = WINDOW_DECORATION_COLOR;\r\n\r\n    // window head\r\n    ctx.fillRect(\r\n      oneThirdCanvasWidth - windowFrameThickness * 2,\r\n      oneHalfCanvasHeight / 2 - windowFrameThickness * 2,\r\n      oneThirdCanvasWidth + windowFrameThickness * 4,\r\n      windowFrameThickness - 1\r\n    );\r\n\r\n    // window stool\r\n    const windowSillCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: 0,\r\n      bl: this.roundedRadius,\r\n      br: this.roundedRadius\r\n    };\r\n\r\n    roundedRect(\r\n      ctx,\r\n      oneThirdCanvasWidth - windowFrameThickness * 2,\r\n      (oneHalfCanvasHeight * 3) / 2 + windowFrameThickness + 1,\r\n      oneThirdCanvasWidth + windowFrameThickness * 4,\r\n      windowFrameThickness,\r\n      windowSillCornerRadii\r\n    );\r\n\r\n    // trim decoration\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = WINDOW_DECORATION_COLOR;\r\n    ctx.rect(\r\n      oneThirdCanvasWidth - (windowFrameThickness * 2) / 3,\r\n      oneHalfCanvasHeight / 2 - (windowFrameThickness * 2) / 3,\r\n      oneThirdCanvasWidth + (windowFrameThickness * 4) / 3,\r\n      oneHalfCanvasHeight + (windowFrameThickness * 4) / 3\r\n    );\r\n    ctx.stroke();\r\n\r\n    ctx.rect(\r\n      oneThirdCanvasWidth - (windowFrameThickness * 5) / 9,\r\n      oneHalfCanvasHeight / 2 - (windowFrameThickness * 5) / 9,\r\n      oneThirdCanvasWidth + (windowFrameThickness * 10) / 9,\r\n      oneHalfCanvasHeight + (windowFrameThickness * 10) / 9\r\n    );\r\n    ctx.stroke();\r\n  }\r\n}\r\n","import { Renderer } from './renderer';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst WOOD_DECORATION_COLOR = '#091c1b';\r\n\r\nexport class Dresser extends Renderer {\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const { ctx, canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    const x = (canvasWidth * 2) / 3 + windowFrameThickness * 5;\r\n    const y = (canvasHeight * 2) / 3;\r\n\r\n    // dresser body\r\n    ctx.fillStyle = WOOD_COLOR;\r\n    ctx.fillRect(x, y, canvasWidth, canvasHeight);\r\n\r\n    // dresser detail rectangle\r\n    ctx.strokeStyle = WOOD_DECORATION_COLOR;\r\n    ctx.lineWidth = 3;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      x + windowFrameThickness,\r\n      y + windowFrameThickness,\r\n      canvasWidth,\r\n      canvasHeight\r\n    );\r\n    ctx.stroke();\r\n\r\n    // dresser top handle\r\n    const dresserWidth = canvasWidth - (x + windowFrameThickness);\r\n    const dresserHandleMidpoint =\r\n      x + windowFrameThickness + (dresserWidth * 3) / 5;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(dresserHandleMidpoint, y + windowFrameThickness * 2.5);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 2.5);\r\n    ctx.lineWidth = (windowFrameThickness * 2) / 3;\r\n    ctx.stroke();\r\n\r\n    // dresser horizontal detail line\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + windowFrameThickness, y + windowFrameThickness * 6);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 6);\r\n    ctx.lineWidth = 2;\r\n    ctx.stroke();\r\n\r\n    // dresser bottom handle\r\n    ctx.beginPath();\r\n    ctx.moveTo(dresserHandleMidpoint, y + windowFrameThickness * 7.5);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 7.5);\r\n    ctx.lineWidth = (windowFrameThickness * 2) / 3;\r\n    ctx.stroke();\r\n  }\r\n}\r\n","import { Renderer } from './renderer';\r\nimport { distanceBetween } from '../utils';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\n\r\ntype Picture = {\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\nexport class Pictures extends Renderer {\r\n  pictures: Picture[] = [];\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    const { oneThirdCanvasWidth, windowFrameThickness } = this;\r\n\r\n    // X & Y coords and dimensions for each picture\r\n    this.pictures.push({\r\n      x: (oneThirdCanvasWidth * 3) / 4 - windowFrameThickness * 4,\r\n      y: -windowFrameThickness,\r\n      width: windowFrameThickness * 4,\r\n      height: windowFrameThickness * 5\r\n    });\r\n\r\n    this.pictures.push({\r\n      x: this.pictures[0].x - windowFrameThickness * 7,\r\n      y: windowFrameThickness * 2,\r\n      width: windowFrameThickness * 5,\r\n      height: windowFrameThickness * 4\r\n    });\r\n\r\n    this.pictures.push({\r\n      x: this.pictures[1].x + windowFrameThickness * 2,\r\n      y:\r\n        this.pictures[1].y +\r\n        this.pictures[1].height +\r\n        windowFrameThickness * 1.5,\r\n      width: windowFrameThickness * 6,\r\n      height: windowFrameThickness * 10\r\n    });\r\n  }\r\n\r\n  graph() {\r\n    const { ctx, windowFrameThickness } = this;\r\n    const { x, y, width, height } = this.pictures[0];\r\n\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    const gradient1 = ctx.createLinearGradient(x, y, x, y + height);\r\n    gradient1.addColorStop(0, '#24131f');\r\n    gradient1.addColorStop(1, '#051b1f');\r\n    ctx.fillStyle = gradient1;\r\n    ctx.clip();\r\n    ctx.fill();\r\n\r\n    const nodes: Array<{ x: number; y: number }> = [];\r\n    const nodeSize = windowFrameThickness / 6;\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n      nodes.push({\r\n        x: Math.floor(Math.random() * width + x),\r\n        y: Math.floor(Math.random() * height + y)\r\n      });\r\n    }\r\n\r\n    const nodeColor = '#703c3a';\r\n    ctx.fillStyle = nodeColor;\r\n    ctx.strokeStyle = nodeColor;\r\n    ctx.lineWidth = 1;\r\n\r\n    while (nodes.length) {\r\n      const currentNode = nodes.pop()!;\r\n      ctx.beginPath();\r\n      ctx.arc(currentNode.x, currentNode.y, nodeSize / 2, 0, Math.PI * 2);\r\n      ctx.fill();\r\n\r\n      for (const otherNode of nodes) {\r\n        if (distanceBetween(currentNode, otherNode) < height / 4) {\r\n          ctx.beginPath();\r\n          ctx.moveTo(currentNode.x, currentNode.y);\r\n          ctx.lineTo(otherNode.x, otherNode.y);\r\n          ctx.stroke();\r\n        }\r\n      }\r\n    }\r\n\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 1.5;\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  orbits() {\r\n    const { ctx, windowFrameThickness } = this;\r\n    const { x, y, width, height } = this.pictures[1];\r\n\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    const gradient2 = ctx.createLinearGradient(x, y, x, y + height);\r\n    gradient2.addColorStop(0, '#556e53');\r\n    gradient2.addColorStop(1, '#29435c');\r\n    ctx.fillStyle = gradient2;\r\n    ctx.clip();\r\n    ctx.fill();\r\n\r\n    // sun\r\n    const color = '#879591';\r\n    ctx.fillStyle = color;\r\n    ctx.strokeStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(x + width / 2, y + height / 2, height / 14, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // orbits\r\n    for (\r\n      let radius = Math.floor(height / 6);\r\n      radius <= height / 2;\r\n      radius += windowFrameThickness / 4\r\n    ) {\r\n      ctx.beginPath();\r\n      ctx.arc(x + width / 2, y + height / 2, radius, 0, Math.PI * 2);\r\n      ctx.stroke();\r\n\r\n      const randomAngle = Math.random() * Math.PI * 2;\r\n      const planetX = x + width / 2 + Math.cos(randomAngle) * radius;\r\n      const planetY = y + height / 2 + Math.sin(randomAngle) * radius;\r\n      const randomRadius = Math.random() * (width / 64) + width / 192;\r\n      ctx.beginPath();\r\n      ctx.arc(planetX, planetY, randomRadius, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = '#152a38';\r\n    ctx.lineWidth = windowFrameThickness / 1.2;\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  stars() {\r\n    const { ctx, windowFrameThickness } = this;\r\n    const { x, y, width, height } = this.pictures[2];\r\n\r\n    // background\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    const gradient3 = ctx.createLinearGradient(x, y, x, y + height);\r\n    gradient3.addColorStop(0, '#09325E');\r\n    gradient3.addColorStop(0.75, '#2A2A47');\r\n    ctx.fillStyle = gradient3;\r\n    ctx.clip();\r\n    ctx.fill();\r\n\r\n    // sky\r\n    ctx.fillStyle = '#F5E7F8';\r\n    const starCount = 60;\r\n\r\n    for (let i = 0; i < starCount; i++) {\r\n      const starX = Math.floor(Math.random() * width + x);\r\n      const starY = Math.floor(Math.random() * height + y);\r\n      const radius = Math.floor(Math.random() * 2 + 1);\r\n      ctx.beginPath();\r\n      ctx.arc(starX, starY, radius, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.restore();\r\n\r\n    ctx.strokeStyle = '#0D0B21';\r\n    ctx.lineWidth = windowFrameThickness / 3;\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.graph();\r\n    this.orbits();\r\n    this.stars();\r\n  }\r\n}\r\n","import { Renderer } from './renderer';\r\nimport { roundedRect, CornerRadii } from '../utils';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst TABLE_DECORATION_COLOR = '#06151A';\r\nconst BOWL_COLOR = '#3e3e3e';\r\nconst FRUIT_COLORS = ['#564837', '#713C3A'];\r\nconst FRUIT_STEM_COLOR = '#04070F';\r\n\r\nexport class Table extends Renderer {\r\n  y: number;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    this.y = (this.canvasHeight * 5) / 6;\r\n  }\r\n\r\n  top() {\r\n    const {\r\n      ctx,\r\n      y,\r\n      windowFrameThickness,\r\n      oneThirdCanvasWidth,\r\n      roundedRadius\r\n    } = this;\r\n\r\n    const width = oneThirdCanvasWidth * 1.1;\r\n    const thickness = windowFrameThickness * 1.35;\r\n\r\n    const tableCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: roundedRadius,\r\n      br: 0,\r\n      bl: 0\r\n    };\r\n\r\n    ctx.fillStyle = WOOD_COLOR;\r\n    roundedRect(ctx, 0, y, width, thickness, tableCornerRadii);\r\n\r\n    ctx.fillStyle = TABLE_DECORATION_COLOR;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      0,\r\n      y + thickness - windowFrameThickness / 4,\r\n      width,\r\n      windowFrameThickness / 4\r\n    );\r\n    ctx.fill();\r\n  }\r\n\r\n  leg() {\r\n    const {\r\n      ctx,\r\n      y,\r\n      windowFrameThickness,\r\n      canvasHeight,\r\n      oneThirdCanvasWidth\r\n    } = this;\r\n\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n    ctx.lineWidth = windowFrameThickness * 2;\r\n    ctx.beginPath();\r\n    ctx.moveTo((oneThirdCanvasWidth * 2) / 3, y);\r\n    ctx.lineTo((oneThirdCanvasWidth * 2) / 3, canvasHeight);\r\n    ctx.stroke();\r\n  }\r\n\r\n  centerpiece() {\r\n    const {\r\n      ctx,\r\n      y,\r\n      windowFrameThickness,\r\n      canvasWidth,\r\n      oneThirdCanvasWidth\r\n    } = this;\r\n\r\n    const bowlCenterX = oneThirdCanvasWidth * 0.25;\r\n    const bowlWidth = oneThirdCanvasWidth * 0.3;\r\n    const bowlHeight = windowFrameThickness * 2;\r\n\r\n    // fruit\r\n    const fruits = [\r\n      {\r\n        xOffset: (bowlWidth - bowlWidth * 0.4) / 4,\r\n        y: y - bowlHeight,\r\n        radius: bowlWidth * 0.2,\r\n        color: FRUIT_COLORS[0],\r\n        stemAngle: Math.PI * 0.9\r\n      },\r\n      {\r\n        xOffset: -(bowlWidth - bowlWidth * 0.4) / 4,\r\n        y: y - bowlHeight + bowlHeight / 8,\r\n        radius: bowlWidth * 0.2,\r\n        color: FRUIT_COLORS[1],\r\n        stemAngle: Math.PI * 1.1\r\n      }\r\n    ];\r\n\r\n    for (const fruit of fruits) {\r\n      ctx.fillStyle = fruit.color;\r\n      ctx.beginPath();\r\n      ctx.arc(\r\n        bowlCenterX + fruit.xOffset,\r\n        fruit.y,\r\n        fruit.radius,\r\n        0,\r\n        Math.PI * 2\r\n      );\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = FRUIT_STEM_COLOR;\r\n    ctx.lineCap = 'round';\r\n    ctx.lineWidth = 2;\r\n\r\n    for (const fruit of fruits) {\r\n      ctx.save();\r\n      ctx.translate(bowlCenterX + fruit.xOffset, fruit.y);\r\n      const stemStart = {\r\n        x: Math.sin(fruit.stemAngle) * fruits[1].radius * 0.9,\r\n        y: Math.cos(fruit.stemAngle) * fruits[1].radius * 0.9\r\n      };\r\n      const stemEnd = {\r\n        x: Math.sin(fruit.stemAngle) * fruits[1].radius * 1.1,\r\n        y: Math.cos(fruit.stemAngle) * fruits[1].radius * 1.1\r\n      };\r\n      ctx.beginPath();\r\n      ctx.moveTo(stemStart.x, stemStart.y);\r\n      ctx.lineTo(stemEnd.x, stemEnd.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    }\r\n\r\n    // bowl\r\n    const bowlCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: 0,\r\n      br: oneThirdCanvasWidth * 0.1,\r\n      bl: oneThirdCanvasWidth * 0.1\r\n    };\r\n\r\n    ctx.fillStyle = BOWL_COLOR;\r\n    roundedRect(\r\n      ctx,\r\n      bowlCenterX - bowlWidth / 2,\r\n      y - bowlHeight,\r\n      bowlWidth,\r\n      bowlHeight,\r\n      bowlCornerRadii\r\n    );\r\n\r\n    ctx.save();\r\n    ctx.clip();\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = TABLE_DECORATION_COLOR;\r\n    const bowlDecorationY = y - bowlHeight + bowlHeight / 6;\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, bowlDecorationY);\r\n    ctx.lineTo(canvasWidth, bowlDecorationY);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.leg();\r\n    this.top();\r\n    this.centerpiece();\r\n  }\r\n}\r\n","import { Renderer } from './renderer';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst CLOCK_INNER_COLOR = '#4B4721';\r\nconst CLOCK_HANDS_COLOR = '#192124';\r\nconst CLOCK_DECORATION_COLOR = '#06151A';\r\n\r\nexport class Clock extends Renderer {\r\n  private clockSize = 0;\r\n  private clockCoords: { x: number; y: number } = { x: 0, y: 0 };\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n    this.clockSize = this.windowFrameThickness * 7;\r\n    const x = (this.canvasWidth * 2) / 3 + this.windowFrameThickness * 10;\r\n    const y = this.canvasHeight / 5;\r\n    this.clockCoords = { x, y };\r\n  }\r\n\r\n  face() {\r\n    const { ctx, clockSize, clockCoords } = this;\r\n    const { x, y } = clockCoords;\r\n\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n\r\n    // clock frame\r\n    ctx.lineWidth = this.windowFrameThickness / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 1.75, 0, Math.PI * 2, true);\r\n    ctx.stroke();\r\n\r\n    ctx.strokeStyle = CLOCK_DECORATION_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2, 0, Math.PI * 2, true);\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2, 0, Math.PI * 2, true);\r\n    ctx.fillStyle = CLOCK_INNER_COLOR;\r\n    ctx.fill();\r\n\r\n    // markings\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = CLOCK_HANDS_COLOR;\r\n\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n\r\n    for (let i = 1; i <= 60; i++) {\r\n      const angle = (i * Math.PI) / 30;\r\n\r\n      const start = {\r\n        x: Math.sin(angle) * (clockSize / 2 - clockSize / 20),\r\n        y: Math.cos(angle) * (clockSize / 2 - clockSize / 20)\r\n      };\r\n      const end = {\r\n        x: Math.sin(angle) * (clockSize / 2 - clockSize / 15),\r\n        y: Math.cos(angle) * (clockSize / 2 - clockSize / 15)\r\n      };\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(start.x, start.y);\r\n      ctx.lineTo(end.x, end.y);\r\n      ctx.stroke();\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  hands() {\r\n    const { ctx, clockSize, clockCoords } = this;\r\n    const { x, y } = clockCoords;\r\n\r\n    // fill in hands area so we can redraw them\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2 - clockSize / 15, 0, Math.PI * 2, true);\r\n    ctx.fillStyle = CLOCK_INNER_COLOR;\r\n    ctx.fill();\r\n\r\n    ctx.lineWidth = clockSize / 40;\r\n    ctx.lineCap = 'round';\r\n    ctx.strokeStyle = CLOCK_HANDS_COLOR;\r\n\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n\r\n    const now = new Date();\r\n    const hours = now.getHours();\r\n    const minutes = now.getMinutes();\r\n    const seconds = now.getSeconds();\r\n\r\n    // hour hand\r\n    ctx.save();\r\n    ctx.rotate((Math.PI / 6) * (hours + minutes / 60 + seconds / 3600));\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 4);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    // minute hand\r\n    ctx.save();\r\n    ctx.rotate((Math.PI / 30) * (minutes + seconds / 60));\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 2.75);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    // second hand\r\n    ctx.lineWidth = clockSize / 100;\r\n    ctx.save();\r\n    ctx.rotate((Math.PI / 30) * seconds);\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 2.7);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n    this.face();\r\n    this.hands();\r\n  }\r\n\r\n  tick() {\r\n    this.hands();\r\n  }\r\n}\r\n","import { Renderer } from './renderer';\r\nimport { radiansBetween } from '../utils';\r\n\r\nconst STEM_COLOR = '#8e8e8e';\r\nconst LIGHT_COLOR = 'rgba(252, 243, 126, 0.15)';\r\n\r\nexport class Lamp extends Renderer {\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const { ctx, canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    // stem\r\n    const lampWidth = windowFrameThickness * 3.5;\r\n    ctx.strokeStyle = STEM_COLOR;\r\n    ctx.fillStyle = STEM_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 5;\r\n    ctx.save();\r\n\r\n    const stemX = (canvasWidth * 7) / 11;\r\n    const stemHeight = canvasHeight / 5;\r\n    ctx.beginPath();\r\n    ctx.moveTo(stemX, 0);\r\n    ctx.lineTo(stemX, stemHeight);\r\n    ctx.stroke();\r\n\r\n    ctx.lineWidth = 1;\r\n    ctx.fillRect(\r\n      stemX - windowFrameThickness / 5,\r\n      stemHeight - 1,\r\n      (windowFrameThickness * 2) / 5,\r\n      windowFrameThickness\r\n    );\r\n    ctx.stroke();\r\n\r\n    // lampshade\r\n    const shadeTopLeft = {\r\n      x: stemX - windowFrameThickness / 5,\r\n      y: stemHeight + windowFrameThickness\r\n    };\r\n    const shadeTopRight = {\r\n      x: stemX + windowFrameThickness / 5,\r\n      y: stemHeight + windowFrameThickness\r\n    };\r\n    const shadeBottomRight = {\r\n      x: stemX + lampWidth / 2,\r\n      y: stemHeight + windowFrameThickness * 3\r\n    };\r\n    const shadeBottomLeft = {\r\n      x: stemX - lampWidth / 2,\r\n      y: stemHeight + windowFrameThickness * 3\r\n    };\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(shadeTopLeft.x, shadeTopLeft.y);\r\n    ctx.lineTo(shadeTopRight.x, shadeTopRight.y);\r\n    ctx.lineTo(shadeBottomRight.x, shadeBottomRight.y);\r\n    ctx.lineTo(shadeBottomLeft.x, shadeBottomLeft.y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    // light\r\n    ctx.fillStyle = LIGHT_COLOR;\r\n    const lightHeight = canvasHeight - shadeBottomLeft.y;\r\n    // compensate for inverted canvas y-coords when\r\n    // getting angle between lampshade corners\r\n    const lightAngle = radiansBetween(shadeBottomLeft, {\r\n      x: shadeTopLeft.x,\r\n      y: shadeBottomLeft.y + shadeBottomLeft.y - shadeTopLeft.y\r\n    });\r\n\r\n    // light makes a right triangle with bottom of canvas so\r\n    // we can calculate its adjacent width using height and\r\n    // the angle of the lampshade\r\n    // tan θ = opposite (height) / adjacent (width)\r\n    const lightTriangleAdjacentWidth = lightHeight / Math.tan(lightAngle);\r\n\r\n    const lightBottomLeftX = shadeBottomLeft.x - lightTriangleAdjacentWidth;\r\n    const lightBottomRightX = shadeBottomRight.x + lightTriangleAdjacentWidth;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(stemX - lampWidth / 2, stemHeight + windowFrameThickness * 3);\r\n    ctx.lineTo(stemX + lampWidth / 2, stemHeight + windowFrameThickness * 3);\r\n    ctx.lineTo(lightBottomRightX, canvasHeight);\r\n    ctx.lineTo(lightBottomLeftX, canvasHeight);\r\n    ctx.fill();\r\n  }\r\n}\r\n","import { Renderer } from './renderer';\r\nimport { Wall } from './wall';\r\nimport { Window } from './window';\r\nimport { Dresser } from './dresser';\r\nimport { Pictures } from './pictures';\r\nimport { Table } from './table';\r\nimport { Clock } from './clock';\r\nimport { Lamp } from './lamp';\r\n\r\nexport class Home extends Renderer {\r\n  wall: Wall;\r\n  window: Window;\r\n  dresser: Dresser;\r\n  pictures: Pictures;\r\n  table: Table;\r\n  clock: Clock;\r\n  lamp: Lamp;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    this.wall = new Wall(ctx);\r\n    this.window = new Window(ctx);\r\n    this.dresser = new Dresser(ctx);\r\n    this.pictures = new Pictures(ctx);\r\n    this.table = new Table(ctx);\r\n    this.clock = new Clock(ctx);\r\n    this.lamp = new Lamp(ctx);\r\n  }\r\n\r\n  render() {\r\n    this.wall.render();\r\n    this.window.render();\r\n    this.dresser.render();\r\n    this.pictures.render();\r\n    this.table.render();\r\n    this.clock.render();\r\n    this.lamp.render();\r\n  }\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { Rainfall } from './rain';\r\nimport { Home } from './home';\r\nimport './Rain.scss';\r\n\r\nconst MIN_RAINDROPS_PER_TICK = 1;\r\nconst MAX_RAINDROPS_PER_TICK = 50;\r\n\r\nconst Rain: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  lowPassIntensity\r\n}) => {\r\n  const rainCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const rainfallRef = useRef<Rainfall>();\r\n\r\n  const homeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const homeRef = useRef<Home>();\r\n\r\n  useEffect(() => {\r\n    const rainCanvas = rainCanvasRef.current!;\r\n    const homeCanvas = homeCanvasRef.current!;\r\n\r\n    let clockInterval: number;\r\n\r\n    const createHome = (width: number, height: number, dpi: number) => {\r\n      homeCanvas.width = width * dpi;\r\n      homeCanvas.height = height * dpi;\r\n\r\n      const ctx = homeCanvas.getContext('2d')!;\r\n\r\n      const home = new Home(ctx);\r\n      homeRef.current = home;\r\n      home.render();\r\n\r\n      clockInterval && window.clearTimeout(clockInterval);\r\n      clockInterval = window.setInterval(() => home.clock.tick(), 1000);\r\n    };\r\n\r\n    const createRain = (width: number, height: number, dpi: number) => {\r\n      rainCanvas.width = width * dpi;\r\n      rainCanvas.height = height * dpi;\r\n\r\n      const ctx = rainCanvas.getContext('2d')!;\r\n      if (rainfallRef.current == null) {\r\n        rainfallRef.current = new Rainfall(ctx);\r\n      } else {\r\n        const rainfall = rainfallRef.current!;\r\n        rainfall.canvasWidth = width;\r\n        rainfall.canvasHeight = height;\r\n      }\r\n    };\r\n\r\n    const resizeScene = () => {\r\n      const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n      createHome(innerWidth, innerHeight, devicePixelRatio);\r\n      createRain(innerWidth, innerHeight, devicePixelRatio);\r\n    };\r\n\r\n    resizeScene();\r\n\r\n    window.addEventListener('resize', resizeScene);\r\n    return () => window.removeEventListener('resize', resizeScene);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const rainfall = rainfallRef.current!;\r\n\r\n    let newRaindropsAdded = 0;\r\n    let raindropsToAdd = Math.floor(lowPassIntensity);\r\n\r\n    if (raindropsToAdd < MIN_RAINDROPS_PER_TICK) {\r\n      raindropsToAdd = MIN_RAINDROPS_PER_TICK;\r\n    } else if (raindropsToAdd > MAX_RAINDROPS_PER_TICK) {\r\n      raindropsToAdd = MAX_RAINDROPS_PER_TICK;\r\n    }\r\n\r\n    while (newRaindropsAdded < raindropsToAdd) {\r\n      rainfall.add();\r\n      newRaindropsAdded += 1;\r\n    }\r\n\r\n    rainfall.tick();\r\n\r\n    const canvas = rainCanvasRef.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    rainfall.render();\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"rain\">\r\n      <div className=\"backdrop\" />\r\n      <canvas ref={rainCanvasRef} />\r\n      <canvas ref={homeCanvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Rain);\r\n","import React from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport './MobileDisabled.scss';\r\n\r\nconst MobileDisabled: React.FC<VisualizationHOC.WrappedProps> = () => {\r\n  return (\r\n    <div className=\"mobile-disabled\">\r\n      <div className=\"content\">\r\n        <img\r\n          id=\"desktop-icon\"\r\n          src={process.env.PUBLIC_URL + '/assets/images/desktop.png'}\r\n        />\r\n        <div id=\"message\">\r\n          Sorry, this visualization cannot be viewed on a mobile device.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(MobileDisabled);\r\n","export function modulo(number1: number, number2: number): number {\r\n  return ((number1 % number2) + number2) % number2;\r\n}\r\n\r\nexport function isMobileDevice(): boolean {\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n    navigator.userAgent\r\n  );\r\n}\r\n","import Waveform from './Waveform';\r\nimport Drummer from './Drummer';\r\nimport Halpern from './Halpern';\r\nimport Stars from './Stars';\r\nimport Rain from './Rain';\r\nimport MobileDisabledComponent from './MobileDisabled';\r\nimport { Props } from './VisualizationHOC';\r\nimport { isMobileDevice as isMobileDeviceCheck } from '../../../utils';\r\n\r\nexport const isMobileDevice = isMobileDeviceCheck();\r\n\r\nexport type QualitySettings = {\r\n  [quality: number]: { [setting: string]: any };\r\n};\r\n\r\nexport type Options = {\r\n  smoothing?: number;\r\n  mobileDisabled?: boolean;\r\n};\r\n\r\nexport type SelectableVisualization = {\r\n  component: React.ComponentType<Props>;\r\n  options?: Options;\r\n};\r\n\r\nconst visualizations: SelectableVisualization[] = [\r\n  {\r\n    component: Rain\r\n  },\r\n  {\r\n    component: Stars,\r\n    options: { smoothing: 128 }\r\n  },\r\n  {\r\n    component: Waveform\r\n  },\r\n  {\r\n    component: Drummer,\r\n    options: { smoothing: 64 }\r\n  },\r\n  {\r\n    component: Halpern\r\n  }\r\n];\r\n\r\nexport default visualizations;\r\n\r\nexport const MobileDisabled: SelectableVisualization = {\r\n  component: MobileDisabledComponent\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useTransition, animated } from 'react-spring';\r\nimport * as VisualizationHOC from './Visualizations/VisualizationHOC';\r\nimport visualizations from './Visualizations';\r\nimport { modulo } from '../../utils';\r\nimport { StoreState } from '../../../src/store/types';\r\n\r\ntype Props = Pick<VisualizationHOC.Props, 'data' | 'lowPassData'>;\r\n\r\ntype StyledProps = Props &\r\n  Pick<StoreState, 'quality'> & {\r\n    style: React.CSSProperties;\r\n  };\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  currentIndex: state.currentVisualizationIndex,\r\n  prevIndex: state.prevVisualizationIndex,\r\n  quality: state.quality\r\n});\r\n\r\nconst styledVisualizations = visualizations.map(vis => {\r\n  return (props: StyledProps) => {\r\n    const { style, ...rest } = props;\r\n    return (\r\n      <animated.div className=\"visualization\" style={props.style}>\r\n        <vis.component {...rest} options={vis.options} />\r\n      </animated.div>\r\n    );\r\n  };\r\n});\r\n\r\nconst VisualizationSelector: React.FC<\r\n  Props & ReturnType<typeof mapStateToProps>\r\n> = ({ data, lowPassData, prevIndex, currentIndex, quality }) => {\r\n  const visIndex = modulo(currentIndex, visualizations.length);\r\n\r\n  const direction = useCallback((current?, prev?) => {\r\n    let translateXMultiplier = 0;\r\n    if (current < prev) {\r\n      translateXMultiplier = 1;\r\n    } else if (prev < current) {\r\n      translateXMultiplier = -1;\r\n    }\r\n    return `translate3d(${100 * translateXMultiplier}%, 0, 0)`;\r\n  }, []);\r\n\r\n  const transitions = useTransition(visIndex, null, {\r\n    from: { transform: direction(currentIndex, prevIndex) },\r\n    enter: { transform: direction() },\r\n    leave: { transform: direction(prevIndex, currentIndex) },\r\n    initial: { transform: direction(0, -1) }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {transitions.map(({ item, props, key }) => {\r\n        const Visualization = styledVisualizations[item];\r\n        return (\r\n          <Visualization\r\n            key={key}\r\n            data={data}\r\n            lowPassData={lowPassData}\r\n            quality={quality}\r\n            style={props}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(VisualizationSelector);\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport VisualizationSelector from '../Visualizer/VisualizationSelector';\r\nimport { FFT_SIZE } from '../../config';\r\n\r\ntype Props = {\r\n  context: AudioContext;\r\n  source: MediaElementAudioSourceNode;\r\n};\r\n\r\nconst Analyser: React.FC<Props> = ({ context, source }) => {\r\n  const [rawData, setRawData] = useState(new Uint8Array());\r\n  const [lowPassData, setLowPassData] = useState(new Uint8Array());\r\n\r\n  const animationFrameIdRef = useRef<number>();\r\n\r\n  useEffect(() => {\r\n    const rawAnalyser = context.createAnalyser();\r\n    rawAnalyser.fftSize = FFT_SIZE;\r\n    rawAnalyser.smoothingTimeConstant = 0;\r\n    source.connect(rawAnalyser);\r\n    rawAnalyser.connect(context.destination);\r\n\r\n    const filter = context.createBiquadFilter();\r\n    filter.type = 'lowpass';\r\n    const lowPassAnalyser = context.createAnalyser();\r\n    lowPassAnalyser.fftSize = FFT_SIZE;\r\n    lowPassAnalyser.smoothingTimeConstant = 0;\r\n    source.connect(filter);\r\n    filter.connect(lowPassAnalyser);\r\n\r\n    const tick = () => {\r\n      const rawDataContainer = new Uint8Array(FFT_SIZE);\r\n      rawAnalyser.getByteTimeDomainData(rawDataContainer);\r\n      setRawData(rawDataContainer);\r\n\r\n      const lowPassDataContainer = new Uint8Array(FFT_SIZE);\r\n      lowPassAnalyser.getByteTimeDomainData(lowPassDataContainer);\r\n      setLowPassData(lowPassDataContainer);\r\n\r\n      animationFrameIdRef.current = window.requestAnimationFrame(tick);\r\n    };\r\n\r\n    animationFrameIdRef.current = window.requestAnimationFrame(tick);\r\n\r\n    return () => {\r\n      animationFrameIdRef.current != null &&\r\n        window.cancelAnimationFrame(animationFrameIdRef.current);\r\n      rawAnalyser && rawAnalyser.disconnect();\r\n      lowPassAnalyser && lowPassAnalyser.disconnect();\r\n      source && source.disconnect();\r\n    };\r\n  }, [context, source]);\r\n\r\n  return <VisualizationSelector data={rawData} lowPassData={lowPassData} />;\r\n};\r\n\r\nexport default Analyser;\r\n","export const FFT_SIZE = 512;\r\nexport const DATA_SIZE = FFT_SIZE / 2;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './Loading.scss';\r\n\r\ntype Props = {\r\n  show?: boolean;\r\n};\r\n\r\nconst Loading: React.FC<Props> = ({ show }) => (\r\n  <div\r\n    className={classNames('loading', { show: show === false ? false : true })}\r\n  >\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport * as Actions from '../../../store/actions';\r\nimport { StoreState, Quality } from '../../../store/types';\r\nimport './Quality.scss';\r\n\r\ntype Props = {\r\n  onHover: () => void;\r\n  onHoverStop: () => void;\r\n} & ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps>;\r\n\r\nconst qualities = [\r\n  { label: 'low', value: 0 },\r\n  { label: 'medium', value: 1 },\r\n  { label: 'high', value: 2 }\r\n];\r\n\r\nconst QualitySelect: React.FC<Props> = ({\r\n  quality,\r\n  setQuality,\r\n  onHover,\r\n  onHoverStop\r\n}) => {\r\n  return (\r\n    <div id=\"quality\" onMouseEnter={onHover} onMouseLeave={onHoverStop}>\r\n      <select\r\n        value={quality}\r\n        onChange={e => setQuality(+e.target.value as Quality)}\r\n      >\r\n        {qualities.map(quality => (\r\n          <option key={quality.label} value={quality.value}>\r\n            {quality.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  quality: state.quality\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  setQuality: (quality: Quality) => dispatch(Actions.setQuality(quality))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(QualitySelect);\r\n","import { ActionConstants, ActionUnionType, Quality } from './types';\r\n\r\nexport const goToNextVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_NEXT_VISUALIZATION\r\n});\r\n\r\nexport const goToPrevVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_PREV_VISUALIZATION\r\n});\r\n\r\nexport const setQuality = (quality: Quality): ActionUnionType => ({\r\n  type: ActionConstants.SET_QUALITY,\r\n  quality\r\n});\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport Loading from '../Loading';\r\nimport * as Actions from '../../store/actions';\r\nimport * as versionInfo from '../../metadata/build-version.json';\r\nimport QualitySelect from './QualitySelect';\r\nimport './Controls.scss';\r\n\r\nconst CONTROLS_FADE_OUT_DELAY = 1500;\r\nconst TOUCH_WAS_CLICK_THRESHOLD = 250;\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & {\r\n  context?: AudioContext;\r\n  wantsToPlay: boolean;\r\n  isPlaying: boolean;\r\n  togglePlay: () => void;\r\n};\r\n\r\nconst Controls: React.FC<Props> = props => {\r\n  const [isOverlayShown, setIsOverlayShown] = useState(false);\r\n  const [isControlHovered, setIsControlHovered] = useState(false);\r\n\r\n  const timeoutRef = useRef<number>();\r\n  const touchTimestampRef = useRef<number>();\r\n\r\n  useEffect(() => {\r\n    const onKeyDown = (event: KeyboardEvent) => {\r\n      switch (event.which) {\r\n        case 37:\r\n        case 38: {\r\n          props.goToPrevVisualization();\r\n          break;\r\n        }\r\n        case 39:\r\n        case 40: {\r\n          props.goToNextVisualization();\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', onKeyDown);\r\n    return () => document.removeEventListener('keydown', onKeyDown);\r\n  }, []);\r\n\r\n  const showOverlay = useCallback(() => {\r\n    timeoutRef.current != null && window.clearTimeout(timeoutRef.current);\r\n\r\n    setIsOverlayShown(true);\r\n    timeoutRef.current = window.setTimeout(() => {\r\n      if (!isControlHovered) {\r\n        setIsOverlayShown(false);\r\n      }\r\n    }, CONTROLS_FADE_OUT_DELAY);\r\n  }, [isControlHovered]);\r\n\r\n  const togglePlay = useCallback(() => {\r\n    props.context && props.context.resume();\r\n    props.togglePlay();\r\n    showOverlay();\r\n  }, [props.context, props.togglePlay]);\r\n\r\n  const recordTouchTimestamp = useCallback((event: React.TouchEvent) => {\r\n    event.preventDefault();\r\n    touchTimestampRef.current = Date.now();\r\n  }, []);\r\n\r\n  const goToRepo = () => window.open('https://github.com/blackwright/late');\r\n\r\n  const onMouseDown = useCallback((event: React.MouseEvent) => {\r\n    if (event.nativeEvent.which === 1) {\r\n      touchTimestampRef.current = Date.now();\r\n    }\r\n  }, []);\r\n\r\n  const onMouseUp = useCallback((event: React.MouseEvent) => {\r\n    if (\r\n      event.nativeEvent.which === 1 &&\r\n      touchTimestampRef.current &&\r\n      Date.now() - touchTimestampRef.current < TOUCH_WAS_CLICK_THRESHOLD\r\n    ) {\r\n      togglePlay();\r\n    }\r\n  }, []);\r\n\r\n  const onTouchEnd = useCallback(\r\n    (event: React.TouchEvent) => {\r\n      event.preventDefault();\r\n      if (\r\n        touchTimestampRef.current &&\r\n        Date.now() - touchTimestampRef.current < TOUCH_WAS_CLICK_THRESHOLD\r\n      ) {\r\n        showOverlay();\r\n      }\r\n    },\r\n    [isControlHovered]\r\n  );\r\n\r\n  const onPrev = useCallback(\r\n    (event: React.MouseEvent | React.TouchEvent) => {\r\n      event.stopPropagation();\r\n      props.goToPrevVisualization();\r\n      showOverlay();\r\n    },\r\n    [isControlHovered]\r\n  );\r\n\r\n  const onNext = useCallback(\r\n    (event: React.MouseEvent | React.TouchEvent) => {\r\n      event.stopPropagation();\r\n      props.goToNextVisualization();\r\n      showOverlay();\r\n    },\r\n    [isControlHovered]\r\n  );\r\n\r\n  const doNothing = useCallback((event: React.MouseEvent) => {\r\n    event.stopPropagation();\r\n  }, []);\r\n\r\n  const onHover = useCallback(() => setIsControlHovered(true), []);\r\n\r\n  const onHoverStop = useCallback(() => setIsControlHovered(false), []);\r\n\r\n  const { wantsToPlay, isPlaying } = props;\r\n\r\n  return (\r\n    <>\r\n      {wantsToPlay && !isPlaying && <Loading />}\r\n      <div\r\n        id=\"overlay\"\r\n        onTouchStart={recordTouchTimestamp}\r\n        onTouchEnd={onTouchEnd}\r\n        onMouseMove={showOverlay}\r\n        className={classNames({ show: isOverlayShown })}\r\n      >\r\n        <h1\r\n          id=\"title\"\r\n          onClick={goToRepo}\r\n          onTouchEnd={goToRepo}\r\n          onMouseEnter={onHover}\r\n          onMouseLeave={onHoverStop}\r\n        >\r\n          LATE\r\n        </h1>\r\n        <QualitySelect onHover={onHover} onHoverStop={onHoverStop} />\r\n        <div id=\"version\">build {versionInfo.version}</div>\r\n        {\r\n          <div\r\n            onMouseDown={onMouseDown}\r\n            onMouseUp={onMouseUp}\r\n            onTouchEnd={togglePlay}\r\n            onMouseEnter={onHover}\r\n            onMouseLeave={onHoverStop}\r\n            className={classNames({\r\n              play: !wantsToPlay && !isPlaying,\r\n              pause: wantsToPlay && isPlaying\r\n            })}\r\n          />\r\n        }\r\n        <div className=\"navigation\">\r\n          <div\r\n            className=\"arrow-container\"\r\n            onClick={onPrev}\r\n            onTouchStart={onPrev}\r\n            onMouseUp={doNothing}\r\n            onMouseEnter={onHover}\r\n            onMouseLeave={onHoverStop}\r\n          >\r\n            <svg\r\n              className=\"arrow\"\r\n              width=\"60px\"\r\n              height=\"80px\"\r\n              viewBox=\"0 0 50 80\"\r\n            >\r\n              <polyline\r\n                fill=\"none\"\r\n                stroke=\"#FFF\"\r\n                strokeWidth=\"3\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                points=\"45.63,75.8 0.375,38.087 45.63,0.375\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div\r\n            className=\"arrow-container\"\r\n            onClick={onNext}\r\n            onTouchStart={onNext}\r\n            onMouseUp={doNothing}\r\n            onMouseEnter={onHover}\r\n            onMouseLeave={onHoverStop}\r\n          >\r\n            <svg\r\n              className=\"arrow\"\r\n              width=\"60px\"\r\n              height=\"80px\"\r\n              viewBox=\"0 0 50 80\"\r\n            >\r\n              <polyline\r\n                fill=\"none\"\r\n                stroke=\"#FFF\"\r\n                strokeWidth=\"3\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                points=\"0.375,0.375 45.63,38.087 0.375,75.8\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  goToNextVisualization: () => dispatch(Actions.goToNextVisualization()),\r\n  goToPrevVisualization: () => dispatch(Actions.goToPrevVisualization())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Controls);\r\n","import React from 'react';\r\nimport './NoWebAudioApi.scss';\r\n\r\nconst NoWebAudioApi = () => (\r\n  <div id=\"no-web-audio\">\r\n    <p>Your device doesn't fully support the Web Audio API.</p>\r\n    <p>This site should be viewed on a non-mobile or Android device.</p>\r\n  </div>\r\n);\r\n\r\nexport default NoWebAudioApi;\r\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport Analyser from './components/Analyser';\nimport Controls from './components/Controls';\nimport NoWebAudioApi from './components/NoWebAudioApi';\nimport { useStateRef } from './utils/hooks';\n\nconst AUDIO_SERVER_URL =\n  process.env.NODE_ENV === 'production'\n    ? process.env.REACT_APP_AUDIO_SERVER_URL\n    : 'http://localhost:3002';\n\ntype Props = {};\n\nconst App: React.FC<Props> = props => {\n  const [wantsToPlay, setWantsToPlay] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [context, setContext, contextRef] = useStateRef<\n    AudioContext | undefined\n  >(undefined);\n  const [source, setSource] = useState<MediaElementAudioSourceNode>();\n  const [isContextUnavailable, setIsContextUnavailable] = useState(false);\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n\n  // disable if AudioContext is unavailable\n  useEffect(() => {\n    try {\n      new window.AudioContext();\n    } catch (err) {\n      setIsContextUnavailable(true);\n    }\n  }, []);\n\n  // attach audio event listeners\n  useEffect(() => {\n    const audioElement = audioRef.current!;\n\n    const onAudioPlay = () => setIsPlaying(true);\n    const onAudioPause = () => setIsPlaying(false);\n    const onAudioError = console.error;\n\n    audioElement.addEventListener('playing', onAudioPlay);\n    audioElement.addEventListener('pause', onAudioPause);\n    audioElement.addEventListener('error', onAudioError);\n\n    return () => {\n      audioElement.removeEventListener('playing', onAudioPlay);\n      audioElement.removeEventListener('pause', onAudioPause);\n      audioElement.removeEventListener('error', onAudioError);\n    };\n  }, []);\n\n  const initializeAudioContext = useCallback(() => {\n    const audioElement = audioRef.current!;\n    const context = new window.AudioContext();\n    const source = context.createMediaElementSource(audioElement);\n\n    setContext(context);\n    setSource(source);\n  }, [audioRef.current]);\n\n  const togglePlay = useCallback(() => {\n    const audioElement = audioRef.current!;\n\n    if (audioElement.paused) {\n      setWantsToPlay(true);\n      audioElement.play();\n\n      if (!contextRef.current) {\n        initializeAudioContext();\n      }\n    } else {\n      setWantsToPlay(false);\n      audioElement.pause();\n    }\n  }, [audioRef.current]);\n\n  if (isContextUnavailable) {\n    return <NoWebAudioApi />;\n  }\n\n  return (\n    <>\n      <audio\n        ref={audioRef}\n        id=\"audioElement\"\n        src={AUDIO_SERVER_URL}\n        preload={'auto'}\n        crossOrigin=\"anonymous\"\n      />\n\n      {context && source && <Analyser context={context} source={source} />}\n\n      <Controls\n        context={context}\n        wantsToPlay={wantsToPlay}\n        isPlaying={isPlaying}\n        togglePlay={togglePlay}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nexport function useStateRef<S>(\r\n  initialState: S | (() => S)\r\n): [S, React.Dispatch<React.SetStateAction<S>>, React.MutableRefObject<S>] {\r\n  const [state, setState] = useState(initialState);\r\n  const stateRef = useRef(state);\r\n\r\n  useEffect(() => {\r\n    stateRef.current = state;\r\n  }, [state]);\r\n\r\n  return [state, setState, stateRef];\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\nimport App from './App';\r\nimport './reset.scss';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}