{"version":3,"sources":["components/Visualizer/Visualizations/VisualizationHOC.tsx","utils/colors.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","components/Visualizer/Visualizations/Rain/renderer.ts","components/Visualizer/Visualizations/Rain/city/building.ts","components/Visualizer/Visualizations/Rain/city/index.ts","components/Visualizer/Visualizations/Rain/rain/index.ts","components/Visualizer/Visualizations/Rain/home/wall.ts","components/Visualizer/Visualizations/Rain/utils.ts","components/Visualizer/Visualizations/Rain/home/window.ts","components/Visualizer/Visualizations/Rain/home/dresser.ts","components/Visualizer/Visualizations/Rain/home/pictures.ts","components/Visualizer/Visualizations/Rain/home/table.ts","components/Visualizer/Visualizations/Rain/home/clock.ts","components/Visualizer/Visualizations/Rain/home/cat.ts","components/Visualizer/Visualizations/Rain/home/lamp.ts","components/Visualizer/Visualizations/Rain/home/index.ts","components/Visualizer/Visualizations/Rain/index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","wrap","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","defaultProps","data","Uint8Array","lowPassData","options","WrappedComponent","_ref","arguments","length","undefined","rawIntensitiesRef","useRef","lowPassIntensitiesRef","startingTimestampRef","Date","now","totalDifferenceFromRawBaseline","totalDifferenceFromLowBaseline","renderedData","map","rawDataElement","i","Math","abs","lowPassDataElement","smoothing","sum","count","rangeIndex","rawIntensityMax","lowPassIntensitySum","lowPassIntensityCount","lowPassIntensityMax","current","forEach","rawIntensity","lowPassIntensity","currentRawIntensity","recentLowPassAvgIntensity","currentLowPassIntensity","concat","shift","isBeat","a","createElement","intensity","colorTriples","colorTriple","id","randomColorTriple","floor","random","getRandomColors","numColors","areUnique","colors","randomTriple","randomColor","includes","push","getRandomColor","getRandomColorTriple","colorCopy","Object","C_Users_gao_Documents_Code_late_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","reverse","get_get","target","property","receiver","Reflect","get","base","object","prototype","hasOwnProperty","call","getPrototypeOf","_superPropBase","desc","getOwnPropertyDescriptor","value","WINDOW_FRAME_THICKNESS_DIVISOR","Renderer","ctx","classCallCheck","this","canvasWidth","canvasHeight","oneThirdCanvasWidth","oneHalfCanvasHeight","windowFrameThickness","roundedRadius","canvas","width","height","max","save","createClass","key","restore","args","Building","blueprint","x","y","color","lights","lightHeight","randomNumberBetween","lightPadding","lightsPerFloor","buildingXPadding","buildingTopPadding","gapWidth","lightWidth","isOn","fillStyle","fillRect","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","light","err","return","City","_Renderer","_this","possibleConstructorReturn","layers","generateBuildings","inherits","_this2","_loop","layer","gap","building","leftMostBuilding","xOffset","currentLayer","generateLights","render","RAINDROPS_HEIGHTWISE","Raindrop","createdDate","timeDelta","strokeStyle","lineWidth","beginPath","moveTo","lineTo","stroke","Rainfall","raindrops","raindropHeight","raindrop","tick","splice","startingX","Wall","linearGradient","createLinearGradient","addColorStop","defaultCornerRadii","tl","tr","br","bl","roundedRect","radius","quadraticCurveTo","closePath","fill","Window","clearRect","muntinWidth","topLeftX","topRightX","topY","leftX","leftTopY","leftBottomY","rect","Dresser","wasBeat","dresserHandleMidpoint","speakerWidth","speakerHeight","speakerX","speakerY","driverRadius","min","driverCenterX","driverCenterY","arc","PI","dividerWidth","deckX","deckHeight","deckY","deckDetailX","bottomDetailY","knobRadius","knobX","knobY","clip","translate","knobMarkerAngle","knobMarkerStart","sin","cos","knobMarkerEnd","lineCap","dresser","stereo","wooferRadius","wooferCenterY","Pictures","pictures","_assertThisInitialize","assertThisInitialized","_this$pictures$","gradient1","nodes","nodeSize","point1","point2","currentNode","pop","_i","otherNode","sqrt","pow","_this$pictures$2","gradient2","randomAngle","planetX","planetY","randomRadius","_this$pictures$3","gradient3","starX","starY","graph","orbits","stars","FRUIT_COLORS","Table","thickness","tableCornerRadii","bowlCenterX","bowlWidth","bowlHeight","fruits","stemAngle","fruit","_i2","stemStart","stemEnd","bowlCornerRadii","bowlBaseHeight","bowlBaseWidth","bowlDecorationY","leg","top","centerpiece","Clock","clockSize","clockCoords","angle","start","end","hours","getHours","minutes","getMinutes","seconds","getSeconds","rotate","face","hands","Cat","isWagging","prevTailAngle","headRadius","bodyHeight","bodyWidth","createdTimestamp","tailWidth","tailY","lineJoin","rightEar","point","leftEar","head","body","tail","nextTailAngle","tailEnd","Lamp","stemX","stemHeight","lampWidth","shadeTopLeft","shadeTopRight","shadeBottomRight","shadeBottomLeft","lightAngle","deltaX","deltaY","atan2","radiansBetween","lightTriangleAdjacentWidth","tan","lightBottomLeftX","lightBottomRightX","stem","lampshade","Home","wall","window","table","clock","VisualizationHOC","cityCanvasRef","cityRef","useDebouncedResize","cityCanvas","_window","dpi","getContext","city","createCity","innerWidth","innerHeight","devicePixelRatio","rainCanvasRef","rainfallRef","rainCanvas","_window2","rainfall","createRain","homeCanvasRef","homeRef","clockIntervalRef","homeCanvas","_window3","home","clearTimeout","setInterval","createHome","catCanvasRef","catRef","catCanvas","_window4","cat","adoptCat","lampCanvasRef","lampRef","lampCanvas","_window5","lamp","createLamp","useEffect","raindropsToAdd","raindropsAdded","add","react_default","className","ref"],"mappings":"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","file":"static/js/5.54ae6858.chunk.js","sourcesContent":["import React, { useRef } from 'react';\r\nimport { Options } from './index';\r\nimport './Visualization.scss';\r\n\r\nexport type Props = {\r\n  // array of frequency data with values 0-255\r\n  data: Uint8Array;\r\n  lowPassData: Uint8Array;\r\n  options?: Options;\r\n};\r\n\r\nexport type WrappedProps = {\r\n  data: Uint8Array;\r\n  lowPassData: Uint8Array;\r\n  isBeat: boolean;\r\n  intensity: number;\r\n  lowPassIntensity: number;\r\n};\r\n\r\nconst defaultProps: Props = {\r\n  data: new Uint8Array(),\r\n  lowPassData: new Uint8Array(),\r\n  options: {}\r\n};\r\n\r\n// all visualization components should be wrapped with this HOC\r\nexport function wrap(\r\n  WrappedComponent: React.ComponentType<WrappedProps>\r\n): React.ComponentType<Props> {\r\n  return function({ data, lowPassData, options }: Props = defaultProps) {\r\n    const rawIntensitiesRef = useRef<number[]>([]);\r\n    const lowPassIntensitiesRef = useRef<number[]>([]);\r\n    const startingTimestampRef = useRef<number>(Date.now());\r\n\r\n    let totalDifferenceFromRawBaseline = 0;\r\n    let totalDifferenceFromLowBaseline = 0;\r\n\r\n    const renderedData = data.map((rawDataElement, i) => {\r\n      totalDifferenceFromRawBaseline += Math.abs(rawDataElement - 128);\r\n\r\n      const lowPassDataElement = lowPassData[i];\r\n      totalDifferenceFromLowBaseline += Math.abs(lowPassDataElement - 128);\r\n\r\n      if (options == null || !options.smoothing) {\r\n        return rawDataElement;\r\n      } else {\r\n        // smooth out each data value using a range of values around it,\r\n        // the range of this window is the value of options.smoothing\r\n        let sum = 0;\r\n        let count = 0;\r\n\r\n        let rangeIndex = i - options.smoothing;\r\n\r\n        while (rangeIndex < i + options.smoothing) {\r\n          const rawDataAtRangeIndex = data[rangeIndex] || 128;\r\n          sum += rawDataAtRangeIndex;\r\n          count += 1;\r\n          rangeIndex += 1;\r\n        }\r\n\r\n        return sum / count;\r\n      }\r\n    });\r\n\r\n    let rawIntensityMax = 0;\r\n\r\n    let lowPassIntensitySum = 0;\r\n    let lowPassIntensityCount = 0;\r\n    let lowPassIntensityMax = 0;\r\n\r\n    rawIntensitiesRef.current.forEach((rawIntensity, i) => {\r\n      if (rawIntensity > rawIntensityMax) {\r\n        rawIntensityMax = rawIntensity;\r\n      }\r\n\r\n      const lowPassIntensity = lowPassIntensitiesRef.current[i];\r\n      lowPassIntensitySum += lowPassIntensity;\r\n      lowPassIntensityCount += 1;\r\n\r\n      if (lowPassIntensity > lowPassIntensityMax) {\r\n        lowPassIntensityMax = lowPassIntensity;\r\n      }\r\n    });\r\n\r\n    const currentRawIntensity = totalDifferenceFromRawBaseline / data.length;\r\n    const recentLowPassAvgIntensity =\r\n      lowPassIntensitySum / lowPassIntensityCount || 0;\r\n\r\n    const currentLowPassIntensity =\r\n      totalDifferenceFromLowBaseline / lowPassData.length;\r\n\r\n    rawIntensitiesRef.current = rawIntensitiesRef.current.concat(\r\n      currentRawIntensity\r\n    );\r\n    lowPassIntensitiesRef.current = lowPassIntensitiesRef.current.concat(\r\n      currentLowPassIntensity\r\n    );\r\n\r\n    // remove intensities older than 2 seconds\r\n    if (Date.now() - startingTimestampRef.current > 2000) {\r\n      rawIntensitiesRef.current.shift();\r\n      lowPassIntensitiesRef.current.shift();\r\n    }\r\n\r\n    const isBeat = currentLowPassIntensity > recentLowPassAvgIntensity * 1.5;\r\n\r\n    return (\r\n      <WrappedComponent\r\n        data={renderedData}\r\n        lowPassData={lowPassData}\r\n        isBeat={isBeat}\r\n        intensity={currentRawIntensity}\r\n        lowPassIntensity={currentLowPassIntensity}\r\n      />\r\n    );\r\n  };\r\n}\r\n","const colorTriples = [\r\n  ['#0E9AA7', '#F6CD61', '#FE8A71'],\r\n  ['#EE4540', '#801336', '#2D142C'],\r\n  ['#8FB9A8', '#FDFBD4', '#FCD0BA'],\r\n  ['#AC6D83', '#685D79', '#465C7A'],\r\n  ['#F36E38', '#EF4648', '#582841'],\r\n  ['#F1F1F1', '#9BD7D1', '#305D7A'],\r\n  ['#DEA5B6', '#F3CD8C', '#F2E9C2'],\r\n  ['#E27B47', '#EFCA58', '#46B29E'],\r\n  ['#2E7345', '#2E9975', '#2DB3B3'],\r\n  ['#52A3CC', '#7EA1E5', '#AAAAF2'],\r\n  ['#CC5285', '#CC5285', '#F2BCAA'],\r\n  ['#D8E0BB', '#B6CEC7', '#86A3C3']\r\n];\r\n\r\nconst colorTriplesWithIds = colorTriples.map((colorTriple, i) => ({\r\n  id: i,\r\n  colorTriple\r\n}));\r\n\r\nfunction randomColorTriple() {\r\n  return colorTriples[Math.floor(Math.random() * colorTriples.length)];\r\n}\r\n\r\nexport function getRandomColors(numColors: number, areUnique?: boolean): string[] {\r\n  const colors: string[] = [];\r\n\r\n  while (colors.length < numColors) {\r\n    const randomTriple = randomColorTriple();\r\n    const randomColor = randomTriple[Math.floor(Math.random() * randomTriple.length)];\r\n\r\n    if (areUnique && colors.includes(randomColor)) {\r\n      break;\r\n    }\r\n\r\n    colors.push(randomColor);\r\n  }\r\n  return colors;\r\n}\r\n\r\nexport function getRandomColor() {\r\n  return getRandomColors(1)[0];\r\n}\r\n\r\nexport function getRandomColorTriple() {\r\n  const colorCopy = [...randomColorTriple()];\r\n  if (Math.random() <= 0.5) {\r\n    return colorCopy.reverse();\r\n  } else {\r\n    return colorCopy;\r\n  }\r\n}\r\n","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","const WINDOW_FRAME_THICKNESS_DIVISOR = 50;\r\n\r\nexport abstract class Renderer {\r\n  protected canvasWidth: number;\r\n  protected canvasHeight: number;\r\n  protected oneThirdCanvasWidth: number;\r\n  protected oneHalfCanvasHeight: number;\r\n  protected windowFrameThickness: number;\r\n  protected roundedRadius: number;\r\n\r\n  constructor(protected ctx: CanvasRenderingContext2D) {\r\n    this.canvasWidth = ctx.canvas.width;\r\n    this.canvasHeight = ctx.canvas.height;\r\n    this.oneThirdCanvasWidth = this.canvasWidth / 3;\r\n    this.oneHalfCanvasHeight = this.canvasHeight / 2;\r\n    this.windowFrameThickness = Math.floor(\r\n      Math.max(this.canvasWidth, this.canvasHeight) /\r\n        WINDOW_FRAME_THICKNESS_DIVISOR\r\n    );\r\n    this.roundedRadius = Math.floor(this.windowFrameThickness / 3);\r\n    ctx.save();\r\n  }\r\n\r\n  // for initial paint - subclasses should call super.render()\r\n  render(): void {\r\n    this.ctx.restore();\r\n  }\r\n\r\n  // for animation\r\n  tick(args: any): void {}\r\n}\r\n","import { randomNumberBetween } from '../../../../../utils';\r\n\r\nconst LIGHT_COLOR = 'rgb(255, 255, 255)';\r\nconst MIN_LIGHT_HEIGHT_RATIO = 0.02;\r\nconst MAX_LIGHT_HEIGHT_RATIO = 0.03;\r\nconst MIN_LIGHTS_PER_FLOOR = 2;\r\nconst MAX_LIGHTS_PER_FLOOR = 6;\r\nconst MIN_GAP_WIDTH_RATIO = 0.01;\r\nconst MAX_GAP_WIDTH_RATIO = 0.05;\r\nconst MIN_LIGHT_PADDING_RATIO = 0.01;\r\nconst MAX_LIGHT_PADDING_RATIO = 0.03;\r\nconst MIN_BUILDING_X_PADDING_RATIO = 0.05;\r\nconst MAX_BUILDING_X_PADDING_RATIO = 0.1;\r\nconst MIN_BUILDING_TOP_PADDING_RATIO = 0.025;\r\nconst MAX_BUILDING_TOP_PADDING_RATIO = 0.1;\r\n\r\nexport type BuildingBlueprint = {\r\n  ctx: CanvasRenderingContext2D;\r\n  canvasHeight: number;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  color: string;\r\n};\r\n\r\ntype Light = {\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  isOn: boolean;\r\n};\r\n\r\nexport class Building {\r\n  private ctx: CanvasRenderingContext2D;\r\n  private canvasHeight: number;\r\n\r\n  public x: number;\r\n  public y: number;\r\n  public width: number;\r\n  public height: number;\r\n  public color: string;\r\n  public lights: Light[] = [];\r\n\r\n  constructor(blueprint: BuildingBlueprint) {\r\n    this.ctx = blueprint.ctx;\r\n    this.canvasHeight = blueprint.canvasHeight;\r\n    this.x = blueprint.x;\r\n    this.y = blueprint.y;\r\n    this.width = blueprint.width;\r\n    this.height = blueprint.height;\r\n    this.color = blueprint.color;\r\n  }\r\n\r\n  // called externally so that buildings may be\r\n  // repositioned before light positions are determined\r\n  generateLights() {\r\n    const { canvasHeight, width, height } = this;\r\n\r\n    const lightHeight =\r\n      randomNumberBetween(MIN_LIGHT_HEIGHT_RATIO, MAX_LIGHT_HEIGHT_RATIO) *\r\n      height;\r\n\r\n    const lightPadding =\r\n      randomNumberBetween(MIN_LIGHT_PADDING_RATIO, MAX_LIGHT_PADDING_RATIO) *\r\n      height;\r\n\r\n    const lightsPerFloor = randomNumberBetween(\r\n      MIN_LIGHTS_PER_FLOOR,\r\n      MAX_LIGHTS_PER_FLOOR\r\n    );\r\n\r\n    const buildingXPadding =\r\n      randomNumberBetween(\r\n        MIN_BUILDING_X_PADDING_RATIO,\r\n        MAX_BUILDING_X_PADDING_RATIO\r\n      ) * width;\r\n\r\n    const buildingTopPadding =\r\n      randomNumberBetween(\r\n        MIN_BUILDING_TOP_PADDING_RATIO,\r\n        MAX_BUILDING_TOP_PADDING_RATIO\r\n      ) * height;\r\n\r\n    const gapWidth =\r\n      randomNumberBetween(MIN_GAP_WIDTH_RATIO, MAX_GAP_WIDTH_RATIO) * width;\r\n\r\n    const lightWidth =\r\n      (this.width - buildingXPadding * 2 - gapWidth * (lightsPerFloor - 1)) /\r\n      lightsPerFloor;\r\n\r\n    const lights: Light[] = [];\r\n    let x = this.x + buildingXPadding;\r\n    let y = this.y + buildingTopPadding;\r\n\r\n    while (y < canvasHeight * 0.98) {\r\n      // each iteration generates a row of lights for the floor\r\n      if (x >= this.x + this.width - buildingXPadding) {\r\n        // start a new floor\r\n        x = this.x + buildingXPadding;\r\n        y += lightHeight + lightPadding;\r\n      } else {\r\n        lights.push({\r\n          x,\r\n          y,\r\n          width: lightWidth,\r\n          height: lightHeight,\r\n          isOn: Math.random() > 0.4\r\n        });\r\n\r\n        x += lightWidth + gapWidth;\r\n      }\r\n    }\r\n\r\n    this.lights = lights;\r\n  }\r\n\r\n  render() {\r\n    const { ctx, x, y, width, height, color } = this;\r\n    ctx.save();\r\n\r\n    // render building\r\n    ctx.fillStyle = color;\r\n    ctx.fillRect(x, y, width, height);\r\n\r\n    // render lights\r\n    ctx.fillStyle = LIGHT_COLOR;\r\n    for (const light of this.lights) {\r\n      if (light.isOn) {\r\n        ctx.fillRect(light.x, light.y, light.width, light.height);\r\n      }\r\n    }\r\n\r\n    // garbage collect\r\n    this.lights = [];\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { Building } from './building';\r\nimport { randomNumberBetween } from '../../../../../utils';\r\nimport { getRandomColor } from '../../../../../utils/colors';\r\n\r\nconst LAYER_OVERLAY_COLOR = 'rgba(65, 35, 66, 0.6)';\r\n\r\nconst MAX_BUILDING_HEIGHT_RATIO = 0.95;\r\nconst MIN_BUILDING_HEIGHT_RATIO = 0.3;\r\nconst MIN_BUILDING_WIDTH_RATIO = 0.08;\r\nconst MAX_BUILDING_WIDTH_RATIO = 0.15;\r\nconst MIN_BUILDING_GAP_RATIO = 0.02;\r\nconst MAX_BUILDING_GAP_RATIO = 0.05;\r\nconst NUMBER_OF_LAYERS = 3;\r\n\r\nexport class City extends Renderer {\r\n  private layers: Building[][] = [];\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n    this.generateBuildings();\r\n  }\r\n\r\n  generateBuildings() {\r\n    const { ctx, canvasWidth, canvasHeight } = this;\r\n\r\n    for (let i = 0; i < NUMBER_OF_LAYERS; i++) {\r\n      // buildings per layer\r\n      const layer: Building[] = [];\r\n      let x = canvasWidth / 3;\r\n\r\n      while (x < (canvasWidth * 2) / 3) {\r\n        const width =\r\n          randomNumberBetween(\r\n            MIN_BUILDING_WIDTH_RATIO,\r\n            MAX_BUILDING_WIDTH_RATIO,\r\n            2\r\n          ) * canvasWidth;\r\n\r\n        const height =\r\n          randomNumberBetween(\r\n            MIN_BUILDING_HEIGHT_RATIO,\r\n            MAX_BUILDING_HEIGHT_RATIO,\r\n            2\r\n          ) * canvasHeight;\r\n\r\n        const gap =\r\n          randomNumberBetween(MIN_BUILDING_GAP_RATIO, MAX_BUILDING_GAP_RATIO) *\r\n          canvasWidth;\r\n\r\n        const building = new Building({\r\n          y: canvasHeight - height,\r\n          color: getRandomColor(),\r\n          ctx,\r\n          canvasHeight,\r\n          x,\r\n          width,\r\n          height\r\n        });\r\n\r\n        layer.push(building);\r\n\r\n        x += width + gap;\r\n      }\r\n\r\n      // offset the buildings so the leftmost starts off screen\r\n      const leftMostBuilding = layer[0];\r\n\r\n      const xOffset = randomNumberBetween(\r\n        leftMostBuilding.width * 0.25,\r\n        leftMostBuilding.width * 0.75\r\n      );\r\n\r\n      layer.forEach(building => (building.x -= xOffset));\r\n      this.layers.push(layer);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const { ctx, canvasWidth, canvasHeight, layers } = this;\r\n\r\n    for (let i = 0; i < layers.length; i++) {\r\n      const currentLayer = layers[i];\r\n\r\n      if (i === layers.length - 1) {\r\n        currentLayer.forEach(building => building.generateLights());\r\n      }\r\n\r\n      for (const building of currentLayer) {\r\n        building.render();\r\n      }\r\n\r\n      // fade each layer out a bit\r\n      ctx.fillStyle = LAYER_OVERLAY_COLOR;\r\n      ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n    }\r\n\r\n    // garbage collect\r\n    this.layers = [];\r\n  }\r\n}\r\n","const TIME_TO_FALL = 300;\r\nconst RAINDROPS_HEIGHTWISE = 10;\r\nconst RAINDROP_COLOR = '#788';\r\n\r\nclass Raindrop {\r\n  private createdDate: number;\r\n  public y = 0;\r\n\r\n  constructor(\r\n    private ctx: CanvasRenderingContext2D,\r\n    private canvasHeight: number,\r\n    public x: number,\r\n    public height: number\r\n  ) {\r\n    this.createdDate = Date.now();\r\n  }\r\n\r\n  tick(now: number) {\r\n    const timeDelta = now - this.createdDate;\r\n    this.y = Math.floor(\r\n      (timeDelta / TIME_TO_FALL) * this.canvasHeight * 0.75 +\r\n        this.canvasHeight * 0.25\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { ctx, x, y, height } = this;\r\n\r\n    ctx.strokeStyle = RAINDROP_COLOR;\r\n    ctx.lineWidth = 1;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y);\r\n    ctx.lineTo(x, y + height);\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nexport class Rainfall {\r\n  private raindrops: Raindrop[] = [];\r\n  private raindropHeight: number;\r\n  public canvasWidth: number;\r\n  public canvasHeight: number;\r\n\r\n  constructor(private ctx: CanvasRenderingContext2D) {\r\n    this.canvasWidth = ctx.canvas.width;\r\n    this.canvasHeight = ctx.canvas.height;\r\n    this.raindropHeight = Math.floor(\r\n      (this.canvasHeight * 0.5) / RAINDROPS_HEIGHTWISE\r\n    );\r\n  }\r\n\r\n  tick() {\r\n    const { raindrops, canvasHeight } = this;\r\n\r\n    const now = Date.now();\r\n\r\n    for (let i = raindrops.length - 1; i >= 0; i--) {\r\n      const raindrop = raindrops[i];\r\n      raindrop.tick(now);\r\n\r\n      // remove raindrops that have fallen out of view\r\n      if (raindrop.y >= canvasHeight * 0.75) {\r\n        raindrops.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  add() {\r\n    const { ctx, canvasWidth, canvasHeight, raindrops, raindropHeight } = this;\r\n\r\n    const startingX = Math.random() * (canvasWidth / 3 - 1) + canvasWidth / 3;\r\n\r\n    raindrops.push(new Raindrop(ctx, canvasHeight, startingX, raindropHeight));\r\n  }\r\n\r\n  render() {\r\n    this.raindrops.forEach(raindrop => raindrop.render());\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst WALL_START_COLOR = '#181623';\r\nconst WALL_END_COLOR = '#111019';\r\n\r\nexport class Wall extends Renderer {\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const { ctx, canvasWidth, canvasHeight } = this;\r\n\r\n    const linearGradient = this.ctx.createLinearGradient(0, 0, 0, canvasHeight);\r\n    linearGradient.addColorStop(0, WALL_START_COLOR);\r\n    linearGradient.addColorStop(1, WALL_END_COLOR);\r\n    ctx.fillStyle = linearGradient;\r\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n  }\r\n}\r\n","export type CornerRadii = {\r\n  tl: number;\r\n  tr: number;\r\n  br: number;\r\n  bl: number;\r\n};\r\n\r\nconst defaultCornerRadii = {\r\n  tl: 0,\r\n  tr: 0,\r\n  br: 0,\r\n  bl: 0\r\n};\r\n\r\nexport function roundedRect(\r\n  ctx: CanvasRenderingContext2D,\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number,\r\n  radius: CornerRadii = defaultCornerRadii,\r\n  stroke = false\r\n) {\r\n  ctx.beginPath();\r\n\r\n  ctx.moveTo(x + radius.tl, y);\r\n  ctx.lineTo(x + width - radius.tr, y);\r\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n\r\n  ctx.lineTo(x + width, y + height - radius.br);\r\n  ctx.quadraticCurveTo(\r\n    x + width,\r\n    y + height,\r\n    x + width - radius.br,\r\n    y + height\r\n  );\r\n\r\n  ctx.lineTo(x + radius.bl, y + height);\r\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n\r\n  ctx.lineTo(x, y + radius.tl);\r\n  ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n\r\n  ctx.closePath();\r\n  ctx.fill();\r\n  stroke && ctx.stroke();\r\n}\r\n\r\nexport function distanceBetween(\r\n  point1: { x: number; y: number },\r\n  point2: { x: number; y: number }\r\n) {\r\n  return Math.sqrt(\r\n    Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2)\r\n  );\r\n}\r\n\r\n// where 0 degrees corresponds to positive direction of x-axis\r\nexport function radiansBetween(\r\n  point1: { x: number; y: number },\r\n  point2: { x: number; y: number }\r\n) {\r\n  const deltaX = point2.x - point1.x;\r\n  const deltaY = point2.y - point1.y;\r\n  return Math.atan2(deltaY, deltaX);\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { roundedRect, CornerRadii } from '../utils';\r\n\r\nconst WINDOW_FRAME_COLOR = '#3D1A1E';\r\nconst WINDOW_DECORATION_COLOR = '#682634';\r\n\r\nexport class Window extends Renderer {\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const {\r\n      ctx,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight,\r\n      windowFrameThickness\r\n    } = this;\r\n\r\n    ctx.fillStyle = WINDOW_FRAME_COLOR;\r\n\r\n    // window trim\r\n    ctx.fillRect(\r\n      oneThirdCanvasWidth - windowFrameThickness,\r\n      oneHalfCanvasHeight / 2 - windowFrameThickness,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    // make a hole\r\n    ctx.clearRect(\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight / 2,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight\r\n    );\r\n\r\n    // window muntin\r\n    const muntinWidth = Math.floor(windowFrameThickness / 2);\r\n\r\n    const topLeftX = (oneThirdCanvasWidth * 4) / 3 - (muntinWidth * 2) / 3;\r\n    const topRightX = (oneThirdCanvasWidth * 5) / 3 - muntinWidth / 3;\r\n    const topY = oneHalfCanvasHeight / 2 - windowFrameThickness;\r\n\r\n    const leftX = oneThirdCanvasWidth - windowFrameThickness;\r\n    const leftTopY = (oneHalfCanvasHeight * 5) / 6 - (muntinWidth * 2) / 3;\r\n    const leftBottomY = (oneHalfCanvasHeight * 7) / 6 - muntinWidth / 3;\r\n\r\n    ctx.fillRect(\r\n      topLeftX,\r\n      topY,\r\n      muntinWidth,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    ctx.fillRect(\r\n      topRightX,\r\n      topY,\r\n      muntinWidth,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    ctx.fillRect(\r\n      leftX,\r\n      leftTopY,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      muntinWidth\r\n    );\r\n\r\n    ctx.fillRect(\r\n      leftX,\r\n      leftBottomY,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      muntinWidth\r\n    );\r\n\r\n    ctx.fillStyle = WINDOW_DECORATION_COLOR;\r\n\r\n    // window head\r\n    ctx.fillRect(\r\n      oneThirdCanvasWidth - windowFrameThickness * 2,\r\n      oneHalfCanvasHeight / 2 - windowFrameThickness * 2,\r\n      oneThirdCanvasWidth + windowFrameThickness * 4,\r\n      windowFrameThickness - 1\r\n    );\r\n\r\n    // window stool\r\n    const windowSillCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: 0,\r\n      bl: this.roundedRadius,\r\n      br: this.roundedRadius\r\n    };\r\n\r\n    roundedRect(\r\n      ctx,\r\n      oneThirdCanvasWidth - windowFrameThickness * 2,\r\n      (oneHalfCanvasHeight * 3) / 2 + windowFrameThickness + 1,\r\n      oneThirdCanvasWidth + windowFrameThickness * 4,\r\n      windowFrameThickness,\r\n      windowSillCornerRadii\r\n    );\r\n\r\n    // trim decoration\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = WINDOW_DECORATION_COLOR;\r\n    ctx.rect(\r\n      oneThirdCanvasWidth - (windowFrameThickness * 2) / 3,\r\n      oneHalfCanvasHeight / 2 - (windowFrameThickness * 2) / 3,\r\n      oneThirdCanvasWidth + (windowFrameThickness * 4) / 3,\r\n      oneHalfCanvasHeight + (windowFrameThickness * 4) / 3\r\n    );\r\n    ctx.stroke();\r\n\r\n    ctx.rect(\r\n      oneThirdCanvasWidth - (windowFrameThickness * 5) / 9,\r\n      oneHalfCanvasHeight / 2 - (windowFrameThickness * 5) / 9,\r\n      oneThirdCanvasWidth + (windowFrameThickness * 10) / 9,\r\n      oneHalfCanvasHeight + (windowFrameThickness * 10) / 9\r\n    );\r\n    ctx.stroke();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst WOOD_DECORATION_COLOR = '#091c1b';\r\nconst STEREO_COLOR = '#222';\r\nconst STEREO_DETAIL_COLOR = '#444';\r\nconst STEREO_DARK_COLOR = '#111';\r\n\r\nexport class Dresser extends Renderer {\r\n  public wasBeat?: boolean;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  dresser() {\r\n    const { ctx, canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    const x = (canvasWidth * 2) / 3 + windowFrameThickness * 5;\r\n    const y = (canvasHeight * 2) / 3;\r\n\r\n    // dresser body\r\n    ctx.fillStyle = WOOD_COLOR;\r\n    ctx.fillRect(x, y, canvasWidth, canvasHeight);\r\n\r\n    // dresser detail rectangle\r\n    ctx.strokeStyle = WOOD_DECORATION_COLOR;\r\n    ctx.lineWidth = 3;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      x + windowFrameThickness,\r\n      y + windowFrameThickness,\r\n      canvasWidth,\r\n      canvasHeight\r\n    );\r\n    ctx.stroke();\r\n\r\n    // dresser top handle\r\n    const dresserWidth = canvasWidth - (x + windowFrameThickness);\r\n    const dresserHandleMidpoint =\r\n      x + windowFrameThickness + (dresserWidth * 3) / 5;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(dresserHandleMidpoint, y + windowFrameThickness * 2.5);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 2.5);\r\n    ctx.lineWidth = (windowFrameThickness * 2) / 3;\r\n    ctx.stroke();\r\n\r\n    // dresser horizontal detail line\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + windowFrameThickness, y + windowFrameThickness * 6);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 6);\r\n    ctx.lineWidth = 2;\r\n    ctx.stroke();\r\n\r\n    // dresser bottom handle\r\n    ctx.beginPath();\r\n    ctx.moveTo(dresserHandleMidpoint, y + windowFrameThickness * 7.5);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 7.5);\r\n    ctx.lineWidth = (windowFrameThickness * 2) / 3;\r\n    ctx.stroke();\r\n  }\r\n\r\n  stereo() {\r\n    const { ctx, canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    const dresserX = (canvasWidth * 2) / 3 + windowFrameThickness * 5;\r\n    const dresserY = (canvasHeight * 2) / 3;\r\n\r\n    // speaker body\r\n    const speakerWidth = windowFrameThickness * 3.5;\r\n    const speakerHeight = canvasHeight * 0.2;\r\n    const speakerX = dresserX + windowFrameThickness * 4;\r\n    const speakerY = dresserY - speakerHeight;\r\n\r\n    ctx.fillStyle = STEREO_COLOR;\r\n    ctx.fillRect(speakerX, speakerY, speakerWidth, speakerHeight);\r\n\r\n    // mid driver\r\n    const driverRadius = Math.min(speakerWidth, speakerHeight) / 8;\r\n    const driverCenterX = speakerX + speakerWidth / 2;\r\n    const driverCenterY = speakerY + driverRadius * 2;\r\n\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(driverCenterX, driverCenterY, driverRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // dividers\r\n    const dividerWidth = windowFrameThickness / 10;\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n\r\n    ctx.fillRect(\r\n      speakerX - dividerWidth,\r\n      speakerY,\r\n      dividerWidth,\r\n      speakerHeight\r\n    );\r\n\r\n    ctx.fillRect(\r\n      speakerX + speakerWidth,\r\n      speakerY,\r\n      dividerWidth,\r\n      speakerHeight\r\n    );\r\n\r\n    // deck\r\n    const deckX = speakerX + speakerWidth + dividerWidth;\r\n    const deckHeight = speakerHeight * 0.8;\r\n    const deckY = speakerY + speakerHeight - deckHeight;\r\n\r\n    ctx.fillStyle = STEREO_COLOR;\r\n    ctx.fillRect(deckX, deckY, canvasWidth, deckHeight);\r\n\r\n    const deckDetailX = deckX + windowFrameThickness / 2;\r\n\r\n    ctx.fillStyle = STEREO_DETAIL_COLOR;\r\n    ctx.strokeStyle = STEREO_DARK_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 8;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      deckDetailX,\r\n      deckY + windowFrameThickness * 1.5,\r\n      canvasWidth,\r\n      deckHeight * 0.25\r\n    );\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n    ctx.fillRect(\r\n      deckDetailX,\r\n      deckY + windowFrameThickness,\r\n      canvasWidth,\r\n      windowFrameThickness / 4\r\n    );\r\n\r\n    const bottomDetailY = deckY + deckHeight - windowFrameThickness * 0.8;\r\n    ctx.fillRect(\r\n      deckX + windowFrameThickness * 2,\r\n      bottomDetailY,\r\n      canvasWidth,\r\n      windowFrameThickness / 4\r\n    );\r\n\r\n    ctx.fillStyle = STEREO_DETAIL_COLOR;\r\n    const knobRadius = windowFrameThickness / 2;\r\n    const knobX = deckX + windowFrameThickness;\r\n    const knobY = bottomDetailY + windowFrameThickness / 8;\r\n    ctx.beginPath();\r\n    ctx.arc(knobX, knobY, knobRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.clip();\r\n    ctx.save();\r\n\r\n    ctx.translate(knobX, knobY);\r\n    const knobMarkerAngle = Math.PI * 0.75;\r\n    const knobMarkerStart = {\r\n      x: Math.sin(knobMarkerAngle) * (knobRadius - windowFrameThickness / 4),\r\n      y: Math.cos(knobMarkerAngle) * (knobRadius - windowFrameThickness / 4)\r\n    };\r\n    const knobMarkerEnd = {\r\n      x: Math.sin(knobMarkerAngle) * knobRadius * 2,\r\n      y: Math.cos(knobMarkerAngle) * knobRadius * 2\r\n    };\r\n    ctx.lineWidth = windowFrameThickness / 8;\r\n    ctx.lineCap = 'round';\r\n    ctx.beginPath();\r\n    ctx.moveTo(knobMarkerStart.x, knobMarkerStart.y);\r\n    ctx.lineTo(knobMarkerEnd.x, knobMarkerEnd.y);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.dresser();\r\n    this.stereo();\r\n    this.tick();\r\n  }\r\n\r\n  tick(isBeat = false) {\r\n    if (this.wasBeat === isBeat) {\r\n      return;\r\n    }\r\n\r\n    this.wasBeat = isBeat;\r\n\r\n    const { ctx, canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    const dresserX = (canvasWidth * 2) / 3 + windowFrameThickness * 5;\r\n    const dresserY = (canvasHeight * 2) / 3;\r\n\r\n    // speaker body\r\n    const speakerWidth = windowFrameThickness * 3.5;\r\n    const speakerHeight = canvasHeight * 0.2;\r\n    const speakerX = dresserX + windowFrameThickness * 4;\r\n    const speakerY = dresserY - speakerHeight;\r\n\r\n    // mid driver\r\n    const driverRadius = Math.min(speakerWidth, speakerHeight) / 8;\r\n    const driverCenterX = speakerX + speakerWidth / 2;\r\n\r\n    // speaker woofer\r\n    const wooferRadius = Math.min(speakerWidth, speakerHeight) / 2.5;\r\n    const wooferCenterY = Math.max(\r\n      speakerY + wooferRadius + driverRadius * 4,\r\n      speakerY + speakerHeight - (wooferRadius + driverRadius * 2)\r\n    );\r\n\r\n    ctx.strokeStyle = STEREO_DETAIL_COLOR;\r\n    ctx.fillStyle = STEREO_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 8;\r\n    ctx.beginPath();\r\n    ctx.arc(driverCenterX, wooferCenterY, wooferRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      driverCenterX,\r\n      wooferCenterY,\r\n      isBeat ? wooferRadius * 0.63 : wooferRadius * 0.6,\r\n      0,\r\n      Math.PI * 2\r\n    );\r\n    ctx.fill();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { distanceBetween } from '../utils';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst PICUTRE_NODE_COUNT = 10;\r\nconst PICTURE_STAR_COUNT = 30;\r\n\r\ntype Picture = {\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\nexport class Pictures extends Renderer {\r\n  pictures: Picture[] = [];\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    const { oneThirdCanvasWidth, windowFrameThickness } = this;\r\n\r\n    // X & Y coords and dimensions for each picture\r\n    this.pictures.push({\r\n      x: (oneThirdCanvasWidth * 3) / 4 - windowFrameThickness * 4,\r\n      y: -windowFrameThickness,\r\n      width: windowFrameThickness * 4,\r\n      height: windowFrameThickness * 5\r\n    });\r\n\r\n    this.pictures.push({\r\n      x: this.pictures[0].x - windowFrameThickness * 7,\r\n      y: windowFrameThickness * 2,\r\n      width: windowFrameThickness * 5,\r\n      height: windowFrameThickness * 4\r\n    });\r\n\r\n    this.pictures.push({\r\n      x: this.pictures[1].x + windowFrameThickness * 2,\r\n      y:\r\n        this.pictures[1].y +\r\n        this.pictures[1].height +\r\n        windowFrameThickness * 1.5,\r\n      width: windowFrameThickness * 6,\r\n      height: windowFrameThickness * 8\r\n    });\r\n  }\r\n\r\n  graph() {\r\n    const { ctx, windowFrameThickness } = this;\r\n    const { x, y, width, height } = this.pictures[0];\r\n\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.clip();\r\n\r\n    const gradient1 = ctx.createLinearGradient(x, y, x, y + height);\r\n    gradient1.addColorStop(0, '#24131f');\r\n    gradient1.addColorStop(1, '#051b1f');\r\n    ctx.fillStyle = gradient1;\r\n    ctx.fill();\r\n\r\n    const nodes: Array<{ x: number; y: number }> = [];\r\n    const nodeSize = windowFrameThickness / 6;\r\n\r\n    for (let i = 0; i < PICUTRE_NODE_COUNT; i++) {\r\n      nodes.push({\r\n        x: Math.floor(Math.random() * width + x),\r\n        y: Math.floor(Math.random() * height + y)\r\n      });\r\n    }\r\n\r\n    const nodeColor = '#703c3a';\r\n    ctx.fillStyle = nodeColor;\r\n    ctx.strokeStyle = nodeColor;\r\n    ctx.lineWidth = 1;\r\n\r\n    while (nodes.length) {\r\n      const currentNode = nodes.pop()!;\r\n      ctx.beginPath();\r\n      ctx.arc(currentNode.x, currentNode.y, nodeSize / 2, 0, Math.PI * 2);\r\n      ctx.fill();\r\n\r\n      for (const otherNode of nodes) {\r\n        if (distanceBetween(currentNode, otherNode) < height / 4) {\r\n          ctx.beginPath();\r\n          ctx.moveTo(currentNode.x, currentNode.y);\r\n          ctx.lineTo(otherNode.x, otherNode.y);\r\n          ctx.stroke();\r\n        }\r\n      }\r\n    }\r\n\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 1.5;\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  orbits() {\r\n    const { ctx, windowFrameThickness } = this;\r\n    const { x, y, width, height } = this.pictures[1];\r\n\r\n    ctx.save();\r\n\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.clip();\r\n\r\n    const gradient2 = ctx.createLinearGradient(x, y, x, y + height);\r\n    gradient2.addColorStop(0, '#556e53');\r\n    gradient2.addColorStop(1, '#29435c');\r\n    ctx.fillStyle = gradient2;\r\n    ctx.fill();\r\n\r\n    // sun\r\n    const color = '#879591';\r\n    ctx.fillStyle = color;\r\n    ctx.strokeStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(x + width / 2, y + height / 2, height / 14, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // orbits\r\n    for (\r\n      let radius = Math.floor(height / 6);\r\n      radius <= height / 2;\r\n      radius += windowFrameThickness / 4\r\n    ) {\r\n      ctx.beginPath();\r\n      ctx.arc(x + width / 2, y + height / 2, radius, 0, Math.PI * 2);\r\n      ctx.stroke();\r\n\r\n      const randomAngle = Math.random() * Math.PI * 2;\r\n      const planetX = x + width / 2 + Math.cos(randomAngle) * radius;\r\n      const planetY = y + height / 2 + Math.sin(randomAngle) * radius;\r\n      const randomRadius = Math.random() * (width / 64) + width / 192;\r\n      ctx.beginPath();\r\n      ctx.arc(planetX, planetY, randomRadius, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = '#152a38';\r\n    ctx.lineWidth = windowFrameThickness / 1.2;\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  stars() {\r\n    const { ctx, windowFrameThickness } = this;\r\n    const { x, y, width, height } = this.pictures[2];\r\n\r\n    ctx.save();\r\n\r\n    // background\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.clip();\r\n\r\n    const gradient3 = ctx.createLinearGradient(x, y, x, y + height);\r\n    gradient3.addColorStop(0, '#09325E');\r\n    gradient3.addColorStop(0.75, '#2A2A47');\r\n    ctx.fillStyle = gradient3;\r\n    ctx.fill();\r\n\r\n    // sky\r\n    ctx.fillStyle = '#F5E7F8';\r\n\r\n    for (let i = 0; i < PICTURE_STAR_COUNT; i++) {\r\n      const starX = Math.floor(Math.random() * width + x);\r\n      const starY = Math.floor(Math.random() * height + y);\r\n      const radius = Math.floor(Math.random() * 2 + 1);\r\n      ctx.beginPath();\r\n      ctx.arc(starX, starY, radius, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = '#0D0B21';\r\n    ctx.lineWidth = windowFrameThickness / 1.5;\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.graph();\r\n    this.orbits();\r\n    this.stars();\r\n\r\n    this.pictures = [];\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { roundedRect, CornerRadii } from '../utils';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst TABLE_DECORATION_COLOR = '#06151A';\r\nconst BOWL_COLOR = '#3e3e3e';\r\nconst BOWL_BASE_COLOR = '#1e1e1e';\r\nconst FRUIT_COLORS = ['#564837', '#713C3A'];\r\nconst FRUIT_STEM_COLOR = '#04070F';\r\n\r\nexport class Table extends Renderer {\r\n  y: number;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    this.y = this.canvasHeight * 0.7;\r\n  }\r\n\r\n  top() {\r\n    const {\r\n      ctx,\r\n      y,\r\n      windowFrameThickness,\r\n      oneThirdCanvasWidth,\r\n      roundedRadius\r\n    } = this;\r\n\r\n    const width = oneThirdCanvasWidth * 0.7;\r\n    const thickness = windowFrameThickness * 1.35;\r\n\r\n    const tableCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: roundedRadius,\r\n      br: 0,\r\n      bl: 0\r\n    };\r\n\r\n    ctx.fillStyle = WOOD_COLOR;\r\n    roundedRect(ctx, 0, y, width, thickness, tableCornerRadii);\r\n\r\n    ctx.fillStyle = TABLE_DECORATION_COLOR;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      0,\r\n      y + thickness - windowFrameThickness / 4,\r\n      width,\r\n      windowFrameThickness / 4\r\n    );\r\n    ctx.fill();\r\n  }\r\n\r\n  leg() {\r\n    const {\r\n      ctx,\r\n      y,\r\n      windowFrameThickness,\r\n      canvasHeight,\r\n      oneThirdCanvasWidth\r\n    } = this;\r\n\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n    ctx.lineWidth = windowFrameThickness * 1.5;\r\n    ctx.beginPath();\r\n    ctx.moveTo(oneThirdCanvasWidth * 0.5, y);\r\n    ctx.lineTo(oneThirdCanvasWidth * 0.5, canvasHeight);\r\n    ctx.stroke();\r\n  }\r\n\r\n  centerpiece() {\r\n    const {\r\n      ctx,\r\n      y,\r\n      windowFrameThickness,\r\n      canvasWidth,\r\n      oneThirdCanvasWidth\r\n    } = this;\r\n\r\n    const bowlCenterX = oneThirdCanvasWidth * 0.25;\r\n    const bowlWidth = oneThirdCanvasWidth * 0.3;\r\n    const bowlHeight = windowFrameThickness * 2;\r\n\r\n    // fruit\r\n    const fruits = [\r\n      {\r\n        xOffset: (bowlWidth - bowlWidth * 0.4) / 4,\r\n        y: y - bowlHeight,\r\n        radius: bowlWidth * 0.2,\r\n        color: FRUIT_COLORS[0],\r\n        stemAngle: Math.PI * 0.9\r\n      },\r\n      {\r\n        xOffset: -(bowlWidth - bowlWidth * 0.4) / 4,\r\n        y: y - bowlHeight + bowlHeight / 8,\r\n        radius: bowlWidth * 0.2,\r\n        color: FRUIT_COLORS[1],\r\n        stemAngle: Math.PI * 1.1\r\n      }\r\n    ];\r\n\r\n    for (const fruit of fruits) {\r\n      ctx.fillStyle = fruit.color;\r\n      ctx.beginPath();\r\n      ctx.arc(\r\n        bowlCenterX + fruit.xOffset,\r\n        fruit.y,\r\n        fruit.radius,\r\n        0,\r\n        Math.PI * 2\r\n      );\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = FRUIT_STEM_COLOR;\r\n    ctx.lineCap = 'round';\r\n    ctx.lineWidth = 2;\r\n\r\n    for (const fruit of fruits) {\r\n      ctx.save();\r\n      ctx.translate(bowlCenterX + fruit.xOffset, fruit.y);\r\n      const stemStart = {\r\n        x: Math.sin(fruit.stemAngle) * fruits[1].radius * 0.9,\r\n        y: Math.cos(fruit.stemAngle) * fruits[1].radius * 0.9\r\n      };\r\n      const stemEnd = {\r\n        x: Math.sin(fruit.stemAngle) * fruits[1].radius * 1.1,\r\n        y: Math.cos(fruit.stemAngle) * fruits[1].radius * 1.1\r\n      };\r\n      ctx.beginPath();\r\n      ctx.moveTo(stemStart.x, stemStart.y);\r\n      ctx.lineTo(stemEnd.x, stemEnd.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    }\r\n\r\n    // bowl\r\n    const bowlCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: 0,\r\n      br: oneThirdCanvasWidth * 0.1,\r\n      bl: oneThirdCanvasWidth * 0.1\r\n    };\r\n\r\n    const bowlBaseHeight = bowlHeight / 8;\r\n    const bowlBaseWidth = bowlWidth * 0.5;\r\n\r\n    ctx.fillStyle = BOWL_BASE_COLOR;\r\n    ctx.fillRect(\r\n      bowlCenterX - bowlBaseWidth / 2,\r\n      y - bowlHeight - bowlBaseHeight,\r\n      bowlBaseWidth,\r\n      bowlHeight + bowlBaseHeight\r\n    );\r\n\r\n    ctx.fillStyle = BOWL_COLOR;\r\n    roundedRect(\r\n      ctx,\r\n      bowlCenterX - bowlWidth / 2,\r\n      y - bowlHeight - bowlBaseHeight,\r\n      bowlWidth,\r\n      bowlHeight,\r\n      bowlCornerRadii\r\n    );\r\n\r\n    ctx.save();\r\n    ctx.clip();\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = TABLE_DECORATION_COLOR;\r\n    const bowlDecorationY = y - bowlHeight - bowlBaseHeight + bowlHeight / 6;\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, bowlDecorationY);\r\n    ctx.lineTo(canvasWidth, bowlDecorationY);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.leg();\r\n    this.top();\r\n    this.centerpiece();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst CLOCK_INNER_COLOR = '#4B4721';\r\nconst CLOCK_HANDS_COLOR = '#192124';\r\nconst CLOCK_DECORATION_COLOR = '#06151A';\r\n\r\nexport class Clock extends Renderer {\r\n  private clockSize: number;\r\n  private clockCoords: { x: number; y: number };\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n    this.clockSize = this.windowFrameThickness * 5;\r\n    const x = Math.max(\r\n      this.canvasWidth * 0.7,\r\n      (this.canvasWidth * 2) / 3 + this.windowFrameThickness * 8\r\n    );\r\n    const y = this.canvasHeight / 5;\r\n    this.clockCoords = { x, y };\r\n  }\r\n\r\n  face() {\r\n    const { ctx, clockSize, clockCoords } = this;\r\n    const { x, y } = clockCoords;\r\n\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n\r\n    // clock frame\r\n    ctx.lineWidth = this.windowFrameThickness / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 1.75, 0, Math.PI * 2, true);\r\n    ctx.stroke();\r\n\r\n    ctx.strokeStyle = CLOCK_DECORATION_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2, 0, Math.PI * 2, true);\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2, 0, Math.PI * 2, true);\r\n    ctx.fillStyle = CLOCK_INNER_COLOR;\r\n    ctx.fill();\r\n\r\n    // markings\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = CLOCK_HANDS_COLOR;\r\n\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n\r\n    for (let i = 1; i <= 60; i++) {\r\n      const angle = (i * Math.PI) / 30;\r\n\r\n      const start = {\r\n        x: Math.sin(angle) * (clockSize / 2 - clockSize / 20),\r\n        y: Math.cos(angle) * (clockSize / 2 - clockSize / 20)\r\n      };\r\n      const end = {\r\n        x: Math.sin(angle) * (clockSize / 2 - clockSize / 15),\r\n        y: Math.cos(angle) * (clockSize / 2 - clockSize / 15)\r\n      };\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(start.x, start.y);\r\n      ctx.lineTo(end.x, end.y);\r\n      ctx.stroke();\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  hands() {\r\n    const { ctx, clockSize, clockCoords } = this;\r\n    const { x, y } = clockCoords;\r\n\r\n    // fill in hands area so we can redraw them\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2 - clockSize / 15, 0, Math.PI * 2, true);\r\n    ctx.fillStyle = CLOCK_INNER_COLOR;\r\n    ctx.fill();\r\n\r\n    ctx.lineWidth = clockSize / 40;\r\n    ctx.lineCap = 'round';\r\n    ctx.strokeStyle = CLOCK_HANDS_COLOR;\r\n\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n\r\n    const now = new Date();\r\n    const hours = now.getHours();\r\n    const minutes = now.getMinutes();\r\n    const seconds = now.getSeconds();\r\n\r\n    // hour hand\r\n    ctx.save();\r\n    ctx.rotate((Math.PI / 6) * (hours + minutes / 60 + seconds / 3600));\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 4);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    // minute hand\r\n    ctx.save();\r\n    ctx.rotate((Math.PI / 30) * (minutes + seconds / 60));\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 2.75);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    // second hand\r\n    ctx.lineWidth = clockSize / 100;\r\n    ctx.save();\r\n    ctx.rotate((Math.PI / 30) * seconds);\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 2.7);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n    this.face();\r\n    this.hands();\r\n  }\r\n\r\n  tick() {\r\n    this.hands();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst CAT_COLOR = '#000';\r\n\r\nexport class Cat extends Renderer {\r\n  private isWagging = false;\r\n  private prevTailAngle = -Math.PI / 2;\r\n  private headRadius: number;\r\n  private bodyHeight: number;\r\n  private bodyWidth: number;\r\n  private x: number;\r\n  private createdTimestamp: number;\r\n  private tailWidth: number;\r\n  private tailY: number;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    const {\r\n      windowFrameThickness,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight\r\n    } = this;\r\n\r\n    this.x = oneThirdCanvasWidth * 2 - windowFrameThickness * 1.2;\r\n    this.headRadius = windowFrameThickness;\r\n    this.bodyHeight = windowFrameThickness * 3;\r\n    this.bodyWidth = windowFrameThickness * 2.2;\r\n    this.createdTimestamp = Date.now();\r\n    this.tailWidth = windowFrameThickness / 2;\r\n    this.tailY =\r\n      (oneHalfCanvasHeight * 3) / 2 + windowFrameThickness - this.tailWidth / 2;\r\n  }\r\n\r\n  head() {\r\n    const { ctx, oneHalfCanvasHeight, x, headRadius } = this;\r\n    const y = (oneHalfCanvasHeight * 3) / 2 - this.bodyHeight - this.headRadius;\r\n\r\n    ctx.fillStyle = CAT_COLOR;\r\n    ctx.strokeStyle = CAT_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, headRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // ears\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n\r\n    ctx.lineWidth = 5;\r\n    ctx.lineJoin = 'round';\r\n\r\n    const rightEar = {\r\n      start: {\r\n        x: Math.sin(Math.PI * 0.85) * headRadius,\r\n        y: Math.cos(Math.PI * 0.85) * headRadius\r\n      },\r\n      point: {\r\n        x: Math.sin(Math.PI * 0.8) * headRadius * 1.4,\r\n        y: Math.cos(Math.PI * 0.8) * headRadius * 1.4\r\n      },\r\n      end: {\r\n        x: Math.sin(Math.PI * 0.7) * headRadius,\r\n        y: Math.cos(Math.PI * 0.7) * headRadius\r\n      }\r\n    };\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(rightEar.start.x, rightEar.start.y);\r\n    ctx.lineTo(rightEar.point.x, rightEar.point.y);\r\n    ctx.lineTo(rightEar.end.x, rightEar.end.y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    const leftEar = {\r\n      start: {\r\n        x: Math.sin(Math.PI * 1.2) * headRadius,\r\n        y: Math.cos(Math.PI * 1.2) * headRadius\r\n      },\r\n      point: {\r\n        x: Math.sin(Math.PI * 1.22) * headRadius * 1.5,\r\n        y: Math.cos(Math.PI * 1.22) * headRadius * 1.5\r\n      },\r\n      end: {\r\n        x: Math.sin(Math.PI * 1.3) * headRadius,\r\n        y: Math.cos(Math.PI * 1.3) * headRadius\r\n      }\r\n    };\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(leftEar.start.x, leftEar.start.y);\r\n    ctx.lineTo(leftEar.point.x, leftEar.point.y);\r\n    ctx.lineTo(leftEar.end.x, leftEar.end.y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  body() {\r\n    const {\r\n      ctx,\r\n      oneHalfCanvasHeight,\r\n      windowFrameThickness,\r\n      x,\r\n      headRadius,\r\n      bodyWidth,\r\n      bodyHeight\r\n    } = this;\r\n    const y = (oneHalfCanvasHeight * 3) / 2 - bodyHeight;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y - headRadius / 2);\r\n    ctx.quadraticCurveTo(\r\n      x - bodyWidth * 0.75,\r\n      y + bodyHeight / 4,\r\n      x - bodyWidth / 3,\r\n      y + bodyHeight + windowFrameThickness\r\n    );\r\n    ctx.lineTo(x + bodyWidth / 2, y + bodyHeight + windowFrameThickness);\r\n    ctx.quadraticCurveTo(\r\n      x + bodyWidth * 1.2,\r\n      y + bodyHeight + windowFrameThickness,\r\n      x + bodyWidth / 3,\r\n      y - headRadius / 3\r\n    );\r\n    ctx.closePath();\r\n    ctx.fill();\r\n\r\n    // left leg\r\n    ctx.beginPath();\r\n    ctx.moveTo(x - bodyWidth / 4, y + bodyHeight * 0.3);\r\n    ctx.quadraticCurveTo(\r\n      x - bodyWidth,\r\n      y + bodyHeight,\r\n      x - bodyWidth / 3,\r\n      y + bodyHeight + windowFrameThickness\r\n    );\r\n    ctx.lineTo(x + bodyWidth / 2, y + bodyHeight + windowFrameThickness);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n  }\r\n\r\n  tail() {\r\n    const { ctx, tailWidth, x, bodyWidth, tailY } = this;\r\n\r\n    ctx.lineWidth = tailWidth;\r\n    ctx.lineCap = 'round';\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, tailY);\r\n    ctx.lineTo(x - bodyWidth, tailY);\r\n    ctx.stroke();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const { ctx, canvasWidth, canvasHeight } = this;\r\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n    this.head();\r\n    this.body();\r\n    this.tail();\r\n  }\r\n\r\n  tick() {\r\n    const {\r\n      ctx,\r\n      canvasWidth,\r\n      canvasHeight,\r\n      createdTimestamp,\r\n      x,\r\n      bodyWidth,\r\n      tailY\r\n    } = this;\r\n    // tail wag\r\n    const timeDelta = Date.now() - createdTimestamp;\r\n\r\n    // oscillate between angles\r\n    let nextTailAngle =\r\n      -Math.PI / 2 + (Math.sin(timeDelta / 200) * -Math.PI) / 20;\r\n\r\n    if (this.prevTailAngle > -Math.PI / 2 && nextTailAngle < -Math.PI / 2) {\r\n      // each oscillation has a chance of producing a tail wag\r\n      this.isWagging = Math.random() < 0.2;\r\n    }\r\n\r\n    this.prevTailAngle = nextTailAngle;\r\n\r\n    if (nextTailAngle > -Math.PI / 2) {\r\n      nextTailAngle = -Math.PI / 2;\r\n    }\r\n\r\n    if (!this.isWagging) {\r\n      this.tail();\r\n      return;\r\n    }\r\n\r\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n    this.head();\r\n    this.body();\r\n\r\n    ctx.save();\r\n    ctx.translate(x, tailY);\r\n\r\n    const tailEnd = {\r\n      x: Math.sin(nextTailAngle) * bodyWidth,\r\n      y: Math.cos(nextTailAngle) * bodyWidth\r\n    };\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 0);\r\n    ctx.quadraticCurveTo(\r\n      -bodyWidth,\r\n      (-Math.cos(nextTailAngle) * bodyWidth) / 10,\r\n      tailEnd.x,\r\n      tailEnd.y\r\n    );\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { radiansBetween } from '../utils';\r\n\r\nconst STEM_COLOR = '#8e8e8e';\r\nconst LIGHT_COLOR = 'rgba(252, 243, 126, 0.085)';\r\n\r\ntype ShadeCoords = { x: number; y: number };\r\n\r\nexport class Lamp extends Renderer {\r\n  private stemX: number;\r\n  private stemHeight: number;\r\n  private lampWidth: number;\r\n  private shadeTopLeft: ShadeCoords;\r\n  private shadeTopRight: ShadeCoords;\r\n  private shadeBottomRight: ShadeCoords;\r\n  private shadeBottomLeft: ShadeCoords;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    const { canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    this.stemX = (canvasWidth * 7) / 11;\r\n    this.stemHeight = canvasHeight / 5;\r\n    this.lampWidth = windowFrameThickness * 3.5;\r\n\r\n    this.shadeTopLeft = {\r\n      x: this.stemX - windowFrameThickness / 5,\r\n      y: this.stemHeight + windowFrameThickness\r\n    };\r\n    this.shadeTopRight = {\r\n      x: this.stemX + windowFrameThickness / 5,\r\n      y: this.stemHeight + windowFrameThickness\r\n    };\r\n    this.shadeBottomRight = {\r\n      x: this.stemX + this.lampWidth / 2,\r\n      y: this.stemHeight + windowFrameThickness * 3\r\n    };\r\n    this.shadeBottomLeft = {\r\n      x: this.stemX - this.lampWidth / 2,\r\n      y: this.stemHeight + windowFrameThickness * 3\r\n    };\r\n  }\r\n\r\n  stem() {\r\n    const { ctx, windowFrameThickness, stemX, stemHeight } = this;\r\n\r\n    ctx.strokeStyle = STEM_COLOR;\r\n    ctx.fillStyle = STEM_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 5;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(stemX, 0);\r\n    ctx.lineTo(stemX, stemHeight);\r\n    ctx.stroke();\r\n\r\n    ctx.lineWidth = 1;\r\n    ctx.fillRect(\r\n      stemX - windowFrameThickness / 5,\r\n      stemHeight - 1,\r\n      (windowFrameThickness * 2) / 5,\r\n      windowFrameThickness\r\n    );\r\n    ctx.stroke();\r\n  }\r\n\r\n  lampshade() {\r\n    const {\r\n      ctx,\r\n      shadeTopLeft,\r\n      shadeTopRight,\r\n      shadeBottomRight,\r\n      shadeBottomLeft\r\n    } = this;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(shadeTopLeft.x, shadeTopLeft.y);\r\n    ctx.lineTo(shadeTopRight.x, shadeTopRight.y);\r\n    ctx.lineTo(shadeBottomRight.x, shadeBottomRight.y);\r\n    ctx.lineTo(shadeBottomLeft.x, shadeBottomLeft.y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    // thin line of bright light color at bottom\r\n    ctx.fillStyle = '#ff7';\r\n    ctx.fillRect(\r\n      shadeBottomLeft.x,\r\n      shadeBottomLeft.y,\r\n      shadeBottomRight.x - shadeBottomLeft.x,\r\n      2\r\n    );\r\n  }\r\n\r\n  light() {\r\n    const {\r\n      ctx,\r\n      canvasHeight,\r\n      windowFrameThickness,\r\n      stemX,\r\n      stemHeight,\r\n      lampWidth,\r\n      shadeTopLeft,\r\n      shadeBottomRight,\r\n      shadeBottomLeft\r\n    } = this;\r\n\r\n    ctx.fillStyle = LIGHT_COLOR;\r\n    const lightHeight = canvasHeight - shadeBottomLeft.y;\r\n    // compensate for inverted canvas y-coords when\r\n    // getting angle between lampshade corners\r\n    const lightAngle = radiansBetween(shadeBottomLeft, {\r\n      x: shadeTopLeft.x,\r\n      y: shadeBottomLeft.y + shadeBottomLeft.y - shadeTopLeft.y\r\n    });\r\n\r\n    // light makes a right triangle with bottom of canvas so\r\n    // we can calculate its adjacent width using height and\r\n    // the angle of the lampshade\r\n    // tan θ = opposite (height) / adjacent (width)\r\n    const lightTriangleAdjacentWidth = lightHeight / Math.tan(lightAngle);\r\n\r\n    const lightBottomLeftX = shadeBottomLeft.x - lightTriangleAdjacentWidth;\r\n    const lightBottomRightX = shadeBottomRight.x + lightTriangleAdjacentWidth;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(stemX - lampWidth / 2, stemHeight + windowFrameThickness * 3);\r\n    ctx.lineTo(stemX + lampWidth / 2, stemHeight + windowFrameThickness * 3);\r\n    ctx.lineTo(lightBottomRightX, canvasHeight);\r\n    ctx.lineTo(lightBottomLeftX, canvasHeight);\r\n    ctx.fill();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.stem();\r\n    this.lampshade();\r\n    this.tick();\r\n  }\r\n\r\n  tick() {\r\n    const {\r\n      ctx,\r\n      canvasWidth,\r\n      canvasHeight,\r\n      windowFrameThickness,\r\n      stemHeight\r\n    } = this;\r\n\r\n    ctx.clearRect(\r\n      0,\r\n      // add 2 to clear under the thin line\r\n      stemHeight + windowFrameThickness * 3 + 2,\r\n      canvasWidth,\r\n      canvasHeight\r\n    );\r\n\r\n    this.light();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { Wall } from './wall';\r\nimport { Window } from './window';\r\nimport { Dresser } from './dresser';\r\nimport { Pictures } from './pictures';\r\nimport { Table } from './table';\r\nimport { Clock } from './clock';\r\nexport { Cat } from './cat';\r\nexport { Lamp } from './lamp';\r\n\r\nexport class Home extends Renderer {\r\n  wall: Wall;\r\n  window: Window;\r\n  dresser: Dresser;\r\n  pictures: Pictures;\r\n  table: Table;\r\n  clock: Clock;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    this.wall = new Wall(ctx);\r\n    this.window = new Window(ctx);\r\n    this.dresser = new Dresser(ctx);\r\n    this.pictures = new Pictures(ctx);\r\n    this.table = new Table(ctx);\r\n    this.clock = new Clock(ctx);\r\n  }\r\n\r\n  render() {\r\n    this.wall.render();\r\n    this.window.render();\r\n    this.dresser.render();\r\n    this.pictures.render();\r\n    this.table.render();\r\n    this.clock.render();\r\n  }\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { City } from './city';\r\nimport { Rainfall } from './rain';\r\nimport { Home, Cat, Lamp } from './home';\r\nimport { useDebouncedResize } from '../../../../utils/hooks';\r\nimport './Rain.scss';\r\n\r\nconst MAX_RAINDROPS_PER_TICK = 8;\r\n\r\nconst Rain: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  isBeat,\r\n  lowPassIntensity\r\n}) => {\r\n  // city\r\n  const cityCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const cityRef = useRef<City>();\r\n\r\n  useDebouncedResize(() => {\r\n    const cityCanvas = cityCanvasRef.current!;\r\n\r\n    const createCity = (width: number, height: number, dpi: number) => {\r\n      cityCanvas.width = width * dpi;\r\n      cityCanvas.height = height * dpi;\r\n\r\n      const ctx = cityCanvas.getContext('2d')!;\r\n      const city = new City(ctx);\r\n      cityRef.current = city;\r\n      city.render();\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createCity(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  // rain\r\n  const rainCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const rainfallRef = useRef<Rainfall>();\r\n\r\n  useDebouncedResize(() => {\r\n    const rainCanvas = rainCanvasRef.current!;\r\n\r\n    const createRain = (width: number, height: number, dpi: number) => {\r\n      rainCanvas.width = width * dpi;\r\n      rainCanvas.height = height * dpi;\r\n\r\n      const ctx = rainCanvas.getContext('2d')!;\r\n      let rainfall = rainfallRef.current;\r\n      if (rainfall == null) {\r\n        rainfallRef.current = new Rainfall(ctx);\r\n      } else {\r\n        rainfall = rainfallRef.current!;\r\n        rainfall.canvasWidth = width * dpi;\r\n        rainfall.canvasHeight = height * dpi;\r\n      }\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createRain(innerWidth, innerHeight, devicePixelRatio);\r\n\r\n    return () => {\r\n      if (rainfallRef.current) {\r\n        rainfallRef.current = undefined;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const homeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const homeRef = useRef<Home>();\r\n  const clockIntervalRef = useRef<number>();\r\n\r\n  // home\r\n  useDebouncedResize(() => {\r\n    const homeCanvas = homeCanvasRef.current!;\r\n\r\n    const createHome = (width: number, height: number, dpi: number) => {\r\n      homeCanvas.width = width * dpi;\r\n      homeCanvas.height = height * dpi;\r\n\r\n      const ctx = homeCanvas.getContext('2d')!;\r\n\r\n      const home = new Home(ctx);\r\n      homeRef.current = home;\r\n      home.render();\r\n\r\n      clockIntervalRef.current && window.clearTimeout(clockIntervalRef.current);\r\n      clockIntervalRef.current = window.setInterval(\r\n        () => home.clock.tick(),\r\n        1000\r\n      );\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createHome(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  // cat\r\n  const catCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const catRef = useRef<Cat>();\r\n\r\n  useDebouncedResize(() => {\r\n    const catCanvas = catCanvasRef.current!;\r\n\r\n    const adoptCat = (width: number, height: number, dpi: number) => {\r\n      catCanvas.width = width * dpi;\r\n      catCanvas.height = height * dpi;\r\n\r\n      const ctx = catCanvas.getContext('2d')!;\r\n\r\n      const cat = new Cat(ctx);\r\n      catRef.current = cat;\r\n      cat.render();\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    adoptCat(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  // lamp\r\n  const lampCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const lampRef = useRef<Lamp>();\r\n\r\n  useDebouncedResize(() => {\r\n    const lampCanvas = lampCanvasRef.current!;\r\n\r\n    const createLamp = (width: number, height: number, dpi: number) => {\r\n      lampCanvas.width = width * dpi;\r\n      lampCanvas.height = height * dpi;\r\n\r\n      const ctx = lampCanvas.getContext('2d')!;\r\n\r\n      const lamp = new Lamp(ctx);\r\n      lampRef.current = lamp;\r\n      lamp.render();\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createLamp(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  // call animating effects on each data change\r\n  useEffect(() => {\r\n    const home = homeRef.current!;\r\n    const rainfall = rainfallRef.current!;\r\n    const cat = catRef.current!;\r\n    const lamp = lampRef.current!;\r\n\r\n    let raindropsToAdd = Math.floor(lowPassIntensity / 5);\r\n\r\n    if (raindropsToAdd > MAX_RAINDROPS_PER_TICK) {\r\n      raindropsToAdd = MAX_RAINDROPS_PER_TICK;\r\n    }\r\n\r\n    for (\r\n      let raindropsAdded = 0;\r\n      raindropsAdded < raindropsToAdd;\r\n      raindropsAdded++\r\n    ) {\r\n      rainfall.add();\r\n    }\r\n\r\n    rainfall.tick();\r\n    const { wasBeat } = home.dresser;\r\n    home.dresser.tick(isBeat);\r\n    // re-render lamp light since the dresser stereo\r\n    // may have been repainted by changing isBeat\r\n    if (wasBeat !== isBeat) {\r\n      lamp.tick();\r\n    }\r\n    cat.tick();\r\n\r\n    const rainCanvas = rainCanvasRef.current!;\r\n    const rainCtx = rainCanvas.getContext('2d')!;\r\n\r\n    rainCtx.clearRect(0, 0, rainCanvas.width, rainCanvas.height);\r\n\r\n    rainfall.render();\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"rain\">\r\n      <canvas ref={cityCanvasRef} />\r\n      <canvas ref={rainCanvasRef} />\r\n      <canvas ref={homeCanvasRef} />\r\n      <canvas ref={catCanvasRef} />\r\n      <canvas ref={lampCanvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Rain);\r\n"],"sourceRoot":""}