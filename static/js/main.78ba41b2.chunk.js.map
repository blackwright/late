{"version":3,"sources":["serviceWorker.js","store/types.ts","store/reducer.ts","store/index.ts","components/Visualizer/Visualizations/VisualizationHOC.tsx","utils/colors.ts","utils/index.ts","utils/hooks.ts","components/Visualizer/Visualizations/Waveform/index.tsx","components/Visualizer/Visualizations/Waveform/utils.ts","components/Visualizer/Visualizations/Drummer/index.tsx","components/Visualizer/Visualizations/Halpern/three/sceneManager.ts","components/Visualizer/Visualizations/Halpern/three/entities/polys.ts","components/Visualizer/Visualizations/Halpern/three/entities/camera.ts","components/Visualizer/Visualizations/Halpern/three/entities/renderer.ts","components/Visualizer/Visualizations/Halpern/index.tsx","components/Visualizer/Visualizations/Stars/three/entities/shaders.ts","components/Visualizer/Visualizations/Stars/three/entities/polys.ts","components/Visualizer/Visualizations/Stars/three/entities/light.ts","components/Visualizer/Visualizations/Stars/three/sceneManager.ts","components/Visualizer/Visualizations/Stars/three/entities/renderer.ts","components/Visualizer/Visualizations/Stars/three/entities/camera.ts","components/Visualizer/Visualizations/Stars/index.tsx","components/Visualizer/Visualizations/Rain/renderer.ts","components/Visualizer/Visualizations/Rain/city/building.ts","components/Visualizer/Visualizations/Rain/city/index.ts","components/Visualizer/Visualizations/Rain/rain.ts","components/Visualizer/Visualizations/Rain/home/wall.ts","components/Visualizer/Visualizations/Rain/utils.ts","components/Visualizer/Visualizations/Rain/home/window.ts","components/Visualizer/Visualizations/Rain/home/dresser.ts","components/Visualizer/Visualizations/Rain/home/pictures.ts","components/Visualizer/Visualizations/Rain/home/table.ts","components/Visualizer/Visualizations/Rain/home/clock.ts","components/Visualizer/Visualizations/Rain/home/cat.ts","components/Visualizer/Visualizations/Rain/home/lamp.ts","components/Visualizer/Visualizations/Rain/home/index.ts","components/Visualizer/Visualizations/Rain/index.tsx","components/Visualizer/Visualizations/index.tsx","components/Visualizer/Visualizations/MobileDisabled/index.tsx","components/Visualizer/VisualizationSelector.tsx","components/Analyser/index.tsx","config/index.ts","components/Loading/index.tsx","components/Controls/QualitySelect/index.tsx","store/actions.ts","components/Controls/index.tsx","components/NoWebAudioApi/index.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","ActionConstants","initialState","currentVisualizationIndex","prevVisualizationIndex","quality","store","createStore","state","arguments","length","undefined","action","type","GO_TO_NEXT_VISUALIZATION","Object","objectSpread","GO_TO_PREV_VISUALIZATION","SET_QUALITY","__REDUX_DEVTOOLS_EXTENSION__","defaultProps","data","Uint8Array","lowPassData","options","wrap","WrappedComponent","_ref","rawIntensitiesRef","useRef","lowPassIntensitiesRef","startingTimestampRef","Date","now","totalDifferenceFromRawBaseline","totalDifferenceFromLowBaseline","renderedData","map","rawDataElement","i","Math","abs","lowPassDataElement","smoothing","sum","count","rangeIndex","rawIntensityMax","lowPassIntensitySum","lowPassIntensityCount","lowPassIntensityMax","current","forEach","rawIntensity","lowPassIntensity","currentRawIntensity","recentLowPassAvgIntensity","currentLowPassIntensity","concat","shift","isBeat","react_default","a","createElement","intensity","colorTriples","colorTriple","id","randomColorTriple","floor","random","getRandomColors","numColors","areUnique","colors","randomTriple","randomColor","includes","push","getRandomColor","getRandomColorTriple","colorCopy","toConsumableArray","reverse","modulo","number1","number2","isInteger","number","randomNumberBetween","min","max","decimalPrecision","randomFloat","Number","toPrecision","debounced","fn","msToWait","isImmediate","timeoutId","_len","args","Array","_key","context","this","shouldCallNow","clearTimeout","setTimeout","apply","useDebouncedResize","deps","useEffect","debouncedFn","addEventListener","removeEventListener","VisualizationHOC","canvasRef","_window","innerWidth","innerHeight","_window$devicePixelRa","devicePixelRatio","canvas","width","height","ctx","getContext","fillStyle","fillRect","intervalId","setInterval","clearInterval","lineWidth","lineCap","getColors","sliceWidth","color","strokeStyle","beginPath","x","moveTo","dataElement","y","lineTo","stroke","className","ref","QUALITY","0","NUM_DRUMMERS","1","2","_useState","useState","_useState2","slicedToArray","size","setSize","_useState3","_useState4","colorSize","setColorSize","colorsRef","values","lastChangedTimestamp","maxSideLength","colorDiameter","sqrt","pow","numDrummers","freqMap","numPerSlice","freqKey","freqData","ceiling","newColor","drummers","entries","_ref2","_ref3","hitCount","drummerContainerSize","key","style","opacity","classNames","hit","MIN_HIT_COUNT","smallestDrummerSize","transitions","useTransition","from","item","backgroundColor","scale","enter","leave","config","slow","_ref4","props","_ref5","objectWithoutProperties","web","div","transform","interpolate","s","DELAY_BEFORE_ROTATING_X","CAMERA_MAX_DISTANCE","CAMERA_DRIFT","ROTATE_Y","ROTATE_X","sphereSegments","sceneManager","rendererContainer","animationFrameId","segments","sceneInitializedTimestamp","t","sphereGeometry","SphereGeometry","halpern","vertices","parameters","radius","widthSegments","heightSegments","positions","Float32Array","vertex","toArray","geometry","BufferGeometry","addAttribute","BufferAttribute","attributes","position","dynamic","material","PointsMaterial","TextureLoader","load","alphaTest","transparent","Points","createPoints","camera","startingY","PerspectiveCamera","set","lookAt","Vector3","createCamera","renderer","WebGLRenderer","alpha","setPixelRatio","setClearColor","createRenderer","appendChild","domElement","scene","Scene","add","clock","Clock","debouncedResize","aspect","updateProjectionMatrix","render","onVisibilityChange","document","visibilityState","stop","start","animate","delta","getDelta","rotateY","rotateX","PI","translateY","cos","translateX","translateZ","requestAnimationFrame","cleanup","cancelAnimationFrame","removeChild","remove","dispose","RIPPLE_SPEED","rendererRef","managedSceneRef","originalVerticesRef","sphereDataSegmentsRef","vertexSegmentLengthRef","focusedDataRef","fill","managedScene","halpernGeometry","array","slice","rippleSpeed","focusedDataIndex","splice","halpernBufferPositions","getAttribute","vertexSegmentIndex","ceil","dataIndex","vertexSegmentWeight","scalar","needsUpdate","starVertexShader","starFragmentShader","createCloud","texture","PlaneGeometry","cloudMaterial","MeshLambertMaterial","depthTest","rotateZ","cloud","Mesh","zPosition","createDirectionalLight","DirectionalLight","MAX_STAR_ALPHA","MIN_STAR_ALPHA","STAR_ALPHA_DELTA","STATIC_LIGHT_COLOR","VARIABLE_LIGHT_COLOR","STAR_COUNT","CLOUD_COUNT","lightIntensity","antialias","stars","starCount","alphas","j","shaderMaterial","ShaderMaterial","uniforms","value","Color","vertexShader","fragmentShader","createStars","cloudCover","Group","cloudCount","aLight","AmbientLight","fixedDLight","dLight","starAlphas","alphaDirection","children","lightTimestampRef","currentLightIntensity","newLightIntensity","WINDOW_FRAME_THICKNESS_DIVISOR","Renderer","classCallCheck","canvasWidth","canvasHeight","oneThirdCanvasWidth","oneHalfCanvasHeight","windowFrameThickness","roundedRadius","save","createClass","restore","Building","blueprint","lights","lightHeight","lightPadding","lightsPerFloor","buildingXPadding","buildingTopPadding","gapWidth","lightWidth","isOn","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","light","err","return","City","_Renderer","_this","possibleConstructorReturn","getPrototypeOf","call","layers","generateBuildings","inherits","_this2","_loop","layer","gap","building","leftMostBuilding","xOffset","get","prototype","currentLayer","generateLights","RAINDROPS_HEIGHTWISE","Raindrop","raindropHeight","createdDate","timeDelta","Rainfall","raindrops","raindrop","tick","startingX","Wall","linearGradient","createLinearGradient","addColorStop","defaultCornerRadii","tl","tr","br","bl","roundedRect","quadraticCurveTo","closePath","Window","clearRect","muntinWidth","topLeftX","topRightX","topY","leftX","leftTopY","leftBottomY","rect","Dresser","dresserHandleMidpoint","speakerWidth","speakerHeight","speakerX","speakerY","driverRadius","driverCenterX","driverCenterY","arc","dividerWidth","deckX","deckHeight","deckY","deckDetailX","bottomDetailY","knobRadius","knobX","knobY","clip","translate","knobMarkerAngle","knobMarkerStart","sin","knobMarkerEnd","dresser","stereo","wooferRadius","wooferCenterY","Pictures","pictures","_assertThisInitialize","assertThisInitialized","_this$pictures$","gradient1","nodes","nodeSize","point1","point2","currentNode","pop","_i","otherNode","_this$pictures$2","gradient2","randomAngle","planetX","planetY","randomRadius","_this$pictures$3","gradient3","starX","starY","graph","orbits","FRUIT_COLORS","Table","thickness","tableCornerRadii","bowlCenterX","bowlWidth","bowlHeight","fruits","stemAngle","fruit","_i2","stemStart","stemEnd","bowlCornerRadii","bowlBaseHeight","bowlBaseWidth","bowlDecorationY","leg","top","centerpiece","clockSize","clockCoords","angle","end","hours","getHours","minutes","getMinutes","seconds","getSeconds","rotate","face","hands","Cat","isWagging","prevTailAngle","headRadius","bodyHeight","bodyWidth","createdTimestamp","tailWidth","tailY","lineJoin","rightEar","point","leftEar","head","body","tail","nextTailAngle","tailEnd","Lamp","stemX","stemHeight","lampWidth","shadeTopLeft","shadeTopRight","shadeBottomRight","shadeBottomLeft","lightAngle","deltaX","deltaY","atan2","radiansBetween","lightTriangleAdjacentWidth","tan","lightBottomLeftX","lightBottomRightX","stem","lampshade","Home","wall","table","MAX_RAINDROPS_PER_TICK","cityCanvasRef","cityRef","cityCanvas","dpi","city","createCity","rainCanvasRef","rainfallRef","rainCanvas","_window2","rainfall","createRain","homeCanvasRef","homeRef","clockIntervalRef","homeCanvas","_window3","home","createHome","catCanvasRef","catRef","catCanvas","_window4","cat","adoptCat","lampCanvasRef","lampRef","lampCanvas","_window5","lamp","createLamp","raindropsToAdd","newRaindropsAdded","visualizations","src","process","test","navigator","userAgent","component","Rain","Stars","Waveform","Drummer","Halpern","styledVisualizations","vis","rest","assign","connect","currentIndex","prevIndex","visIndex","direction","useCallback","prev","translateXMultiplier","initial","Fragment","Visualization","Analyser","source","rawData","setRawData","setLowPassData","animationFrameIdRef","rawAnalyser","createAnalyser","fftSize","smoothingTimeConstant","destination","filter","createBiquadFilter","lowPassAnalyser","rawDataContainer","getByteTimeDomainData","lowPassDataContainer","disconnect","Visualizer_VisualizationSelector","Loading","isShown","show","qualities","label","dispatch","setQuality","Actions","onHover","onHoverStop","onMouseEnter","onMouseLeave","onChange","e","target","goToNextVisualization","goToPrevVisualization","isOverlayShown","setIsOverlayShown","isControlHovered","setIsControlHovered","timeoutRef","touchTimestampRef","onKeyDown","event","which","showOverlay","togglePlay","resume","recordTouchTimestamp","preventDefault","goToRepo","open","onMouseDown","nativeEvent","onMouseUp","onTouchEnd","onPrev","stopPropagation","onNext","doNothing","wantsToPlay","isPlaying","components_Loading","onTouchStart","onMouseMove","onClick","Controls_QualitySelect","versionInfo","play","pause","viewBox","strokeWidth","strokeLinecap","strokeLinejoin","points","NoWebAudioApi","App","setWantsToPlay","setIsPlaying","_useStateRef","setState","stateRef","useStateRef","_useStateRef2","setContext","contextRef","_useState5","_useState6","setSource","_useState7","_useState8","isContextUnavailable","setIsContextUnavailable","audioRef","AudioContext","audioElement","onAudioPlay","onAudioPause","onAudioError","console","error","initializeAudioContext","createMediaElementSource","paused","components_NoWebAudioApi","preload","crossOrigin","components_Analyser","components_Controls","ReactDOM","es","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78ba41b2.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export type Quality = 0 | 1 | 2;\r\n\r\nexport type StoreState = {\r\n  currentVisualizationIndex: number;\r\n  prevVisualizationIndex: number;\r\n  quality: Quality;\r\n};\r\n\r\nexport enum ActionConstants {\r\n  BEGIN_VISUALIZATION_TRANSITION = 'BEGIN_VISUALIZATION_TRANSITION',\r\n  END_VISUALIZATION_TRANSITION = 'END_VISUALIZATION_TRANSITION',\r\n  GO_TO_PREV_VISUALIZATION = 'GO_TO_PREV_VISUALIZATION',\r\n  GO_TO_NEXT_VISUALIZATION = 'GO_TO_NEXT_VISUALIZATION',\r\n  SET_QUALITY = 'SET_QUALITY'\r\n}\r\n\r\ninterface GoToNextVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_NEXT_VISUALIZATION;\r\n}\r\n\r\ninterface GoToPrevVisualizationAction {\r\n  type: typeof ActionConstants.GO_TO_PREV_VISUALIZATION;\r\n}\r\n\r\ninterface SetQualityAction {\r\n  type: typeof ActionConstants.SET_QUALITY;\r\n  quality: Quality;\r\n}\r\n\r\nexport type ActionUnionType =\r\n  | GoToNextVisualizationAction\r\n  | GoToPrevVisualizationAction\r\n  | SetQualityAction;\r\n","import { StoreState, ActionConstants, ActionUnionType } from './types';\r\n\r\nconst initialState: StoreState = {\r\n  currentVisualizationIndex: 0,\r\n  prevVisualizationIndex: 0,\r\n  quality: 2\r\n};\r\n\r\nexport default function reducer(\r\n  state = initialState,\r\n  action: ActionUnionType\r\n): StoreState {\r\n  switch (action.type) {\r\n    case ActionConstants.GO_TO_NEXT_VISUALIZATION:\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex + 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.GO_TO_PREV_VISUALIZATION:\r\n      return {\r\n        ...state,\r\n        currentVisualizationIndex: state.currentVisualizationIndex - 1,\r\n        prevVisualizationIndex: state.currentVisualizationIndex\r\n      };\r\n\r\n    case ActionConstants.SET_QUALITY:\r\n      return {\r\n        ...state,\r\n        quality: action.quality\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { Options } from './index';\r\nimport { Quality } from '../../../store/types';\r\nimport './Visualization.scss';\r\n\r\nexport type Props = {\r\n  // array of frequency data with values 0-255\r\n  data: Uint8Array;\r\n  lowPassData: Uint8Array;\r\n  options?: Options;\r\n  quality: Quality;\r\n};\r\n\r\nexport type WrappedProps = {\r\n  data: Uint8Array;\r\n  lowPassData: Uint8Array;\r\n  isBeat: boolean;\r\n  intensity: number;\r\n  lowPassIntensity: number;\r\n  quality: Quality;\r\n};\r\n\r\nconst defaultProps: Props = {\r\n  data: new Uint8Array(),\r\n  lowPassData: new Uint8Array(),\r\n  options: {},\r\n  quality: 2\r\n};\r\n\r\n// all visualization components should be wrapped with this HOC\r\nexport function wrap(\r\n  WrappedComponent: React.ComponentType<WrappedProps>\r\n): React.ComponentType<Props> {\r\n  return function({\r\n    data,\r\n    lowPassData,\r\n    options,\r\n    quality\r\n  }: Props = defaultProps) {\r\n    const rawIntensitiesRef = useRef<number[]>([]);\r\n    const lowPassIntensitiesRef = useRef<number[]>([]);\r\n    const startingTimestampRef = useRef<number>(Date.now());\r\n\r\n    let totalDifferenceFromRawBaseline = 0;\r\n    let totalDifferenceFromLowBaseline = 0;\r\n\r\n    const renderedData = data.map((rawDataElement, i) => {\r\n      totalDifferenceFromRawBaseline += Math.abs(rawDataElement - 128);\r\n\r\n      const lowPassDataElement = lowPassData[i];\r\n      totalDifferenceFromLowBaseline += Math.abs(lowPassDataElement - 128);\r\n\r\n      if (options == null || !options.smoothing) {\r\n        return rawDataElement;\r\n      } else {\r\n        // smooth out each data value using a range of values around it,\r\n        // the range of this window is the value of options.smoothing\r\n        let sum = 0;\r\n        let count = 0;\r\n\r\n        let rangeIndex = i - options.smoothing;\r\n\r\n        while (rangeIndex < i + options.smoothing) {\r\n          const rawDataAtRangeIndex = data[rangeIndex] || 128;\r\n          sum += rawDataAtRangeIndex;\r\n          count += 1;\r\n          rangeIndex += 1;\r\n        }\r\n\r\n        return sum / count;\r\n      }\r\n    });\r\n\r\n    let rawIntensityMax = 0;\r\n\r\n    let lowPassIntensitySum = 0;\r\n    let lowPassIntensityCount = 0;\r\n    let lowPassIntensityMax = 0;\r\n\r\n    rawIntensitiesRef.current.forEach((rawIntensity, i) => {\r\n      if (rawIntensity > rawIntensityMax) {\r\n        rawIntensityMax = rawIntensity;\r\n      }\r\n\r\n      const lowPassIntensity = lowPassIntensitiesRef.current[i];\r\n      lowPassIntensitySum += lowPassIntensity;\r\n      lowPassIntensityCount += 1;\r\n\r\n      if (lowPassIntensity > lowPassIntensityMax) {\r\n        lowPassIntensityMax = lowPassIntensity;\r\n      }\r\n    });\r\n\r\n    const currentRawIntensity = totalDifferenceFromRawBaseline / data.length;\r\n    const recentLowPassAvgIntensity =\r\n      lowPassIntensitySum / lowPassIntensityCount || 0;\r\n\r\n    const currentLowPassIntensity =\r\n      totalDifferenceFromLowBaseline / lowPassData.length;\r\n\r\n    rawIntensitiesRef.current = rawIntensitiesRef.current.concat(\r\n      currentRawIntensity\r\n    );\r\n    lowPassIntensitiesRef.current = lowPassIntensitiesRef.current.concat(\r\n      currentLowPassIntensity\r\n    );\r\n\r\n    // remove intensities older than 2 seconds\r\n    if (Date.now() - startingTimestampRef.current > 2000) {\r\n      rawIntensitiesRef.current.shift();\r\n      lowPassIntensitiesRef.current.shift();\r\n    }\r\n\r\n    const isBeat = currentLowPassIntensity > recentLowPassAvgIntensity * 1.5;\r\n\r\n    return (\r\n      <WrappedComponent\r\n        data={renderedData}\r\n        lowPassData={lowPassData}\r\n        isBeat={isBeat}\r\n        intensity={currentRawIntensity}\r\n        lowPassIntensity={currentLowPassIntensity}\r\n        quality={quality}\r\n      />\r\n    );\r\n  };\r\n}\r\n","const colorTriples = [\r\n  ['#0E9AA7', '#F6CD61', '#FE8A71'],\r\n  ['#EE4540', '#801336', '#2D142C'],\r\n  ['#8FB9A8', '#FDFBD4', '#FCD0BA'],\r\n  ['#AC6D83', '#685D79', '#465C7A'],\r\n  ['#F36E38', '#EF4648', '#582841'],\r\n  ['#F1F1F1', '#9BD7D1', '#305D7A'],\r\n  ['#DEA5B6', '#F3CD8C', '#F2E9C2'],\r\n  ['#E27B47', '#EFCA58', '#46B29E'],\r\n  ['#2E7345', '#2E9975', '#2DB3B3'],\r\n  ['#52A3CC', '#7EA1E5', '#AAAAF2'],\r\n  ['#CC5285', '#CC5285', '#F2BCAA'],\r\n  ['#D8E0BB', '#B6CEC7', '#86A3C3']\r\n];\r\n\r\nconst colorTriplesWithIds = colorTriples.map((colorTriple, i) => ({\r\n  id: i,\r\n  colorTriple\r\n}));\r\n\r\nfunction randomColorTriple() {\r\n  return colorTriples[Math.floor(Math.random() * colorTriples.length)];\r\n}\r\n\r\nexport function getRandomColors(numColors: number, areUnique?: boolean): string[] {\r\n  const colors: string[] = [];\r\n\r\n  while (colors.length < numColors) {\r\n    const randomTriple = randomColorTriple();\r\n    const randomColor = randomTriple[Math.floor(Math.random() * randomTriple.length)];\r\n\r\n    if (areUnique && colors.includes(randomColor)) {\r\n      break;\r\n    }\r\n\r\n    colors.push(randomColor);\r\n  }\r\n  return colors;\r\n}\r\n\r\nexport function getRandomColor() {\r\n  return getRandomColors(1)[0];\r\n}\r\n\r\nexport function getRandomColorTriple() {\r\n  const colorCopy = [...randomColorTriple()];\r\n  if (Math.random() <= 0.5) {\r\n    return colorCopy.reverse();\r\n  } else {\r\n    return colorCopy;\r\n  }\r\n}\r\n","export function modulo(number1: number, number2: number): number {\r\n  return ((number1 % number2) + number2) % number2;\r\n}\r\n\r\nexport function isMobileDevice(): boolean {\r\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n    navigator.userAgent\r\n  );\r\n}\r\n\r\nfunction isInteger(number: number) {\r\n  return modulo(number, 1) === 0;\r\n}\r\n\r\nexport function randomNumberBetween(\r\n  min: number,\r\n  max: number,\r\n  decimalPrecision = 1\r\n) {\r\n  if (isInteger(min) && isInteger(max)) {\r\n    return min + Math.floor(Math.random() * (max - min));\r\n  }\r\n\r\n  const randomFloat = min + Math.random() * (max - min);\r\n  return Number(randomFloat.toPrecision(decimalPrecision));\r\n}\r\n\r\nexport function debounced(\r\n  fn: (...args: any[]) => any,\r\n  msToWait: number = 500,\r\n  isImmediate: boolean = false\r\n) {\r\n  let timeoutId: number | null = null;\r\n\r\n  return function(this: any, ...args: any[]): any {\r\n    const context = this;\r\n\r\n    const delayedFunction = function() {\r\n      timeoutId = null;\r\n\r\n      if (!isImmediate) {\r\n        fn.apply(context, args);\r\n      }\r\n    };\r\n\r\n    const shouldCallNow = isImmediate && timeoutId == null;\r\n\r\n    if (timeoutId != null) {\r\n      window.clearTimeout(timeoutId);\r\n    }\r\n\r\n    timeoutId = window.setTimeout(delayedFunction, msToWait);\r\n\r\n    if (shouldCallNow) {\r\n      fn.apply(context, args);\r\n    }\r\n  };\r\n}\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { debounced } from '../utils';\r\n\r\nexport function useStateRef<S>(\r\n  initialState: S | (() => S)\r\n): [S, React.Dispatch<React.SetStateAction<S>>, React.MutableRefObject<S>] {\r\n  const [state, setState] = useState(initialState);\r\n  const stateRef = useRef(state);\r\n\r\n  useEffect(() => {\r\n    stateRef.current = state;\r\n  }, [state]);\r\n\r\n  return [state, setState, stateRef];\r\n}\r\n\r\nexport function useDebouncedResize(\r\n  fn: React.EffectCallback,\r\n  deps?: React.DependencyList\r\n) {\r\n  useEffect(() => {\r\n    fn();\r\n\r\n    const debouncedFn = debounced(fn);\r\n\r\n    window.addEventListener('resize', debouncedFn);\r\n    return () => window.removeEventListener('resize', debouncedFn);\r\n  }, deps);\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { getColors } from './utils';\r\nimport { useDebouncedResize } from '../../../../utils/hooks';\r\nimport './Waveform.scss';\r\n\r\nconst LINE_WIDTH = 10;\r\nconst LINE_X_OFFSET = 0;\r\nconst LINE_Y_OFFSET = 5;\r\n\r\nconst Waveform: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  quality\r\n}) => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n  useDebouncedResize(() => {\r\n    const { innerWidth, innerHeight, devicePixelRatio = 1 } = window;\r\n\r\n    const canvas = canvasRef.current!;\r\n    canvas.width = innerWidth * devicePixelRatio;\r\n    canvas.height = innerHeight * devicePixelRatio;\r\n\r\n    // initial paint to match fade out color from rounding error\r\n    const ctx = canvas.getContext('2d')!;\r\n    ctx.fillStyle = '#101010';\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n\r\n    const fadeOut = () => {\r\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    };\r\n\r\n    const intervalId = window.setInterval(fadeOut, 7);\r\n    return () => window.clearInterval(intervalId);\r\n  }, []);\r\n\r\n  // paint on every data update\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!;\r\n    const ctx = canvas.getContext('2d')!;\r\n    ctx.lineWidth = LINE_WIDTH;\r\n    ctx.lineCap = 'round';\r\n\r\n    const colors = getColors(quality + 1);\r\n\r\n    const sliceWidth = canvas.width / data.length;\r\n\r\n    colors.forEach((color, i) => {\r\n      ctx.strokeStyle = color;\r\n      ctx.beginPath();\r\n\r\n      let x = i * LINE_X_OFFSET;\r\n      ctx.moveTo(x, canvas.height / 2);\r\n\r\n      data.forEach(dataElement => {\r\n        const y =\r\n          (dataElement / 255.0) * canvas.height -\r\n          (LINE_Y_OFFSET * colors.length) / 2;\r\n        ctx.lineTo(x, y + i * ((LINE_Y_OFFSET * colors.length) / 2));\r\n        x += sliceWidth;\r\n      });\r\n\r\n      ctx.lineTo(x, canvas.height / 2);\r\n      ctx.stroke();\r\n    });\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"waveform\">\r\n      <div className=\"backdrop\" />\r\n      <canvas ref={canvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Waveform);\r\n","import {\r\n  getRandomColorTriple,\r\n  getRandomColors,\r\n  getRandomColor\r\n} from '../../../../utils/colors';\r\n\r\nexport function getColors(numColors: number) {\r\n  switch (numColors) {\r\n    case 3:\r\n      return getRandomColorTriple();\r\n    case 2:\r\n      return getRandomColors(2, true);\r\n    case 1:\r\n      return [getRandomColor()];\r\n    default:\r\n      return getRandomColorTriple();\r\n  }\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useTransition, animated, interpolate, config } from 'react-spring';\r\nimport classNames from 'classnames';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { useDebouncedResize } from '../../../../utils/hooks';\r\nimport { getRandomColor } from '../../../../utils/colors';\r\nimport { DATA_SIZE } from '../../../../config';\r\nimport { QualitySettings } from '../index';\r\nimport './Drummer.scss';\r\n\r\nconst MIN_HIT_COUNT = 0.04;\r\nconst MIN_FREQUENCY_VARIATION = 10;\r\nconst MIN_DELAY_BETWEEN_COLOR_CHANGE = 200;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: { NUM_DRUMMERS: 6 },\r\n  1: { NUM_DRUMMERS: 10 },\r\n  2: { NUM_DRUMMERS: 16 }\r\n};\r\n\r\nconst minHitCount = MIN_HIT_COUNT * DATA_SIZE;\r\n\r\nconst Drummer: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  isBeat,\r\n  quality\r\n}) => {\r\n  const [size, setSize] = useState(0);\r\n  const [colorSize, setColorSize] = useState(0);\r\n\r\n  const colorsRef = useRef({\r\n    values: [getRandomColor()],\r\n    lastChangedTimestamp: Date.now()\r\n  });\r\n\r\n  useDebouncedResize(() => {\r\n    const { innerWidth, innerHeight } = window;\r\n    const maxSideLength = Math.max(innerWidth, innerHeight);\r\n    setSize(maxSideLength * 2);\r\n\r\n    const colorDiameter = Math.sqrt(\r\n      Math.pow(innerWidth, 2) + Math.pow(innerHeight, 2)\r\n    );\r\n    setColorSize(colorDiameter);\r\n  }, []);\r\n\r\n  const colors = colorsRef.current;\r\n  const numDrummers = QUALITY[quality].NUM_DRUMMERS;\r\n\r\n  const freqMap: { [key: string]: number } = {};\r\n  const numPerSlice = 256 / numDrummers;\r\n\r\n  let freqKey = 0;\r\n  while (freqKey < numDrummers) {\r\n    freqMap[freqKey] = 0;\r\n    freqKey += 1;\r\n  }\r\n\r\n  data.forEach(freqData => {\r\n    let freqKey = 0;\r\n    while (freqKey < numDrummers) {\r\n      const ceiling = numPerSlice * (freqKey + 1);\r\n      if (\r\n        Math.abs(freqData - 128) > MIN_FREQUENCY_VARIATION &&\r\n        freqData <= ceiling\r\n      ) {\r\n        freqMap[freqKey] += 1;\r\n        break;\r\n      }\r\n      freqKey += 1;\r\n    }\r\n  });\r\n\r\n  // space out background color changes so they're not jarring\r\n  const now = Date.now();\r\n  if (\r\n    isBeat &&\r\n    now - colors.lastChangedTimestamp > MIN_DELAY_BETWEEN_COLOR_CHANGE\r\n  ) {\r\n    let newColor;\r\n    do {\r\n      newColor = getRandomColor();\r\n    } while (colors.values[colors.values.length - 1] === newColor);\r\n\r\n    colors.values.push(newColor);\r\n    if (colors.values.length > 1) {\r\n      colors.values.shift();\r\n    }\r\n    colors.lastChangedTimestamp = now;\r\n  }\r\n\r\n  const drummers = Object.entries(freqMap).map(([freqKey, hitCount], i) => {\r\n    const drummerContainerSize = ((1 + +freqKey) * size) / numDrummers;\r\n\r\n    return (\r\n      <div\r\n        key={freqKey}\r\n        className=\"drummer-container\"\r\n        style={{\r\n          width: `${drummerContainerSize}px`,\r\n          height: `${drummerContainerSize}px`,\r\n          opacity: ((numDrummers - i) / numDrummers) * 0.5 * 0.25\r\n        }}\r\n      >\r\n        <div className={classNames('beat', { hit: hitCount > minHitCount })} />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const smallestDrummerSize = size / (numDrummers * 2);\r\n\r\n  const transitions = useTransition(colors.values, null, {\r\n    from: item => ({\r\n      backgroundColor: item,\r\n      width: smallestDrummerSize,\r\n      height: smallestDrummerSize,\r\n      scale: 1\r\n    }),\r\n    enter: { scale: (colorSize / smallestDrummerSize) * 1.5 },\r\n    leave: { scale: 0 },\r\n    config: config.slow\r\n  });\r\n\r\n  return (\r\n    <div className=\"drummer\">\r\n      {drummers}\r\n      {transitions.map(({ item, props, key }) => {\r\n        const { scale, ...style } = props as any;\r\n\r\n        return (\r\n          <animated.div\r\n            className=\"color-overlay\"\r\n            key={key}\r\n            style={{\r\n              ...style,\r\n              transform: interpolate(\r\n                [scale],\r\n                (s: number) => `translate3d(0, 0, 0) scale(${s})`\r\n              )\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Drummer);\r\n","import { Scene, PointsMaterial, Clock } from 'three';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\nimport { createSphereGeometry, createPoints } from './entities/polys';\r\nimport { QualitySettings } from '../../index';\r\nimport { debounced } from '../../../../../utils';\r\nimport { Quality } from '../../../../../store/types';\r\n\r\nconst DELAY_BEFORE_ROTATING_X = 1500;\r\nconst CAMERA_MAX_DISTANCE = 200;\r\nconst CAMERA_DRIFT = 0.025;\r\nconst ROTATE_Y = -0.3;\r\nconst ROTATE_X = 0.3;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: { sphereSegments: 30 },\r\n  1: { sphereSegments: 48 },\r\n  2: { sphereSegments: 72 }\r\n};\r\n\r\nexport default function sceneManager(\r\n  rendererContainer: HTMLDivElement,\r\n  quality: Quality\r\n) {\r\n  let animationFrameId: number;\r\n  let sceneInitializedTimestamp = Date.now();\r\n  let t = 0;\r\n\r\n  const sphereGeometry = createSphereGeometry(QUALITY[quality].sphereSegments);\r\n  const halpern = createPoints(sphereGeometry);\r\n  const camera = createCamera(CAMERA_MAX_DISTANCE);\r\n  const renderer = createRenderer();\r\n  rendererContainer.appendChild(renderer.domElement);\r\n\r\n  const scene = new Scene();\r\n  scene.add(halpern);\r\n\r\n  // clock is started in Halpern component when the\r\n  // animation loop is started\r\n  const clock = new Clock();\r\n\r\n  const debouncedResize = debounced(onResize);\r\n  window.addEventListener('resize', debouncedResize);\r\n  document.addEventListener('visibilitychange', onVisibilityChange);\r\n\r\n  function animate() {\r\n    const delta = clock.getDelta();\r\n\r\n    halpern.rotateY(ROTATE_Y * delta);\r\n\r\n    if (Date.now() - sceneInitializedTimestamp > DELAY_BEFORE_ROTATING_X) {\r\n      halpern.rotateX(ROTATE_X * delta);\r\n    }\r\n\r\n    t += delta;\r\n\r\n    if (t >= Math.PI * 2) {\r\n      t = 0;\r\n    }\r\n\r\n    camera.translateY(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateX(Math.cos(t) * CAMERA_DRIFT);\r\n    camera.translateZ(Math.cos(t) * CAMERA_DRIFT * 5);\r\n\r\n    renderer.render(scene, camera);\r\n    animationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function cleanup() {\r\n    window.cancelAnimationFrame(animationFrameId);\r\n    window.removeEventListener('resize', debouncedResize);\r\n    document.removeEventListener('visibilitychange', onVisibilityChange);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    scene.remove(halpern);\r\n\r\n    halpern.geometry.dispose();\r\n    (halpern.material as PointsMaterial).dispose();\r\n    sphereGeometry.dispose();\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function onVisibilityChange() {\r\n    if (document.visibilityState === 'hidden') {\r\n      clock.stop();\r\n    } else {\r\n      clock.start();\r\n    }\r\n  }\r\n\r\n  return {\r\n    clock,\r\n    sphereGeometry,\r\n    halpern,\r\n    animate,\r\n    cleanup\r\n  };\r\n}\r\n","import {\r\n  Points,\r\n  PointsMaterial,\r\n  SphereGeometry,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  TextureLoader\r\n} from 'three';\r\n\r\nexport function createSphereGeometry(segments: number): SphereGeometry {\r\n  return new SphereGeometry(48, segments, segments);\r\n}\r\n\r\nexport function createPoints(sphereGeometry: SphereGeometry): Points {\r\n  const pointGeometry = new SphereGeometry(\r\n    sphereGeometry.parameters.radius,\r\n    sphereGeometry.parameters.widthSegments,\r\n    sphereGeometry.parameters.heightSegments\r\n  );\r\n\r\n  const { vertices } = pointGeometry;\r\n  const positions = new Float32Array(vertices.length * 3);\r\n\r\n  vertices.forEach((vertex, i) => {\r\n    vertex.toArray(positions, i * 3);\r\n  });\r\n\r\n  const geometry = new BufferGeometry();\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n  (geometry.attributes.position as BufferAttribute).dynamic = true;\r\n\r\n  const material = new PointsMaterial({\r\n    size: 0.5,\r\n    map: new TextureLoader().load('assets/images/point.png'),\r\n    alphaTest: 0.5,\r\n    color: 0x666666,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, material);\r\n}\r\n","import { PerspectiveCamera, Vector3 } from 'three';\r\n\r\nexport function createCamera(startingY: number) {\r\n  const camera = new PerspectiveCamera(\r\n    75,\r\n    window.innerWidth / window.innerHeight,\r\n    0.1,\r\n    1000\r\n  );\r\n\r\n  camera.position.set(0, startingY, 0);\r\n  camera.lookAt(new Vector3(0, 0, 0));\r\n\r\n  return camera;\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ alpha: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x000000, 0);\r\n\r\n  return renderer;\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { BufferGeometry, BufferAttribute } from 'three';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport sceneManager from './three/sceneManager';\r\nimport { QualitySettings } from '../index';\r\nimport './Halpern.scss';\r\n\r\nconst VERTEX_SEGMENT_WEIGHT_COEFFICIENT = 0.1;\r\nconst BASELINE_VERTEX_SCALAR_FACTOR = 1;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: { RIPPLE_SPEED: 2 },\r\n  1: { RIPPLE_SPEED: 3 },\r\n  2: { RIPPLE_SPEED: 4 }\r\n};\r\n\r\nconst Halpern: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  quality\r\n}) => {\r\n  const rendererRef = useRef<HTMLDivElement>(null);\r\n  const managedSceneRef = useRef<any>();\r\n  const originalVerticesRef = useRef<ArrayLike<number>>();\r\n  const sphereDataSegmentsRef = useRef<number>();\r\n  const vertexSegmentLengthRef = useRef<number>();\r\n  const focusedDataRef = useRef<number[]>(new Array(data.length).fill(128));\r\n\r\n  useEffect(() => {\r\n    const rendererContainer = rendererRef.current!;\r\n    const managedScene = sceneManager(rendererContainer, quality);\r\n\r\n    managedSceneRef.current = managedScene;\r\n\r\n    const halpernGeometry = managedScene.halpern.geometry as BufferGeometry;\r\n\r\n    sphereDataSegmentsRef.current = Math.floor(\r\n      data.length / managedScene.sphereGeometry.parameters.widthSegments\r\n    );\r\n\r\n    // split vertices up into segments belonging to slices of x cross sections,\r\n    // first and last vertices are at top and bottom of sphere\r\n    vertexSegmentLengthRef.current =\r\n      (managedScene.sphereGeometry.vertices.length - 2) /\r\n      (managedScene.sphereGeometry.parameters.widthSegments - 1);\r\n\r\n    originalVerticesRef.current = (halpernGeometry.attributes.position\r\n      .array as Float32Array).slice(0);\r\n\r\n    managedScene.clock.start();\r\n\r\n    managedScene.animate();\r\n\r\n    return managedScene.cleanup;\r\n  }, [quality]);\r\n\r\n  useEffect(() => {\r\n    const rippleSpeed = QUALITY[quality].RIPPLE_SPEED;\r\n    const focusedDataIndex = Math.floor(data.length / 2);\r\n\r\n    focusedDataRef.current.splice(0, rippleSpeed);\r\n    focusedDataRef.current = focusedDataRef.current.concat(\r\n      new Array(rippleSpeed).fill(data[focusedDataIndex])\r\n    );\r\n\r\n    const halpernGeometry = managedSceneRef.current!.halpern.geometry;\r\n    const halpernBufferPositions = halpernGeometry.getAttribute('position')\r\n      .array as Float32Array;\r\n\r\n    let i = 0;\r\n    while (i < originalVerticesRef.current!.length) {\r\n      // find which segment the current index belongs to\r\n      const vertexSegmentIndex = Math.ceil(\r\n        Math.floor(i / 3) / vertexSegmentLengthRef.current!\r\n      );\r\n\r\n      const dataIndex = vertexSegmentIndex * sphereDataSegmentsRef.current!;\r\n      const vertexSegmentWeight = Math.min(\r\n        vertexSegmentIndex,\r\n        vertexSegmentLengthRef.current! - vertexSegmentIndex\r\n      );\r\n\r\n      const dataVariation =\r\n        Math.abs(focusedDataRef.current[dataIndex] - 128) / 255;\r\n\r\n      const scalar =\r\n        dataVariation *\r\n          vertexSegmentWeight *\r\n          VERTEX_SEGMENT_WEIGHT_COEFFICIENT +\r\n        BASELINE_VERTEX_SCALAR_FACTOR;\r\n\r\n      // update X, Y, and Z vector positions in BufferGeometry\r\n      halpernBufferPositions[i] = originalVerticesRef.current![i] * scalar;\r\n      halpernBufferPositions[i + 1] =\r\n        originalVerticesRef.current![i + 1] * scalar;\r\n      halpernBufferPositions[i + 2] =\r\n        originalVerticesRef.current![i + 2] * scalar;\r\n\r\n      i += 3;\r\n    }\r\n\r\n    // inform three.js that vertices should be repositioned,\r\n    // final render is handled in sceneManager animate loop\r\n    (halpernGeometry.getAttribute(\r\n      'position'\r\n    ) as BufferAttribute).needsUpdate = true;\r\n  }, [data]);\r\n\r\n  return <div className=\"halpern\" ref={rendererRef} />;\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Halpern);\r\n","export const starVertexShader = `\r\nattribute float alpha;\r\nvarying float vAlpha;\r\n\r\nvoid main() {\r\n  vAlpha = alpha;\r\n  vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\r\n  gl_PointSize = 4.0 * alpha;\r\n  gl_Position = projectionMatrix * mvPosition;\r\n}\r\n`;\r\n\r\nexport const starFragmentShader = `\r\nuniform vec3 color;\r\nvarying float vAlpha;\r\n\r\nvoid main() {\r\n  float r = 0.0;\r\n  vec2 cxy = 2.0 * gl_PointCoord - 1.0;\r\n  r = dot(cxy, cxy);\r\n  if (r > 1.0) {\r\n    discard;\r\n  }\r\n\r\n  gl_FragColor = vec4(color, vAlpha);\r\n}\r\n`;\r\n","import {\r\n  Points,\r\n  BufferAttribute,\r\n  ShaderMaterial,\r\n  Color,\r\n  BufferGeometry,\r\n  TextureLoader,\r\n  MeshLambertMaterial,\r\n  Mesh,\r\n  PlaneGeometry\r\n} from 'three';\r\nimport { starVertexShader, starFragmentShader } from './shaders';\r\n\r\nexport function createStars(starCount: number): Points {\r\n  const geometry = new BufferGeometry();\r\n\r\n  const positions = new Float32Array(starCount * 3);\r\n\r\n  let i = 0;\r\n  while (i < starCount) {\r\n    // add random x, y, and z vector positions\r\n    positions[i++] = Math.random() * 100 - 50;\r\n    positions[i++] = Math.random() * 100 - 50;\r\n    positions[i++] = Math.random() * 100 - 50;\r\n  }\r\n\r\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\r\n\r\n  const alphas = new Float32Array(geometry.attributes.position.count * 1);\r\n\r\n  let j = 0;\r\n  while (j < alphas.length) {\r\n    alphas[j] = Math.random();\r\n    j += 1;\r\n  }\r\n\r\n  geometry.addAttribute('alpha', new BufferAttribute(alphas, 1));\r\n\r\n  const shaderMaterial = new ShaderMaterial({\r\n    uniforms: {\r\n      color: { type: 'c', value: new Color(0xffffff) }\r\n    },\r\n    vertexShader: starVertexShader,\r\n    fragmentShader: starFragmentShader,\r\n    transparent: true\r\n  });\r\n\r\n  return new Points(geometry, shaderMaterial);\r\n}\r\n\r\nexport function createCloud(): Mesh {\r\n  const texture = Math.random() < 0.5 ? 'cloud.png' : 'smoke.png';\r\n\r\n  const geometry = new PlaneGeometry(50, 50);\r\n\r\n  const cloudMaterial = new MeshLambertMaterial({\r\n    map: new TextureLoader().load(`assets/images/${texture}`),\r\n    transparent: true,\r\n    opacity: 0.15,\r\n    depthTest: false\r\n  });\r\n\r\n  geometry.rotateZ(Math.random() * 360);\r\n\r\n  const cloud = new Mesh(geometry, cloudMaterial);\r\n\r\n  const zPosition = Math.random() * 15 + 10;\r\n\r\n  cloud.position.set(\r\n    Math.random() * 100 - 50,\r\n    Math.random() * 100 - 50,\r\n    Math.random() < 0.5 ? zPosition : -zPosition\r\n  );\r\n\r\n  return cloud;\r\n}\r\n","import { DirectionalLight, AmbientLight } from 'three';\r\n\r\nexport function createAmbientLight(color: number, intensity: number) {\r\n  return new AmbientLight(color, intensity);\r\n}\r\n\r\nexport function createDirectionalLight(color: number, intensity: number) {\r\n  return new DirectionalLight(color, intensity);\r\n}\r\n","import {\r\n  Scene,\r\n  PointsMaterial,\r\n  BufferGeometry,\r\n  BufferAttribute,\r\n  Group,\r\n  Mesh,\r\n  ShaderMaterial,\r\n  Clock\r\n} from 'three';\r\nimport { createRenderer } from './entities/renderer';\r\nimport { createCamera } from './entities/camera';\r\nimport { createStars, createCloud } from './entities/polys';\r\nimport { createAmbientLight, createDirectionalLight } from './entities/light';\r\nimport { QualitySettings } from '../../index';\r\nimport { debounced } from '../../../../../utils';\r\n\r\nconst MAX_STAR_ALPHA = 1.0;\r\nconst MIN_STAR_ALPHA = 0.2;\r\nconst STAR_ALPHA_DELTA = 0.75;\r\nconst ROTATE_Y = 0.025;\r\nconst ROTATE_X = 0.001;\r\nconst STATIC_LIGHT_COLOR = 0x00c4b6;\r\nconst VARIABLE_LIGHT_COLOR = 0xd10022;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: {\r\n    STAR_COUNT: 5 * 1000,\r\n    CLOUD_COUNT: 20\r\n  },\r\n  1: {\r\n    STAR_COUNT: 10 * 1000,\r\n    CLOUD_COUNT: 40\r\n  },\r\n  2: {\r\n    STAR_COUNT: 20 * 1000,\r\n    CLOUD_COUNT: 65\r\n  }\r\n};\r\n\r\nexport default function sceneManager(\r\n  rendererContainer: HTMLDivElement,\r\n  quality: number,\r\n  lightIntensity: number\r\n) {\r\n  let animationFrameId: number;\r\n\r\n  const renderer = createRenderer();\r\n  rendererContainer.appendChild(renderer.domElement);\r\n  const camera = createCamera();\r\n  const scene = new Scene();\r\n\r\n  const stars = createStars(QUALITY[quality].STAR_COUNT);\r\n  scene.add(stars);\r\n\r\n  const cloudCover = new Group();\r\n\r\n  let cloudCount = 0;\r\n  while (cloudCount <= QUALITY[quality].CLOUD_COUNT) {\r\n    const cloud = createCloud();\r\n    cloudCover.add(cloud);\r\n    cloudCount += 1;\r\n  }\r\n\r\n  scene.add(cloudCover);\r\n\r\n  const aLight = createAmbientLight(0xffffff, lightIntensity);\r\n  scene.add(aLight);\r\n\r\n  const fixedDLight = createDirectionalLight(STATIC_LIGHT_COLOR, 2);\r\n  fixedDLight.position.set(0, 0, 1);\r\n  scene.add(fixedDLight);\r\n\r\n  const dLight = createDirectionalLight(VARIABLE_LIGHT_COLOR, lightIntensity);\r\n  dLight.position.set(0, 0, 1);\r\n  scene.add(dLight);\r\n\r\n  // create a fixed array to track which direction to adjust each star alpha\r\n  const starAlphas = (stars.geometry as BufferGeometry).attributes.alpha;\r\n  const alphaDirection = new Float32Array(starAlphas.count);\r\n\r\n  for (let i = 0; i < alphaDirection.length; i++) {\r\n    // direction of 1 means alpha should increase\r\n    // -1 means alpha should decrease\r\n    alphaDirection[i] = Math.random() < 0.5 ? 1 : -1;\r\n  }\r\n\r\n  // clock is started in Stars component when\r\n  // the animation loop is first triggered\r\n  const clock = new Clock();\r\n\r\n  const debouncedResize = debounced(onResize);\r\n  window.addEventListener('resize', debouncedResize);\r\n  document.addEventListener('visibilitychange', onVisibilityChange);\r\n\r\n  function animate() {\r\n    const delta = clock.getDelta();\r\n\r\n    stars.rotateX(ROTATE_X * delta);\r\n    stars.rotateY(ROTATE_Y * delta);\r\n\r\n    cloudCover.rotateX(ROTATE_X * 24 * delta);\r\n    cloudCover.rotateY(ROTATE_Y * 2 * delta);\r\n    cloudCover.rotateZ(ROTATE_X * 3 * delta);\r\n\r\n    cloudCover.children.forEach(cloud => {\r\n      (cloud as Mesh).lookAt(camera.position);\r\n    });\r\n\r\n    // use alphaDirection to maintain alpha adjustment direction until we\r\n    // reach a limit, then switch the direction\r\n    for (let i = 0; i < starAlphas.count; i++) {\r\n      if (alphaDirection[i] > 0) {\r\n        (starAlphas.array as Float32Array)[i] *= 1 + STAR_ALPHA_DELTA * delta;\r\n        if ((starAlphas.array as Float32Array)[i] > MAX_STAR_ALPHA) {\r\n          alphaDirection[i] = -1;\r\n        }\r\n      } else {\r\n        (starAlphas.array as Float32Array)[i] *= 1 - STAR_ALPHA_DELTA * delta;\r\n        if ((starAlphas.array as Float32Array)[i] < MIN_STAR_ALPHA) {\r\n          alphaDirection[i] = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    (starAlphas as BufferAttribute).needsUpdate = true;\r\n\r\n    renderer.render(scene, camera);\r\n    animationFrameId = window.requestAnimationFrame(animate);\r\n  }\r\n\r\n  function cleanup() {\r\n    window.cancelAnimationFrame(animationFrameId);\r\n    window.removeEventListener('resize', debouncedResize);\r\n    document.removeEventListener('visibilitychange', onVisibilityChange);\r\n    rendererContainer.removeChild(renderer.domElement);\r\n\r\n    scene.remove(stars);\r\n    stars.geometry.dispose();\r\n    (stars.material as PointsMaterial).dispose();\r\n\r\n    scene.remove(cloudCover);\r\n    cloudCover.children.forEach(cloud => {\r\n      (cloud as Mesh).geometry.dispose();\r\n      ((cloud as Mesh).material as ShaderMaterial).dispose();\r\n    });\r\n  }\r\n\r\n  function onResize() {\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.render(scene, camera);\r\n  }\r\n\r\n  function onVisibilityChange() {\r\n    if (document.visibilityState === 'hidden') {\r\n      clock.stop();\r\n    } else {\r\n      clock.start();\r\n    }\r\n  }\r\n\r\n  return {\r\n    clock,\r\n    animate,\r\n    cleanup,\r\n    dLight\r\n  };\r\n}\r\n","import { WebGLRenderer } from 'three';\r\n\r\nexport function createRenderer() {\r\n  const { innerWidth, innerHeight } = window;\r\n\r\n  const renderer = new WebGLRenderer({ antialias: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(innerWidth, innerHeight);\r\n  renderer.setClearColor(0x0000f, 1);\r\n\r\n  return renderer;\r\n}\r\n","import { PerspectiveCamera } from 'three';\r\n\r\nexport function createCamera() {\r\n  const camera = new PerspectiveCamera(\r\n    50,\r\n    window.innerWidth / window.innerHeight,\r\n    1,\r\n    1000\r\n  );\r\n\r\n  return camera;\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport sceneManager from './three/sceneManager';\r\nimport './Stars.scss';\r\n\r\nconst MIN_DELAY_BETWEEN_INTENSITY_CHANGE = 75;\r\nconst MAX_LIGHT_INTENSITY_INCREASE_DELTA = 2.5;\r\nconst MIN_LIGHT_INTENSITY = 1;\r\n\r\nconst Stars: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  intensity,\r\n  quality\r\n}) => {\r\n  const rendererRef = useRef<HTMLDivElement>(null);\r\n  const managedSceneRef = useRef<any>();\r\n  const lightTimestampRef = useRef<number>(Date.now());\r\n\r\n  useEffect(() => {\r\n    const rendererContainer = rendererRef.current!;\r\n    const managedScene = sceneManager(\r\n      rendererContainer,\r\n      quality,\r\n      MIN_LIGHT_INTENSITY\r\n    );\r\n\r\n    managedSceneRef.current = managedScene;\r\n\r\n    managedScene.clock.start();\r\n    managedScene.animate();\r\n\r\n    return managedScene.cleanup;\r\n  }, [quality]);\r\n\r\n  useEffect(() => {\r\n    const now = Date.now();\r\n\r\n    if (now - lightTimestampRef.current <= MIN_DELAY_BETWEEN_INTENSITY_CHANGE) {\r\n      return;\r\n    }\r\n\r\n    const { dLight } = managedSceneRef.current!;\r\n\r\n    const currentLightIntensity = dLight.intensity;\r\n\r\n    let newLightIntensity = intensity / 2 || MIN_LIGHT_INTENSITY;\r\n\r\n    if (\r\n      newLightIntensity - currentLightIntensity >\r\n      MAX_LIGHT_INTENSITY_INCREASE_DELTA\r\n    ) {\r\n      newLightIntensity =\r\n        currentLightIntensity + MAX_LIGHT_INTENSITY_INCREASE_DELTA;\r\n    }\r\n\r\n    dLight.intensity = newLightIntensity;\r\n\r\n    lightTimestampRef.current = now;\r\n  }, [data]);\r\n\r\n  return <div className=\"stars\" ref={rendererRef} />;\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Stars);\r\n","const WINDOW_FRAME_THICKNESS_DIVISOR = 50;\r\n\r\nexport abstract class Renderer {\r\n  protected canvasWidth: number;\r\n  protected canvasHeight: number;\r\n  protected oneThirdCanvasWidth: number;\r\n  protected oneHalfCanvasHeight: number;\r\n  protected windowFrameThickness: number;\r\n  protected roundedRadius: number;\r\n\r\n  constructor(protected ctx: CanvasRenderingContext2D) {\r\n    this.canvasWidth = ctx.canvas.width;\r\n    this.canvasHeight = ctx.canvas.height;\r\n    this.oneThirdCanvasWidth = this.canvasWidth / 3;\r\n    this.oneHalfCanvasHeight = this.canvasHeight / 2;\r\n    this.windowFrameThickness = Math.floor(\r\n      Math.max(this.canvasWidth, this.canvasHeight) /\r\n        WINDOW_FRAME_THICKNESS_DIVISOR\r\n    );\r\n    this.roundedRadius = Math.floor(this.windowFrameThickness / 3);\r\n    ctx.save();\r\n  }\r\n\r\n  // for initial paint - subclasses should call super.render()\r\n  render(): void {\r\n    this.ctx.restore();\r\n  }\r\n\r\n  // for animation\r\n  tick(args: any): void {}\r\n}\r\n","import { randomNumberBetween } from '../../../../../utils';\r\n\r\nconst LIGHT_COLOR = 'rgb(255, 255, 255)';\r\nconst MIN_LIGHT_HEIGHT_RATIO = 0.01;\r\nconst MAX_LIGHT_HEIGHT_RATIO = 0.025;\r\nconst MIN_LIGHTS_PER_FLOOR = 3;\r\nconst MAX_LIGHTS_PER_FLOOR = 10;\r\nconst MIN_GAP_WIDTH_RATIO = 0.01;\r\nconst MAX_GAP_WIDTH_RATIO = 0.05;\r\nconst MIN_LIGHT_PADDING_RATIO = 0.01;\r\nconst MAX_LIGHT_PADDING_RATIO = 0.03;\r\nconst MIN_BUILDING_X_PADDING_RATIO = 0.05;\r\nconst MAX_BUILDING_X_PADDING_RATIO = 0.1;\r\nconst MIN_BUILDING_TOP_PADDING_RATIO = 0.025;\r\nconst MAX_BUILDING_TOP_PADDING_RATIO = 0.1;\r\n\r\nexport type BuildingBlueprint = {\r\n  ctx: CanvasRenderingContext2D;\r\n  canvasHeight: number;\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  color: string;\r\n};\r\n\r\ntype Light = {\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n  isOn: boolean;\r\n};\r\n\r\nexport class Building {\r\n  private ctx: CanvasRenderingContext2D;\r\n  private canvasHeight: number;\r\n\r\n  public x: number;\r\n  public y: number;\r\n  public width: number;\r\n  public height: number;\r\n  public color: string;\r\n  public lights: Light[] = [];\r\n\r\n  constructor(blueprint: BuildingBlueprint) {\r\n    this.ctx = blueprint.ctx;\r\n    this.canvasHeight = blueprint.canvasHeight;\r\n    this.x = blueprint.x;\r\n    this.y = blueprint.y;\r\n    this.width = blueprint.width;\r\n    this.height = blueprint.height;\r\n    this.color = blueprint.color;\r\n  }\r\n\r\n  // called externally so that buildings may be\r\n  // repositioned before light positions are determined\r\n  generateLights() {\r\n    const { canvasHeight, width, height } = this;\r\n\r\n    const lightHeight =\r\n      randomNumberBetween(MIN_LIGHT_HEIGHT_RATIO, MAX_LIGHT_HEIGHT_RATIO) *\r\n      height;\r\n\r\n    const lightPadding =\r\n      randomNumberBetween(MIN_LIGHT_PADDING_RATIO, MAX_LIGHT_PADDING_RATIO) *\r\n      height;\r\n\r\n    const lightsPerFloor = randomNumberBetween(\r\n      MIN_LIGHTS_PER_FLOOR,\r\n      MAX_LIGHTS_PER_FLOOR\r\n    );\r\n\r\n    const buildingXPadding =\r\n      randomNumberBetween(\r\n        MIN_BUILDING_X_PADDING_RATIO,\r\n        MAX_BUILDING_X_PADDING_RATIO\r\n      ) * width;\r\n\r\n    const buildingTopPadding =\r\n      randomNumberBetween(\r\n        MIN_BUILDING_TOP_PADDING_RATIO,\r\n        MAX_BUILDING_TOP_PADDING_RATIO\r\n      ) * height;\r\n\r\n    const gapWidth =\r\n      randomNumberBetween(MIN_GAP_WIDTH_RATIO, MAX_GAP_WIDTH_RATIO) * width;\r\n\r\n    const lightWidth =\r\n      (this.width - buildingXPadding * 2 - gapWidth * (lightsPerFloor - 1)) /\r\n      lightsPerFloor;\r\n\r\n    const lights: Light[] = [];\r\n    let x = this.x + buildingXPadding;\r\n    let y = this.y + buildingTopPadding;\r\n\r\n    while (y < canvasHeight * 0.98) {\r\n      // each iteration generates a row of lights for the floor\r\n      if (x >= this.x + this.width - buildingXPadding) {\r\n        // start a new floor\r\n        x = this.x + buildingXPadding;\r\n        y += lightHeight + lightPadding;\r\n      } else {\r\n        lights.push({\r\n          x,\r\n          y,\r\n          width: lightWidth,\r\n          height: lightHeight,\r\n          isOn: Math.random() > 0.4\r\n        });\r\n\r\n        x += lightWidth + gapWidth;\r\n      }\r\n    }\r\n\r\n    this.lights = lights;\r\n  }\r\n\r\n  render() {\r\n    const { ctx, x, y, width, height, color } = this;\r\n    ctx.save();\r\n\r\n    // render building\r\n    ctx.fillStyle = color;\r\n    ctx.fillRect(x, y, width, height);\r\n\r\n    // render lights\r\n    ctx.fillStyle = LIGHT_COLOR;\r\n    for (const light of this.lights) {\r\n      if (light.isOn) {\r\n        ctx.fillRect(light.x, light.y, light.width, light.height);\r\n      }\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { Building } from './building';\r\nimport { randomNumberBetween } from '../../../../../utils';\r\nimport { getRandomColor } from '../../../../../utils/colors';\r\n\r\nconst LAYER_OVERLAY_COLOR = 'rgba(65, 35, 66, 0.6)';\r\n\r\nconst MAX_BUILDING_HEIGHT_RATIO = 0.95;\r\nconst MIN_BUILDING_HEIGHT_RATIO = 0.3;\r\nconst MIN_BUILDING_WIDTH_RATIO = 0.08;\r\nconst MAX_BUILDING_WIDTH_RATIO = 0.15;\r\nconst MIN_BUILDING_GAP_RATIO = 0.02;\r\nconst MAX_BUILDING_GAP_RATIO = 0.05;\r\nconst NUMBER_OF_LAYERS = 4;\r\n\r\nexport class City extends Renderer {\r\n  private layers: Building[][] = [];\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n    this.generateBuildings();\r\n  }\r\n\r\n  generateBuildings() {\r\n    const { ctx, canvasWidth, canvasHeight } = this;\r\n\r\n    for (let i = 0; i < NUMBER_OF_LAYERS; i++) {\r\n      // buildings per layer\r\n      const layer: Building[] = [];\r\n      let x = 0;\r\n\r\n      while (x < canvasWidth) {\r\n        const width =\r\n          randomNumberBetween(\r\n            MIN_BUILDING_WIDTH_RATIO,\r\n            MAX_BUILDING_WIDTH_RATIO,\r\n            2\r\n          ) * canvasWidth;\r\n\r\n        const height =\r\n          randomNumberBetween(\r\n            MIN_BUILDING_HEIGHT_RATIO,\r\n            MAX_BUILDING_HEIGHT_RATIO,\r\n            2\r\n          ) * canvasHeight;\r\n\r\n        const gap =\r\n          randomNumberBetween(MIN_BUILDING_GAP_RATIO, MAX_BUILDING_GAP_RATIO) *\r\n          canvasWidth;\r\n\r\n        const building = new Building({\r\n          y: canvasHeight - height,\r\n          color: getRandomColor(),\r\n          ctx,\r\n          canvasHeight,\r\n          x,\r\n          width,\r\n          height\r\n        });\r\n\r\n        layer.push(building);\r\n\r\n        x += width + gap;\r\n      }\r\n\r\n      // offset the buildings so the leftmost starts off screen\r\n      const leftMostBuilding = layer[0];\r\n\r\n      const xOffset = randomNumberBetween(\r\n        leftMostBuilding.width * 0.25,\r\n        leftMostBuilding.width * 0.75\r\n      );\r\n\r\n      layer.forEach(building => (building.x -= xOffset));\r\n      this.layers.push(layer);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const { ctx, canvasWidth, canvasHeight, layers } = this;\r\n\r\n    for (let i = 0; i < layers.length; i++) {\r\n      const currentLayer = layers[i];\r\n      currentLayer.forEach(building => building.generateLights());\r\n\r\n      for (const building of currentLayer) {\r\n        building.render();\r\n      }\r\n\r\n      // fade each layer out a bit\r\n      ctx.fillStyle = LAYER_OVERLAY_COLOR;\r\n      ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n    }\r\n  }\r\n}\r\n","const TIME_TO_FALL = 400;\r\nconst RAINDROPS_HEIGHTWISE = 15;\r\nconst RAINDROP_COLOR = '#788';\r\n\r\nclass Raindrop {\r\n  private raindropHeight = 0;\r\n  private createdDate = 0;\r\n\r\n  constructor(\r\n    public x: number,\r\n    public y: number,\r\n    private ctx: CanvasRenderingContext2D,\r\n    private canvasHeight: number\r\n  ) {\r\n    this.raindropHeight = Math.floor(this.canvasHeight / RAINDROPS_HEIGHTWISE);\r\n    this.createdDate = Date.now();\r\n  }\r\n\r\n  tick(now: number) {\r\n    const timeDelta = now - this.createdDate;\r\n    this.y = Math.floor((timeDelta / TIME_TO_FALL) * this.canvasHeight);\r\n  }\r\n\r\n  render() {\r\n    const { ctx } = this;\r\n    ctx.fillStyle = RAINDROP_COLOR;\r\n    ctx.fillRect(this.x, this.y, 1, this.raindropHeight);\r\n  }\r\n}\r\n\r\nexport class Rainfall {\r\n  private raindrops: Raindrop[] = [];\r\n  public canvasWidth = 0;\r\n  public canvasHeight = 0;\r\n\r\n  constructor(private ctx: CanvasRenderingContext2D) {\r\n    this.canvasWidth = ctx.canvas.width;\r\n    this.canvasHeight = ctx.canvas.height;\r\n  }\r\n\r\n  tick() {\r\n    const { raindrops, canvasHeight } = this;\r\n    const now = Date.now();\r\n\r\n    for (let i = raindrops.length - 1; i >= 0; i--) {\r\n      const raindrop = raindrops[i];\r\n      raindrop.tick(now);\r\n\r\n      // remove raindrops that have fallen out of view\r\n      if (raindrop.y >= canvasHeight) {\r\n        raindrops.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  add() {\r\n    const { raindrops, ctx, canvasWidth, canvasHeight } = this;\r\n\r\n    const startingX = Math.floor(Math.random() * (canvasWidth - 1) + 1);\r\n    const startingY = -canvasHeight / RAINDROPS_HEIGHTWISE;\r\n\r\n    raindrops.push(new Raindrop(startingX, startingY, ctx, canvasHeight));\r\n  }\r\n\r\n  render() {\r\n    this.raindrops.forEach(raindrop => raindrop.render());\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst WALL_START_COLOR = '#181623';\r\nconst WALL_END_COLOR = '#111019';\r\n\r\nexport class Wall extends Renderer {\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const { ctx, canvasWidth, canvasHeight } = this;\r\n\r\n    const linearGradient = this.ctx.createLinearGradient(0, 0, 0, canvasHeight);\r\n    linearGradient.addColorStop(0, WALL_START_COLOR);\r\n    linearGradient.addColorStop(1, WALL_END_COLOR);\r\n    ctx.fillStyle = linearGradient;\r\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\r\n  }\r\n}\r\n","export type CornerRadii = {\r\n  tl: number;\r\n  tr: number;\r\n  br: number;\r\n  bl: number;\r\n};\r\n\r\nconst defaultCornerRadii = {\r\n  tl: 0,\r\n  tr: 0,\r\n  br: 0,\r\n  bl: 0\r\n};\r\n\r\nexport function roundedRect(\r\n  ctx: CanvasRenderingContext2D,\r\n  x: number,\r\n  y: number,\r\n  width: number,\r\n  height: number,\r\n  radius: CornerRadii = defaultCornerRadii,\r\n  stroke = false\r\n) {\r\n  ctx.beginPath();\r\n\r\n  ctx.moveTo(x + radius.tl, y);\r\n  ctx.lineTo(x + width - radius.tr, y);\r\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\r\n\r\n  ctx.lineTo(x + width, y + height - radius.br);\r\n  ctx.quadraticCurveTo(\r\n    x + width,\r\n    y + height,\r\n    x + width - radius.br,\r\n    y + height\r\n  );\r\n\r\n  ctx.lineTo(x + radius.bl, y + height);\r\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\r\n\r\n  ctx.lineTo(x, y + radius.tl);\r\n  ctx.quadraticCurveTo(x, y, x + radius.tl, y);\r\n\r\n  ctx.closePath();\r\n  ctx.fill();\r\n  stroke && ctx.stroke();\r\n}\r\n\r\nexport function distanceBetween(\r\n  point1: { x: number; y: number },\r\n  point2: { x: number; y: number }\r\n) {\r\n  return Math.sqrt(\r\n    Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2)\r\n  );\r\n}\r\n\r\n// where 0 degrees corresponds to positive direction of x-axis\r\nexport function radiansBetween(\r\n  point1: { x: number; y: number },\r\n  point2: { x: number; y: number }\r\n) {\r\n  const deltaX = point2.x - point1.x;\r\n  const deltaY = point2.y - point1.y;\r\n  return Math.atan2(deltaY, deltaX);\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { roundedRect, CornerRadii } from '../utils';\r\n\r\nconst WINDOW_FRAME_COLOR = '#3D1A1E';\r\nconst WINDOW_DECORATION_COLOR = '#682634';\r\n\r\nexport class Window extends Renderer {\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const {\r\n      ctx,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight,\r\n      windowFrameThickness\r\n    } = this;\r\n\r\n    ctx.fillStyle = WINDOW_FRAME_COLOR;\r\n\r\n    // window trim\r\n    ctx.fillRect(\r\n      oneThirdCanvasWidth - windowFrameThickness,\r\n      oneHalfCanvasHeight / 2 - windowFrameThickness,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    // make a hole\r\n    ctx.clearRect(\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight / 2,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight\r\n    );\r\n\r\n    // window muntin\r\n    const muntinWidth = Math.floor(windowFrameThickness / 2);\r\n\r\n    const topLeftX = (oneThirdCanvasWidth * 4) / 3 - (muntinWidth * 2) / 3;\r\n    const topRightX = (oneThirdCanvasWidth * 5) / 3 - muntinWidth / 3;\r\n    const topY = oneHalfCanvasHeight / 2 - windowFrameThickness;\r\n\r\n    const leftX = oneThirdCanvasWidth - windowFrameThickness;\r\n    const leftTopY = (oneHalfCanvasHeight * 5) / 6 - (muntinWidth * 2) / 3;\r\n    const leftBottomY = (oneHalfCanvasHeight * 7) / 6 - muntinWidth / 3;\r\n\r\n    ctx.fillRect(\r\n      topLeftX,\r\n      topY,\r\n      muntinWidth,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    ctx.fillRect(\r\n      topRightX,\r\n      topY,\r\n      muntinWidth,\r\n      oneHalfCanvasHeight + windowFrameThickness * 2\r\n    );\r\n\r\n    ctx.fillRect(\r\n      leftX,\r\n      leftTopY,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      muntinWidth\r\n    );\r\n\r\n    ctx.fillRect(\r\n      leftX,\r\n      leftBottomY,\r\n      oneThirdCanvasWidth + windowFrameThickness * 2,\r\n      muntinWidth\r\n    );\r\n\r\n    ctx.fillStyle = WINDOW_DECORATION_COLOR;\r\n\r\n    // window head\r\n    ctx.fillRect(\r\n      oneThirdCanvasWidth - windowFrameThickness * 2,\r\n      oneHalfCanvasHeight / 2 - windowFrameThickness * 2,\r\n      oneThirdCanvasWidth + windowFrameThickness * 4,\r\n      windowFrameThickness - 1\r\n    );\r\n\r\n    // window stool\r\n    const windowSillCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: 0,\r\n      bl: this.roundedRadius,\r\n      br: this.roundedRadius\r\n    };\r\n\r\n    roundedRect(\r\n      ctx,\r\n      oneThirdCanvasWidth - windowFrameThickness * 2,\r\n      (oneHalfCanvasHeight * 3) / 2 + windowFrameThickness + 1,\r\n      oneThirdCanvasWidth + windowFrameThickness * 4,\r\n      windowFrameThickness,\r\n      windowSillCornerRadii\r\n    );\r\n\r\n    // trim decoration\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = WINDOW_DECORATION_COLOR;\r\n    ctx.rect(\r\n      oneThirdCanvasWidth - (windowFrameThickness * 2) / 3,\r\n      oneHalfCanvasHeight / 2 - (windowFrameThickness * 2) / 3,\r\n      oneThirdCanvasWidth + (windowFrameThickness * 4) / 3,\r\n      oneHalfCanvasHeight + (windowFrameThickness * 4) / 3\r\n    );\r\n    ctx.stroke();\r\n\r\n    ctx.rect(\r\n      oneThirdCanvasWidth - (windowFrameThickness * 5) / 9,\r\n      oneHalfCanvasHeight / 2 - (windowFrameThickness * 5) / 9,\r\n      oneThirdCanvasWidth + (windowFrameThickness * 10) / 9,\r\n      oneHalfCanvasHeight + (windowFrameThickness * 10) / 9\r\n    );\r\n    ctx.stroke();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst WOOD_DECORATION_COLOR = '#091c1b';\r\nconst STEREO_COLOR = '#222';\r\nconst STEREO_DETAIL_COLOR = '#444';\r\nconst STEREO_DARK_COLOR = '#111';\r\n\r\nexport class Dresser extends Renderer {\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n  }\r\n\r\n  dresser() {\r\n    const { ctx, canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    const x = (canvasWidth * 2) / 3 + windowFrameThickness * 5;\r\n    const y = (canvasHeight * 2) / 3;\r\n\r\n    // dresser body\r\n    ctx.fillStyle = WOOD_COLOR;\r\n    ctx.fillRect(x, y, canvasWidth, canvasHeight);\r\n\r\n    // dresser detail rectangle\r\n    ctx.strokeStyle = WOOD_DECORATION_COLOR;\r\n    ctx.lineWidth = 3;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      x + windowFrameThickness,\r\n      y + windowFrameThickness,\r\n      canvasWidth,\r\n      canvasHeight\r\n    );\r\n    ctx.stroke();\r\n\r\n    // dresser top handle\r\n    const dresserWidth = canvasWidth - (x + windowFrameThickness);\r\n    const dresserHandleMidpoint =\r\n      x + windowFrameThickness + (dresserWidth * 3) / 5;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(dresserHandleMidpoint, y + windowFrameThickness * 2.5);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 2.5);\r\n    ctx.lineWidth = (windowFrameThickness * 2) / 3;\r\n    ctx.stroke();\r\n\r\n    // dresser horizontal detail line\r\n    ctx.beginPath();\r\n    ctx.moveTo(x + windowFrameThickness, y + windowFrameThickness * 6);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 6);\r\n    ctx.lineWidth = 2;\r\n    ctx.stroke();\r\n\r\n    // dresser bottom handle\r\n    ctx.beginPath();\r\n    ctx.moveTo(dresserHandleMidpoint, y + windowFrameThickness * 7.5);\r\n    ctx.lineTo(canvasWidth, y + windowFrameThickness * 7.5);\r\n    ctx.lineWidth = (windowFrameThickness * 2) / 3;\r\n    ctx.stroke();\r\n  }\r\n\r\n  stereo() {\r\n    const { ctx, canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    const dresserX = (canvasWidth * 2) / 3 + windowFrameThickness * 5;\r\n    const dresserY = (canvasHeight * 2) / 3;\r\n\r\n    // speaker body\r\n    const speakerWidth = windowFrameThickness * 3.5;\r\n    const speakerHeight = canvasHeight * 0.2;\r\n    const speakerX = dresserX + windowFrameThickness * 4;\r\n    const speakerY = dresserY - speakerHeight;\r\n\r\n    ctx.fillStyle = STEREO_COLOR;\r\n    ctx.fillRect(speakerX, speakerY, speakerWidth, speakerHeight);\r\n\r\n    // mid driver\r\n    const driverRadius = Math.min(speakerWidth, speakerHeight) / 8;\r\n    const driverCenterX = speakerX + speakerWidth / 2;\r\n    const driverCenterY = speakerY + driverRadius * 2;\r\n\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(driverCenterX, driverCenterY, driverRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // dividers\r\n    const dividerWidth = windowFrameThickness / 10;\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n\r\n    ctx.fillRect(\r\n      speakerX - dividerWidth,\r\n      speakerY,\r\n      dividerWidth,\r\n      speakerHeight\r\n    );\r\n\r\n    ctx.fillRect(\r\n      speakerX + speakerWidth,\r\n      speakerY,\r\n      dividerWidth,\r\n      speakerHeight\r\n    );\r\n\r\n    // deck\r\n    const deckX = speakerX + speakerWidth + dividerWidth;\r\n    const deckHeight = speakerHeight * 0.8;\r\n    const deckY = speakerY + speakerHeight - deckHeight;\r\n\r\n    ctx.fillStyle = STEREO_COLOR;\r\n    ctx.fillRect(deckX, deckY, canvasWidth, deckHeight);\r\n\r\n    const deckDetailX = deckX + windowFrameThickness / 2;\r\n\r\n    ctx.fillStyle = STEREO_DETAIL_COLOR;\r\n    ctx.strokeStyle = STEREO_DARK_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 8;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      deckDetailX,\r\n      deckY + windowFrameThickness * 1.5,\r\n      canvasWidth,\r\n      deckHeight * 0.25\r\n    );\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n    ctx.fillRect(\r\n      deckDetailX,\r\n      deckY + windowFrameThickness,\r\n      canvasWidth,\r\n      windowFrameThickness / 4\r\n    );\r\n\r\n    const bottomDetailY = deckY + deckHeight - windowFrameThickness * 0.8;\r\n    ctx.fillRect(\r\n      deckX + windowFrameThickness * 2,\r\n      bottomDetailY,\r\n      canvasWidth,\r\n      windowFrameThickness / 4\r\n    );\r\n\r\n    ctx.fillStyle = STEREO_DETAIL_COLOR;\r\n    const knobRadius = windowFrameThickness / 2;\r\n    const knobX = deckX + windowFrameThickness;\r\n    const knobY = bottomDetailY + windowFrameThickness / 8;\r\n    ctx.beginPath();\r\n    ctx.arc(knobX, knobY, knobRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.clip();\r\n    ctx.save();\r\n\r\n    ctx.translate(knobX, knobY);\r\n    const knobMarkerAngle = Math.PI * 0.75;\r\n    const knobMarkerStart = {\r\n      x: Math.sin(knobMarkerAngle) * (knobRadius - windowFrameThickness / 4),\r\n      y: Math.cos(knobMarkerAngle) * (knobRadius - windowFrameThickness / 4)\r\n    };\r\n    const knobMarkerEnd = {\r\n      x: Math.sin(knobMarkerAngle) * knobRadius * 2,\r\n      y: Math.cos(knobMarkerAngle) * knobRadius * 2\r\n    };\r\n    ctx.lineWidth = windowFrameThickness / 8;\r\n    ctx.lineCap = 'round';\r\n    ctx.beginPath();\r\n    ctx.moveTo(knobMarkerStart.x, knobMarkerStart.y);\r\n    ctx.lineTo(knobMarkerEnd.x, knobMarkerEnd.y);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.dresser();\r\n    this.stereo();\r\n    this.tick();\r\n  }\r\n\r\n  tick(isBeat = false) {\r\n    const { ctx, canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    const dresserX = (canvasWidth * 2) / 3 + windowFrameThickness * 5;\r\n    const dresserY = (canvasHeight * 2) / 3;\r\n\r\n    // speaker body\r\n    const speakerWidth = windowFrameThickness * 3.5;\r\n    const speakerHeight = canvasHeight * 0.2;\r\n    const speakerX = dresserX + windowFrameThickness * 4;\r\n    const speakerY = dresserY - speakerHeight;\r\n\r\n    // mid driver\r\n    const driverRadius = Math.min(speakerWidth, speakerHeight) / 8;\r\n    const driverCenterX = speakerX + speakerWidth / 2;\r\n\r\n    // speaker woofer\r\n    const wooferRadius = Math.min(speakerWidth, speakerHeight) / 2.5;\r\n    const wooferCenterY = Math.max(\r\n      speakerY + wooferRadius + driverRadius * 4,\r\n      speakerY + speakerHeight - (wooferRadius + driverRadius * 2)\r\n    );\r\n\r\n    ctx.strokeStyle = STEREO_DETAIL_COLOR;\r\n    ctx.fillStyle = STEREO_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 8;\r\n    ctx.beginPath();\r\n    ctx.arc(driverCenterX, wooferCenterY, wooferRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.fillStyle = STEREO_DARK_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(\r\n      driverCenterX,\r\n      wooferCenterY,\r\n      isBeat ? wooferRadius * 0.63 : wooferRadius * 0.6,\r\n      0,\r\n      Math.PI * 2\r\n    );\r\n    ctx.fill();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { distanceBetween } from '../utils';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\n\r\ntype Picture = {\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\nexport class Pictures extends Renderer {\r\n  pictures: Picture[] = [];\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    const { oneThirdCanvasWidth, windowFrameThickness } = this;\r\n\r\n    // X & Y coords and dimensions for each picture\r\n    this.pictures.push({\r\n      x: (oneThirdCanvasWidth * 3) / 4 - windowFrameThickness * 4,\r\n      y: -windowFrameThickness,\r\n      width: windowFrameThickness * 4,\r\n      height: windowFrameThickness * 5\r\n    });\r\n\r\n    this.pictures.push({\r\n      x: this.pictures[0].x - windowFrameThickness * 7,\r\n      y: windowFrameThickness * 2,\r\n      width: windowFrameThickness * 5,\r\n      height: windowFrameThickness * 4\r\n    });\r\n\r\n    this.pictures.push({\r\n      x: this.pictures[1].x + windowFrameThickness * 2,\r\n      y:\r\n        this.pictures[1].y +\r\n        this.pictures[1].height +\r\n        windowFrameThickness * 1.5,\r\n      width: windowFrameThickness * 6,\r\n      height: windowFrameThickness * 8\r\n    });\r\n  }\r\n\r\n  graph() {\r\n    const { ctx, windowFrameThickness } = this;\r\n    const { x, y, width, height } = this.pictures[0];\r\n\r\n    ctx.save();\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.clip();\r\n\r\n    const gradient1 = ctx.createLinearGradient(x, y, x, y + height);\r\n    gradient1.addColorStop(0, '#24131f');\r\n    gradient1.addColorStop(1, '#051b1f');\r\n    ctx.fillStyle = gradient1;\r\n    ctx.fill();\r\n\r\n    const nodes: Array<{ x: number; y: number }> = [];\r\n    const nodeSize = windowFrameThickness / 6;\r\n\r\n    for (let i = 0; i < 20; i++) {\r\n      nodes.push({\r\n        x: Math.floor(Math.random() * width + x),\r\n        y: Math.floor(Math.random() * height + y)\r\n      });\r\n    }\r\n\r\n    const nodeColor = '#703c3a';\r\n    ctx.fillStyle = nodeColor;\r\n    ctx.strokeStyle = nodeColor;\r\n    ctx.lineWidth = 1;\r\n\r\n    while (nodes.length) {\r\n      const currentNode = nodes.pop()!;\r\n      ctx.beginPath();\r\n      ctx.arc(currentNode.x, currentNode.y, nodeSize / 2, 0, Math.PI * 2);\r\n      ctx.fill();\r\n\r\n      for (const otherNode of nodes) {\r\n        if (distanceBetween(currentNode, otherNode) < height / 4) {\r\n          ctx.beginPath();\r\n          ctx.moveTo(currentNode.x, currentNode.y);\r\n          ctx.lineTo(otherNode.x, otherNode.y);\r\n          ctx.stroke();\r\n        }\r\n      }\r\n    }\r\n\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 1.5;\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  orbits() {\r\n    const { ctx, windowFrameThickness } = this;\r\n    const { x, y, width, height } = this.pictures[1];\r\n\r\n    ctx.save();\r\n\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.clip();\r\n\r\n    const gradient2 = ctx.createLinearGradient(x, y, x, y + height);\r\n    gradient2.addColorStop(0, '#556e53');\r\n    gradient2.addColorStop(1, '#29435c');\r\n    ctx.fillStyle = gradient2;\r\n    ctx.fill();\r\n\r\n    // sun\r\n    const color = '#879591';\r\n    ctx.fillStyle = color;\r\n    ctx.strokeStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(x + width / 2, y + height / 2, height / 14, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // orbits\r\n    for (\r\n      let radius = Math.floor(height / 6);\r\n      radius <= height / 2;\r\n      radius += windowFrameThickness / 4\r\n    ) {\r\n      ctx.beginPath();\r\n      ctx.arc(x + width / 2, y + height / 2, radius, 0, Math.PI * 2);\r\n      ctx.stroke();\r\n\r\n      const randomAngle = Math.random() * Math.PI * 2;\r\n      const planetX = x + width / 2 + Math.cos(randomAngle) * radius;\r\n      const planetY = y + height / 2 + Math.sin(randomAngle) * radius;\r\n      const randomRadius = Math.random() * (width / 64) + width / 192;\r\n      ctx.beginPath();\r\n      ctx.arc(planetX, planetY, randomRadius, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = '#152a38';\r\n    ctx.lineWidth = windowFrameThickness / 1.2;\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  stars() {\r\n    const { ctx, windowFrameThickness } = this;\r\n    const { x, y, width, height } = this.pictures[2];\r\n\r\n    ctx.save();\r\n\r\n    // background\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.clip();\r\n\r\n    const gradient3 = ctx.createLinearGradient(x, y, x, y + height);\r\n    gradient3.addColorStop(0, '#09325E');\r\n    gradient3.addColorStop(0.75, '#2A2A47');\r\n    ctx.fillStyle = gradient3;\r\n    ctx.fill();\r\n\r\n    // sky\r\n    ctx.fillStyle = '#F5E7F8';\r\n    const starCount = 60;\r\n\r\n    for (let i = 0; i < starCount; i++) {\r\n      const starX = Math.floor(Math.random() * width + x);\r\n      const starY = Math.floor(Math.random() * height + y);\r\n      const radius = Math.floor(Math.random() * 2 + 1);\r\n      ctx.beginPath();\r\n      ctx.arc(starX, starY, radius, 0, Math.PI * 2);\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = '#0D0B21';\r\n    ctx.lineWidth = windowFrameThickness / 1.5;\r\n    ctx.beginPath();\r\n    ctx.rect(x, y, width, height);\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.graph();\r\n    this.orbits();\r\n    this.stars();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { roundedRect, CornerRadii } from '../utils';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst TABLE_DECORATION_COLOR = '#06151A';\r\nconst BOWL_COLOR = '#3e3e3e';\r\nconst BOWL_BASE_COLOR = '#1e1e1e';\r\nconst FRUIT_COLORS = ['#564837', '#713C3A'];\r\nconst FRUIT_STEM_COLOR = '#04070F';\r\n\r\nexport class Table extends Renderer {\r\n  y: number;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    this.y = this.canvasHeight * 0.7;\r\n  }\r\n\r\n  top() {\r\n    const {\r\n      ctx,\r\n      y,\r\n      windowFrameThickness,\r\n      oneThirdCanvasWidth,\r\n      roundedRadius\r\n    } = this;\r\n\r\n    const width = oneThirdCanvasWidth * 0.7;\r\n    const thickness = windowFrameThickness * 1.35;\r\n\r\n    const tableCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: roundedRadius,\r\n      br: 0,\r\n      bl: 0\r\n    };\r\n\r\n    ctx.fillStyle = WOOD_COLOR;\r\n    roundedRect(ctx, 0, y, width, thickness, tableCornerRadii);\r\n\r\n    ctx.fillStyle = TABLE_DECORATION_COLOR;\r\n    ctx.beginPath();\r\n    ctx.rect(\r\n      0,\r\n      y + thickness - windowFrameThickness / 4,\r\n      width,\r\n      windowFrameThickness / 4\r\n    );\r\n    ctx.fill();\r\n  }\r\n\r\n  leg() {\r\n    const {\r\n      ctx,\r\n      y,\r\n      windowFrameThickness,\r\n      canvasHeight,\r\n      oneThirdCanvasWidth\r\n    } = this;\r\n\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n    ctx.lineWidth = windowFrameThickness * 1.5;\r\n    ctx.beginPath();\r\n    ctx.moveTo(oneThirdCanvasWidth * 0.5, y);\r\n    ctx.lineTo(oneThirdCanvasWidth * 0.5, canvasHeight);\r\n    ctx.stroke();\r\n  }\r\n\r\n  centerpiece() {\r\n    const {\r\n      ctx,\r\n      y,\r\n      windowFrameThickness,\r\n      canvasWidth,\r\n      oneThirdCanvasWidth\r\n    } = this;\r\n\r\n    const bowlCenterX = oneThirdCanvasWidth * 0.25;\r\n    const bowlWidth = oneThirdCanvasWidth * 0.3;\r\n    const bowlHeight = windowFrameThickness * 2;\r\n\r\n    // fruit\r\n    const fruits = [\r\n      {\r\n        xOffset: (bowlWidth - bowlWidth * 0.4) / 4,\r\n        y: y - bowlHeight,\r\n        radius: bowlWidth * 0.2,\r\n        color: FRUIT_COLORS[0],\r\n        stemAngle: Math.PI * 0.9\r\n      },\r\n      {\r\n        xOffset: -(bowlWidth - bowlWidth * 0.4) / 4,\r\n        y: y - bowlHeight + bowlHeight / 8,\r\n        radius: bowlWidth * 0.2,\r\n        color: FRUIT_COLORS[1],\r\n        stemAngle: Math.PI * 1.1\r\n      }\r\n    ];\r\n\r\n    for (const fruit of fruits) {\r\n      ctx.fillStyle = fruit.color;\r\n      ctx.beginPath();\r\n      ctx.arc(\r\n        bowlCenterX + fruit.xOffset,\r\n        fruit.y,\r\n        fruit.radius,\r\n        0,\r\n        Math.PI * 2\r\n      );\r\n      ctx.fill();\r\n    }\r\n\r\n    ctx.strokeStyle = FRUIT_STEM_COLOR;\r\n    ctx.lineCap = 'round';\r\n    ctx.lineWidth = 2;\r\n\r\n    for (const fruit of fruits) {\r\n      ctx.save();\r\n      ctx.translate(bowlCenterX + fruit.xOffset, fruit.y);\r\n      const stemStart = {\r\n        x: Math.sin(fruit.stemAngle) * fruits[1].radius * 0.9,\r\n        y: Math.cos(fruit.stemAngle) * fruits[1].radius * 0.9\r\n      };\r\n      const stemEnd = {\r\n        x: Math.sin(fruit.stemAngle) * fruits[1].radius * 1.1,\r\n        y: Math.cos(fruit.stemAngle) * fruits[1].radius * 1.1\r\n      };\r\n      ctx.beginPath();\r\n      ctx.moveTo(stemStart.x, stemStart.y);\r\n      ctx.lineTo(stemEnd.x, stemEnd.y);\r\n      ctx.stroke();\r\n      ctx.restore();\r\n    }\r\n\r\n    // bowl\r\n    const bowlCornerRadii: CornerRadii = {\r\n      tl: 0,\r\n      tr: 0,\r\n      br: oneThirdCanvasWidth * 0.1,\r\n      bl: oneThirdCanvasWidth * 0.1\r\n    };\r\n\r\n    const bowlBaseHeight = bowlHeight / 8;\r\n    const bowlBaseWidth = bowlWidth * 0.5;\r\n\r\n    ctx.fillStyle = BOWL_BASE_COLOR;\r\n    ctx.fillRect(\r\n      bowlCenterX - bowlBaseWidth / 2,\r\n      y - bowlHeight - bowlBaseHeight,\r\n      bowlBaseWidth,\r\n      bowlHeight + bowlBaseHeight\r\n    );\r\n\r\n    ctx.fillStyle = BOWL_COLOR;\r\n    roundedRect(\r\n      ctx,\r\n      bowlCenterX - bowlWidth / 2,\r\n      y - bowlHeight - bowlBaseHeight,\r\n      bowlWidth,\r\n      bowlHeight,\r\n      bowlCornerRadii\r\n    );\r\n\r\n    ctx.save();\r\n    ctx.clip();\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = TABLE_DECORATION_COLOR;\r\n    const bowlDecorationY = y - bowlHeight - bowlBaseHeight + bowlHeight / 6;\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, bowlDecorationY);\r\n    ctx.lineTo(canvasWidth, bowlDecorationY);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.leg();\r\n    this.top();\r\n    this.centerpiece();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst WOOD_COLOR = '#122C2B';\r\nconst CLOCK_INNER_COLOR = '#4B4721';\r\nconst CLOCK_HANDS_COLOR = '#192124';\r\nconst CLOCK_DECORATION_COLOR = '#06151A';\r\n\r\nexport class Clock extends Renderer {\r\n  private clockSize: number;\r\n  private clockCoords: { x: number; y: number };\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n    this.clockSize = this.windowFrameThickness * 5;\r\n    const x = Math.max(\r\n      this.canvasWidth * 0.7,\r\n      (this.canvasWidth * 2) / 3 + this.windowFrameThickness * 8\r\n    );\r\n    const y = this.canvasHeight / 5;\r\n    this.clockCoords = { x, y };\r\n  }\r\n\r\n  face() {\r\n    const { ctx, clockSize, clockCoords } = this;\r\n    const { x, y } = clockCoords;\r\n\r\n    ctx.strokeStyle = WOOD_COLOR;\r\n\r\n    // clock frame\r\n    ctx.lineWidth = this.windowFrameThickness / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 1.75, 0, Math.PI * 2, true);\r\n    ctx.stroke();\r\n\r\n    ctx.strokeStyle = CLOCK_DECORATION_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2, 0, Math.PI * 2, true);\r\n    ctx.stroke();\r\n\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2, 0, Math.PI * 2, true);\r\n    ctx.fillStyle = CLOCK_INNER_COLOR;\r\n    ctx.fill();\r\n\r\n    // markings\r\n    ctx.lineWidth = 2;\r\n    ctx.strokeStyle = CLOCK_HANDS_COLOR;\r\n\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n\r\n    for (let i = 1; i <= 60; i++) {\r\n      const angle = (i * Math.PI) / 30;\r\n\r\n      const start = {\r\n        x: Math.sin(angle) * (clockSize / 2 - clockSize / 20),\r\n        y: Math.cos(angle) * (clockSize / 2 - clockSize / 20)\r\n      };\r\n      const end = {\r\n        x: Math.sin(angle) * (clockSize / 2 - clockSize / 15),\r\n        y: Math.cos(angle) * (clockSize / 2 - clockSize / 15)\r\n      };\r\n\r\n      ctx.beginPath();\r\n      ctx.moveTo(start.x, start.y);\r\n      ctx.lineTo(end.x, end.y);\r\n      ctx.stroke();\r\n    }\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  hands() {\r\n    const { ctx, clockSize, clockCoords } = this;\r\n    const { x, y } = clockCoords;\r\n\r\n    // fill in hands area so we can redraw them\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, clockSize / 2 - clockSize / 15, 0, Math.PI * 2, true);\r\n    ctx.fillStyle = CLOCK_INNER_COLOR;\r\n    ctx.fill();\r\n\r\n    ctx.lineWidth = clockSize / 40;\r\n    ctx.lineCap = 'round';\r\n    ctx.strokeStyle = CLOCK_HANDS_COLOR;\r\n\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n\r\n    const now = new Date();\r\n    const hours = now.getHours();\r\n    const minutes = now.getMinutes();\r\n    const seconds = now.getSeconds();\r\n\r\n    // hour hand\r\n    ctx.save();\r\n    ctx.rotate((Math.PI / 6) * (hours + minutes / 60 + seconds / 3600));\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 4);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    // minute hand\r\n    ctx.save();\r\n    ctx.rotate((Math.PI / 30) * (minutes + seconds / 60));\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 2.75);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    // second hand\r\n    ctx.lineWidth = clockSize / 100;\r\n    ctx.save();\r\n    ctx.rotate((Math.PI / 30) * seconds);\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 10);\r\n    ctx.lineTo(0, -clockSize / 2.7);\r\n    ctx.stroke();\r\n    ctx.restore();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n    this.face();\r\n    this.hands();\r\n  }\r\n\r\n  tick() {\r\n    this.hands();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\n\r\nconst CAT_COLOR = '#000';\r\n\r\nexport class Cat extends Renderer {\r\n  private isWagging = false;\r\n  private prevTailAngle = -Math.PI / 2;\r\n  private headRadius: number;\r\n  private bodyHeight: number;\r\n  private bodyWidth: number;\r\n  private x: number;\r\n  private createdTimestamp: number;\r\n  private tailWidth: number;\r\n  private tailY: number;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    const {\r\n      windowFrameThickness,\r\n      oneThirdCanvasWidth,\r\n      oneHalfCanvasHeight\r\n    } = this;\r\n\r\n    this.x = oneThirdCanvasWidth * 2 - windowFrameThickness * 1.2;\r\n    this.headRadius = windowFrameThickness;\r\n    this.bodyHeight = windowFrameThickness * 3;\r\n    this.bodyWidth = windowFrameThickness * 2.2;\r\n    this.createdTimestamp = Date.now();\r\n    this.tailWidth = windowFrameThickness / 2;\r\n    this.tailY =\r\n      (oneHalfCanvasHeight * 3) / 2 + windowFrameThickness - this.tailWidth / 2;\r\n  }\r\n\r\n  head() {\r\n    const { ctx, oneHalfCanvasHeight, x, headRadius } = this;\r\n    const y = (oneHalfCanvasHeight * 3) / 2 - this.bodyHeight - this.headRadius;\r\n\r\n    ctx.fillStyle = CAT_COLOR;\r\n    ctx.strokeStyle = CAT_COLOR;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, headRadius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n\r\n    // ears\r\n    ctx.save();\r\n    ctx.translate(x, y);\r\n\r\n    ctx.lineWidth = 5;\r\n    ctx.lineJoin = 'round';\r\n\r\n    const rightEar = {\r\n      start: {\r\n        x: Math.sin(Math.PI * 0.85) * headRadius,\r\n        y: Math.cos(Math.PI * 0.85) * headRadius\r\n      },\r\n      point: {\r\n        x: Math.sin(Math.PI * 0.8) * headRadius * 1.4,\r\n        y: Math.cos(Math.PI * 0.8) * headRadius * 1.4\r\n      },\r\n      end: {\r\n        x: Math.sin(Math.PI * 0.7) * headRadius,\r\n        y: Math.cos(Math.PI * 0.7) * headRadius\r\n      }\r\n    };\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(rightEar.start.x, rightEar.start.y);\r\n    ctx.lineTo(rightEar.point.x, rightEar.point.y);\r\n    ctx.lineTo(rightEar.end.x, rightEar.end.y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    const leftEar = {\r\n      start: {\r\n        x: Math.sin(Math.PI * 1.2) * headRadius,\r\n        y: Math.cos(Math.PI * 1.2) * headRadius\r\n      },\r\n      point: {\r\n        x: Math.sin(Math.PI * 1.22) * headRadius * 1.5,\r\n        y: Math.cos(Math.PI * 1.22) * headRadius * 1.5\r\n      },\r\n      end: {\r\n        x: Math.sin(Math.PI * 1.3) * headRadius,\r\n        y: Math.cos(Math.PI * 1.3) * headRadius\r\n      }\r\n    };\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(leftEar.start.x, leftEar.start.y);\r\n    ctx.lineTo(leftEar.point.x, leftEar.point.y);\r\n    ctx.lineTo(leftEar.end.x, leftEar.end.y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  body() {\r\n    const {\r\n      ctx,\r\n      oneHalfCanvasHeight,\r\n      windowFrameThickness,\r\n      x,\r\n      headRadius,\r\n      bodyWidth,\r\n      bodyHeight\r\n    } = this;\r\n    const y = (oneHalfCanvasHeight * 3) / 2 - bodyHeight;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y - headRadius / 2);\r\n    ctx.quadraticCurveTo(\r\n      x - bodyWidth * 0.75,\r\n      y + bodyHeight / 4,\r\n      x - bodyWidth / 3,\r\n      y + bodyHeight + windowFrameThickness\r\n    );\r\n    ctx.lineTo(x + bodyWidth / 2, y + bodyHeight + windowFrameThickness);\r\n    ctx.quadraticCurveTo(\r\n      x + bodyWidth * 1.2,\r\n      y + bodyHeight + windowFrameThickness,\r\n      x + bodyWidth / 3,\r\n      y - headRadius / 3\r\n    );\r\n    ctx.closePath();\r\n    ctx.fill();\r\n\r\n    // left leg\r\n    ctx.beginPath();\r\n    ctx.moveTo(x - bodyWidth / 4, y + bodyHeight * 0.3);\r\n    ctx.quadraticCurveTo(\r\n      x - bodyWidth,\r\n      y + bodyHeight,\r\n      x - bodyWidth / 3,\r\n      y + bodyHeight + windowFrameThickness\r\n    );\r\n    ctx.lineTo(x + bodyWidth / 2, y + bodyHeight + windowFrameThickness);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n  }\r\n\r\n  tail() {\r\n    const { ctx, tailWidth, x, bodyWidth, tailY } = this;\r\n\r\n    ctx.lineWidth = tailWidth;\r\n    ctx.lineCap = 'round';\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, tailY);\r\n    ctx.lineTo(x - bodyWidth, tailY);\r\n    ctx.stroke();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    const { ctx, canvasWidth, canvasHeight } = this;\r\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n    this.head();\r\n    this.body();\r\n    this.tail();\r\n  }\r\n\r\n  tick() {\r\n    const {\r\n      ctx,\r\n      canvasWidth,\r\n      canvasHeight,\r\n      createdTimestamp,\r\n      x,\r\n      bodyWidth,\r\n      tailY\r\n    } = this;\r\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\r\n\r\n    this.head();\r\n    this.body();\r\n\r\n    // tail wag\r\n    const timeDelta = Date.now() - createdTimestamp;\r\n\r\n    // oscillate between angles\r\n    let nextTailAngle =\r\n      -Math.PI / 2 + (Math.sin(timeDelta / 200) * -Math.PI) / 20;\r\n\r\n    if (this.prevTailAngle > -Math.PI / 2 && nextTailAngle < -Math.PI / 2) {\r\n      // each oscillation has a chance of producing a tail wag\r\n      this.isWagging = Math.random() < 0.1;\r\n    }\r\n\r\n    this.prevTailAngle = nextTailAngle;\r\n\r\n    if (nextTailAngle > -Math.PI / 2) {\r\n      nextTailAngle = -Math.PI / 2;\r\n    }\r\n\r\n    if (!this.isWagging) {\r\n      this.tail();\r\n      return;\r\n    }\r\n\r\n    ctx.save();\r\n    ctx.translate(x, tailY);\r\n\r\n    const tailEnd = {\r\n      x: Math.sin(nextTailAngle) * bodyWidth,\r\n      y: Math.cos(nextTailAngle) * bodyWidth\r\n    };\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 0);\r\n    ctx.quadraticCurveTo(\r\n      -bodyWidth,\r\n      (-Math.cos(nextTailAngle) * bodyWidth) / 10,\r\n      tailEnd.x,\r\n      tailEnd.y\r\n    );\r\n    ctx.stroke();\r\n\r\n    ctx.restore();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { radiansBetween } from '../utils';\r\n\r\nconst STEM_COLOR = '#8e8e8e';\r\nconst LIGHT_COLOR = 'rgba(252, 243, 126, 0.085)';\r\n\r\ntype ShadeCoords = { x: number; y: number };\r\n\r\nexport class Lamp extends Renderer {\r\n  private stemX: number;\r\n  private stemHeight: number;\r\n  private lampWidth: number;\r\n  private shadeTopLeft: ShadeCoords;\r\n  private shadeTopRight: ShadeCoords;\r\n  private shadeBottomRight: ShadeCoords;\r\n  private shadeBottomLeft: ShadeCoords;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    const { canvasWidth, canvasHeight, windowFrameThickness } = this;\r\n\r\n    this.stemX = (canvasWidth * 7) / 11;\r\n    this.stemHeight = canvasHeight / 5;\r\n    this.lampWidth = windowFrameThickness * 3.5;\r\n\r\n    this.shadeTopLeft = {\r\n      x: this.stemX - windowFrameThickness / 5,\r\n      y: this.stemHeight + windowFrameThickness\r\n    };\r\n    this.shadeTopRight = {\r\n      x: this.stemX + windowFrameThickness / 5,\r\n      y: this.stemHeight + windowFrameThickness\r\n    };\r\n    this.shadeBottomRight = {\r\n      x: this.stemX + this.lampWidth / 2,\r\n      y: this.stemHeight + windowFrameThickness * 3\r\n    };\r\n    this.shadeBottomLeft = {\r\n      x: this.stemX - this.lampWidth / 2,\r\n      y: this.stemHeight + windowFrameThickness * 3\r\n    };\r\n  }\r\n\r\n  stem() {\r\n    const { ctx, windowFrameThickness, stemX, stemHeight } = this;\r\n\r\n    ctx.strokeStyle = STEM_COLOR;\r\n    ctx.fillStyle = STEM_COLOR;\r\n    ctx.lineWidth = windowFrameThickness / 5;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(stemX, 0);\r\n    ctx.lineTo(stemX, stemHeight);\r\n    ctx.stroke();\r\n\r\n    ctx.lineWidth = 1;\r\n    ctx.fillRect(\r\n      stemX - windowFrameThickness / 5,\r\n      stemHeight - 1,\r\n      (windowFrameThickness * 2) / 5,\r\n      windowFrameThickness\r\n    );\r\n    ctx.stroke();\r\n  }\r\n\r\n  lampshade() {\r\n    const {\r\n      ctx,\r\n      shadeTopLeft,\r\n      shadeTopRight,\r\n      shadeBottomRight,\r\n      shadeBottomLeft\r\n    } = this;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(shadeTopLeft.x, shadeTopLeft.y);\r\n    ctx.lineTo(shadeTopRight.x, shadeTopRight.y);\r\n    ctx.lineTo(shadeBottomRight.x, shadeBottomRight.y);\r\n    ctx.lineTo(shadeBottomLeft.x, shadeBottomLeft.y);\r\n    ctx.closePath();\r\n    ctx.fill();\r\n    ctx.stroke();\r\n\r\n    // thin line of bright light color at bottom\r\n    ctx.fillStyle = '#ff7';\r\n    ctx.fillRect(\r\n      shadeBottomLeft.x,\r\n      shadeBottomLeft.y,\r\n      shadeBottomRight.x - shadeBottomLeft.x,\r\n      2\r\n    );\r\n  }\r\n\r\n  light() {\r\n    const {\r\n      ctx,\r\n      canvasHeight,\r\n      windowFrameThickness,\r\n      stemX,\r\n      stemHeight,\r\n      lampWidth,\r\n      shadeTopLeft,\r\n      shadeBottomRight,\r\n      shadeBottomLeft\r\n    } = this;\r\n\r\n    ctx.fillStyle = LIGHT_COLOR;\r\n    const lightHeight = canvasHeight - shadeBottomLeft.y;\r\n    // compensate for inverted canvas y-coords when\r\n    // getting angle between lampshade corners\r\n    const lightAngle = radiansBetween(shadeBottomLeft, {\r\n      x: shadeTopLeft.x,\r\n      y: shadeBottomLeft.y + shadeBottomLeft.y - shadeTopLeft.y\r\n    });\r\n\r\n    // light makes a right triangle with bottom of canvas so\r\n    // we can calculate its adjacent width using height and\r\n    // the angle of the lampshade\r\n    // tan θ = opposite (height) / adjacent (width)\r\n    const lightTriangleAdjacentWidth = lightHeight / Math.tan(lightAngle);\r\n\r\n    const lightBottomLeftX = shadeBottomLeft.x - lightTriangleAdjacentWidth;\r\n    const lightBottomRightX = shadeBottomRight.x + lightTriangleAdjacentWidth;\r\n\r\n    ctx.beginPath();\r\n    ctx.moveTo(stemX - lampWidth / 2, stemHeight + windowFrameThickness * 3);\r\n    ctx.lineTo(stemX + lampWidth / 2, stemHeight + windowFrameThickness * 3);\r\n    ctx.lineTo(lightBottomRightX, canvasHeight);\r\n    ctx.lineTo(lightBottomLeftX, canvasHeight);\r\n    ctx.fill();\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.stem();\r\n    this.lampshade();\r\n    this.tick();\r\n  }\r\n\r\n  tick() {\r\n    const {\r\n      ctx,\r\n      canvasWidth,\r\n      canvasHeight,\r\n      windowFrameThickness,\r\n      stemHeight\r\n    } = this;\r\n\r\n    ctx.clearRect(\r\n      0,\r\n      // add 2 to clear under the thin line\r\n      stemHeight + windowFrameThickness * 3 + 2,\r\n      canvasWidth,\r\n      canvasHeight\r\n    );\r\n\r\n    this.light();\r\n  }\r\n}\r\n","import { Renderer } from '../renderer';\r\nimport { Wall } from './wall';\r\nimport { Window } from './window';\r\nimport { Dresser } from './dresser';\r\nimport { Pictures } from './pictures';\r\nimport { Table } from './table';\r\nimport { Clock } from './clock';\r\n\r\nexport { Cat } from './cat';\r\nexport { Lamp } from './lamp';\r\n\r\nexport class Home extends Renderer {\r\n  wall: Wall;\r\n  window: Window;\r\n  dresser: Dresser;\r\n  pictures: Pictures;\r\n  table: Table;\r\n  clock: Clock;\r\n\r\n  constructor(ctx: CanvasRenderingContext2D) {\r\n    super(ctx);\r\n\r\n    this.wall = new Wall(ctx);\r\n    this.window = new Window(ctx);\r\n    this.dresser = new Dresser(ctx);\r\n    this.pictures = new Pictures(ctx);\r\n    this.table = new Table(ctx);\r\n    this.clock = new Clock(ctx);\r\n  }\r\n\r\n  render() {\r\n    this.wall.render();\r\n    this.window.render();\r\n    this.dresser.render();\r\n    this.pictures.render();\r\n    this.table.render();\r\n    this.clock.render();\r\n  }\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport { QualitySettings } from '../index';\r\nimport { City } from './city';\r\nimport { Rainfall } from './rain';\r\nimport { Home, Cat, Lamp } from './home';\r\nimport { useDebouncedResize } from '../../../../utils/hooks';\r\nimport './Rain.scss';\r\n\r\nconst MIN_RAINDROPS_PER_TICK = 1;\r\n\r\nconst QUALITY: QualitySettings = {\r\n  0: { MAX_RAINDROPS_PER_TICK: 8 },\r\n  1: { MAX_RAINDROPS_PER_TICK: 33 },\r\n  2: { MAX_RAINDROPS_PER_TICK: 60 }\r\n};\r\n\r\nconst Rain: React.FC<VisualizationHOC.WrappedProps> = ({\r\n  data,\r\n  isBeat,\r\n  lowPassIntensity,\r\n  quality\r\n}) => {\r\n  // city\r\n  const cityCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const cityRef = useRef<City>();\r\n\r\n  useDebouncedResize(() => {\r\n    const cityCanvas = cityCanvasRef.current!;\r\n\r\n    const createCity = (width: number, height: number, dpi: number) => {\r\n      cityCanvas.width = width * dpi;\r\n      cityCanvas.height = height * dpi;\r\n\r\n      const ctx = cityCanvas.getContext('2d')!;\r\n      const city = new City(ctx);\r\n      cityRef.current = city;\r\n      city.render();\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createCity(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  // rain\r\n  const rainCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const rainfallRef = useRef<Rainfall>();\r\n\r\n  useDebouncedResize(() => {\r\n    const rainCanvas = rainCanvasRef.current!;\r\n\r\n    const createRain = (width: number, height: number, dpi: number) => {\r\n      rainCanvas.width = width * dpi;\r\n      rainCanvas.height = height * dpi;\r\n\r\n      const ctx = rainCanvas.getContext('2d')!;\r\n      let rainfall = rainfallRef.current;\r\n      if (rainfall == null) {\r\n        rainfallRef.current = new Rainfall(ctx);\r\n      } else {\r\n        rainfall = rainfallRef.current!;\r\n        rainfall.canvasWidth = width;\r\n        rainfall.canvasHeight = height;\r\n      }\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createRain(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  const homeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const homeRef = useRef<Home>();\r\n  const clockIntervalRef = useRef<number>();\r\n\r\n  // home\r\n  useDebouncedResize(() => {\r\n    const homeCanvas = homeCanvasRef.current!;\r\n\r\n    const createHome = (width: number, height: number, dpi: number) => {\r\n      homeCanvas.width = width * dpi;\r\n      homeCanvas.height = height * dpi;\r\n\r\n      const ctx = homeCanvas.getContext('2d')!;\r\n\r\n      const home = new Home(ctx);\r\n      homeRef.current = home;\r\n      home.render();\r\n\r\n      clockIntervalRef.current && window.clearTimeout(clockIntervalRef.current);\r\n      clockIntervalRef.current = window.setInterval(\r\n        () => home.clock.tick(),\r\n        1000\r\n      );\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createHome(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  // cat\r\n  const catCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const catRef = useRef<Cat>();\r\n\r\n  useDebouncedResize(() => {\r\n    const catCanvas = catCanvasRef.current!;\r\n\r\n    const adoptCat = (width: number, height: number, dpi: number) => {\r\n      catCanvas.width = width * dpi;\r\n      catCanvas.height = height * dpi;\r\n\r\n      const ctx = catCanvas.getContext('2d')!;\r\n\r\n      const cat = new Cat(ctx);\r\n      catRef.current = cat;\r\n      cat.render();\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    adoptCat(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  // lamp\r\n  const lampCanvasRef = useRef<HTMLCanvasElement>(null);\r\n  const lampRef = useRef<Lamp>();\r\n\r\n  useDebouncedResize(() => {\r\n    const lampCanvas = lampCanvasRef.current!;\r\n\r\n    const createLamp = (width: number, height: number, dpi: number) => {\r\n      lampCanvas.width = width * dpi;\r\n      lampCanvas.height = height * dpi;\r\n\r\n      const ctx = lampCanvas.getContext('2d')!;\r\n\r\n      const lamp = new Lamp(ctx);\r\n      lampRef.current = lamp;\r\n      lamp.render();\r\n    };\r\n\r\n    const { innerWidth, innerHeight, devicePixelRatio } = window;\r\n    createLamp(innerWidth, innerHeight, devicePixelRatio);\r\n  }, []);\r\n\r\n  // call animating effects on each data and isBeat change\r\n  useEffect(() => {\r\n    const home = homeRef.current!;\r\n    const rainfall = rainfallRef.current!;\r\n    const cat = catRef.current!;\r\n    const lamp = lampRef.current!;\r\n\r\n    let raindropsToAdd = Math.floor(\r\n      lowPassIntensity / Math.max(1, 4 - quality)\r\n    );\r\n\r\n    if (raindropsToAdd < MIN_RAINDROPS_PER_TICK) {\r\n      raindropsToAdd = MIN_RAINDROPS_PER_TICK;\r\n    } else if (raindropsToAdd > QUALITY[quality].MAX_RAINDROPS_PER_TICK) {\r\n      raindropsToAdd = QUALITY[quality].MAX_RAINDROPS_PER_TICK;\r\n    }\r\n\r\n    let newRaindropsAdded = 0;\r\n\r\n    while (newRaindropsAdded < raindropsToAdd) {\r\n      rainfall.add();\r\n      newRaindropsAdded += 1;\r\n    }\r\n\r\n    rainfall.tick();\r\n    home.dresser.tick(isBeat);\r\n    // re-render lamp light since the dresser stereo\r\n    // may have been repainted by changing isBeat\r\n    lamp.tick();\r\n    cat.tick();\r\n\r\n    const rainCanvas = rainCanvasRef.current!;\r\n    const rainCtx = rainCanvas.getContext('2d')!;\r\n\r\n    rainCtx.clearRect(0, 0, rainCanvas.width, rainCanvas.height);\r\n\r\n    rainfall.render();\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"rain\">\r\n      <canvas ref={cityCanvasRef} />\r\n      <canvas ref={rainCanvasRef} />\r\n      <canvas ref={homeCanvasRef} />\r\n      <canvas ref={catCanvasRef} />\r\n      <canvas ref={lampCanvasRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(Rain);\r\n","import Waveform from './Waveform';\r\nimport Drummer from './Drummer';\r\nimport Halpern from './Halpern';\r\nimport Stars from './Stars';\r\nimport Rain from './Rain';\r\nimport MobileDisabledComponent from './MobileDisabled';\r\nimport { Props } from './VisualizationHOC';\r\nimport { isMobileDevice as isMobileDeviceCheck } from '../../../utils';\r\n\r\nexport const isMobileDevice = isMobileDeviceCheck();\r\n\r\nexport type QualitySettings = {\r\n  [quality: number]: { [setting: string]: any };\r\n};\r\n\r\nexport type Options = {\r\n  smoothing?: number;\r\n  mobileDisabled?: boolean;\r\n};\r\n\r\nexport type SelectableVisualization = {\r\n  component: React.ComponentType<Props>;\r\n  options?: Options;\r\n};\r\n\r\nconst visualizations: SelectableVisualization[] = [\r\n  {\r\n    component: Rain\r\n  },\r\n  {\r\n    component: Stars,\r\n    options: { smoothing: 128 }\r\n  },\r\n  {\r\n    component: Waveform\r\n  },\r\n  {\r\n    component: Drummer,\r\n    options: { smoothing: 64 }\r\n  },\r\n  {\r\n    component: Halpern\r\n  }\r\n];\r\n\r\nexport default visualizations;\r\n\r\nexport const MobileDisabled: SelectableVisualization = {\r\n  component: MobileDisabledComponent\r\n};\r\n","import React from 'react';\r\nimport * as VisualizationHOC from '../VisualizationHOC';\r\nimport './MobileDisabled.scss';\r\n\r\nconst MobileDisabled: React.FC<VisualizationHOC.WrappedProps> = () => {\r\n  return (\r\n    <div className=\"mobile-disabled\">\r\n      <div className=\"content\">\r\n        <img\r\n          id=\"desktop-icon\"\r\n          src={process.env.PUBLIC_URL + '/assets/images/desktop.png'}\r\n        />\r\n        <div id=\"message\">\r\n          Sorry, this visualization cannot be viewed on a mobile device.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VisualizationHOC.wrap(MobileDisabled);\r\n","import React, { useCallback } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useTransition, animated } from 'react-spring';\r\nimport * as VisualizationHOC from './Visualizations/VisualizationHOC';\r\nimport visualizations from './Visualizations';\r\nimport { modulo } from '../../utils';\r\nimport { StoreState } from '../../../src/store/types';\r\n\r\ntype Props = Pick<VisualizationHOC.Props, 'data' | 'lowPassData'>;\r\n\r\ntype StyledProps = Props &\r\n  Pick<StoreState, 'quality'> & {\r\n    style: React.CSSProperties;\r\n  };\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  currentIndex: state.currentVisualizationIndex,\r\n  prevIndex: state.prevVisualizationIndex,\r\n  quality: state.quality\r\n});\r\n\r\nconst styledVisualizations = visualizations.map(vis => {\r\n  return (props: StyledProps) => {\r\n    const { style, ...rest } = props;\r\n\r\n    return (\r\n      <animated.div className=\"visualization\" style={props.style}>\r\n        <vis.component {...rest} options={vis.options} />\r\n      </animated.div>\r\n    );\r\n  };\r\n});\r\n\r\nconst VisualizationSelector: React.FC<\r\n  Props & ReturnType<typeof mapStateToProps>\r\n> = ({ data, lowPassData, prevIndex, currentIndex, quality }) => {\r\n  const visIndex = modulo(currentIndex, visualizations.length);\r\n\r\n  const direction = useCallback((current?, prev?) => {\r\n    let translateXMultiplier = 0;\r\n\r\n    if (current < prev) {\r\n      translateXMultiplier = 1;\r\n    } else if (prev < current) {\r\n      translateXMultiplier = -1;\r\n    }\r\n\r\n    return `translate3d(${100 * translateXMultiplier}%, 0, 0)`;\r\n  }, []);\r\n\r\n  const transitions = useTransition(visIndex, null, {\r\n    from: { transform: direction(currentIndex, prevIndex) },\r\n    enter: { transform: direction() },\r\n    leave: { transform: direction(prevIndex, currentIndex) },\r\n    initial: { transform: direction(0, -1) }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {transitions.map(({ item, props, key }) => {\r\n        const Visualization = styledVisualizations[item];\r\n        return (\r\n          <Visualization\r\n            key={key}\r\n            data={data}\r\n            lowPassData={lowPassData}\r\n            quality={quality}\r\n            style={props}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps)(VisualizationSelector);\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport VisualizationSelector from '../Visualizer/VisualizationSelector';\r\nimport { FFT_SIZE } from '../../config';\r\n\r\ntype Props = {\r\n  context: AudioContext;\r\n  source: MediaElementAudioSourceNode;\r\n};\r\n\r\nconst Analyser: React.FC<Props> = ({ context, source }) => {\r\n  const [rawData, setRawData] = useState(new Uint8Array());\r\n  const [lowPassData, setLowPassData] = useState(new Uint8Array());\r\n\r\n  const animationFrameIdRef = useRef<number>();\r\n\r\n  useEffect(() => {\r\n    const rawAnalyser = context.createAnalyser();\r\n    rawAnalyser.fftSize = FFT_SIZE;\r\n    rawAnalyser.smoothingTimeConstant = 0;\r\n    source.connect(rawAnalyser);\r\n    rawAnalyser.connect(context.destination);\r\n\r\n    const filter = context.createBiquadFilter();\r\n    filter.type = 'lowpass';\r\n    const lowPassAnalyser = context.createAnalyser();\r\n    lowPassAnalyser.fftSize = FFT_SIZE;\r\n    lowPassAnalyser.smoothingTimeConstant = 0;\r\n    source.connect(filter);\r\n    filter.connect(lowPassAnalyser);\r\n\r\n    const tick = () => {\r\n      const rawDataContainer = new Uint8Array(FFT_SIZE);\r\n      rawAnalyser.getByteTimeDomainData(rawDataContainer);\r\n      setRawData(rawDataContainer);\r\n\r\n      const lowPassDataContainer = new Uint8Array(FFT_SIZE);\r\n      lowPassAnalyser.getByteTimeDomainData(lowPassDataContainer);\r\n      setLowPassData(lowPassDataContainer);\r\n\r\n      animationFrameIdRef.current = window.requestAnimationFrame(tick);\r\n    };\r\n\r\n    animationFrameIdRef.current = window.requestAnimationFrame(tick);\r\n\r\n    return () => {\r\n      animationFrameIdRef.current != null &&\r\n        window.cancelAnimationFrame(animationFrameIdRef.current);\r\n      rawAnalyser && rawAnalyser.disconnect();\r\n      lowPassAnalyser && lowPassAnalyser.disconnect();\r\n      source && source.disconnect();\r\n    };\r\n  }, [context, source]);\r\n\r\n  return <VisualizationSelector data={rawData} lowPassData={lowPassData} />;\r\n};\r\n\r\nexport default Analyser;\r\n","export const FFT_SIZE = 512;\r\nexport const DATA_SIZE = FFT_SIZE / 2;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './Loading.scss';\r\n\r\ntype Props = {\r\n  isShown?: boolean;\r\n};\r\n\r\nconst Loading: React.FC<Props> = ({ isShown }) => (\r\n  <div className={classNames('loading', { show: isShown })}>\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n    <span className=\"loading-dot\" />\r\n  </div>\r\n);\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport * as Actions from '../../../store/actions';\r\nimport { StoreState, Quality } from '../../../store/types';\r\nimport './Quality.scss';\r\n\r\ntype Props = {\r\n  onHover: () => void;\r\n  onHoverStop: () => void;\r\n} & ReturnType<typeof mapStateToProps> &\r\n  ReturnType<typeof mapDispatchToProps>;\r\n\r\nconst qualities = [\r\n  { label: 'low', value: 0 },\r\n  { label: 'medium', value: 1 },\r\n  { label: 'high', value: 2 }\r\n];\r\n\r\nconst QualitySelect: React.FC<Props> = ({\r\n  quality,\r\n  setQuality,\r\n  onHover,\r\n  onHoverStop\r\n}) => {\r\n  return (\r\n    <div id=\"quality\" onMouseEnter={onHover} onMouseLeave={onHoverStop}>\r\n      <select\r\n        value={quality}\r\n        onChange={e => setQuality(+e.target.value as Quality)}\r\n      >\r\n        {qualities.map(quality => (\r\n          <option key={quality.label} value={quality.value}>\r\n            {quality.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: StoreState) => ({\r\n  quality: state.quality\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  setQuality: (quality: Quality) => dispatch(Actions.setQuality(quality))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(QualitySelect);\r\n","import { ActionConstants, ActionUnionType, Quality } from './types';\r\n\r\nexport const goToNextVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_NEXT_VISUALIZATION\r\n});\r\n\r\nexport const goToPrevVisualization = (): ActionUnionType => ({\r\n  type: ActionConstants.GO_TO_PREV_VISUALIZATION\r\n});\r\n\r\nexport const setQuality = (quality: Quality): ActionUnionType => ({\r\n  type: ActionConstants.SET_QUALITY,\r\n  quality\r\n});\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport Loading from '../Loading';\r\nimport * as Actions from '../../store/actions';\r\nimport * as versionInfo from '../../metadata/build-version.json';\r\nimport QualitySelect from './QualitySelect';\r\nimport './Controls.scss';\r\n\r\nconst CONTROLS_FADE_OUT_DELAY = 1500;\r\nconst TOUCH_WAS_CLICK_THRESHOLD = 250;\r\n\r\ntype Props = ReturnType<typeof mapDispatchToProps> & {\r\n  context?: AudioContext;\r\n  wantsToPlay: boolean;\r\n  isPlaying: boolean;\r\n  togglePlay: () => void;\r\n};\r\n\r\nconst Controls: React.FC<Props> = props => {\r\n  const [isOverlayShown, setIsOverlayShown] = useState(false);\r\n  const [isControlHovered, setIsControlHovered] = useState(false);\r\n\r\n  const timeoutRef = useRef<number>();\r\n  const touchTimestampRef = useRef<number>();\r\n\r\n  useEffect(() => {\r\n    const onKeyDown = (event: KeyboardEvent) => {\r\n      switch (event.which) {\r\n        case 37:\r\n        case 38: {\r\n          props.goToPrevVisualization();\r\n          break;\r\n        }\r\n        case 39:\r\n        case 40: {\r\n          props.goToNextVisualization();\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', onKeyDown);\r\n    return () => document.removeEventListener('keydown', onKeyDown);\r\n  }, []);\r\n\r\n  const showOverlay = useCallback(() => {\r\n    timeoutRef.current != null && window.clearTimeout(timeoutRef.current);\r\n\r\n    setIsOverlayShown(true);\r\n    timeoutRef.current = window.setTimeout(() => {\r\n      if (!isControlHovered) {\r\n        setIsOverlayShown(false);\r\n      }\r\n    }, CONTROLS_FADE_OUT_DELAY);\r\n  }, [isControlHovered]);\r\n\r\n  const togglePlay = useCallback(() => {\r\n    props.context && props.context.resume();\r\n    props.togglePlay();\r\n    showOverlay();\r\n  }, [props.context, props.togglePlay]);\r\n\r\n  const recordTouchTimestamp = useCallback((event: React.TouchEvent) => {\r\n    event.preventDefault();\r\n    touchTimestampRef.current = Date.now();\r\n  }, []);\r\n\r\n  const goToRepo = () => window.open('https://github.com/blackwright/late');\r\n\r\n  const onMouseDown = useCallback((event: React.MouseEvent) => {\r\n    if (event.nativeEvent.which === 1) {\r\n      touchTimestampRef.current = Date.now();\r\n    }\r\n  }, []);\r\n\r\n  const onMouseUp = useCallback((event: React.MouseEvent) => {\r\n    if (\r\n      event.nativeEvent.which === 1 &&\r\n      touchTimestampRef.current &&\r\n      Date.now() - touchTimestampRef.current < TOUCH_WAS_CLICK_THRESHOLD\r\n    ) {\r\n      togglePlay();\r\n    }\r\n  }, []);\r\n\r\n  const onTouchEnd = useCallback(\r\n    (event: React.TouchEvent) => {\r\n      event.preventDefault();\r\n      if (\r\n        touchTimestampRef.current &&\r\n        Date.now() - touchTimestampRef.current < TOUCH_WAS_CLICK_THRESHOLD\r\n      ) {\r\n        showOverlay();\r\n      }\r\n    },\r\n    [isControlHovered]\r\n  );\r\n\r\n  const onPrev = useCallback(\r\n    (event: React.MouseEvent | React.TouchEvent) => {\r\n      event.stopPropagation();\r\n      props.goToPrevVisualization();\r\n      showOverlay();\r\n    },\r\n    [isControlHovered]\r\n  );\r\n\r\n  const onNext = useCallback(\r\n    (event: React.MouseEvent | React.TouchEvent) => {\r\n      event.stopPropagation();\r\n      props.goToNextVisualization();\r\n      showOverlay();\r\n    },\r\n    [isControlHovered]\r\n  );\r\n\r\n  const doNothing = useCallback((event: React.MouseEvent) => {\r\n    event.stopPropagation();\r\n  }, []);\r\n\r\n  const onHover = useCallback(() => setIsControlHovered(true), []);\r\n\r\n  const onHoverStop = useCallback(() => setIsControlHovered(false), []);\r\n\r\n  const { wantsToPlay, isPlaying } = props;\r\n\r\n  return (\r\n    <>\r\n      {wantsToPlay && !isPlaying && <Loading />}\r\n      <div\r\n        id=\"overlay\"\r\n        onTouchStart={recordTouchTimestamp}\r\n        onTouchEnd={onTouchEnd}\r\n        onMouseMove={showOverlay}\r\n        className={classNames({ show: isOverlayShown })}\r\n      >\r\n        <h1\r\n          id=\"title\"\r\n          onClick={goToRepo}\r\n          onTouchEnd={goToRepo}\r\n          onMouseEnter={onHover}\r\n          onMouseLeave={onHoverStop}\r\n        >\r\n          LATE\r\n        </h1>\r\n        <QualitySelect onHover={onHover} onHoverStop={onHoverStop} />\r\n        <div id=\"version\">build {versionInfo.version}</div>\r\n        {\r\n          <div\r\n            onMouseDown={onMouseDown}\r\n            onMouseUp={onMouseUp}\r\n            onTouchEnd={togglePlay}\r\n            onMouseEnter={onHover}\r\n            onMouseLeave={onHoverStop}\r\n            className={classNames({\r\n              play: !wantsToPlay && !isPlaying,\r\n              pause: wantsToPlay && isPlaying\r\n            })}\r\n          />\r\n        }\r\n        <div className=\"navigation\">\r\n          <div\r\n            className=\"arrow-container\"\r\n            onClick={onPrev}\r\n            onTouchStart={onPrev}\r\n            onMouseUp={doNothing}\r\n            onMouseEnter={onHover}\r\n            onMouseLeave={onHoverStop}\r\n          >\r\n            <svg\r\n              className=\"arrow\"\r\n              width=\"60px\"\r\n              height=\"80px\"\r\n              viewBox=\"0 0 50 80\"\r\n            >\r\n              <polyline\r\n                fill=\"none\"\r\n                stroke=\"#FFF\"\r\n                strokeWidth=\"3\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                points=\"45.63,75.8 0.375,38.087 45.63,0.375\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div\r\n            className=\"arrow-container\"\r\n            onClick={onNext}\r\n            onTouchStart={onNext}\r\n            onMouseUp={doNothing}\r\n            onMouseEnter={onHover}\r\n            onMouseLeave={onHoverStop}\r\n          >\r\n            <svg\r\n              className=\"arrow\"\r\n              width=\"60px\"\r\n              height=\"80px\"\r\n              viewBox=\"0 0 50 80\"\r\n            >\r\n              <polyline\r\n                fill=\"none\"\r\n                stroke=\"#FFF\"\r\n                strokeWidth=\"3\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                points=\"0.375,0.375 45.63,38.087 0.375,75.8\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  goToNextVisualization: () => dispatch(Actions.goToNextVisualization()),\r\n  goToPrevVisualization: () => dispatch(Actions.goToPrevVisualization())\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Controls);\r\n","import React from 'react';\r\nimport './NoWebAudioApi.scss';\r\n\r\nconst NoWebAudioApi = () => (\r\n  <div id=\"no-web-audio\">\r\n    <p>Your device doesn't fully support the Web Audio API.</p>\r\n    <p>This site should be viewed on a non-mobile or Android device.</p>\r\n  </div>\r\n);\r\n\r\nexport default NoWebAudioApi;\r\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport Analyser from './components/Analyser';\nimport Controls from './components/Controls';\nimport NoWebAudioApi from './components/NoWebAudioApi';\nimport { useStateRef } from './utils/hooks';\n\nconst AUDIO_SERVER_URL =\n  process.env.NODE_ENV === 'production'\n    ? process.env.REACT_APP_AUDIO_SERVER_URL\n    : 'http://localhost:3002';\n\ntype Props = {};\n\nconst App: React.FC<Props> = props => {\n  const [wantsToPlay, setWantsToPlay] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [context, setContext, contextRef] = useStateRef<\n    AudioContext | undefined\n  >(undefined);\n  const [source, setSource] = useState<MediaElementAudioSourceNode>();\n  const [isContextUnavailable, setIsContextUnavailable] = useState(false);\n\n  const audioRef = useRef<HTMLAudioElement>(null);\n\n  // disable if AudioContext is unavailable\n  useEffect(() => {\n    try {\n      new window.AudioContext();\n    } catch (err) {\n      setIsContextUnavailable(true);\n    }\n  }, []);\n\n  // attach audio event listeners\n  useEffect(() => {\n    const audioElement = audioRef.current!;\n\n    const onAudioPlay = () => setIsPlaying(true);\n    const onAudioPause = () => setIsPlaying(false);\n    const onAudioError = console.error;\n\n    audioElement.addEventListener('playing', onAudioPlay);\n    audioElement.addEventListener('pause', onAudioPause);\n    audioElement.addEventListener('error', onAudioError);\n\n    return () => {\n      audioElement.removeEventListener('playing', onAudioPlay);\n      audioElement.removeEventListener('pause', onAudioPause);\n      audioElement.removeEventListener('error', onAudioError);\n    };\n  }, []);\n\n  const initializeAudioContext = useCallback(() => {\n    const audioElement = audioRef.current!;\n    const context = new window.AudioContext();\n    const source = context.createMediaElementSource(audioElement);\n\n    setContext(context);\n    setSource(source);\n  }, [audioRef.current]);\n\n  const togglePlay = useCallback(() => {\n    const audioElement = audioRef.current!;\n\n    if (audioElement.paused) {\n      setWantsToPlay(true);\n      audioElement.play();\n\n      if (!contextRef.current) {\n        initializeAudioContext();\n      }\n    } else {\n      setWantsToPlay(false);\n      audioElement.pause();\n    }\n  }, [audioRef.current]);\n\n  if (isContextUnavailable) {\n    return <NoWebAudioApi />;\n  }\n\n  return (\n    <>\n      <audio\n        ref={audioRef}\n        id=\"audioElement\"\n        src={AUDIO_SERVER_URL}\n        preload={'auto'}\n        crossOrigin=\"anonymous\"\n      />\n\n      {context && source && <Analyser context={context} source={source} />}\n\n      <Controls\n        context={context}\n        wantsToPlay={wantsToPlay}\n        isPlaying={isPlaying}\n        togglePlay={togglePlay}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\nimport App from './App';\r\nimport './reset.scss';\r\nimport './index.scss';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}